{
  "comments": [
    {
      "key": {
        "uuid": "d06f23aa_3a52792f",
        "filename": "adf/libadfhwc/adfhwc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 217,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-09-22T23:22:23Z",
      "side": 1,
      "message": "since this is C++ you can just say\n\n  struct sigaction action \u003d {};",
      "revId": "8880c97397d6bc5ee15ffd11f805e3e4d82cef4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d06f23aa_ee276375",
        "filename": "adf/libadfhwc/adfhwc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 217,
      "author": {
        "id": 1073546
      },
      "writtenOn": "2016-09-23T17:43:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d06f23aa_3a52792f",
      "revId": "8880c97397d6bc5ee15ffd11f805e3e4d82cef4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d06f23aa_fa3801f5",
        "filename": "adf/libadfhwc/adfhwc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-09-22T23:22:23Z",
      "side": 1,
      "message": "you can also use a lambda here if you don\u0027t want the handle_thread_exit function.\n\n    sa.sa_handler \u003d [](int) { pthread_exit(0); };",
      "revId": "8880c97397d6bc5ee15ffd11f805e3e4d82cef4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d06f23aa_0e2d7f54",
        "filename": "adf/libadfhwc/adfhwc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1073546
      },
      "writtenOn": "2016-09-23T17:43:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d06f23aa_fa3801f5",
      "revId": "8880c97397d6bc5ee15ffd11f805e3e4d82cef4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d06f23aa_3be358cb",
        "filename": "adf/libadfhwc/adfhwc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1015340
      },
      "writtenOn": "2016-09-23T19:33:17Z",
      "side": 1,
      "message": "What are the semantics of pthread_exit()?  fds[] is allocated on the heap and needs to be cleaned up.\n\nIf pthread_exit() unwinds the stack, then we just need to change fds[] from a C-style array to a std::vector and let its destructor handle everything.\n\n(Also, nitpick: use nullptr instead of 0 since pthread_exit() returns a void *)",
      "parentUuid": "d06f23aa_0e2d7f54",
      "revId": "8880c97397d6bc5ee15ffd11f805e3e4d82cef4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d06f23aa_fb9720ef",
        "filename": "adf/libadfhwc/adfhwc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-09-23T19:45:58Z",
      "side": 1,
      "message": "annoyingly, we have an open bug on that: http://b/27860783\n\n(yes, we should unwind, but, no, we don\u0027t.)\n\nyou can probably just get away with a VLA in the meantime, as long as you\u0027re not worried about intf_fds.size()*sizeof(pollfd) being a significant amount of stack.",
      "parentUuid": "d06f23aa_3be358cb",
      "revId": "8880c97397d6bc5ee15ffd11f805e3e4d82cef4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d06f23aa_1bb69c90",
        "filename": "adf/libadfhwc/adfhwc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1015340
      },
      "writtenOn": "2016-09-23T19:51:07Z",
      "side": 1,
      "message": "intf_fds.size() \u003d\u003d # of displays, so it shouldn\u0027t be too large in practice.\n\nBut at the time I wrote this, gcc followed ISO C++ and forbade VLAs in C++ mode ... does clang allow this now?",
      "parentUuid": "d06f23aa_fb9720ef",
      "revId": "8880c97397d6bc5ee15ffd11f805e3e4d82cef4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d06f23aa_db45046d",
        "filename": "adf/libadfhwc/adfhwc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1015340
      },
      "writtenOn": "2016-09-23T19:52:40Z",
      "side": 1,
      "message": "(Realizing it would just be easier to try it myself ...)\n\nFor the record, yes, clang lets you use VLAs in C++ mode.  That seems like the way to go.",
      "parentUuid": "d06f23aa_1bb69c90",
      "revId": "8880c97397d6bc5ee15ffd11f805e3e4d82cef4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d06f23aa_3b07d82a",
        "filename": "adf/libadfhwc/adfhwc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 220,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-09-23T19:58:34Z",
      "side": 1,
      "message": "i think it was one of those -std\u003dc++11 versus -std\u003dgnu++11 things. we\u0027re globally gnu++14 now [for clang; gcc is gnu++11 because of an ABI bug].",
      "parentUuid": "d06f23aa_db45046d",
      "revId": "8880c97397d6bc5ee15ffd11f805e3e4d82cef4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d06f23aa_3a1b598b",
        "filename": "adf/libadfhwc/adfhwc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-09-22T23:22:23Z",
      "side": 1,
      "message": "-1 is the only failure return, and you don\u0027t need the local.\n\n  if (sigaction(...) \u003d\u003d -1) ...",
      "revId": "8880c97397d6bc5ee15ffd11f805e3e4d82cef4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d06f23aa_2e123b10",
        "filename": "adf/libadfhwc/adfhwc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 222,
      "author": {
        "id": 1073546
      },
      "writtenOn": "2016-09-23T17:43:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d06f23aa_3a1b598b",
      "revId": "8880c97397d6bc5ee15ffd11f805e3e4d82cef4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d06f23aa_ba176959",
        "filename": "adf/libadfhwc/adfhwc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-09-22T23:22:23Z",
      "side": 1,
      "message": "TEMP_FAILURE_RETRY around the call to poll would let you remove this",
      "range": {
        "startLine": 241,
        "startChar": 11,
        "endLine": 242,
        "endChar": 22
      },
      "revId": "8880c97397d6bc5ee15ffd11f805e3e4d82cef4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d06f23aa_5d072f77",
        "filename": "adf/libadfhwc/adfhwc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 1073546
      },
      "writtenOn": "2016-09-23T17:43:12Z",
      "side": 1,
      "message": "Thanks for reviewing the code!\n\nIt looks like this section is doing \"while (err \u003d\u003d -1 \u0026\u0026 errno !\u003d EINTR)\" and TEMP_FAILURE_RETRY does \"while (err \u003d\u003d -1 \u0026\u0026 errno \u003d\u003d EINTR)\". This code might have been written wrong originally. TEMP_FAILURE_RETRY makes more sense.",
      "parentUuid": "d06f23aa_ba176959",
      "range": {
        "startLine": 241,
        "startChar": 11,
        "endLine": 242,
        "endChar": 22
      },
      "revId": "8880c97397d6bc5ee15ffd11f805e3e4d82cef4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d06f23aa_e9cafd69",
        "filename": "adf/libadfhwc/adfhwc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-09-23T19:14:22Z",
      "side": 1,
      "message": "oh wow, i didn\u0027t notice that! presumably they meant `continue`, but ghackmann will know. (worth a comment if this was deliberate!)",
      "parentUuid": "d06f23aa_5d072f77",
      "range": {
        "startLine": 241,
        "startChar": 11,
        "endLine": 242,
        "endChar": 22
      },
      "revId": "8880c97397d6bc5ee15ffd11f805e3e4d82cef4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d06f23aa_fb96403c",
        "filename": "adf/libadfhwc/adfhwc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 242,
      "author": {
        "id": 1015340
      },
      "writtenOn": "2016-09-23T19:33:17Z",
      "side": 1,
      "message": "The intent was that pthread_kill() from the parent thread would interrupt poll().  Which doesn\u0027t actually work as intended, since there\u0027s no signal handler installed.",
      "parentUuid": "d06f23aa_e9cafd69",
      "range": {
        "startLine": 241,
        "startChar": 11,
        "endLine": 242,
        "endChar": 22
      },
      "revId": "8880c97397d6bc5ee15ffd11f805e3e4d82cef4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d06f23aa_9a038d19",
        "filename": "adf/libadfhwc/adfhwc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 302,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-09-22T23:22:23Z",
      "side": 1,
      "message": "this code never runs in a VM, right? (ART uses SIGUSR1.)",
      "revId": "8880c97397d6bc5ee15ffd11f805e3e4d82cef4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d06f23aa_4e0f77e7",
        "filename": "adf/libadfhwc/adfhwc.cpp",
        "patchSetId": 1
      },
      "lineNbr": 302,
      "author": {
        "id": 1073546
      },
      "writtenOn": "2016-09-23T17:43:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d06f23aa_9a038d19",
      "revId": "8880c97397d6bc5ee15ffd11f805e3e4d82cef4f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}