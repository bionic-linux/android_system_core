{
  "comments": [
    {
      "key": {
        "uuid": "efaf7588_eb80fea9",
        "filename": "fs_mgr/fs_mgr_fstab.cpp",
        "patchSetId": 3
      },
      "lineNbr": 802,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-09-26T17:54:04Z",
      "side": 1,
      "message": "It looks like there\u0027s only one caller of this function, fs_mgr_get_entry_for_mount_point() below that sets start_rec to NULL.  In a separate CL, it\u0027d be good to remove this chunk of unused code and rename this function to fs_mgr_get_entry_for_mount_point()",
      "range": {
        "startLine": 793,
        "startChar": 0,
        "endLine": 802,
        "endChar": 5
      },
      "revId": "cc323958f99e40fea06c511656c69c0b2e2d47f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8c0d682_86b75dd5",
        "filename": "fs_mgr/fs_mgr_fstab.cpp",
        "patchSetId": 3
      },
      "lineNbr": 802,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2017-09-26T19:43:35Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "efaf7588_eb80fea9",
      "range": {
        "startLine": 793,
        "startChar": 0,
        "endLine": 802,
        "endChar": 5
      },
      "revId": "cc323958f99e40fea06c511656c69c0b2e2d47f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "01db4349_fe183650",
        "filename": "fs_mgr/fs_mgr_fstab.cpp",
        "patchSetId": 3
      },
      "lineNbr": 802,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2017-09-26T23:09:37Z",
      "side": 1,
      "message": "Yup, I was thinking the same thing.\nWill do.\n\nNote that we\u0027re opening the API fs_mgr_get_entry_for_mount_point() below (line 818), and there are some .c clients using it.\n\nSo I might rename this to:\n  static struct fstab_rec* get_entry_for_mount_point_after(...",
      "parentUuid": "d8c0d682_86b75dd5",
      "range": {
        "startLine": 793,
        "startChar": 0,
        "endLine": 802,
        "endChar": 5
      },
      "revId": "cc323958f99e40fea06c511656c69c0b2e2d47f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "601135a1_3ab7b6e1",
        "filename": "fs_mgr/fs_mgr_fstab.cpp",
        "patchSetId": 3
      },
      "lineNbr": 805,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2017-09-26T13:20:52Z",
      "side": 1,
      "message": "I was considering \"longest prefix matching\" before.\n\nBut after some thoughts, this seems unneeded and might make the function more complicated/unpredictable.\n\nCurrently, it allows having multiple entries in the fstab file.\n\ne.g.,\n/dev/block/platform/.../by-name/vendor_ext4   /vendor      ext4  ro  wait\n/dev/block/platform/.../by-name/abc_ext4  /vendor/abc   ext4\n/dev/block/platform/.../by-name/abc_f2fs  /vendor/abc   f2fs\n/dev/block/platform/.../by-name/vendor_f2fs   /vendor      ext4  f2fs  wait\n\n\nWith \"start_rec\" and given \"/vendor/abc\" as path, it will return the 2nd entry, 3rd entry and the 4th entry but ignore the 1st one.\n\nSo use \"exact match\" unless we have a compelling reason for \"prefix match\".",
      "range": {
        "startLine": 805,
        "startChar": 12,
        "endLine": 805,
        "endChar": 76
      },
      "revId": "cc323958f99e40fea06c511656c69c0b2e2d47f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}