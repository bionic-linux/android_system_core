{
  "comments": [
    {
      "key": {
        "uuid": "c0c8943d_9feacb4a",
        "filename": "libmemunreachable/ProcessMappings.cpp",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-05-12T15:50:53Z",
      "side": 0,
      "message": "although this comment wasn\u0027t correct, none of this code was allocating except via the custom allocator in \"Allocator.h\". so the switch to reading into a std::string probably breaks something here?",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 32,
        "endChar": 0
      },
      "revId": "3607fe672a1aa0fa775df01b60d18d287e7f8686",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfa95c72_9587b011",
        "filename": "libmemunreachable/ProcessMappings.cpp",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2018-05-12T16:04:45Z",
      "side": 0,
      "message": "Yeah, this code can\u0027t call malloc.  Should be tested by memunreachable_tests.",
      "parentUuid": "c0c8943d_9feacb4a",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 32,
        "endChar": 0
      },
      "revId": "3607fe672a1aa0fa775df01b60d18d287e7f8686",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87ad55ed_f8993397",
        "filename": "libmemunreachable/ProcessMappings.cpp",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2018-05-14T21:07:40Z",
      "side": 0,
      "message": "Done. I forgot to update libmemunreachable.so when running the tests.",
      "parentUuid": "dfa95c72_9587b011",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 32,
        "endChar": 0
      },
      "revId": "3607fe672a1aa0fa775df01b60d18d287e7f8686",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}