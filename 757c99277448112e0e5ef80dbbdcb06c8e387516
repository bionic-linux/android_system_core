{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "5a74d727_f128f97f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1881965
      },
      "writtenOn": "2021-08-31T08:37:06Z",
      "side": 1,
      "message": "elsk@google.com",
      "revId": "757c99277448112e0e5ef80dbbdcb06c8e387516",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e60d756_45dc802f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-08-31T20:02:40Z",
      "side": 1,
      "message": "Thanks for your patch, xiaohuin@. \n\nBesides Elliot\u0027s comments, here\u0027s one general question. This patch seems to lower the chance of the race condition, but doesn\u0027t eliminate it. \n\nWhat if the display is ready after 5 seconds, for example? Are there any other indicators to tell charger that the display is ready?\n\nOr maybe we should retry gr_init() indefinitely?\n\nTianjie, WDYT?",
      "revId": "757c99277448112e0e5ef80dbbdcb06c8e387516",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3931f1fa_7947435a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-08-31T20:20:23Z",
      "side": 1,
      "message": "\u003e Or maybe we should retry gr_init() indefinitely?\n\ni was wondering about that myself ... i mean, the only way gi_init() fails is if (a) you\u0027re too early, in which case you definitely want to retry or (b) the hardware\u0027s broken, in which case \"who cares what you do?\".\n\n(i also wondered where 500ms came from... that\u0027s quite a long time in electronics. why not 10ms? how long does your slow device actually take to be ready?)",
      "parentUuid": "6e60d756_45dc802f",
      "revId": "757c99277448112e0e5ef80dbbdcb06c8e387516",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "878a0981_e068ec48",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2021-09-01T00:19:28Z",
      "side": 1,
      "message": "From experiences in gmscore, I suggest using a non-linear(or exponential) waiting intervals; as the recovery chance is lower as the wait extends. Though I don\u0027t have a strong opinion on the strategy because the retry isn\u0027t resource intensive.",
      "parentUuid": "3931f1fa_7947435a",
      "revId": "757c99277448112e0e5ef80dbbdcb06c8e387516",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3d575dfe_a37fe6f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-09-01T00:52:39Z",
      "side": 1,
      "message": "I suggest the following. See inline comments.",
      "revId": "757c99277448112e0e5ef80dbbdcb06c8e387516",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff2ce5de_d6261bc2",
        "filename": "healthd/healthd_draw.cpp",
        "patchSetId": 1
      },
      "lineNbr": 29,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-08-31T16:27:47Z",
      "side": 1,
      "message": "don\u0027t invent named constants for constants that are only used once.",
      "revId": "757c99277448112e0e5ef80dbbdcb06c8e387516",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30540e1e_e8bae8ef",
        "filename": "healthd/healthd_draw.cpp",
        "patchSetId": 1
      },
      "lineNbr": 50,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-09-01T00:52:39Z",
      "side": 1,
      "message": "Change this to a static function that may return nullptr. For example:\n\n```\nclass HealthdDraw {\n  static std::unique_ptr\u003cHealthdDraw\u003e Create(animation* anim);\n};\n```\n\nThen, if `gr_init()` fails, simply return nullptr.\n\nSee my other comment in healthd_mode_charger().",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 50,
        "endChar": 41
      },
      "revId": "757c99277448112e0e5ef80dbbdcb06c8e387516",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3790c539_6d643cb5",
        "filename": "healthd/healthd_draw.cpp",
        "patchSetId": 1
      },
      "lineNbr": 52,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-08-31T16:27:47Z",
      "side": 1,
      "message": "merge this with the retry loop.",
      "revId": "757c99277448112e0e5ef80dbbdcb06c8e387516",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2e953d58_f3891c9b",
        "filename": "healthd/healthd_draw.cpp",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-08-31T16:27:47Z",
      "side": 1,
      "message": "note that you can literally say `std::this_thread::sleep_for(500ms);` instead instead of needing a comment. (`#include \u003candroid-base/chrono_utils.h\u003e` or import std::chrono_literals manually.)",
      "revId": "757c99277448112e0e5ef80dbbdcb06c8e387516",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59d2f455_f10574cc",
        "filename": "healthd/healthd_draw.cpp",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-08-31T16:27:47Z",
      "side": 1,
      "message": "\"success\" seems like a weird warning :-) i think you meant LOGI. (also, no `else` after `return`.)",
      "revId": "757c99277448112e0e5ef80dbbdcb06c8e387516",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28d69036_7265fc82",
        "filename": "healthd/healthd_mode_charger.cpp",
        "patchSetId": 1
      },
      "lineNbr": 324,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2021-09-01T00:52:39Z",
      "side": 1,
      "message": "Note: initiated here.\n\nAfter changing that signature, this would become\n\n```\nhealthd_draw_ \u003d HealthdDraw::Create(\u0026batt_anim_);\nif (healthd_draw_ \u003d\u003d nullptr) return;\n```\n\nThen, you are effectively retrying in the main charger loop.\n\nIf you don\u0027t want to retry indefinitely, you can also add a counter inside the Charger class and increment it before you call `HealthdDraw::Create`",
      "revId": "757c99277448112e0e5ef80dbbdcb06c8e387516",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}