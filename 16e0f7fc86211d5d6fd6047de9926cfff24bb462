{
  "comments": [
    {
      "key": {
        "uuid": "3cbbe33c_83bdee28",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2016-05-31T03:55:57Z",
      "side": 1,
      "message": "create one or the other - there is no need in created host namespace, it is not going to be used anyways.\n\n(and as an advantage - you no longer need access to default/anonymous namespaces)",
      "revId": "16e0f7fc86211d5d6fd6047de9926cfff24bb462",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3cbbe33c_23dec280",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1104175
      },
      "writtenOn": "2016-05-31T04:16:11Z",
      "side": 1,
      "message": "\u003e\u003e\u003e \"it is not going to be used anyways.\"\nWe think it will be used by native bridge via the callback of native loader.\n\n\u003e\u003e\u003e \"no longer need access to default/anonymous namespaces\"\nI think these is no relationship between the code here and default/anonymous namespaces.\n\nPlease note this, for apps run in emulated subsystem, native bridge and dynamic linker always need to load \"same\" libraries for different ABI. For example, if an app wants to load libc.so in the subsystem, native bridge loads a non-native libc.so and it calls dlopen() to load a native libc.so with at dynamic linker side. This is very important to the emulated subsystem, otherwise nothing works. Though this operation is transparent to apps.\n\nWith namespace introduced, namespace should be created at both dynamic linker and native bridge side. Only in this way, can the native bridge load libraries of different ABIs in peered namespace.\n\nThat\u0027s why \"host namespace\" and why default/anonymous namespaces are needed.",
      "parentUuid": "3cbbe33c_83bdee28",
      "revId": "16e0f7fc86211d5d6fd6047de9926cfff24bb462",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3cbbe33c_a337529a",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2016-05-31T04:18:21Z",
      "side": 1,
      "message": "\u003e\u003e\u003e \"it is not going to be used anyways.\"\n\u003eWe think it will be used by native bridge via the callback of native loader.\n\nThere is no need for that - there are no host arch libraries to load for NB app.",
      "parentUuid": "3cbbe33c_23dec280",
      "revId": "16e0f7fc86211d5d6fd6047de9926cfff24bb462",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3cbbe33c_03545eb8",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1104175
      },
      "writtenOn": "2016-05-31T04:39:30Z",
      "side": 1,
      "message": "\u003e \u003e\u003e\u003e \"it is not going to be used anyways.\"\n \u003e \u003eWe think it will be used by native bridge via the callback of\n \u003e native loader.\n \u003e \n \u003e There is no need for that - there are no host arch libraries to\n \u003e load for NB app.\n\nNB app could have host arch libs. Apps packs cross ABI libs together, checks ABI and load ABI-matched libs.\nEven apps don\u0027t, native bridge needs to load a host arch libc.so for a non-host-arch libc.so whenever it\u0027s loaded. native bridge lives in mix-ABI world and interacts with many modules of Android, host-arch lib is a must.",
      "parentUuid": "3cbbe33c_a337529a",
      "revId": "16e0f7fc86211d5d6fd6047de9926cfff24bb462",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3cbbe33c_9edd412a",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2016-05-31T08:26:36Z",
      "side": 1,
      "message": "\u003e NB app could have host arch libs. Apps packs cross ABI libs together, checks ABI and load ABI-matched libs.\n\nI do not think this is true - if it is it would make NB app different from regular ones. Android does not allow mixing ABI for native libs in an app.",
      "parentUuid": "3cbbe33c_03545eb8",
      "revId": "16e0f7fc86211d5d6fd6047de9926cfff24bb462",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3cbbe33c_9e042172",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 1
      },
      "lineNbr": 117,
      "author": {
        "id": 1104175
      },
      "writtenOn": "2016-05-31T08:34:02Z",
      "side": 1,
      "message": "native bridge needs to load a host arch libc.so for a non-host-arch libc.so whenever the non-host-arch one is loaded. native bridge lives in mix-ABI world and interacts with many modules of Android, host-arch lib is a must for native bridge implementation. If Android provides mix-ABI support, the mapping of libraries and namespace is required.",
      "parentUuid": "3cbbe33c_9edd412a",
      "revId": "16e0f7fc86211d5d6fd6047de9926cfff24bb462",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}