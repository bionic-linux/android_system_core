{
  "comments": [
    {
      "key": {
        "uuid": "e44711eb_7adc9acd",
        "filename": "libcutils/tests/AshmemTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-01-22T22:59:36Z",
      "side": 1,
      "message": "NB: define only in Android controlled sys/cdefs.h (thus host build would require this)",
      "range": {
        "startLine": 43,
        "startChar": 8,
        "endLine": 43,
        "endChar": 23
      },
      "revId": "4fa3a64b8d6603998723259e86a8313fc21112d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "62436c4a_844637df",
        "filename": "libcutils/tests/AshmemTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 302,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-01-22T22:59:36Z",
      "side": 1,
      "message": "Both this and the 79 below (line 312) need to be from constexpr maxLineWidth 80, subtract 1.",
      "range": {
        "startLine": 302,
        "startChar": 14,
        "endLine": 302,
        "endChar": 16
      },
      "revId": "4fa3a64b8d6603998723259e86a8313fc21112d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c31a3250_ffacf3c9",
        "filename": "libcutils/tests/AshmemTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 332,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-01-22T22:59:36Z",
      "side": 1,
      "message": "nit KISS C++ ism? something(?) like:\n\nfor (auto type : types) {\n    if ((fd \u003e\u003d 0) || (errorNumber !\u003d EPROTOTYPE)) break;",
      "range": {
        "startLine": 332,
        "startChar": 0,
        "endLine": 332,
        "endChar": 100
      },
      "revId": "4fa3a64b8d6603998723259e86a8313fc21112d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5aa0de80_3c4aa0d4",
        "filename": "libcutils/tests/AshmemTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 358,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-01-22T22:59:36Z",
      "side": 1,
      "message": "nit: OK for Linux, but traditional *NIX (POSIX) states that we must accept clock granularity. Maybe ifdef __linux__ for 1 second, and use 2 seconds for anything else?",
      "range": {
        "startLine": 358,
        "startChar": 33,
        "endLine": 358,
        "endChar": 42
      },
      "revId": "4fa3a64b8d6603998723259e86a8313fc21112d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "898546f8_81888e2b",
        "filename": "libcutils/tests/AshmemTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 456,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-01-23T00:27:26Z",
      "side": 1,
      "message": "Not sure if this is necessary, but it does allow us to \u0027attack\u0027 most of the actually used content letting Android in-effect decide what is important to look at. It fails to make connection to unnamed pipes (no ioctl, so we are good) or active socket sessions (we instead use the following loop through /dev/ to hit the actual sockets with our own sessions).\n\nI would drop this in an instant for minor resistance, especially since this is complicated and fraught with permissions issues.",
      "range": {
        "startLine": 408,
        "startChar": 0,
        "endLine": 456,
        "endChar": 5
      },
      "revId": "4fa3a64b8d6603998723259e86a8313fc21112d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a03283c_f59fed53",
        "filename": "libcutils/tests/AshmemTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 463,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-01-23T00:27:26Z",
      "side": 1,
      "message": "make this a function, used here and above in recurseAshmem (or better yet, recognize recurseAshmem ...).",
      "range": {
        "startLine": 463,
        "startChar": 12,
        "endLine": 463,
        "endChar": 72
      },
      "revId": "4fa3a64b8d6603998723259e86a8313fc21112d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bd39e0a_43d1da9e",
        "filename": "libcutils/tests/AshmemTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 484,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-01-23T00:27:26Z",
      "side": 1,
      "message": "This is actually recurseAshmem, so stop the duplication, call it directly!",
      "range": {
        "startLine": 460,
        "startChar": 0,
        "endLine": 484,
        "endChar": 5
      },
      "revId": "4fa3a64b8d6603998723259e86a8313fc21112d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "152b658b_e76198b7",
        "filename": "libcutils/tests/AshmemTest.cpp",
        "patchSetId": 1
      },
      "lineNbr": 486,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-01-22T22:59:36Z",
      "side": 1,
      "message": "look into how we can do this in the context of the test output stream\n\nGTEST_LOG_ will not do ...",
      "range": {
        "startLine": 486,
        "startChar": 4,
        "endLine": 486,
        "endChar": 74
      },
      "revId": "4fa3a64b8d6603998723259e86a8313fc21112d7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}