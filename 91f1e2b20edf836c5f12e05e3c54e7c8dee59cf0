{
  "comments": [
    {
      "key": {
        "uuid": "431c5b77_1b36cdc2",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-01-25T06:50:57Z",
      "side": 1,
      "message": "(we should probably move these casts inside the android_fork_execvp_ext implementation... i don\u0027t think we duplicate the historical mistake in exec\u0027s signature for any _good_ reason :-) )",
      "revId": "91f1e2b20edf836c5f12e05e3c54e7c8dee59cf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "00c38307_7689210a",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2017-01-25T13:05:34Z",
      "side": 1,
      "message": "Yup, I thought about this before.\n\nBut it turns out the type is \"char *const argv[]\" in \nexecv() family:\nhttps://linux.die.net/man/3/execv\n  \nI guess it\u0027s also a historical mistake?\n  \nI\u0027ll resume the following issue to clean it up, in separate CLs.\nhttps://b.corp.google.com/issues/34365373",
      "revId": "91f1e2b20edf836c5f12e05e3c54e7c8dee59cf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5164ea79_22f65c45",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-01-25T15:52:58Z",
      "side": 1,
      "message": "yeah, that\u0027s what i meant: they got this \"wrong\" in the 1970s (because const didn\u0027t exist yet), it never got fixed (because POSIX avoids change?), and whoever wrote android_fork_execvp_ext just copied the signature rather than make it more convenient for callers.\n\nthere\u0027s an equivalent in the JNI functions. i think in both cases the culprits never noticed because they were writing calling code in C which didn\u0027t give them a warning.",
      "revId": "91f1e2b20edf836c5f12e05e3c54e7c8dee59cf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "316578be_f5fe49d3",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 161,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2017-01-25T23:55:15Z",
      "side": 1,
      "message": "Oops can\u0027t imagine that const didn\u0027t exist before.",
      "revId": "91f1e2b20edf836c5f12e05e3c54e7c8dee59cf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b88d1660_271ef104",
        "filename": "fs_mgr/fs_mgr_main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-01-25T06:50:57Z",
      "side": 1,
      "message": "strangely, C++ is always _GNU_SOURCE, so you can just remove this in .cpp files...",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 6
      },
      "revId": "91f1e2b20edf836c5f12e05e3c54e7c8dee59cf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ca97684_12a7fe26",
        "filename": "fs_mgr/fs_mgr_main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2017-01-25T13:05:34Z",
      "side": 1,
      "message": "Oh, I see. Thanks for the info.\n\nThat\u0027s why I got the error:\n\u003cbuilt-in\u003e:363:9: note: previous definition is here\n#define _GNU_SOURCE 1\n        ^",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 6
      },
      "revId": "91f1e2b20edf836c5f12e05e3c54e7c8dee59cf0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}