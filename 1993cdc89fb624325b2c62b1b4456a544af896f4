{
  "comments": [
    {
      "key": {
        "uuid": "N3Vn5M6g",
        "filename": "init/init.c",
        "patchSetId": 2
      },
      "lineNbr": 349,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-01-07T21:53:36Z",
      "side": 1,
      "message": "should this print an error? otherwise the service start will silently fail.",
      "revId": "1993cdc89fb624325b2c62b1b4456a544af896f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "N3TmW90k",
        "filename": "init/init_parser.c",
        "patchSetId": 2
      },
      "lineNbr": 186,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-01-07T21:53:36Z",
      "side": 1,
      "message": "tab indent for easier reading. applies to the whole comment about \u0027c\u0027",
      "revId": "1993cdc89fb624325b2c62b1b4456a544af896f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "N3XmDTw4",
        "filename": "init/init_parser.c",
        "patchSetId": 2
      },
      "lineNbr": 196,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-01-07T21:53:36Z",
      "side": 1,
      "message": "don\u0027t put code before variable declarations.",
      "revId": "1993cdc89fb624325b2c62b1b4456a544af896f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "N3VmAEwA",
        "filename": "init/init_parser.c",
        "patchSetId": 2
      },
      "lineNbr": 197,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-01-07T21:53:36Z",
      "side": 1,
      "message": "newilne after.",
      "revId": "1993cdc89fb624325b2c62b1b4456a544af896f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "N3VnL80M",
        "filename": "init/init_parser.c",
        "patchSetId": 2
      },
      "lineNbr": 198,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-01-07T21:53:36Z",
      "side": 1,
      "message": "add a local ptr for *c. Update that as you go through so you don\u0027t constantly have to dereference c twice or do (*c)++ everywhere. Then, prior to returning do your *c \u003d ptr;",
      "revId": "1993cdc89fb624325b2c62b1b4456a544af896f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "N3Xnnz80",
        "filename": "init/init_parser.c",
        "patchSetId": 2
      },
      "lineNbr": 209,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-01-07T21:53:36Z",
      "side": 1,
      "message": "0 check first",
      "revId": "1993cdc89fb624325b2c62b1b4456a544af896f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "N3Vmds18",
        "filename": "init/init_parser.c",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-01-07T21:53:36Z",
      "side": 1,
      "message": "newline after.",
      "revId": "1993cdc89fb624325b2c62b1b4456a544af896f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "N3ZmvK4E",
        "filename": "init/init_parser.c",
        "patchSetId": 2
      },
      "lineNbr": 230,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-01-07T21:53:36Z",
      "side": 1,
      "message": "update dst_sz after you successfully realloc",
      "revId": "1993cdc89fb624325b2c62b1b4456a544af896f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "N3Xm5j8k",
        "filename": "init/init_parser.c",
        "patchSetId": 2
      },
      "lineNbr": 233,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-01-07T21:53:36Z",
      "side": 1,
      "message": "i don\u0027t like how it frees the previous buffer on failure here. You should follow the realloc semantics for your helper.\nReturn NULL and let your caller free the original buffer.",
      "revId": "1993cdc89fb624325b2c62b1b4456a544af896f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "N3dmCQ9Q",
        "filename": "init/init_parser.c",
        "patchSetId": 2
      },
      "lineNbr": 251,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-01-07T21:53:36Z",
      "side": 1,
      "message": "why initialize to NULL? you are going to always overwrite on line 257",
      "revId": "1993cdc89fb624325b2c62b1b4456a544af896f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "N3Vka09I",
        "filename": "init/init_parser.c",
        "patchSetId": 2
      },
      "lineNbr": 256,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-01-07T21:53:36Z",
      "side": 1,
      "message": "why the + 1? shouldn\u0027t src already be nul terminated?",
      "revId": "1993cdc89fb624325b2c62b1b4456a544af896f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "N3ZkTq8Q",
        "filename": "init/init_parser.c",
        "patchSetId": 2
      },
      "lineNbr": 269,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-01-07T21:53:36Z",
      "side": 1,
      "message": "it\u0027s kind of awkward to be managing the index for the dst while managing the ptr for the src. Most processing here happens with ptr manipulation, but dst is managed with index. If you want to preserve the realloc\u0027d buffer for dst, call it dst_buf, and still maintain a running dst_buf just like before. This will make things symmetric and easier to follow.",
      "revId": "1993cdc89fb624325b2c62b1b4456a544af896f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "N3dQASg4",
        "filename": "init/init_parser.c",
        "patchSetId": 2
      },
      "lineNbr": 299,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-01-07T21:53:36Z",
      "side": 1,
      "message": "this is weird since you assume that the destination buffer will always need to be expanded by prop_len, though in reality it needs to be modified by (prop_len - (c-(dst + dst_idx)) ish, i.e. it may shrink. It\u0027s not really a big problem, but it may make debugging things a bit weird since the sizes/indexes will be odd.",
      "revId": "1993cdc89fb624325b2c62b1b4456a544af896f4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}