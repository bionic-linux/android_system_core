{
  "comments": [
    {
      "key": {
        "uuid": "f6aa0757_6d166d53",
        "filename": "fastboot/device/commands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 57,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-07-25T15:04:30Z",
      "side": 1,
      "message": "\"shutdown,fastboot\" ?",
      "range": {
        "startLine": 57,
        "startChar": 53,
        "endLine": 57,
        "endChar": 62
      },
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d9b07f9_65f1fe9d",
        "filename": "fastboot/device/commands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 64,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-07-25T15:04:30Z",
      "side": 1,
      "message": "Would be nice is this path had a triageable name in a bugreport.\n\n\"reboot,from_fastboot\" ?",
      "range": {
        "startLine": 64,
        "startChar": 52,
        "endLine": 64,
        "endChar": 60
      },
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3a9324f_59c5288f",
        "filename": "fastboot/device/commands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 99,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-07-25T15:04:30Z",
      "side": 1,
      "message": "Q: does the switch to recovery as a side effect attempt to update persist.sys.boot.reason (WAG I expect reboot,recovery to land there)?\n\nNB: android::base::SetProperty(ANDROID_RB_PROPERTY, \"reboot,fastboot\"); for example has the side effect of writing reboot,fastboot into persist.sys.boot.reason within init().",
      "range": {
        "startLine": 99,
        "startChar": 4,
        "endLine": 99,
        "endChar": 83
      },
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b3bc52b_666b4200",
        "filename": "fastboot/device/commands.cpp",
        "patchSetId": 17
      },
      "lineNbr": 107,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-07-25T18:20:00Z",
      "side": 1,
      "message": "Since EnterRecovery can fail, it seems better for EnterRecovery to have a return value and if it does fail, to send a FAIL status and continue to process fastboot commands.",
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8204a11c_6747a3d7",
        "filename": "fastboot/device/commands.h",
        "patchSetId": 17
      },
      "lineNbr": 34,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-07-25T15:04:30Z",
      "side": 1,
      "message": "const std::vector\u003cchar\u003e\u0026 ?",
      "range": {
        "startLine": 34,
        "startChar": 34,
        "endLine": 34,
        "endChar": 52
      },
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95daf869_43826e9e",
        "filename": "fastboot/device/fastboot_device.cpp",
        "patchSetId": 17
      },
      "lineNbr": 30,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-07-25T18:20:00Z",
      "side": 1,
      "message": "Is this needed here?  Shouldn\u0027t there be an implicit conversion from the string literal to std::string already?",
      "range": {
        "startLine": 30,
        "startChar": 15,
        "endLine": 30,
        "endChar": 26
      },
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "421aa2f8_c0e591f8",
        "filename": "fastboot/device/fastboot_device.cpp",
        "patchSetId": 17
      },
      "lineNbr": 59,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-07-25T18:20:00Z",
      "side": 1,
      "message": "Both write_status and handle_data should be member functions of FastbootDevice.  The code will be much cleaner if this is done.\n\nBoth of these once made into member functions and each command above should return a bool for whether or not they have succeeded instead of passing \u0027ret\u0027 around everywhere that will give you all of the needed error checking without these extra callbacks.\n\n(Easily my most important comment on this CL).",
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f84b5afc_a6b14736",
        "filename": "fastboot/device/fastboot_device.cpp",
        "patchSetId": 17
      },
      "lineNbr": 60,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-07-25T15:04:30Z",
      "side": 1,
      "message": "nit: I would flip the coin and instead size_t(message.size()) on the rref?",
      "range": {
        "startLine": 60,
        "startChar": 31,
        "endLine": 60,
        "endChar": 58
      },
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92967ba8_e4d5498c",
        "filename": "fastboot/device/fastboot_device.cpp",
        "patchSetId": 17
      },
      "lineNbr": 62,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-07-25T15:04:30Z",
      "side": 1,
      "message": "nit: What is here is OK, but:\n\nstatic const char result_strs[response_reason_size][num_response_types] \u003d\n\nwill ensure that not one of the strings is short or long in the array; if a response of \"NO\" is added at some future date, for example, it will be zero padded to four bytes allowing it to be suitable for the memcpy on line 71. The added bonus is the string \"FAIL\" will be four bytes exactly, and not five (with terminating nul).",
      "range": {
        "startLine": 62,
        "startChar": 8,
        "endLine": 62,
        "endChar": 58
      },
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1328734f_30337d82",
        "filename": "fastboot/device/fastboot_device.cpp",
        "patchSetId": 17
      },
      "lineNbr": 103,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-07-25T18:20:00Z",
      "side": 1,
      "message": "You don\u0027t need this, command should be implicitly converted.",
      "range": {
        "startLine": 103,
        "startChar": 41,
        "endLine": 103,
        "endChar": 53
      },
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "00f3c120_8fd59123",
        "filename": "fastboot/device/fastboot_device.cpp",
        "patchSetId": 17
      },
      "lineNbr": 104,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-07-25T18:20:00Z",
      "side": 1,
      "message": "Using map::find() and checking for map::end() is the canonical way to access a map.  You only have 1 lookup instead of 2.",
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b602f5d_051f03b9",
        "filename": "fastboot/device/fastboot_device.cpp",
        "patchSetId": 17
      },
      "lineNbr": 108,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-07-25T18:20:00Z",
      "side": 1,
      "message": "FWIW, in init, I just pass the args including the command name directly to all commands.  It\u0027s shorter code and one less copy.\n\nIn any case if you do want to keep this, GetSubArgs() shouldn\u0027t be in the header, rather inlined in this file (or even function) directly.",
      "range": {
        "startLine": 108,
        "startChar": 38,
        "endLine": 108,
        "endChar": 48
      },
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "870c7148_4e878208",
        "filename": "fastboot/device/fastboot_device.h",
        "patchSetId": 17
      },
      "lineNbr": 38,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-07-25T18:20:00Z",
      "side": 1,
      "message": "There\u0027s only one user of this (the download command) and I question its usage anyway.  The download command doesn\u0027t have an optional argument, so we shouldn\u0027t return \"\" if the input is empty, we should send FAIL with a message that the mandatory parameter was not specified.",
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19224582_46ba1006",
        "filename": "fastboot/device/fastboot_device.h",
        "patchSetId": 17
      },
      "lineNbr": 43,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-07-25T18:20:00Z",
      "side": 1,
      "message": "Private comes after public.",
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "71af1022_6060a3df",
        "filename": "fastboot/device/fastboot_device.h",
        "patchSetId": 17
      },
      "lineNbr": 44,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-07-25T18:20:00Z",
      "side": 1,
      "message": "Member variables should have a _ suffix, e.g. transport_",
      "range": {
        "startLine": 44,
        "startChar": 31,
        "endLine": 44,
        "endChar": 40
      },
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8235351f_01c10094",
        "filename": "fastboot/device/fastboot_device.h",
        "patchSetId": 17
      },
      "lineNbr": 56,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-07-25T15:04:30Z",
      "side": 1,
      "message": "const std::vector\u003cchar\u003e\u0026 GetDownloadData() const { return download_data; } ?",
      "range": {
        "startLine": 56,
        "startChar": 11,
        "endLine": 56,
        "endChar": 47
      },
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bc64e7b_193a95a8",
        "filename": "fastboot/device/fastboot_device.h",
        "patchSetId": 17
      },
      "lineNbr": 56,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-07-25T18:20:00Z",
      "side": 1,
      "message": "Seems like the code actually modifies download_data so const wouldn\u0027t work here.  \n\nI don\u0027t actually know what the right way to do this is.  Seems that the canonical getter/setter would be the clearest, but given the size of the downloaded data, we\u0027d certainly want to take advantage of move semantics to ensure we don\u0027t get a copy of the data itself.",
      "parentUuid": "8235351f_01c10094",
      "range": {
        "startLine": 56,
        "startChar": 11,
        "endLine": 56,
        "endChar": 47
      },
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b55e2bf3_a524e1c6",
        "filename": "fastboot/device/fastboot_device.h",
        "patchSetId": 17
      },
      "lineNbr": 58,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-07-25T18:20:00Z",
      "side": 1,
      "message": "Same as above RE move semantics, we probably don\u0027t want to actually copy the upload_data if it can grow large.",
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f34c691a_9589990a",
        "filename": "fastboot/device/fastboot_device.h",
        "patchSetId": 17
      },
      "lineNbr": 60,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-07-25T18:20:00Z",
      "side": 1,
      "message": "Member functions defined in header files are inline by default, no need for the keyword.",
      "range": {
        "startLine": 60,
        "startChar": 4,
        "endLine": 60,
        "endChar": 10
      },
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7c9cf8ea_9fcbf5e4",
        "filename": "fastboot/device/main.cpp",
        "patchSetId": 17
      },
      "lineNbr": 22,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-07-25T15:04:30Z",
      "side": 1,
      "message": "Q: can logd be running?\n\nExecution order is supposed to be kernel -\u003e init -\u003e kernel-threads -\u003e init first stage -\u003e init second stage -\u003e ueventd -\u003e watchdogd -\u003e logd -\u003e everything else ...",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 67
      },
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8dc31d39_33063b52",
        "filename": "fastboot/device/main.cpp",
        "patchSetId": 17
      },
      "lineNbr": 22,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-07-25T18:20:00Z",
      "side": 1,
      "message": "logd doesn\u0027t run in recovery.",
      "parentUuid": "7c9cf8ea_9fcbf5e4",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 67
      },
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8aa294e_b53f473c",
        "filename": "fastboot/device/main.cpp",
        "patchSetId": 17
      },
      "lineNbr": 22,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-07-25T18:44:01Z",
      "side": 1,
      "message": "liblog logs to /dev/pmsg0 (w or w/o logd), and provides bugreport content (like last kmsg); the difference is kmsg will provide _live_ content on serial console (which should be _off_ if this is secure). recovery is run with the assumption of \u0027headless\u0027 I thought, same condition as fastbootd? On recovery we use liblog to record logs _and_ transfer files on A/B systems through a reboot because we have no access to persistent (flash) storage; also the same issue with fastbootd.\n\nI know this is a subtlety, and splitting hairs. The question was just that, a question ;-}",
      "parentUuid": "8dc31d39_33063b52",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 67
      },
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b264af08_61ebebd0",
        "filename": "fastboot/device/main.cpp",
        "patchSetId": 17
      },
      "lineNbr": 22,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-07-25T19:22:45Z",
      "side": 1,
      "message": "fastbootd runs in recovery from what I can tell, so the environment and assumptions should be identical, hence the lack of logd.",
      "parentUuid": "b8aa294e_b53f473c",
      "range": {
        "startLine": 22,
        "startChar": 0,
        "endLine": 22,
        "endChar": 67
      },
      "revId": "c7e63684e225bbb8c3a7d9001f72fb97d2fef354",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}