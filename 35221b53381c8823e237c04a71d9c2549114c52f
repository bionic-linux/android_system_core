{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "30c988c3_c4aec8a3",
        "filename": "libprocessgroup/setup/cgroup_map_write.cpp",
        "patchSetId": 8
      },
      "lineNbr": 224,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-11-23T23:38:17Z",
      "side": 1,
      "message": "this still falls back to CGROUPS_DESC_FILE in the failure case.\n\nI was imagining:\n\n    if (!access(api_cgroups_path, F_OK)) {\n        if (errno !\u003d ENOENT) return false;\n        sys_cgroups_path \u003d api_cgroups_path;\n    }\n\nRight?",
      "range": {
        "startLine": 224,
        "startChar": 52,
        "endLine": 224,
        "endChar": 70
      },
      "revId": "35221b53381c8823e237c04a71d9c2549114c52f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6384e5f6_ebfa7168",
        "filename": "libprocessgroup/setup/cgroup_map_write.cpp",
        "patchSetId": 8
      },
      "lineNbr": 224,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-11-23T23:50:29Z",
      "side": 1,
      "message": "err - talked offline, that wasn\u0027t quite right, maybe closer to this, but you get the point:\n\n  if (access(api_cgroups_path, F_OK) \u003d\u003d -1) {\n    if (errno !\u003d ENOENT) return false;\n    sys_cgroups_path \u003d \u003cDEFAULT\u003e\n  } else {\n    sys_cgroups_path \u003d api_cgroups_path;\n  }",
      "parentUuid": "30c988c3_c4aec8a3",
      "range": {
        "startLine": 224,
        "startChar": 52,
        "endLine": 224,
        "endChar": 70
      },
      "revId": "35221b53381c8823e237c04a71d9c2549114c52f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f839468_37b9801b",
        "filename": "libprocessgroup/setup/cgroup_map_write.cpp",
        "patchSetId": 8
      },
      "lineNbr": 224,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2020-11-24T00:31:31Z",
      "side": 1,
      "message": "Current code provides API-level file if it exists and lets ReadDescriptorsFromFile()/Load() fail if it\u0027s not readable for some reason. I think that behavior would be more desirable than early return. This lets ReadDescriptorsFromFile()/Load() to report which file was not readable.",
      "parentUuid": "6384e5f6_ebfa7168",
      "range": {
        "startLine": 224,
        "startChar": 52,
        "endLine": 224,
        "endChar": 70
      },
      "revId": "35221b53381c8823e237c04a71d9c2549114c52f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "26de506f_2e3dcd8f",
        "filename": "libprocessgroup/setup/cgroup_map_write.cpp",
        "patchSetId": 8
      },
      "lineNbr": 224,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-11-24T00:35:45Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "6f839468_37b9801b",
      "range": {
        "startLine": 224,
        "startChar": 52,
        "endLine": 224,
        "endChar": 70
      },
      "revId": "35221b53381c8823e237c04a71d9c2549114c52f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}