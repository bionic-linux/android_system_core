{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "1a9e317f_6ce3b740",
        "filename": "fs_mgr/libsnapshot/snapuserd.cpp",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2021-01-12T18:28:20Z",
      "side": 1,
      "message": "You will have to memset this buffer with zero before before handing it off to cow_reader Readdata(); the problem I see is that after decompressing the xor op, you will not get entire 4k buffer filled; The buffer may contain stale data and may lead to corruption once XOR is done at L145.\n\nEither you will have to pad the buffer with zeroes in the cow_reader after reading the data or memset upfront with zero.",
      "revId": "a513dca2713b4c8bd38ff0784f40b42cbc03cf9b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4cf36986_b5c1a6b7",
        "filename": "fs_mgr/libsnapshot/snapuserd.cpp",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2021-01-12T18:34:39Z",
      "side": 1,
      "message": "Actually, the right way is to address it at L145. Instead of iterating entire BLOCK_SIZE, you will have to just iterate the \"size\" of the decompressed xor\u0027ed data from COW Reader and then copy the remaining data from tmp_buffer. Isn\u0027t it ?",
      "parentUuid": "1a9e317f_6ce3b740",
      "revId": "a513dca2713b4c8bd38ff0784f40b42cbc03cf9b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "56498d14_826d0690",
        "filename": "fs_mgr/libsnapshot/snapuserd.cpp",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2021-01-12T18:42:30Z",
      "side": 1,
      "message": "Why wouldn\u0027t the XOR op contain entire 4K buffer? update_engine always converts an entire block to XOR.",
      "parentUuid": "4cf36986_b5c1a6b7",
      "revId": "a513dca2713b4c8bd38ff0784f40b42cbc03cf9b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5f7a958_08578eed",
        "filename": "fs_mgr/libsnapshot/snapuserd.cpp",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2021-01-12T18:48:52Z",
      "side": 1,
      "message": "After XOR, if the 50% of the 4k buffer is different, then we will only have 2k buffer which is compressed. Isn\u0027t it ? What is the point of having entire 4k buffer filled after xor op. Wouldn\u0027t that be same like a Replace operation ?",
      "parentUuid": "56498d14_826d0690",
      "revId": "a513dca2713b4c8bd38ff0784f40b42cbc03cf9b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abd0a60d_c9b5c23b",
        "filename": "fs_mgr/libsnapshot/snapuserd.cpp",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2021-01-12T19:17:20Z",
      "side": 1,
      "message": "If 50% of the 4K buffer is different, then you will get a 4K buffer with lots of 0s. Such buffer probably compresses really well(regular Replace operation may not compress as good as XOR), but after decompression it will always be 4K.",
      "parentUuid": "a5f7a958_08578eed",
      "revId": "a513dca2713b4c8bd38ff0784f40b42cbc03cf9b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a594355f_fe020d1a",
        "filename": "fs_mgr/libsnapshot/snapuserd.cpp",
        "patchSetId": 3
      },
      "lineNbr": 127,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2021-01-12T19:21:53Z",
      "side": 1,
      "message": "You don\u0027t need those zero\u0027es irrespective of how the underlying compression is effecient. You have the data from the source; you can just copy it out from the source.",
      "parentUuid": "abd0a60d_c9b5c23b",
      "revId": "a513dca2713b4c8bd38ff0784f40b42cbc03cf9b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}