{
  "comments": [
    {
      "key": {
        "uuid": "RvNrttUY",
        "filename": "auditd/Android.mk",
        "patchSetId": 10
      },
      "lineNbr": 6,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T05:00:50Z",
      "side": 1,
      "message": "just \"Override this in the BoardConfig.mk to change the max log filesize\"; we usually dont set build variables from the command line",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvM.d9Uw",
        "filename": "auditd/README",
        "patchSetId": 10
      },
      "lineNbr": 6,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T02:21:56Z",
      "side": 1,
      "message": "please include a note about which kernel config options are required, and which are optional and add additional functionality.",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvE.yZd8",
        "filename": "auditd/README",
        "patchSetId": 10
      },
      "lineNbr": 9,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T02:21:56Z",
      "side": 1,
      "message": "What will consume this data?\n\nIf we ever give applications the ability to read these logs then they\u0027ll leak information between users.  These logs will need to go in per-user storage if we ever want to do that.",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvM-GVT8",
        "filename": "auditd/audit_log.c",
        "patchSetId": 10
      },
      "lineNbr": 30,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T02:21:56Z",
      "side": 1,
      "message": "if this must not be null, the first the the function should do is check for NULL, and if found, log a descriptive message and return an error",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvO-LEUQ",
        "filename": "auditd/audit_log.c",
        "patchSetId": 10
      },
      "lineNbr": 32,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T02:21:56Z",
      "side": 1,
      "message": "ditto",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvK.AuYA",
        "filename": "auditd/audit_log.c",
        "patchSetId": 10
      },
      "lineNbr": 38,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T05:00:50Z",
      "side": 1,
      "message": "buf is only passed in as char * (below), so just deal with buf as a char * and it simplifies the logic in this function.\n\nLike Colin said, if sizeof(char) !\u003d 8 far more drastic things will break in the system than this daemon :)",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvK-FGTE",
        "filename": "auditd/audit_log.c",
        "patchSetId": 10
      },
      "lineNbr": 46,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T02:21:56Z",
      "side": 1,
      "message": "colins comments on this weren\u0027t addressed.",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvG-YgRc",
        "filename": "auditd/audit_log.c",
        "patchSetId": 10
      },
      "lineNbr": 59,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T02:21:56Z",
      "side": 1,
      "message": "this can just be a break",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvA.Q7c0",
        "filename": "auditd/audit_log.c",
        "patchSetId": 10
      },
      "lineNbr": 63,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T05:00:50Z",
      "side": 1,
      "message": "do -\u003e due",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvC.NqbI",
        "filename": "auditd/audit_log.c",
        "patchSetId": 10
      },
      "lineNbr": 70,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T05:00:50Z",
      "side": 1,
      "message": "just set l-\u003etotal_bytes once at the end of the function",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvM9xdfY",
        "filename": "auditd/audit_log.c",
        "patchSetId": 10
      },
      "lineNbr": 76,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T05:00:50Z",
      "side": 1,
      "message": "Why do we want to write again if we just had a write failure?\n\nLet\u0027s not generate more errors than we need; if write() encounters an error just print a descriptive message and clean up and exit.",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvM9a1WQ",
        "filename": "auditd/audit_log.c",
        "patchSetId": 10
      },
      "lineNbr": 80,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T05:00:50Z",
      "side": 1,
      "message": "check for error in write, log with descriptive message if encountered.",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvI9U3Tc",
        "filename": "auditd/audit_log.c",
        "patchSetId": 10
      },
      "lineNbr": 84,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T05:00:50Z",
      "side": 1,
      "message": "\"Attempt to rotate if over threshold, even in the face of errors above\"",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvE80pQg",
        "filename": "auditd/audit_log.c",
        "patchSetId": 10
      },
      "lineNbr": 129,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T05:00:50Z",
      "side": 1,
      "message": "if you opened fd with AUDIT_LOG_MODE, why does it have to be chmod-ed?",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvM8-Nec",
        "filename": "auditd/audit_log.c",
        "patchSetId": 10
      },
      "lineNbr": 172,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T05:00:50Z",
      "side": 1,
      "message": "in this function we don\u0027t have any state to clean up on the error path out, so we can just return an error code.\n\nAlso (in convention with the rest of the stuff in system/core) use negative error codes\n\nif (l \u003d\u003d NULL)\n    return -EINVAL;",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvO9EcX8",
        "filename": "auditd/audit_log.c",
        "patchSetId": 10
      },
      "lineNbr": 177,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T05:00:50Z",
      "side": 1,
      "message": "log a descriptive error message as to what went wrong",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvK9OeZk",
        "filename": "auditd/audit_log.c",
        "patchSetId": 10
      },
      "lineNbr": 182,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T05:00:50Z",
      "side": 1,
      "message": "why do you close before the next log is successfully opened? in the case where the next log fails to open, another write will give this another chance to open/rotate the log.\n\nSo first try to open the new log, then close the old log.",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvI9JPZY",
        "filename": "auditd/audit_log.c",
        "patchSetId": 10
      },
      "lineNbr": 186,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T05:00:50Z",
      "side": 1,
      "message": "log descriptive message",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvA9pzfs",
        "filename": "auditd/audit_log.c",
        "patchSetId": 10
      },
      "lineNbr": 198,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T05:00:50Z",
      "side": 1,
      "message": "extra newline above.\n\n    if (l \u003d\u003d NULL) return;",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvG9sAQ0",
        "filename": "auditd/audit_log.c",
        "patchSetId": 10
      },
      "lineNbr": 255,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T05:00:50Z",
      "side": 1,
      "message": "why does this return zero even if rc is set (e.g. in ENOMEM case)?",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvA-VTd4",
        "filename": "auditd/audit_log.h",
        "patchSetId": 10
      },
      "lineNbr": 28,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T02:21:56Z",
      "side": 1,
      "message": "these function-description comments are mixed between headers and c files. is there a reason for that?",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvG.vIXI",
        "filename": "auditd/auditd.c",
        "patchSetId": 10
      },
      "lineNbr": 54,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T02:21:56Z",
      "side": 1,
      "message": "this wont ever happen because the Android.mk already has a default",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvM.q1X4",
        "filename": "auditd/auditd.h",
        "patchSetId": 10
      },
      "lineNbr": 31,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T02:21:56Z",
      "side": 1,
      "message": "just use existing log functions, don\u0027t create new aliases.",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvA-g7ec",
        "filename": "auditd/auditd.h",
        "patchSetId": 10
      },
      "lineNbr": 41,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T02:21:56Z",
      "side": 1,
      "message": "Just use negative error codes like elsewhere in /system/core.  This isn\u0027t needed.",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvC8UyVg",
        "filename": "auditd/libaudit.c",
        "patchSetId": 10
      },
      "lineNbr": 28,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T05:00:50Z",
      "side": 1,
      "message": "this seems a bit of a hack.  What is the point of the libaudit.c file?  It seems like this function could go neatly into netlink.c, and this this function would be static and you wouldn\u0027t need this line.\n\nIf you expect other things to use this functionality later, we can move some of this into a separate libaudit, but that\u0027s not needed for now.",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvK8nWdM",
        "filename": "auditd/libaudit.c",
        "patchSetId": 10
      },
      "lineNbr": 51,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T05:00:50Z",
      "side": 1,
      "message": "log a descriptive message here with what went wrong.  include __line__ if you want, but what this really needs is something like \"failed to register process for kernel audit events\"",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvO8tUbU",
        "filename": "auditd/libaudit.c",
        "patchSetId": 10
      },
      "lineNbr": 52,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T05:00:50Z",
      "side": 1,
      "message": "because we have no state to cleanup here, we can just directly\n\n    return rc;",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvA8.reY",
        "filename": "auditd/libaudit.c",
        "patchSetId": 10
      },
      "lineNbr": 74,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T05:00:50Z",
      "side": 1,
      "message": "just return a negative error code instead of setting errno",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvC-Sifc",
        "filename": "auditd/libaudit.h",
        "patchSetId": 10
      },
      "lineNbr": 11,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T02:21:56Z",
      "side": 1,
      "message": "each enum value on its own line",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvLpx2as",
        "filename": "auditd/netlink.c",
        "patchSetId": 10
      },
      "lineNbr": 30,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T05:00:50Z",
      "side": 1,
      "message": "this seems hackish. just memset() the needed structs to 0 when they are created instead.",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvK.eeVM",
        "filename": "auditd/netlink.c",
        "patchSetId": 10
      },
      "lineNbr": 37,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T02:21:56Z",
      "side": 1,
      "message": "nlmsghdr -\u003e \"netlink message header\"",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvA9njZo",
        "filename": "auditd/netlink.c",
        "patchSetId": 10
      },
      "lineNbr": 89,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T02:21:56Z",
      "side": 1,
      "message": "dont need this label (also eww goto backwards :)",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvG9qwWM",
        "filename": "auditd/netlink.c",
        "patchSetId": 10
      },
      "lineNbr": 90,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T02:21:56Z",
      "side": 1,
      "message": "return 0;",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvM94lUI",
        "filename": "auditd/netlink.c",
        "patchSetId": 10
      },
      "lineNbr": 92,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T02:21:56Z",
      "side": 1,
      "message": "What does setting errno get you here?\n\nDont set errno and just have the return value capture the error you want to send and make sure the type of error is logged with a useful message.",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvG.8Acc",
        "filename": "auditd/netlink.c",
        "patchSetId": 10
      },
      "lineNbr": 93,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T02:21:56Z",
      "side": 1,
      "message": "80 char lines.\n\nAlso, give a more descriptive error of what went wrong.",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvK93WU0",
        "filename": "auditd/netlink.c",
        "patchSetId": 10
      },
      "lineNbr": 95,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T02:21:56Z",
      "side": 1,
      "message": "return rc;",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvC9kyZI",
        "filename": "auditd/netlink.c",
        "patchSetId": 10
      },
      "lineNbr": 134,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T02:21:56Z",
      "side": 1,
      "message": "ditto above.  I think colin addressed this pattern in a previous patch already, actually.",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvC.LaRE",
        "filename": "auditd/netlink.c",
        "patchSetId": 10
      },
      "lineNbr": 138,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T02:21:56Z",
      "side": 1,
      "message": "80 char lines, descriptive error, ditto for the rest of these",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "RvHqbYbQ",
        "filename": "auditd/netlink.c",
        "patchSetId": 10
      },
      "lineNbr": 358,
      "author": {
        "id": 1012391
      },
      "writtenOn": "2013-03-15T05:00:50Z",
      "side": 1,
      "message": "test for this condition, and log a message if it overflows.",
      "revId": "941bdceca06df20c96dde1b38a61efbf6ee40383",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}