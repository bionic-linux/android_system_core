{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0d949f0e_91fa0881",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2023-06-08T09:59:01Z",
      "side": 1,
      "message": "+dvander FYI",
      "revId": "bbbf67d97d6aa453776cc22c4284d8c46be7225b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4efa335e_84aebaef",
        "filename": "init/selinux.cpp",
        "patchSetId": 1
      },
      "lineNbr": 505,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2023-06-08T10:43:38Z",
      "side": 1,
      "message": "This seems slightly fragile - shouldn\u0027t we do some more robust \"Is Microdroid?\" check here?\n\nYou also need IsSplitPolicyDevice() to return false to get here - but currently plat_policy_cil_file does exist inside Microdroid, so it won\u0027t?",
      "range": {
        "startLine": 503,
        "startChar": 0,
        "endLine": 505,
        "endChar": 65
      },
      "revId": "bbbf67d97d6aa453776cc22c4284d8c46be7225b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "285e166b_fbb63403",
        "filename": "init/selinux.cpp",
        "patchSetId": 1
      },
      "lineNbr": 505,
      "author": {
        "id": 1432579
      },
      "writtenOn": "2023-06-08T11:28:07Z",
      "side": 1,
      "message": "\u003e This seems slightly fragile - shouldn\u0027t we do some more robust \"Is Microdroid?\" check here?\n\nMy reasoning was that \"microdroid\" in the \"microdroid_precompiled_policy\" will be enough to prevent accidental misconfiguration on host Android. Having said so, happy to implement a more robust check. Should we have \"is_microdroid\" sysprop? Or IS_MICRODROID preprocessor macro?\n\n\u003e You also need IsSplitPolicyDevice() to return false to get here - but currently plat_policy_cil_file does exist inside Microdroid, so it won\u0027t?\n\n\naosp/2620051 removes the plat_sepolicy.cil",
      "parentUuid": "4efa335e_84aebaef",
      "range": {
        "startLine": 503,
        "startChar": 0,
        "endLine": 505,
        "endChar": 65
      },
      "revId": "bbbf67d97d6aa453776cc22c4284d8c46be7225b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d9e20e0_594970df",
        "filename": "init/selinux.cpp",
        "patchSetId": 1
      },
      "lineNbr": 505,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2023-06-08T12:54:43Z",
      "side": 1,
      "message": "\u003e Should we have \"is_microdroid\" sysprop?\n\nHmm. I\u0027m not sure there is anything; a bunch of the more useful properties inside the VM are deliberately set to match the host.\n\n@jiyong@google.com might have opinions.",
      "parentUuid": "285e166b_fbb63403",
      "range": {
        "startLine": 503,
        "startChar": 0,
        "endLine": 505,
        "endChar": 65
      },
      "revId": "bbbf67d97d6aa453776cc22c4284d8c46be7225b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb3fb759_61d1e0a7",
        "filename": "init/selinux.cpp",
        "patchSetId": 1
      },
      "lineNbr": 505,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2023-06-08T15:05:41Z",
      "side": 1,
      "message": "The property service isn\u0027t up at this point unfortunately.\n\nI\u0027m not a huge fan of special-casing microdroid like this, so I\u0027d actually argue the opposite direction: just have init check vendor sepolicy first, then fallback to system. That kind of thing is very common in init.\n\nIf using bootconfig is an option, though, we could stick the sepolicy path in a bootconfig property.",
      "parentUuid": "4d9e20e0_594970df",
      "range": {
        "startLine": 503,
        "startChar": 0,
        "endLine": 505,
        "endChar": 65
      },
      "revId": "bbbf67d97d6aa453776cc22c4284d8c46be7225b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd463898_fcc6392a",
        "filename": "init/selinux.cpp",
        "patchSetId": 1
      },
      "lineNbr": 505,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2023-06-09T05:46:00Z",
      "side": 1,
      "message": "Ok. I actually think existing code around here needs a major refactoring. For example, I wonder if OpenMonolithPolicy has been used recently given that Treble has been mandatory for a long time. I wish we can remove that path.\n\nIn addition, Microdroid really is a special case. It\u0027s NOT Android and therefore lots of features in init are actually not needed there. However, since we don\u0027t do something like `-DMICRODROID`, everything is included and we branch at runtime. I think we may want to conditionally compile init for Microdroid.\n\nAnyway, this refactoring is out of scope of this change, and therefore I don\u0027t have a strong feeling that this CL should look good to everyone.",
      "parentUuid": "cb3fb759_61d1e0a7",
      "range": {
        "startLine": 503,
        "startChar": 0,
        "endLine": 505,
        "endChar": 65
      },
      "revId": "bbbf67d97d6aa453776cc22c4284d8c46be7225b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ce89ae8_216669d5",
        "filename": "init/selinux.cpp",
        "patchSetId": 1
      },
      "lineNbr": 505,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-06-09T14:14:03Z",
      "side": 1,
      "message": "(depending on how little init you actually need, note that toybox has a tiny init.)",
      "parentUuid": "dd463898_fcc6392a",
      "range": {
        "startLine": 503,
        "startChar": 0,
        "endLine": 505,
        "endChar": 65
      },
      "revId": "bbbf67d97d6aa453776cc22c4284d8c46be7225b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}