{
  "comments": [
    {
      "key": {
        "uuid": "ce9ecc7c_fc2ea602",
        "filename": "adb/transport_usb.cpp",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2017-05-18T18:15:27Z",
      "side": 1,
      "message": "what about A_AUTH? Isn\u0027t L82 already cover this? or you met something special?",
      "range": {
        "startLine": 137,
        "startChar": 30,
        "endLine": 137,
        "endChar": 36
      },
      "revId": "27b31235142b12ff1cea0caeffcb3ccd5183dfc4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11af95e9_cbdee1c6",
        "filename": "adb/transport_usb.cpp",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2017-05-18T22:07:50Z",
      "side": 1,
      "message": "I think the handling on line 82 doesn\u0027t work in all cases (this doesn\u0027t either, but I think it works in more).\nSpecifically, if the packet that\u0027s in the queue is a payload and not a message, the read at line 70 will fail and return -1.\n\nI think this covers all of the cases that the code above does, do you think I should just delete the handling there?",
      "parentUuid": "ce9ecc7c_fc2ea602",
      "range": {
        "startLine": 137,
        "startChar": 30,
        "endLine": 137,
        "endChar": 36
      },
      "revId": "27b31235142b12ff1cea0caeffcb3ccd5183dfc4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9e87a67_5e5732bd",
        "filename": "adb/transport_usb.cpp",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2017-05-18T23:45:09Z",
      "side": 1,
      "message": "I see. The logic of UsbReadMessage has been changed. Instead of adding more code, why not change it back to UsbReadMessage in https://android-review.googlesource.com/#/c/342653/12/adb/transport_usb.cpp?\n\nAnd L110 will not work if using initial_read.",
      "parentUuid": "11af95e9_cbdee1c6",
      "range": {
        "startLine": 137,
        "startChar": 30,
        "endLine": 137,
        "endChar": 36
      },
      "revId": "27b31235142b12ff1cea0caeffcb3ccd5183dfc4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6862b06a_cd8c656d",
        "filename": "adb/transport_usb.cpp",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2017-05-23T20:28:04Z",
      "side": 1,
      "message": "I\u0027m not a big fan of the current code because it makes it so that we\u0027re willing to just skip random amounts of data that\u0027s coming across the wire at any point in the connection, when the real problem only occurs at the beginning of connections.",
      "parentUuid": "b9e87a67_5e5732bd",
      "range": {
        "startLine": 137,
        "startChar": 30,
        "endLine": 137,
        "endChar": 36
      },
      "revId": "27b31235142b12ff1cea0caeffcb3ccd5183dfc4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44653cd0_298b3af2",
        "filename": "adb/transport_usb.cpp",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2017-05-23T22:00:48Z",
      "side": 1,
      "message": "Yes, I agree the problem only occurs at the beginning of connections. But I think at least L106-L112 should be moved to initial_read, otherwise the device offlince problem can occur for the reason in L107-L108. This can be tested by test_device.DeviceOfflineTest, however, you need to write a script to run the tests in a loop for a long time (like several hours). Because the situation in problem is hard to reproduce.",
      "parentUuid": "6862b06a_cd8c656d",
      "range": {
        "startLine": 137,
        "startChar": 30,
        "endLine": 137,
        "endChar": 36
      },
      "revId": "27b31235142b12ff1cea0caeffcb3ccd5183dfc4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15ec2e8a_74ee02f7",
        "filename": "adb/transport_usb.cpp",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2017-05-24T07:46:34Z",
      "side": 1,
      "message": "Could you explain the scenario this addresses? Is it for when the host has outgoing packets queued up?",
      "parentUuid": "44653cd0_298b3af2",
      "range": {
        "startLine": 137,
        "startChar": 30,
        "endLine": 137,
        "endChar": 36
      },
      "revId": "27b31235142b12ff1cea0caeffcb3ccd5183dfc4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6aa60fba_e53f519e",
        "filename": "adb/transport_usb.cpp",
        "patchSetId": 1
      },
      "lineNbr": 137,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2017-05-24T17:29:59Z",
      "side": 1,
      "message": "For usb bulk transfer, each data package has a DATA0/DATA1 flag. The host and device should have the same expectation of the flag, otherwise the package will be ignored. A discussion is http://www.microchip.com/forums/m473721.aspx. When adb server on host is killed and restarted, the host resets its epin/epout data toggle flags to DATA0. But the device doesn\u0027t know this, and keeps the original flags. So the first package sent from adb server to adbd, and the first package sent from adbd to adb server can lost because of DATA flag mismatch.\n\nI fixed this by adding an empty packet when sending the first packet from adb server to adbd, https://cs.corp.google.com/android/system/core/adb/adb.cpp?type\u003dcs\u0026q\u003dadb.cpp\u0026sq\u003dp:%5Eandroid$\u0026l\u003d266. And when adb server doesn\u0027t receive a packet correctly, it may be because the packet header is ignored, so it resend the CNXN packet.\n\nIt is not the only solution. For example, resetting the usb device or set usb configuration should also fix this. I didn\u0027t choose them because they may affect other usb interfaces.",
      "parentUuid": "15ec2e8a_74ee02f7",
      "range": {
        "startLine": 137,
        "startChar": 30,
        "endLine": 137,
        "endChar": 36
      },
      "revId": "27b31235142b12ff1cea0caeffcb3ccd5183dfc4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}