{
  "comments": [
    {
      "key": {
        "uuid": "34464c9f_341357b2",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 623,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2017-03-01T06:46:04Z",
      "side": 1,
      "message": "use constexprs and std::string",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6fe185a9_ef6296d3",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 623,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-01T21:50:13Z",
      "side": 1,
      "message": "static constrexpr doesn\u0027t appear to work for std::string. It does work for char[] though.",
      "parentUuid": "34464c9f_341357b2",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad5df435_b843e205",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 623,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2017-03-01T22:14:53Z",
      "side": 1,
      "message": "yeah, sorry meant to say \u0027or\u0027 const std::string :)",
      "parentUuid": "6fe185a9_ef6296d3",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "08087e56_22fdd33c",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 628,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2017-03-01T06:46:04Z",
      "side": 1,
      "message": "This doesn\u0027t tell anything about what the function is doing, may be drop?",
      "range": {
        "startLine": 626,
        "startChar": 84,
        "endLine": 628,
        "endChar": 92
      },
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "29a6e527_f4282023",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 628,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-01T21:50:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "08087e56_22fdd33c",
      "range": {
        "startLine": 626,
        "startChar": 84,
        "endLine": 628,
        "endChar": 92
      },
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ddbf9b3_976e702b",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 636,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2017-03-01T06:46:04Z",
      "side": 1,
      "message": "\"vendor\"",
      "range": {
        "startLine": 636,
        "startChar": 69,
        "endLine": 636,
        "endChar": 83
      },
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8bbc975e_4cf88896",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 636,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-01T21:50:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1ddbf9b3_976e702b",
      "range": {
        "startLine": 636,
        "startChar": 69,
        "endLine": 636,
        "endChar": 83
      },
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "edce12ed_7a3830a1",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 643,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2017-03-01T06:46:04Z",
      "side": 1,
      "message": "s/stat/access",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b56296b_5e75950f",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 643,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-01T21:50:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "edce12ed_7a3830a1",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7b7a4c88_9faf9019",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 654,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2017-03-01T21:18:47Z",
      "side": 1,
      "message": "Do we really need this loop unrolled like this for stat? Especially considering that the files are moving to a static const, could they be an array and then moved local to this routine? They don\u0027t seem to be used outside of this function scope.",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3592dde9_b90df34e",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 654,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-01T21:50:13Z",
      "side": 1,
      "message": "No longer a problem.",
      "parentUuid": "7b7a4c88_9faf9019",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "897fc2bb_f290ebbf",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 660,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2017-03-01T06:46:04Z",
      "side": 1,
      "message": "const",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87262cd1_4cc9773e",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 660,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-01T21:50:13Z",
      "side": 1,
      "message": "I don\u0027t think so. The contents of this buffer need to be mutable because mkostemp modifies them in-place.",
      "parentUuid": "897fc2bb_f290ebbf",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9bd7c9e_ae30a982",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 660,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2017-03-01T22:14:53Z",
      "side": 1,
      "message": "ack",
      "parentUuid": "87262cd1_4cc9773e",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e1367aa_847054d3",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 668,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2017-03-01T06:46:04Z",
      "side": 1,
      "message": "may be check if you have access to these before fork and execute? (will tell if the partition is early mounted as well)",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f1055209_35557748",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 668,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-01T21:50:13Z",
      "side": 1,
      "message": "I don\u0027t think this is necessary. There are many other ways due to which this could fail. If it does fail, it doesn\u0027t matter why. We don\u0027t proceed with the boot anyway. If you\u0027re thinking of symmetry with the checks above, then those checks are there only because we want the same init codebase to support both devices with split policy and devices with monolithic policy. The checks are there to distinguish which type of device this is. If the split policy there, but secilc is not there, it\u0027s a broken device.\n\nPerhaps a better solution is to log the stderr of this invocation. It\u0027ll contain sufficient information about the root cause (e.g.., secilc not found, or some policy file not found, or something\u0027s wrong with the policy file).",
      "parentUuid": "3e1367aa_847054d3",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe18786a_d45d0360",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 668,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2017-03-01T22:14:53Z",
      "side": 1,
      "message": "sgtm",
      "parentUuid": "f1055209_35557748",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8cf6e5f_a20027c1",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 686,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2017-03-01T06:46:04Z",
      "side": 1,
      "message": "a comment for this..",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "efd1bd68_497ab63a",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 686,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-01T21:50:13Z",
      "side": 1,
      "message": "Removed. umask change not actually needed.",
      "parentUuid": "d8cf6e5f_a20027c1",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c416382c_50e8a10c",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 689,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2017-03-01T06:46:04Z",
      "side": 1,
      "message": "always do this in parent - the file is still open, so unlink won\u0027t anything here",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "029e57bd_1e15ea7e",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 689,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-01T21:50:13Z",
      "side": 1,
      "message": "You\u0027re right. We don\u0027t need this here, actually. This is handled by the parent below anyway.",
      "parentUuid": "c416382c_50e8a10c",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eaec7eec_8d70d463",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 705,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2017-03-01T06:46:04Z",
      "side": 1,
      "message": "if (WIFEXITED(child_status) {\n .. check WEXITSTATUS()\n}",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a475e5e0_f46f8f93",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 705,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-01T21:50:13Z",
      "side": 1,
      "message": "Done! I missed that WEXITSTATUS only has meaning if WIFEXITED returns nonzero.",
      "parentUuid": "eaec7eec_8d70d463",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db6776f7_defd4a6e",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 708,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2017-03-01T06:46:04Z",
      "side": 1,
      "message": "nit: format with - system/core/init/.clang-format",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47437056_2ebf67ad",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 708,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-01T18:31:39Z",
      "side": 1,
      "message": "+1  There are a few examples of `char *` vs `char*` as well that need to be corrected",
      "parentUuid": "db6776f7_defd4a6e",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "199af398_6f3983ac",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 708,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-01T21:50:13Z",
      "side": 1,
      "message": "Done. Although the execve args look less readable, I must say.",
      "parentUuid": "47437056_2ebf67ad",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "210f05d6_acac8a8a",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 725,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2017-03-01T06:46:04Z",
      "side": 1,
      "message": "doesn\u0027t tell anything about the function, drop?",
      "range": {
        "startLine": 724,
        "startChar": 48,
        "endLine": 725,
        "endChar": 28
      },
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2c885ff_026f749c",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 725,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-01T21:50:13Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "210f05d6_acac8a8a",
      "range": {
        "startLine": 724,
        "startChar": 48,
        "endLine": 725,
        "endChar": 28
      },
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09a769e1_b51c932e",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 729,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2017-03-01T21:18:47Z",
      "side": 1,
      "message": "bool results should use bools",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e7f83b9_7b1237a4",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 729,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-01T21:50:13Z",
      "side": 1,
      "message": "Done. Makes all of this look better for sure.",
      "parentUuid": "09a769e1_b51c932e",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "09f7c33b_7a152583",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 745,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2017-03-01T06:46:04Z",
      "side": 1,
      "message": "s/deprecated//",
      "range": {
        "startLine": 745,
        "startChar": 69,
        "endLine": 745,
        "endChar": 83
      },
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fc6f2261_8c943d9b",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 745,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-01T21:50:13Z",
      "side": 1,
      "message": "Removed the whole comment now that the logic below is much more readable.",
      "parentUuid": "09f7c33b_7a152583",
      "range": {
        "startLine": 745,
        "startChar": 69,
        "endLine": 745,
        "endChar": 83
      },
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27d06881_c6b406c9",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 747,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2017-03-01T00:31:24Z",
      "side": 1,
      "message": "For clarity, perhaps cut this down to just the test selinux_split_policy_test()",
      "range": {
        "startLine": 747,
        "startChar": 12,
        "endLine": 747,
        "endChar": 37
      },
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "366900f9_f53ef777",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 747,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2017-03-01T06:46:04Z",
      "side": 1,
      "message": "\u003e For clarity, perhaps cut this down to just the test\n \u003e selinux_split_policy_test()\n\n+1",
      "parentUuid": "27d06881_c6b406c9",
      "range": {
        "startLine": 747,
        "startChar": 12,
        "endLine": 747,
        "endChar": 37
      },
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a4c0e2c_bb8a74c9",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 747,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-01T18:31:39Z",
      "side": 1,
      "message": "+1.\n\nIn general can we use `bool` for the return value for these functions?  We\u0027ve been trying to move init to bool instead of arbitrarily defined return values.\n\nThis could be simplified as far as:\nreturn selinux_has_split_policy() ? selinux_load_split_policy() : selinux_load_monolithic_policy();",
      "parentUuid": "366900f9_f53ef777",
      "range": {
        "startLine": 747,
        "startChar": 12,
        "endLine": 747,
        "endChar": 37
      },
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3dd0cc21_faa64b73",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 747,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-01T21:50:13Z",
      "side": 1,
      "message": "Good ideas. Done. Looks much better (to me).",
      "parentUuid": "3a4c0e2c_bb8a74c9",
      "range": {
        "startLine": 747,
        "startChar": 12,
        "endLine": 747,
        "endChar": 37
      },
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cb675534_1e8560fe",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 749,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2017-03-01T00:31:24Z",
      "side": 1,
      "message": "Then do the split policy loading here:\nselinux_load_split_policy()",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b24b18d9_a03d9a19",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 749,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-01T21:50:13Z",
      "side": 1,
      "message": "Done. Kind of.",
      "parentUuid": "cb675534_1e8560fe",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "362587ec_61f2c7aa",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 774,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-01T18:31:39Z",
      "side": 1,
      "message": "Why no longer security_failure() ?",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e49e330_76209b1b",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 774,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-01T21:50:13Z",
      "side": 1,
      "message": "See discussion in the previous version of this change: https://android-review.googlesource.com/#/c/317766/1/init/init.cpp@542. Basically, security_failure() is going away because it\u0027s so vague that it doesn\u0027t add anything useful to the panic() it\u0027s invoking. We should just have code which logs something sensible and much more useful than \"Security failure...\" before panic(). This code does it just fine on this measure.",
      "parentUuid": "362587ec_61f2c7aa",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "359c0d98_b3ee90b6",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 774,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-01T22:04:50Z",
      "side": 1,
      "message": "sgtm",
      "parentUuid": "9e49e330_76209b1b",
      "revId": "b466400483c0de4cff63bd478dd7b7c4de8e7a47",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}