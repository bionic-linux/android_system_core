{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "db81c0cd_ebd0139e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2024-11-11T19:13:55Z",
      "side": 1,
      "message": "Jiyong, my suggestion here was to \"exec dd\", but it looks like vendor_init can\u0027t do that. Do you have any suggestions?",
      "revId": "250e5b7d039470d12dd23344af7894eae9f70f7d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a8e4ada_457752c3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-11-12T01:22:52Z",
      "side": 1,
      "message": "I think vendor_init could use `/vendor/bin/dd` instead.",
      "parentUuid": "db81c0cd_ebd0139e",
      "revId": "250e5b7d039470d12dd23344af7894eae9f70f7d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f71be368_2c9c1e8f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1176763
      },
      "writtenOn": "2024-11-12T01:29:07Z",
      "side": 1,
      "message": "When I tested eariler, either /vendor/bin/dd or /system/bin/dd works. IIRC, the problem was selinux disallowed vendor_init for vendor_toolbox_exec:file { execute_no_trans }.",
      "parentUuid": "7a8e4ada_457752c3",
      "revId": "250e5b7d039470d12dd23344af7894eae9f70f7d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "96dde0da_b97e6730",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1176763
      },
      "writtenOn": "2024-11-12T01:37:14Z",
      "side": 1,
      "message": "I guess that comes from:\n\n```\n# init should never execute a program without changing to another domain.\nneverallow vendor_init { file_type fs_type }:file execute_no_trans;\n```",
      "parentUuid": "f71be368_2c9c1e8f",
      "revId": "250e5b7d039470d12dd23344af7894eae9f70f7d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "40babed0_e93f81a2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-11-12T01:44:00Z",
      "side": 1,
      "message": "I see. I think you are hit by this neverallow rule [1]. Not sure why we can\u0027t add vendor_toolbox there.\n\nOr you could execute `/vendor/bin/dd` with an explicit domain transition. ex:\n\n```\nexec u:r:vendor_toolbox:s0 -- /vendor/bin/dd arg1 arg2 \n```\n\n[1] https://cs.android.com/android/platform/superproject/main/+/main:system/sepolicy/private/vendor_init.te;drc\u003d2f31d932c267f2060a331490781aebc0154e67f0;l\u003d354",
      "parentUuid": "f71be368_2c9c1e8f",
      "revId": "250e5b7d039470d12dd23344af7894eae9f70f7d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86f0f0f1_ee542a2a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1176763
      },
      "writtenOn": "2024-11-12T03:04:47Z",
      "side": 1,
      "message": "When I tried second option, I got an error:\n\ninit: cannot setexeccon(\u0027u:r:vendor_toolbox:s0\u0027) for exec 18 ....",
      "parentUuid": "40babed0_e93f81a2",
      "revId": "250e5b7d039470d12dd23344af7894eae9f70f7d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60991ea8_47510f79",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1176763
      },
      "writtenOn": "2024-11-12T03:07:31Z",
      "side": 1,
      "message": "inseob@ added that rule. Is it possible to allow it?",
      "parentUuid": "86f0f0f1_ee542a2a",
      "revId": "250e5b7d039470d12dd23344af7894eae9f70f7d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73d223e4_18424b51",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-11-12T03:46:54Z",
      "side": 1,
      "message": "I\u0027m not sure if it was inseob@ who added that neverallow rule. I think the line was last modified as part of the major re-structuring of the *.te files done by him.\n\nAnd, I don\u0027t think we would want to relax the neverallow rule. @jeffv@google.com can chime in here.\n\nFor the error you got, it looks like we need a corresponding domain trans rule.\n\n```\ndomain_trans(vendor_init, vendor_toolbox_exec, vendor_toolbox)\n```\n\nor \n```\ndomain_auto_trans(vendor_init, vendor_toolbox_exec, vendor_toolbox)\n\n// in this case you can omit the `u:r:vendor_toolbox:s0` part.\n```\n\nI personally don\u0027t see a problem with allowing vendor_toolbox to vendor_init, but Jeff, please shout out if this looks problematic to you.",
      "parentUuid": "60991ea8_47510f79",
      "revId": "250e5b7d039470d12dd23344af7894eae9f70f7d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "393520bf_d91be7d7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2024-11-12T04:01:51Z",
      "side": 1,
      "message": "\u003e inseob@ added that rule. Is it possible to allow it?\n\nIt\u0027s not me, it was @jeffv@google.com aosp/711247",
      "parentUuid": "73d223e4_18424b51",
      "revId": "250e5b7d039470d12dd23344af7894eae9f70f7d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "41959a1c_8162b6fc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1176763
      },
      "writtenOn": "2024-11-12T04:22:14Z",
      "side": 1,
      "message": "domain_trans(vendor_init, vendor_toolbox_exec, vendor_toolbox)\n-\u003e there\u0027s no vendor_toolbox domain. did you suggest creating another domain?",
      "parentUuid": "393520bf_d91be7d7",
      "revId": "250e5b7d039470d12dd23344af7894eae9f70f7d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea10e5a3_ae362fde",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-11-12T04:57:16Z",
      "side": 1,
      "message": "oh no, I didn\u0027t notice that. we do have vendor_toolbox_exec but not vendor_toolbox. sorry for causing you confusion. \n\n\u003e did you suggest creating another domain?\n\nI think I am. I was just following the same pattern as `toolbox.te`. But let\u0027s wait for Jeff before going too far.",
      "parentUuid": "41959a1c_8162b6fc",
      "revId": "250e5b7d039470d12dd23344af7894eae9f70f7d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f15e8523_2bc15b4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1176763
      },
      "writtenOn": "2024-11-12T05:00:07Z",
      "side": 1,
      "message": "Alright. Hope Jeff can give some direction. :)",
      "parentUuid": "ea10e5a3_ae362fde",
      "revId": "250e5b7d039470d12dd23344af7894eae9f70f7d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da00b43d_ac4134eb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2024-11-12T07:59:18Z",
      "side": 1,
      "message": "Background context: the reason why the neverallow rule exists is because without it, partners run everything in init\u0027s/vendor_init\u0027s context, and we end up with a system where everything is massively overprivileged privileged.\n\nI\u0027d prefer to not create a catchall vendor_toolbox domain.\n\nCan we instead create a \"dd\" selinux context, add \"domain_trans(vendor_init, vendor_toolbox_exec, dd) into vendor_init.te, then set the [seclabel on the exec statement in the init.rc file](https://cs.android.com/android/platform/superproject/main/+/main:system/core/init/README.md;l\u003d567?q\u003dsystem%2Fcore%2Finit%2Fread) ?",
      "parentUuid": "f15e8523_2bc15b4d",
      "revId": "250e5b7d039470d12dd23344af7894eae9f70f7d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}