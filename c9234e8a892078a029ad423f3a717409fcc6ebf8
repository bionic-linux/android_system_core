{
  "comments": [
    {
      "key": {
        "uuid": "d634a019_0f430084",
        "filename": "fs_mgr/libsnapshot/snapshot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 349,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2019-08-07T19:50:12Z",
      "side": 1,
      "message": "Isn\u0027t this covered by the \n\n    if (!LockShared()) return None;\n\nbelow?",
      "range": {
        "startLine": 345,
        "startChar": 0,
        "endLine": 349,
        "endChar": 5
      },
      "revId": "c9234e8a892078a029ad423f3a717409fcc6ebf8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20b37bc8_51fa1cbe",
        "filename": "fs_mgr/libsnapshot/snapshot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 349,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-08-07T20:24:18Z",
      "side": 1,
      "message": "Hrm, yes you\u0027re right. I was getting confused because LockShared will log an error if it doesn\u0027t find the file. I\u0027ll clarify this in the commit message, but I\u0027d like to keep the access() check to prevent logspam.",
      "parentUuid": "d634a019_0f430084",
      "range": {
        "startLine": 345,
        "startChar": 0,
        "endLine": 349,
        "endChar": 5
      },
      "revId": "c9234e8a892078a029ad423f3a717409fcc6ebf8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10ead5e8_7a237b5f",
        "filename": "fs_mgr/libsnapshot/snapshot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 349,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2019-08-08T00:01:47Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "20b37bc8_51fa1cbe",
      "range": {
        "startLine": 345,
        "startChar": 0,
        "endLine": 349,
        "endChar": 5
      },
      "revId": "c9234e8a892078a029ad423f3a717409fcc6ebf8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}