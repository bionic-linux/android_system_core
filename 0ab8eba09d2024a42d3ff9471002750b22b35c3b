{
  "comments": [
    {
      "key": {
        "uuid": "e148ed48_2b37d89f",
        "filename": "fs_mgr/fs_mgr_overlayfs.cpp",
        "patchSetId": 3
      },
      "lineNbr": 416,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-10-02T16:39:35Z",
      "side": 1,
      "message": "Why check this?  When would it ever not be true.",
      "range": {
        "startLine": 416,
        "startChar": 8,
        "endLine": 416,
        "endChar": 41
      },
      "revId": "0ab8eba09d2024a42d3ff9471002750b22b35c3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c84c7e01_af7008cd",
        "filename": "fs_mgr/fs_mgr_overlayfs.cpp",
        "patchSetId": 3
      },
      "lineNbr": 416,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-10-02T17:12:02Z",
      "side": 1,
      "message": "Specific case where nothing is specified in the device tree table.\n\nI know we are migrating to system as root as the requirement for our devices, sepolicy provided by /system root, along with reinstatement of the ramdisk. However we already know that this was considered an (unknown) impact on boot time because of the ramdisk. Removal of ramdisk was a ChromOS initiative that we absorbed a few years back.\n\nAs such I want to harden the code for a possible reversal of course on some Android systems; or if we find out a means of ramdisk removal (again). Primarily this is to deal with the gotcha where some partner decides they prefer mounting /system at mount_all --early. Or if there is a boot time consideration (considering Android Auto). Until we have a CTS requirement that system is root, or that the kernel must supply a device tree table, we must have some flexibility for our partners.\n\nI expect you may have just signaled (pse confirm) I need to split this CL and wait until we get a scientific impact of the boot time impact of our current move back to ramdisk. If it has zero impact, the story for mount_all --early gets very weak and the burden for this check moves into partners will.",
      "parentUuid": "e148ed48_2b37d89f",
      "range": {
        "startLine": 416,
        "startChar": 8,
        "endLine": 416,
        "endChar": 41
      },
      "revId": "0ab8eba09d2024a42d3ff9471002750b22b35c3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f940738e_7c993133",
        "filename": "fs_mgr/fs_mgr_overlayfs.cpp",
        "patchSetId": 3
      },
      "lineNbr": 416,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-10-02T17:17:22Z",
      "side": 1,
      "message": "But this is checking for file contents of the /system directory; not even anything specific about the /system mount point, right?  And this code runs after first stage mount happens (or we have system as root already mounted)?  Isn\u0027t there always contents in /system at this point?",
      "parentUuid": "c84c7e01_af7008cd",
      "range": {
        "startLine": 416,
        "startChar": 8,
        "endLine": 416,
        "endChar": 41
      },
      "revId": "0ab8eba09d2024a42d3ff9471002750b22b35c3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a168d5c_8098ab2b",
        "filename": "fs_mgr/fs_mgr_overlayfs.cpp",
        "patchSetId": 3
      },
      "lineNbr": 416,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-10-02T17:30:13Z",
      "side": 1,
      "message": "Hmm, even w/o system as root, ramdisk will place init in /system/bin/init ... \u003csigh\u003e\n\nI do not know how I could deal with ramdisk -\u003e overlayfs on /system -\u003e _real_ system on /system -\u003e overlayfs on _real_ system. It may just work, but it makes my skin crawl.\n\nBest to leave that as a problem for another day.",
      "parentUuid": "f940738e_7c993133",
      "range": {
        "startLine": 416,
        "startChar": 8,
        "endLine": 416,
        "endChar": 41
      },
      "revId": "0ab8eba09d2024a42d3ff9471002750b22b35c3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b8545dc_89fb6f5e",
        "filename": "fs_mgr/fs_mgr_overlayfs.cpp",
        "patchSetId": 3
      },
      "lineNbr": 416,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-10-02T17:49:07Z",
      "side": 1,
      "message": "That\u0027s a problem since we can\u0027t do overlayfs in first stage init, right?  It would be excellent if we could fix that problem.\n\nBut in any case, the specific check of whether or not /system has contents is superfluous, right?  What case would there be where /system doesn\u0027t have contents?",
      "parentUuid": "4a168d5c_8098ab2b",
      "range": {
        "startLine": 416,
        "startChar": 8,
        "endLine": 416,
        "endChar": 41
      },
      "revId": "0ab8eba09d2024a42d3ff9471002750b22b35c3b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}