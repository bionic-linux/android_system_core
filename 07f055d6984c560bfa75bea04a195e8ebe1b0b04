{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "63ad5fc3_ef731250",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-06-08T14:38:07Z",
      "side": 1,
      "message": "what are you trying to do here?\n\nwe don\u0027t support building against arbitrary versions of glibc (and in fact intend to _remove_ glibc completely when we switch to musl for the host), so this shouldn\u0027t matter (and, in fact, now we know we\u0027ll never move to a newer glibc, could just be deleted).",
      "revId": "07f055d6984c560bfa75bea04a195e8ebe1b0b04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eccbaf61_0544f773",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1895775
      },
      "writtenOn": "2023-06-08T15:01:44Z",
      "side": 1,
      "message": "As part of this series of changes - https://android-review.googlesource.com/c/platform/frameworks/native/+/2616203/1?usp\u003drelated-change\n\nWe are building libbinder on host outside of the AOSP tree.",
      "parentUuid": "63ad5fc3_ef731250",
      "revId": "07f055d6984c560bfa75bea04a195e8ebe1b0b04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55193f69_c44a75e0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-06-08T15:03:08Z",
      "side": 1,
      "message": "can you remove the libcutils dependency instead? i don\u0027t think we want to support that configuration (especially since, like i said, we\u0027re actively moving away from _any_ glibc support, and should finish that work this year).",
      "parentUuid": "eccbaf61_0544f773",
      "revId": "07f055d6984c560bfa75bea04a195e8ebe1b0b04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2f7a292_a42fa46b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-06-08T16:15:35Z",
      "side": 1,
      "message": "So, the question is then, can Naseer use musl instead?",
      "parentUuid": "55193f69_c44a75e0",
      "revId": "07f055d6984c560bfa75bea04a195e8ebe1b0b04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c343fec7_ea8602d2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-06-08T16:37:50Z",
      "side": 1,
      "message": "that should \"just work\"; musl\u0027s [effectively] always had gettid, and doesn\u0027t define `__GLIBC__` so you won\u0027t get here anyway.\n\n(but i\u0027d still recommend dropping any libcutils dependencies you don\u0027t need.)",
      "parentUuid": "e2f7a292_a42fa46b",
      "revId": "07f055d6984c560bfa75bea04a195e8ebe1b0b04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7fb5607_4ed6d2f6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-06-08T16:42:59Z",
      "side": 1,
      "message": "We can\u0027t drop libcutils dependency from libbinder/AIDL, due to ashmem. Everything else has alternatives, but ashmem use doesn\u0027t. Also, this is super frustrating because all of the ashmem use added to Parcel is for things like writeBlob (complete inversion of dependencies, redundant API, and can only be used by hand-written interfaces) OR for getOpenAshmemSize (completely broken and meaningless API because it doesn\u0027t reflect actual memory usage, but I wasn\u0027t able to rip it out of notification tests...). I\u0027ve tried...",
      "parentUuid": "c343fec7_ea8602d2",
      "revId": "07f055d6984c560bfa75bea04a195e8ebe1b0b04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc51816d_a5f365cd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-06-08T16:45:13Z",
      "side": 1,
      "message": "isn\u0027t +jstultz ridding us of ashmem?",
      "parentUuid": "e7fb5607_4ed6d2f6",
      "revId": "07f055d6984c560bfa75bea04a195e8ebe1b0b04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d4c16db2_249d4241",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-06-08T17:01:39Z",
      "side": 1,
      "message": "The libcutils APIs currently use ashmem or memfd to back the ashmem APIs, and these APIs are used broadly by the platform, so regardless of whether the kernel interface is removed, a project that will take many years yet (and has had 3 previous owners), what we really depend on is the interaction with people that use the libcutils ashmem API.\n\nIf we really need to though, we probably could remove libcutils from cpp files in libbinder. Removing it from the headers is another story (and oh wait - ashmem and atrace - we need both...).",
      "parentUuid": "cc51816d_a5f365cd",
      "revId": "07f055d6984c560bfa75bea04a195e8ebe1b0b04",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}