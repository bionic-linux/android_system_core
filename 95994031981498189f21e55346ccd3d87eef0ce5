{
  "comments": [
    {
      "key": {
        "uuid": "a1c7c880_bc190da0",
        "filename": "init/property_service.h",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-10-25T21:27:59Z",
      "side": 1,
      "message": "rather than propagate this, can we just use const std::string\u0026 to carry around the length more cleanly? seems like the callers all just call strlen first anyway, so we may as well let std::string keep the length and data for us.",
      "range": {
        "startLine": 37,
        "startChar": 53,
        "endLine": 37,
        "endChar": 67
      },
      "revId": "95994031981498189f21e55346ccd3d87eef0ce5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1c7c880_3c6a9dc9",
        "filename": "init/property_service.h",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2016-10-25T21:49:17Z",
      "side": 1,
      "message": "We could, but, you would want to update everything in this file to std::string (which is a lot). Seems like we\u0027re starting to get out of scope with this CL.",
      "parentUuid": "a1c7c880_bc190da0",
      "range": {
        "startLine": 37,
        "startChar": 53,
        "endLine": 37,
        "endChar": 67
      },
      "revId": "95994031981498189f21e55346ccd3d87eef0ce5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1c7c880_7cfc95c7",
        "filename": "init/property_service.h",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-10-25T22:00:32Z",
      "side": 1,
      "message": "this is the only function we\u0027re touching now, so it\u0027s fine to just fix this one and leave the others until we have some reason to fix them.",
      "parentUuid": "a1c7c880_3c6a9dc9",
      "range": {
        "startLine": 37,
        "startChar": 53,
        "endLine": 37,
        "endChar": 67
      },
      "revId": "95994031981498189f21e55346ccd3d87eef0ce5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1c7c880_7f32470f",
        "filename": "init/property_service.h",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2016-10-26T00:01:38Z",
      "side": 1,
      "message": "Yes, but the problem is that if you just change this one thing to a std::string, we\u0027ll be making additional copies of property names (in two places). Example:\n\nbefore:\n\n    case PROP_MSG_SETPROP:\n        msg.name[PROP_NAME_MAX-1] \u003d 0;\n        msg.value[PROP_VALUE_MAX-1] \u003d 0;\n\n        if (!is_legal_property_name(msg.name, strlen(msg.name))) {\n             ...\n        }\n\nafter:\n\n    case PROP_MSG_SETPROP:\n        msg.name[PROP_NAME_MAX-1] \u003d 0;\n        msg.value[PROP_VALUE_MAX-1] \u003d 0;\n\n        std::string value(msg.name); // copies buffer\n\n        if (!is_legal_property_name(value)) {\n             ...\n        }\n\nThis corresponds to an additional allocation every time a property is set/updated and every time the epoll handler for property_service receives the message PROP_MSG_SETPROP.\n\nI\u0027m not sure what the performance requirements of property_service are, but reading the code, they look pretty tight (the extra string concatenation in service.cpp seemed a little more reasonable because the number of services that exist are far fewer).\n\nAre you sure you want me to make this change?",
      "parentUuid": "a1c7c880_7cfc95c7",
      "range": {
        "startLine": 37,
        "startChar": 53,
        "endLine": 37,
        "endChar": 67
      },
      "revId": "95994031981498189f21e55346ccd3d87eef0ce5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a1c7c880_ff0777f9",
        "filename": "init/property_service.h",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-10-26T00:16:20Z",
      "side": 1,
      "message": "you know that bug you were commenting on yesterday, about variable-length property support? this is that code. so it\u0027ll change to std::string sooner or later anyway :-)\n\n(and if Android ever needs to cope with a high rate of property updates, that code is going to need an even bigger rewrite because it\u0027s currently bottlenecked by the main init polling loop.)\n\nwe shouldn\u0027t take a bad private interface and make it public when we can just make it a clear interface instead.",
      "parentUuid": "a1c7c880_7f32470f",
      "range": {
        "startLine": 37,
        "startChar": 53,
        "endLine": 37,
        "endChar": 67
      },
      "revId": "95994031981498189f21e55346ccd3d87eef0ce5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}