{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "45410021_6beea4da",
        "filename": "libvendorsupport/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-01-03T08:09:35Z",
      "side": 1,
      "message": "I thought this is added by default?",
      "range": {
        "startLine": 34,
        "startChar": 8,
        "endLine": 34,
        "endChar": 15
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c6376c72_68b0fa05",
        "filename": "libvendorsupport/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2024-01-04T09:35:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "45410021_6beea4da",
      "range": {
        "startLine": 34,
        "startChar": 8,
        "endLine": 34,
        "endChar": 15
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "697f4d38_b469e779",
        "filename": "libvendorsupport/include/vendorsupport/api_level.h",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-01-03T08:09:35Z",
      "side": 1,
      "message": "In what places would this be used?",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 45
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8aa5461c_c7c93aa9",
        "filename": "libvendorsupport/include/vendorsupport/api_level.h",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2024-01-03T11:29:08Z",
      "side": 1,
      "message": "What I can recall is that the sepolicy is using this value before the vendor APIs are frozen (aosp/2867998).\nBut usually, we bump up the api level to the next version after api freeze, instead of setting it to the future value.",
      "parentUuid": "697f4d38_b469e779",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 45
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6662d7a1_4e09c28d",
        "filename": "libvendorsupport/include/vendorsupport/api_level.h",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-01-03T12:44:52Z",
      "side": 1,
      "message": "I can\u0027t remember why we have to use 100000.0 in sepolicy versions. @inseob@google.com could you remind me again?",
      "parentUuid": "8aa5461c_c7c93aa9",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 45
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da3039fe_c24c8c60",
        "filename": "libvendorsupport/include/vendorsupport/api_level.h",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2024-01-04T01:07:07Z",
      "side": 1,
      "message": "I\u0027m not sure about the exact question, but vFRC version will be in the format \"YYYYMM\", and IIRC we decided to use `1000000` (greater than 9999\u002799) as a new ToT, instead of `10000`.",
      "parentUuid": "6662d7a1_4e09c28d",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 45
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b38929e_1437c883",
        "filename": "libvendorsupport/include/vendorsupport/api_level.h",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-01-04T09:06:42Z",
      "side": 1,
      "message": "The real question is why would we even need to have a concept of \"future\" version in sepolicy.",
      "parentUuid": "da3039fe_c24c8c60",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 45
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b7cd8f38_f15cec94",
        "filename": "libvendorsupport/include/vendorsupport/api_level.h",
        "patchSetId": 1
      },
      "lineNbr": 19,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2024-01-04T09:35:03Z",
      "side": 1,
      "message": "I renamed the FUTURE with MAX to show that it is not for future api level.",
      "parentUuid": "9b38929e_1437c883",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 45
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "209a69b2_345a9557",
        "filename": "libvendorsupport/include/vendorsupport/api_level.h",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-01-03T08:09:35Z",
      "side": 1,
      "message": "Can we just let users use 202404 directly?",
      "range": {
        "startLine": 25,
        "startChar": 8,
        "endLine": 25,
        "endChar": 35
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca4f60c9_550411fb",
        "filename": "libvendorsupport/include/vendorsupport/api_level.h",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2024-01-03T11:29:08Z",
      "side": 1,
      "message": "Do you mean to remove this definition and use 202404 to each code directly?\nI still think using constants is safer way than using direct number to avoid any typos.",
      "parentUuid": "209a69b2_345a9557",
      "range": {
        "startLine": 25,
        "startChar": 8,
        "endLine": 25,
        "endChar": 35
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c1d95b8_06cdb357",
        "filename": "libvendorsupport/include/vendorsupport/api_level.h",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-01-03T12:44:52Z",
      "side": 1,
      "message": "But you also used numeric literals in the source code below. ðŸ˜Š\n\nIf 202404 has a special meaning (as it\u0027s the first vendor API level which diverged from SDK API level), name it accordingly; for example, `FIRST_VENDOR_API_LEVEL_WITH_YYYYMM_FORMAT` or similar.",
      "parentUuid": "ca4f60c9_550411fb",
      "range": {
        "startLine": 25,
        "startChar": 8,
        "endLine": 25,
        "endChar": 35
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "984982c5_2ae2ef28",
        "filename": "libvendorsupport/include/vendorsupport/api_level.h",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-01-03T21:51:34Z",
      "side": 1,
      "message": "my \"literals are better than names\" argument from the NDK side of things is \"it\u0027s a lot easier to backport/forward port literals, plus you don\u0027t get screwed when marketing decides to change the format of the names\". the NDK constants now mean we have a _third_ incompatible versioning scheme that no-one but us is really still using. whereas if we\u0027d just used the raw api levels all along, we\u0027d have one less problem...",
      "parentUuid": "4c1d95b8_06cdb357",
      "range": {
        "startLine": 25,
        "startChar": 8,
        "endLine": 25,
        "endChar": 35
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3a10a2a2_d1fa5b63",
        "filename": "libvendorsupport/include/vendorsupport/api_level.h",
        "patchSetId": 1
      },
      "lineNbr": 25,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2024-01-04T09:35:03Z",
      "side": 1,
      "message": "Removed it and replaced with the literals.",
      "parentUuid": "984982c5_2ae2ef28",
      "range": {
        "startLine": 25,
        "startChar": 8,
        "endLine": 25,
        "endChar": 35
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d9fd2fa_3470d532",
        "filename": "libvendorsupport/version_props.c",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-01-03T08:09:35Z",
      "side": 1,
      "message": "why one would want to call `vendor_api_level_of(__ANDROID_API_FUTURE__)`?",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 28,
        "endChar": 41
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27a16bb2_acd4094f",
        "filename": "libvendorsupport/version_props.c",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2024-01-03T11:29:08Z",
      "side": 1,
      "message": "This is used when comparing ro.product.shipping_api_level and ro.board.api_level.\nIn case of missing shipping api_level, it will return the maximum value.",
      "parentUuid": "1d9fd2fa_3470d532",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 28,
        "endChar": 41
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4637f77e_f6720175",
        "filename": "libvendorsupport/version_props.c",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-01-03T12:44:52Z",
      "side": 1,
      "message": "the case of missing shipping api_level could be handled at the call site, not in this function.",
      "parentUuid": "27a16bb2_acd4094f",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 28,
        "endChar": 41
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f81e403b_a510f5f1",
        "filename": "libvendorsupport/version_props.c",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2024-01-04T09:35:03Z",
      "side": 1,
      "message": "We still need this conversion to handle `__ANDROID_API_FUTURE__`, for example, \nhttps://cs.android.com/android/platform/superproject/main/+/main:system/core/init/property_service.cpp;l\u003d1119?q\u003dproperty_initialize_ro_vendor_api_level\nLet me rename the vendor version to `__ANDROID_VENDOR_API_MAX__` instead.",
      "parentUuid": "4637f77e_f6720175",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 28,
        "endChar": 41
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "94682ad4_8b84f988",
        "filename": "libvendorsupport/version_props.c",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-01-04T12:26:25Z",
      "side": 1,
      "message": "hold on. When can ro.product.first_api_level be ANDROID_API_FUTURE? Isn\u0027t it supposed to be set to a sensible value (other than 10000) always?",
      "parentUuid": "f81e403b_a510f5f1",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 28,
        "endChar": 41
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25ae2d4e_fc4f3f58",
        "filename": "libvendorsupport/version_props.c",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2024-01-05T04:40:51Z",
      "side": 1,
      "message": "Yes, that\u0027s true. I don\u0027t mean to show you that the shipping api level can be ANDROID_API_FUTURE but we still can have ANDROID_API_FUTURE for the sdk version and that can be converted to the vendor api level to compare with.",
      "parentUuid": "94682ad4_8b84f988",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 28,
        "endChar": 41
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d371e784_00094551",
        "filename": "libvendorsupport/version_props.c",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-01-05T09:27:14Z",
      "side": 1,
      "message": "I wish we can prohibit the need to convert ANDROID_API_FUTURE into vendor api level. From what you said, it looks like there\u0027s no such place at the moment, right? Then can we assert that somehow?",
      "parentUuid": "25ae2d4e_fc4f3f58",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 28,
        "endChar": 41
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6181fb2f_e509ccbd",
        "filename": "libvendorsupport/version_props.c",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-01-03T08:09:35Z",
      "side": 1,
      "message": "I think we should return a nonsense value here.",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 37,
        "endChar": 38
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "474babab_6b4bd82c",
        "filename": "libvendorsupport/version_props.c",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2024-01-03T11:29:08Z",
      "side": 1,
      "message": "Let me define a negative value to use here.",
      "parentUuid": "6181fb2f_e509ccbd",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 37,
        "endChar": 38
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "59487b94_b7b38b1f",
        "filename": "libvendorsupport/version_props.c",
        "patchSetId": 1
      },
      "lineNbr": 37,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2024-01-04T09:35:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "474babab_6b4bd82c",
      "range": {
        "startLine": 37,
        "startChar": 0,
        "endLine": 37,
        "endChar": 38
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2d56a1ac_4b47857b",
        "filename": "libvendorsupport/version_props.c",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-01-03T08:09:35Z",
      "side": 1,
      "message": "Why would one want to call `sdk_api_level_of(1000000)`?",
      "range": {
        "startLine": 42,
        "startChar": 4,
        "endLine": 42,
        "endChar": 34
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4069ebc8_2e069982",
        "filename": "libvendorsupport/version_props.c",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2024-01-03T11:29:08Z",
      "side": 1,
      "message": "Same here. This is to compare sdk and vendor worlds with the simple conversion.",
      "parentUuid": "2d56a1ac_4b47857b",
      "range": {
        "startLine": 42,
        "startChar": 4,
        "endLine": 42,
        "endChar": 34
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77b86685_a31ea17f",
        "filename": "libvendorsupport/version_props.c",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-01-03T12:44:52Z",
      "side": 1,
      "message": "I would rather make it an error to discourage the use of \"future\" API levels.",
      "parentUuid": "4069ebc8_2e069982",
      "range": {
        "startLine": 42,
        "startChar": 4,
        "endLine": 42,
        "endChar": 34
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "145c10f2_6e735f49",
        "filename": "libvendorsupport/version_props.c",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2024-01-04T09:35:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "77b86685_a31ea17f",
      "range": {
        "startLine": 42,
        "startChar": 4,
        "endLine": 42,
        "endChar": 34
      },
      "revId": "275bc09a3aaa052d1c5e86807d958b332025443a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}