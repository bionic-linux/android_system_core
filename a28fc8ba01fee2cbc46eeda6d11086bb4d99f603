{
  "comments": [
    {
      "key": {
        "uuid": "8240dd43_99a6bf83",
        "filename": "adb/sysdeps_win32.cpp",
        "patchSetId": 2
      },
      "lineNbr": 718,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2016-02-18T22:30:29Z",
      "side": 1,
      "message": "Hmm, good fix, I don\u0027t know why I didn\u0027t do this in the first place. The one weirdness is that if errno is set here, _fh_socket_close() returns 0 and adb_close() ignores that and returns 0 itself. So adb_close() is \"wrong\" in the sense that it may set errno even when 0 is returned.\n\nBut this is very, very corner case and in practice probably pointless, so I\u0027ll leave it up to you to ignore this or open a bug, etc.",
      "range": {
        "startLine": 718,
        "startChar": 12,
        "endLine": 718,
        "endChar": 34
      },
      "revId": "a28fc8ba01fee2cbc46eeda6d11086bb4d99f603",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "620e892a_cb0355f0",
        "filename": "adb/sysdeps_win32.cpp",
        "patchSetId": 2
      },
      "lineNbr": 718,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2016-02-18T23:27:21Z",
      "side": 1,
      "message": "I was blindly grepping for WSAGetLastError to look for spots where we weren\u0027t setting errno. I went ahead and removed this (and added a comment saying that not setting errno was intentional).\n\nIn practice I think you\u0027re right that this doesn\u0027t matter, though. Outside of tests, we check the result of adb_close in exactly one place, and all we do is log. I actually think we should make adb_close return void. On linux, if you pass it a valid FD, close will always succeed (even if it returns failure!) See http://lkml.iu.edu/hypermail/linux/kernel/0207.2/0409.html for more info.",
      "parentUuid": "8240dd43_99a6bf83",
      "range": {
        "startLine": 718,
        "startChar": 12,
        "endLine": 718,
        "endChar": 34
      },
      "revId": "a28fc8ba01fee2cbc46eeda6d11086bb4d99f603",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2199973_d6c0a29f",
        "filename": "adb/sysdeps_win32.cpp",
        "patchSetId": 2
      },
      "lineNbr": 914,
      "author": {
        "id": 1078119
      },
      "writtenOn": "2016-02-18T22:46:28Z",
      "side": 1,
      "message": "It\u0027s weird that clang-format goes over 100 lines for curly braces, I\u0027ve noticed it doing that for me as well. Is that a clang-format bug?\n\nNot necessarily something you need to fix here, just wanted to point it out.",
      "range": {
        "startLine": 914,
        "startChar": 0,
        "endLine": 914,
        "endChar": 101
      },
      "revId": "a28fc8ba01fee2cbc46eeda6d11086bb4d99f603",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6243e950_1889a9e2",
        "filename": "adb/sysdeps_win32.cpp",
        "patchSetId": 2
      },
      "lineNbr": 914,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2016-02-18T22:50:55Z",
      "side": 1,
      "message": "clang-format is like TeX, it has a formula for determining how bad it is to go over the column limit compared to inserting a line break. I know for a fact that our clang-format style file is not exactly correct, though. (Speaking of which, I\u0027ll upload a CL to fix the access modifier dedent now)",
      "parentUuid": "e2199973_d6c0a29f",
      "range": {
        "startLine": 914,
        "startChar": 0,
        "endLine": 914,
        "endChar": 101
      },
      "revId": "a28fc8ba01fee2cbc46eeda6d11086bb4d99f603",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}