{
  "comments": [
    {
      "key": {
        "uuid": "a4fb1585_6d9ca34a",
        "filename": "crash_reporter/crash_reporter.cc",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1076138
      },
      "writtenOn": "2015-08-19T21:25:56Z",
      "side": 1,
      "message": "Given that you\u0027re already using libchromeos, can you use chromeos::Process?",
      "range": {
        "startLine": 82,
        "startChar": 1,
        "endLine": 103,
        "endChar": 1
      },
      "revId": "d575b3c779e412b2666b047d3bddb76f65e81a62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "64591d73_72a3c7fb",
        "filename": "crash_reporter/crash_reporter.cc",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1076778
      },
      "writtenOn": "2015-08-19T21:55:29Z",
      "side": 1,
      "message": "My first implementation, I used chromeos::ProcessImpl to run the command.  However the code wound up being messier than I liked.  The issue wound up being, calling process.Run() blocks here until the process finishes.  Calling process.Start() instead allows it to not block, however if nothing calls process.Wait(), once crash_reporter finishes running it quits the process without it finishing, which in practice happens before dbus-send can actually send the signal.  The way around that, then would be to store the process in the class and call process.Wait() at the very end of execution... however the way the different collectors calls are structured, this CountUserCrash function is stored as a function pointer and called in several different locations based on the collector.  Modifying each collector to handle that independently from each other was much messier and harder to follow/read, than using vfork+execve which is all self-contained.",
      "parentUuid": "a4fb1585_6d9ca34a",
      "range": {
        "startLine": 82,
        "startChar": 1,
        "endLine": 103,
        "endChar": 1
      },
      "revId": "d575b3c779e412b2666b047d3bddb76f65e81a62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e4aeed64_9a032f85",
        "filename": "crash_reporter/crash_reporter.cc",
        "patchSetId": 2
      },
      "lineNbr": 103,
      "author": {
        "id": 1076138
      },
      "writtenOn": "2015-08-19T22:03:20Z",
      "side": 1,
      "message": "But you\u0027re not wait()ing on the child here, are you?\n\nAlso, why vfork and not regular fork?",
      "parentUuid": "64591d73_72a3c7fb",
      "range": {
        "startLine": 82,
        "startChar": 1,
        "endLine": 103,
        "endChar": 1
      },
      "revId": "d575b3c779e412b2666b047d3bddb76f65e81a62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}