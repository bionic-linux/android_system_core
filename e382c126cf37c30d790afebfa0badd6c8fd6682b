{
  "comments": [
    {
      "key": {
        "uuid": "ea41b9ca_edaf5329",
        "filename": "fs_mgr/libdm/dm.cpp",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-06-12T20:10:57Z",
      "side": 1,
      "message": "What is this function going to do?  Delete the physical /dev/block/dm-# node?  You only want that done when this function is explicitly called, not every time when a unique_ptr is destructed, right?  That would make sense to me.\n\nIn any case, the change I actually am requesting is that this takes std::unique_ptr as well.  `delete dev` doesn\u0027t make sense here as you\u0027re creating the DmDevice with a unique_ptr, and you should make this function a sink for it, otherwise you\u0027re going to have the contents of the unique_ptr who\u0027s dev you reference here in a bad state.",
      "range": {
        "startLine": 47,
        "startChar": 32,
        "endLine": 47,
        "endChar": 45
      },
      "revId": "e382c126cf37c30d790afebfa0badd6c8fd6682b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8b8e0f3_6cc6c390",
        "filename": "fs_mgr/libdm/dm.cpp",
        "patchSetId": 4
      },
      "lineNbr": 47,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2018-06-12T21:37:12Z",
      "side": 1,
      "message": "\u003e What is this function going to do?  Delete the physical /dev/block/dm-# node?  \nThats the side-effect, but what this does call DM_DEV_REMOVE and removes the device from device-mapper.\nThe /dev/dm-X (which gets created after DM_DEV_CREATE) is dormant when created and will always return -EIO until its successfully resumed by loading a working table.\n\nThat said, the delete device question is the one I asked dvander@ in previous patchset. We wanted the property of ~DmDevice() deleting a dormant /dev/dm-X automatically. However, the \"delete device\" is a function of device mapper control and not the device itself. \n\nThe classes currently reflect (losely) how kernel handles this. So, I probably will move the loadTable() and getTable() out of DmDevice() into DeviceMapper() class as well.\n\nIn kernel - \n\n/dev/device-mapper - Does device mapper control (For example: add, remove, status, list, loadtable, readtable operations on a dm-device (/dev/dm-X) _and_ Also list device mapper targets or pass target specific messages via ioctl)\n/dev/dm-X - Nothing but a block device and has zero knowledge about device mapper itself.\n(Internals)\nThere\u0027s a 1:1 mapping between /dev/dm-X and Table that is maintained by device-mapper, where - \ntable - can have multiple targets, each target has target specific parameters and configuration.\n\n(let me talk offline)",
      "parentUuid": "ea41b9ca_edaf5329",
      "range": {
        "startLine": 47,
        "startChar": 32,
        "endLine": 47,
        "endChar": 45
      },
      "revId": "e382c126cf37c30d790afebfa0badd6c8fd6682b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c37bcffe_dfd493dd",
        "filename": "fs_mgr/libdm/dm.cpp",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-06-12T20:13:24Z",
      "side": 1,
      "message": "nit: manifest define or constexpr",
      "range": {
        "startLine": 64,
        "startChar": 17,
        "endLine": 64,
        "endChar": 20
      },
      "revId": "e382c126cf37c30d790afebfa0badd6c8fd6682b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4a422cb_5547de32",
        "filename": "fs_mgr/libdm/dm.cpp",
        "patchSetId": 4
      },
      "lineNbr": 64,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2018-06-12T23:11:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c37bcffe_dfd493dd",
      "range": {
        "startLine": 64,
        "startChar": 17,
        "endLine": 64,
        "endChar": 20
      },
      "revId": "e382c126cf37c30d790afebfa0badd6c8fd6682b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18c87b77_fdf07189",
        "filename": "fs_mgr/libdm/dm.cpp",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-06-12T20:14:34Z",
      "side": 1,
      "message": "This differs from the default class initialization of 0,0,0 ?",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 76,
        "endChar": 23
      },
      "revId": "e382c126cf37c30d790afebfa0badd6c8fd6682b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f682ed8_ad57022c",
        "filename": "fs_mgr/libdm/dm.cpp",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2018-06-12T21:37:12Z",
      "side": 1,
      "message": "This represents the device mapper version and not the device mapper target version that the class has. DeviceMapper() doesn\u0027t have the version at all in this case.",
      "parentUuid": "18c87b77_fdf07189",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 76,
        "endChar": 23
      },
      "revId": "e382c126cf37c30d790afebfa0badd6c8fd6682b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c66342d1_f3636f70",
        "filename": "fs_mgr/libdm/dm.cpp",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-06-12T20:13:24Z",
      "side": 1,
      "message": "PLOG",
      "range": {
        "startLine": 79,
        "startChar": 8,
        "endLine": 79,
        "endChar": 11
      },
      "revId": "e382c126cf37c30d790afebfa0badd6c8fd6682b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14a52ada_4fca8d84",
        "filename": "fs_mgr/libdm/dm.cpp",
        "patchSetId": 4
      },
      "lineNbr": 79,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2018-06-12T23:11:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c66342d1_f3636f70",
      "range": {
        "startLine": 79,
        "startChar": 8,
        "endLine": 79,
        "endChar": 11
      },
      "revId": "e382c126cf37c30d790afebfa0badd6c8fd6682b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a52e8546_4b02d570",
        "filename": "fs_mgr/libdm/dm_device.cpp",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-06-12T20:10:57Z",
      "side": 1,
      "message": "These can (and should) all just be inlined in the header file too.",
      "revId": "e382c126cf37c30d790afebfa0badd6c8fd6682b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95f5d55e_bab51ef0",
        "filename": "fs_mgr/libdm/dm_device.cpp",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2018-06-12T23:11:26Z",
      "side": 1,
      "message": "deleting this anyway, so will have the stub implementation in .cpp for DeviceMapper class. They all will be filled with appropriate kernel ioctls",
      "parentUuid": "a52e8546_4b02d570",
      "revId": "e382c126cf37c30d790afebfa0badd6c8fd6682b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96561d00_1a98759f",
        "filename": "fs_mgr/tools/.clang-format",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-06-12T20:10:57Z",
      "side": 1,
      "message": "Drop this too?",
      "revId": "e382c126cf37c30d790afebfa0badd6c8fd6682b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb01e459_43254034",
        "filename": "fs_mgr/tools/.clang-format",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-06-12T20:13:24Z",
      "side": 1,
      "message": "ditto on removal",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 21
      },
      "revId": "e382c126cf37c30d790afebfa0badd6c8fd6682b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "372c17a7_222a42e9",
        "filename": "fs_mgr/tools/.clang-format",
        "patchSetId": 4
      },
      "lineNbr": 1,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2018-06-12T23:11:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eb01e459_43254034",
      "range": {
        "startLine": 1,
        "startChar": 0,
        "endLine": 1,
        "endChar": 21
      },
      "revId": "e382c126cf37c30d790afebfa0badd6c8fd6682b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "600152d3_c98d1ac0",
        "filename": "fs_mgr/tools/dmctl.cpp",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-06-12T20:10:57Z",
      "side": 1,
      "message": "You don\u0027t have to make this change, but I\u0027m typically against typedefs.  (https://google.github.io/styleguide/cppguide.html#Aliases agrees that local typedefs aren\u0027t good).\n\nIn this case specifically, CommandHandler is only referenced once, so it\u0027s more clear to just use the contents inline than have the typedef.",
      "revId": "e382c126cf37c30d790afebfa0badd6c8fd6682b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fda01488_c01aa15a",
        "filename": "fs_mgr/tools/dmctl.cpp",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2018-06-12T23:11:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "600152d3_c98d1ac0",
      "revId": "e382c126cf37c30d790afebfa0badd6c8fd6682b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}