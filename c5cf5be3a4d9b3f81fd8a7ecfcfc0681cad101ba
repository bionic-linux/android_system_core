{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "22203699_b1d2e2f9",
        "filename": "libvndksupport/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-11-03T08:08:03Z",
      "side": 1,
      "message": "Let\u0027s use `bool`",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 42,
        "endChar": 3
      },
      "revId": "c5cf5be3a4d9b3f81fd8a7ecfcfc0681cad101ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "64a9cc93_e10b422d",
        "filename": "libvndksupport/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2023-11-06T07:21:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "22203699_b1d2e2f9",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 42,
        "endChar": 3
      },
      "revId": "c5cf5be3a4d9b3f81fd8a7ecfcfc0681cad101ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f43f22e_338738e3",
        "filename": "libvndksupport/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-11-03T16:09:34Z",
      "side": 1,
      "message": "wouldn\u0027t a readlink on /proc/self/exe make more sense/be less unreliable?",
      "revId": "c5cf5be3a4d9b3f81fd8a7ecfcfc0681cad101ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6c225f2a_7d19cd55",
        "filename": "libvndksupport/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2023-11-06T02:07:08Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "7f43f22e_338738e3",
      "revId": "c5cf5be3a4d9b3f81fd8a7ecfcfc0681cad101ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1033f3ac_30e5b1c3",
        "filename": "libvndksupport/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2023-11-06T07:21:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6c225f2a_7d19cd55",
      "revId": "c5cf5be3a4d9b3f81fd8a7ecfcfc0681cad101ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "62d70094_cde45005",
        "filename": "libvndksupport/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-11-03T08:08:03Z",
      "side": 1,
      "message": "Can you elaborate the reasoning of this?",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 17
      },
      "revId": "c5cf5be3a4d9b3f81fd8a7ecfcfc0681cad101ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c118e047_8a1260b6",
        "filename": "libvndksupport/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2023-11-06T07:21:35Z",
      "side": 1,
      "message": "I don\u0027t think there is no answer for which value should be used in case of failure. I just assumed that consider as vendor process would be less critical(?).",
      "parentUuid": "62d70094_cde45005",
      "range": {
        "startLine": 50,
        "startChar": 0,
        "endLine": 51,
        "endChar": 17
      },
      "revId": "c5cf5be3a4d9b3f81fd8a7ecfcfc0681cad101ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "07d416b8_2e45c0c3",
        "filename": "libvndksupport/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-11-03T08:08:03Z",
      "side": 1,
      "message": "Let\u0027s use libbase\u0027s ReadFileToString or similar. AFAIK, C++ fstream is not recommended in AOSP?. (btw, can\u0027t find a reference)",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 90
      },
      "revId": "c5cf5be3a4d9b3f81fd8a7ecfcfc0681cad101ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "528dac0e_cc258561",
        "filename": "libvndksupport/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2023-11-06T07:21:35Z",
      "side": 1,
      "message": "I can find ifstream is being used from many other places (including linkerconfig). Can you please give me any doc or related guide if possible? std::getline gives more readability on the code in this case, so I\u0027d like to use std::getline if possible.",
      "parentUuid": "07d416b8_2e45c0c3",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 90
      },
      "revId": "c5cf5be3a4d9b3f81fd8a7ecfcfc0681cad101ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "556ef541_18ed999c",
        "filename": "libvndksupport/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-11-06T09:46:31Z",
      "side": 1,
      "message": "Yifan mentioned it in some review. https://android-review.git.corp.google.com/c/platform/system/libvintf/+/2318110/comment/4c03b91c_e1469f6b/\n\n\u003e Please use android::base::ReadFileToString or friends. ifstream may throw exceptions on I/O error.\n\nBut I can\u0027t find any reference either. Probably, it\u0027s outdated.",
      "parentUuid": "528dac0e_cc258561",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 90
      },
      "revId": "c5cf5be3a4d9b3f81fd8a7ecfcfc0681cad101ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ac90242a_21991782",
        "filename": "libvndksupport/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-11-03T08:08:03Z",
      "side": 1,
      "message": "This should be more explicit. One apex name can be a prefix of another. We can avoid that by appending \"/bin/\"?",
      "range": {
        "startLine": 65,
        "startChar": 12,
        "endLine": 65,
        "endChar": 68
      },
      "revId": "c5cf5be3a4d9b3f81fd8a7ecfcfc0681cad101ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b174223c_c4cc3ae2",
        "filename": "libvndksupport/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 65,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2023-11-06T07:21:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ac90242a_21991782",
      "range": {
        "startLine": 65,
        "startChar": 12,
        "endLine": 65,
        "endChar": 68
      },
      "revId": "c5cf5be3a4d9b3f81fd8a7ecfcfc0681cad101ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d3e9996f_a525fcd5",
        "filename": "libvndksupport/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-11-03T08:08:03Z",
      "side": 1,
      "message": "use libbase.",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 82
      },
      "revId": "c5cf5be3a4d9b3f81fd8a7ecfcfc0681cad101ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01d657e1_f4415976",
        "filename": "libvndksupport/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2023-11-06T07:21:35Z",
      "side": 1,
      "message": "This case more fits with ifstream, because it does not need to read all contents of ld.config.txt.",
      "parentUuid": "d3e9996f_a525fcd5",
      "range": {
        "startLine": 74,
        "startChar": 0,
        "endLine": 74,
        "endChar": 82
      },
      "revId": "c5cf5be3a4d9b3f81fd8a7ecfcfc0681cad101ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc32503e_833868ec",
        "filename": "libvndksupport/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-11-03T08:08:03Z",
      "side": 1,
      "message": "Parsing ld.config.txt seems to lead a tight coupling to linkerconfig\u0027s implementation, which IIRC is something we want to avoid.\n\nCan we reuse existing code from bionic linker?",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 104,
        "endChar": 5
      },
      "revId": "c5cf5be3a4d9b3f81fd8a7ecfcfc0681cad101ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78d53fd9_d4d4725c",
        "filename": "libvndksupport/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2023-11-06T07:21:35Z",
      "side": 1,
      "message": "I considered that, but I felt it would be a bit more complex to share partial code, as this part uses very partial of bionic linker config parser.",
      "parentUuid": "cc32503e_833868ec",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 104,
        "endChar": 5
      },
      "revId": "c5cf5be3a4d9b3f81fd8a7ecfcfc0681cad101ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f56bfee_43030de4",
        "filename": "libvndksupport/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-11-06T09:46:31Z",
      "side": 1,
      "message": "Acknowledged. But then we might need more unit tests.",
      "parentUuid": "78d53fd9_d4d4725c",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 104,
        "endChar": 5
      },
      "revId": "c5cf5be3a4d9b3f81fd8a7ecfcfc0681cad101ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fea2175a_fc08cbc2",
        "filename": "libvndksupport/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2023-11-03T08:08:03Z",
      "side": 1,
      "message": "Let\u0027s cast explicitly to `int`",
      "range": {
        "startLine": 125,
        "startChar": 11,
        "endLine": 125,
        "endChar": 31
      },
      "revId": "c5cf5be3a4d9b3f81fd8a7ecfcfc0681cad101ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "793e74ea_4f8c9e31",
        "filename": "libvndksupport/linker.cpp",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2023-11-06T07:21:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fea2175a_fc08cbc2",
      "range": {
        "startLine": 125,
        "startChar": 11,
        "endLine": 125,
        "endChar": 31
      },
      "revId": "c5cf5be3a4d9b3f81fd8a7ecfcfc0681cad101ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}