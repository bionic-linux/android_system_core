{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2fca313b_592a4406",
        "filename": "libpackagelistparser/include/packagelistparser/packagelistparser.h",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1480715
      },
      "writtenOn": "2024-04-26T17:19:34Z",
      "side": 1,
      "message": "Looks like this is also an unsigned int? Would it make sense to change it to an int (which probably means changing `__kernel_uid32_t` as well)?",
      "range": {
        "startLine": 40,
        "startChar": 2,
        "endLine": 40,
        "endChar": 7
      },
      "revId": "6e774bae19bc8d92e1cb714237df43287eaba00d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c3f3f4c4_a47fb576",
        "filename": "libpackagelistparser/include/packagelistparser/packagelistparser.h",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-04-26T17:40:58Z",
      "side": 1,
      "message": "if you mean \"would it make sense to change the underlying type of `uid_t`?\", no, we can\u0027t change libc abi. (for example, this would change the mangling of C++ functions that use `uid_t`.)\n\nif you mean \"would it make sense to change the type of this field in pkg_info?\", given its [lack of] visibility, that would probably fine from the abi perspective, but it would be wrong from a logical perspective unless there\u0027s already some guarantee elsewhere that we never used any of the two billion uids between INT_MAX and UINT_MAX. existing code with comparisons would change its meaning.\n\nand these _are_ unix uids, right? you just happen to have taken the value that\u0027s usually used to signify \"error\" and reused it to mean \"apex\"? (insert joke here :-) ) so `uid_t` is the appropriate intention-revealing type. if this were a c++ api, `std::optional\u003cuid_t\u003e` might make sense, but given that you\u0027re already using -1 in the serialization format...\n\nlooking at the callers in cs/, the places that use this field all seem to be using it for comparisons with uids they got from other places (such as stat(2)), which is another argument that `uid_t` is the right type.\n\nthe good news about that is that they won\u0027t care, since -1 is kind-of reserved in practice --- i don\u0027t think there are any syscalls that will _return_ -1 for a `uid_t` (getuid(2), say, cannot fail, so it doesn\u0027t need -1 for error reporting), but there are functions that take `uid_t`s as _input_ and interpret -1 as \"leave this alone\". so chown(2), for example, given -1 as the uid will just set the group and leave the owner alone.\n\nso i don\u0027t think using -1 for apexes is likely to break anything other than \"must be a valid uid\" tests like this :-)",
      "parentUuid": "2fca313b_592a4406",
      "range": {
        "startLine": 40,
        "startChar": 2,
        "endLine": 40,
        "endChar": 7
      },
      "revId": "6e774bae19bc8d92e1cb714237df43287eaba00d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bafa16a8_8e7e75bf",
        "filename": "libpackagelistparser/include/packagelistparser/packagelistparser.h",
        "patchSetId": 1
      },
      "lineNbr": 40,
      "author": {
        "id": 1480715
      },
      "writtenOn": "2024-04-26T18:07:55Z",
      "side": 1,
      "message": "Oh wow, thank you so much for the detailed explanation. I didn\u0027t realize that these are unix uids. It makes sense to to change the type. I wasn\u0027t aware of the potential consequences here of letting apex/sdk-libraries of having a UID of -1. It\u0027s good to know that side effect seems to be small after all... Thanks for the detailed explanation!",
      "parentUuid": "c3f3f4c4_a47fb576",
      "range": {
        "startLine": 40,
        "startChar": 2,
        "endLine": 40,
        "endChar": 7
      },
      "revId": "6e774bae19bc8d92e1cb714237df43287eaba00d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}