{
  "comments": [
    {
      "key": {
        "uuid": "a7ceb7a1_94d62436",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2015-08-08T22:26:04Z",
      "side": 1,
      "message": "An alternative would be the following in sysdeps.h:\n\n#ifdef _WIN32\ntypedef HANDLE NativeFd;\nconst NativeFd kInvalidNativeFd \u003d INVALID_HANDLE_VALUE;\n#else\ntypedef int NativeFd;\nconst NativeFd kInvalidNativeFd \u003d -1;\n#endif\n\nBut this would also require making adb.h #include sysdeps.h, plus minadbd would need to update its signature of adb_main, etc. Seems like a real pain. I actually prototyped this first, but it seemed more messy.",
      "range": {
        "startLine": 9,
        "startChar": 63,
        "endLine": 11,
        "endChar": 8
      },
      "revId": "5c398d2ce96150e94e596e959bfe2246b94de660",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87c9b39e_f3d7b034",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 13,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2015-08-08T22:26:04Z",
      "side": 1,
      "message": "You may be wondering who uses this. I\u0027m not sure, but my best guess is that maybe Intel does/used-to use this mode because it is the only way to pass -a to adb to get it to listen on all interfaces. See d7b33085117ccbb908a883f624cb1fe5495ee92a . Basically, -a is broken for adb start-server/server and I think only works for adb server nodaemon and adb server fork-server (which no one in their right mind should run manually).",
      "range": {
        "startLine": 13,
        "startChar": 31,
        "endLine": 13,
        "endChar": 50
      },
      "revId": "5c398d2ce96150e94e596e959bfe2246b94de660",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87c9b39e_e8f69784",
        "filename": "adb/adb.cpp",
        "patchSetId": 1
      },
      "lineNbr": 650,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-08-11T01:38:19Z",
      "side": 1,
      "message": "should we just use intptr_t instead?",
      "revId": "5c398d2ce96150e94e596e959bfe2246b94de660",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7cf2b9d_a47d6c59",
        "filename": "adb/adb.cpp",
        "patchSetId": 1
      },
      "lineNbr": 650,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2015-08-11T02:32:56Z",
      "side": 1,
      "message": "It\u0027s your call. I think I started to prototype this and found that I had to change the strtol to strtoll, but only on 64-bit, change sprintf to %zd, cast at some point from intptr_t to int (for unix), change minadbd, etc. Basically, it was still a mess, so it didn\u0027t seem any better. But it\u0027s your codebase, so I\u0027m open to suggestions.",
      "parentUuid": "87c9b39e_e8f69784",
      "revId": "5c398d2ce96150e94e596e959bfe2246b94de660",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67e67f2a_f2d7a834",
        "filename": "adb/adb.cpp",
        "patchSetId": 1
      },
      "lineNbr": 658,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2015-08-08T22:26:04Z",
      "side": 1,
      "message": "FYI, this whole function has some handle leaks that I hope to fixup with a ScopedHandle-style class later.",
      "range": {
        "startLine": 658,
        "startChar": 8,
        "endLine": 658,
        "endChar": 18
      },
      "revId": "5c398d2ce96150e94e596e959bfe2246b94de660",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "87c9b39e_88e603d3",
        "filename": "adb/adb.cpp",
        "patchSetId": 1
      },
      "lineNbr": 663,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-08-11T01:38:19Z",
      "side": 1,
      "message": "i\u0027m regretting the name \"--reply-fd\" at this point, but i can\u0027t really think of a better name (other than having two different names for Unix and Windows).",
      "revId": "5c398d2ce96150e94e596e959bfe2246b94de660",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67e67f2a_616080af",
        "filename": "adb/adb.cpp",
        "patchSetId": 1
      },
      "lineNbr": 663,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2015-08-11T02:32:56Z",
      "side": 1,
      "message": "I wouldn\u0027t worry about the name too much since this is all internal anyway. BTW, I actually did investigate passing a C Runtime \u0027fd\u0027 on Windows between processes. It is possible, but would require switching from CreateProcess() to spawn() (a C Runtime wrapper on top of CreateProcess) and that would cause some problems with capturing stdout/stderr because of the way the C Runtime behaves with detached processes. Basically, it was just easier to pass raw Windows handles between processes.",
      "parentUuid": "87c9b39e_88e603d3",
      "revId": "5c398d2ce96150e94e596e959bfe2246b94de660",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47e97bf9_91d61c36",
        "filename": "adb/client/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2015-08-08T22:26:04Z",
      "side": 1,
      "message": "I found it lower-impact to just call WriteFile(). The alternative seems messier: call the esoteric _open_osfhandle() to make a fd that works with android::base::WriteStringToFd() and unix_close(). Plus, then we\u0027d have to be careful if WriteStringToFd() is modified in the future to work with fds from sysdeps. Just way simpler to just WriteFile here, IMO. I\u0027m open to input.",
      "range": {
        "startLine": 167,
        "startChar": 13,
        "endLine": 167,
        "endChar": 22
      },
      "revId": "5c398d2ce96150e94e596e959bfe2246b94de660",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c7cf2b9d_8482700b",
        "filename": "adb/client/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 167,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-08-11T01:38:19Z",
      "side": 1,
      "message": "sgtm.",
      "parentUuid": "47e97bf9_91d61c36",
      "range": {
        "startLine": 167,
        "startChar": 13,
        "endLine": 167,
        "endChar": 22
      },
      "revId": "5c398d2ce96150e94e596e959bfe2246b94de660",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "47e97bf9_71ecd804",
        "filename": "adb/client/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 180,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2015-08-08T22:26:04Z",
      "side": 1,
      "message": "This really makes no difference for unix since unix_close and adb_close are the same there, just changing this to follow the spec (unix_close for fds from the OS, adb_close for fds from sysdeps).",
      "range": {
        "startLine": 180,
        "startChar": 8,
        "endLine": 180,
        "endChar": 12
      },
      "revId": "5c398d2ce96150e94e596e959bfe2246b94de660",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67e67f2a_b20c807b",
        "filename": "adb/commandline.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1087,
      "author": {
        "id": 1010055
      },
      "writtenOn": "2015-08-09T02:33:18Z",
      "side": 1,
      "message": "Thanks for fixing this!",
      "range": {
        "startLine": 1087,
        "startChar": 16,
        "endLine": 1087,
        "endChar": 25
      },
      "revId": "5c398d2ce96150e94e596e959bfe2246b94de660",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}