{
  "comments": [
    {
      "key": {
        "uuid": "1be9e503_897be9aa",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-04-10T16:41:31Z",
      "side": 1,
      "message": "constexpr?",
      "revId": "3c54020f97335039e7f43a6638fb1c86c48bc0f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "95103fe2_672ab72c",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1155853
      },
      "writtenOn": "2017-04-10T18:38:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1be9e503_897be9aa",
      "revId": "3c54020f97335039e7f43a6638fb1c86c48bc0f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c33ce13a_aba0c004",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 1
      },
      "lineNbr": 165,
      "author": {
        "id": 1074526
      },
      "writtenOn": "2017-04-10T16:58:41Z",
      "side": 1,
      "message": "this seems a bit half way vectorized; some suggestions: dynamically peel for alignment or at the very least do cleanup loop at end if incoming arrays are typically aligned; use SIMD registers not \"chunk\", cleanup loop should be scalar to avoid \"reading too much\", SIMD register also can get rid of masking",
      "revId": "3c54020f97335039e7f43a6638fb1c86c48bc0f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a98279e2_491eb71e",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-04-10T16:41:31Z",
      "side": 1,
      "message": "wouldn\u0027t it be better to ensure that `str` is aligned?",
      "range": {
        "startLine": 168,
        "startChar": 4,
        "endLine": 168,
        "endChar": 14
      },
      "revId": "3c54020f97335039e7f43a6638fb1c86c48bc0f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ae2e3982_ed3b3e18",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2017-04-10T16:49:19Z",
      "side": 1,
      "message": "Can this read out of bounds - can the strings ever be at the end of the mapped region? (This needs at least a lot more comments on why this is safe)",
      "parentUuid": "a98279e2_491eb71e",
      "range": {
        "startLine": 168,
        "startChar": 4,
        "endLine": 168,
        "endChar": 14
      },
      "revId": "3c54020f97335039e7f43a6638fb1c86c48bc0f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9c39f5c_87c80c99",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1155853
      },
      "writtenOn": "2017-04-10T18:38:16Z",
      "side": 1,
      "message": "The updated patch has the cleanup loop at the end, not modifying the original alignment of str.\nDo you want to add a prologue as well to make sure str is aligned?\nI don\u0027t have a good idea of the length of the strings that are hashed: adding more branches could slow down the execution if most of the strings are a few bytes long.",
      "parentUuid": "a98279e2_491eb71e",
      "range": {
        "startLine": 168,
        "startChar": 4,
        "endLine": 168,
        "endChar": 14
      },
      "revId": "3c54020f97335039e7f43a6638fb1c86c48bc0f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6c32fa9e_a3e100e5",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1155853
      },
      "writtenOn": "2017-04-10T18:38:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ae2e3982_ed3b3e18",
      "range": {
        "startLine": 168,
        "startChar": 4,
        "endLine": 168,
        "endChar": 14
      },
      "revId": "3c54020f97335039e7f43a6638fb1c86c48bc0f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa1cd4a8_50f4cf68",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-04-10T16:41:31Z",
      "side": 1,
      "message": "same line or braces\n\nhttps://google.github.io/styleguide/cppguide.html",
      "revId": "3c54020f97335039e7f43a6638fb1c86c48bc0f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7587617f_ffc2672b",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1155853
      },
      "writtenOn": "2017-04-10T18:38:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aa1cd4a8_50f4cf68",
      "revId": "3c54020f97335039e7f43a6638fb1c86c48bc0f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}