{
  "comments": [
    {
      "key": {
        "uuid": "c99a5b48_f2a719d1",
        "filename": "base/file.cpp",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2017-02-24T06:34:50Z",
      "side": 1,
      "message": "string.h basename does not write anything to globals... do we have to use libgens basename here?",
      "revId": "d10c9be490d5989c9c357d50defe71b509263311",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9a09d15b_f81d90cf",
        "filename": "base/file.cpp",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-02-24T16:50:21Z",
      "side": 1,
      "message": "not for bionic, no, but this code is for mac and windows too.\n\npersonally i\u0027d be tempted to have the trivial implementation under an #if so that decent c libraries don\u0027t have to pay.\n\n(i didn\u0027t really care in adb, but if we\u0027re going to suggest this for all code...)\n\nif the mac is a problem we could even just copy \u0026 paste bionic\u0027s\n\n  const char* last_slash \u003d strrchr(path, \u0027/\u0027);\n  return (last_slash !\u003d NULL) ? last_slash + 1 : path;\n\nand only have to jump through hoops on windows.",
      "parentUuid": "c99a5b48_f2a719d1",
      "revId": "d10c9be490d5989c9c357d50defe71b509263311",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9a82125_8ab7b0ee",
        "filename": "base/file.cpp",
        "patchSetId": 1
      },
      "lineNbr": 256,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2017-02-27T16:30:44Z",
      "side": 1,
      "message": "Putting the trivial implementation with different behavior on some platforms but not others seems confusing, should I just copy bionic\u0027s and convert it to std::string for dirname and basename?",
      "parentUuid": "9a09d15b_f81d90cf",
      "revId": "d10c9be490d5989c9c357d50defe71b509263311",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "19c0db4b_310da163",
        "filename": "base/file.cpp",
        "patchSetId": 1
      },
      "lineNbr": 280,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2017-02-24T06:34:50Z",
      "side": 1,
      "message": "or implement dirname in a way that does not use libgen and does not need mutex?",
      "revId": "d10c9be490d5989c9c357d50defe71b509263311",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2aa65e00_304738c8",
        "filename": "base/file.cpp",
        "patchSetId": 1
      },
      "lineNbr": 280,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-02-24T16:50:21Z",
      "side": 1,
      "message": "(bionic\u0027s dirname does have a MAXPATHLEN limit because the thread-local buffer has always been fixed-size, so a std::string-based reimplementation would offer at that advantage.)",
      "parentUuid": "19c0db4b_310da163",
      "revId": "d10c9be490d5989c9c357d50defe71b509263311",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}