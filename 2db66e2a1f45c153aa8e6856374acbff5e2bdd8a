{
  "comments": [
    {
      "key": {
        "uuid": "b0718a1d_1f961b4b",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 964,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-04-23T20:05:02Z",
      "side": 1,
      "message": "Doesn\u0027t appear that most ERROR() messages include the function name, but if you are going to do to that, I\u0027d use __func__.  Or if you prefer this, there is an extraneous d above.",
      "revId": "2db66e2a1f45c153aa8e6856374acbff5e2bdd8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b088aa37_5667aa22",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1043,
      "author": {
        "id": 1002951
      },
      "writtenOn": "2015-04-23T20:05:39Z",
      "side": 1,
      "message": "should we check if selinux is enabled at this point?",
      "range": {
        "startLine": 1043,
        "startChar": 12,
        "endLine": 1043,
        "endChar": 22
      },
      "revId": "2db66e2a1f45c153aa8e6856374acbff5e2bdd8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0d43e30_05289c03",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1043,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2015-04-23T20:16:13Z",
      "side": 1,
      "message": "I\u0027d prefer we not do that. SELinux has been a CTS/CDD requirement since Android 4.4. Adding extra bloat to support SELinux being disabled is unnecessary. In fact, I\u0027d like to remove the selinux_is_disabled() function (line 876) entirely. We should only support permissive or enforcing, not disabled.",
      "parentUuid": "b088aa37_5667aa22",
      "range": {
        "startLine": 1043,
        "startChar": 12,
        "endLine": 1043,
        "endChar": 22
      },
      "revId": "2db66e2a1f45c153aa8e6856374acbff5e2bdd8a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}