{
  "comments": [
    {
      "key": {
        "uuid": "fd3dd29f_8e425b2f",
        "filename": "include/nativebridge/native_bridge.h",
        "patchSetId": 2
      },
      "lineNbr": 224,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-07-07T16:36:24Z",
      "side": 1,
      "message": "why the ifdef?",
      "range": {
        "startLine": 224,
        "startChar": 0,
        "endLine": 224,
        "endChar": 18
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd26b29b_663e2eaa",
        "filename": "include/nativebridge/native_bridge.h",
        "patchSetId": 2
      },
      "lineNbr": 224,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2016-07-07T17:09:41Z",
      "side": 1,
      "message": "mostly because host linker does not support namespaces...",
      "parentUuid": "fd3dd29f_8e425b2f",
      "range": {
        "startLine": 224,
        "startChar": 0,
        "endLine": 224,
        "endChar": 18
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd3dd29f_0e2cab8b",
        "filename": "include/nativebridge/native_bridge.h",
        "patchSetId": 2
      },
      "lineNbr": 230,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-07-07T16:36:24Z",
      "side": 1,
      "message": "I assume all libraries? What if only one is not supported? Document",
      "range": {
        "startLine": 230,
        "startChar": 15,
        "endLine": 230,
        "endChar": 24
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd26b29b_66b0ee53",
        "filename": "include/nativebridge/native_bridge.h",
        "patchSetId": 2
      },
      "lineNbr": 230,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2016-07-07T17:09:41Z",
      "side": 1,
      "message": "well - what if app has 1 corrupted library which is never loaded?",
      "parentUuid": "fd3dd29f_0e2cab8b",
      "range": {
        "startLine": 230,
        "startChar": 15,
        "endLine": 230,
        "endChar": 24
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d8cca86_d6803412",
        "filename": "include/nativebridge/native_bridge.h",
        "patchSetId": 2
      },
      "lineNbr": 231,
      "author": {
        "id": 1104175
      },
      "writtenOn": "2016-07-07T06:41:46Z",
      "side": 1,
      "message": "Why use this instead of the legacy one? I remembered you want use it to verify if a library is accessible in one namespace once, is it?\n\nThe legacy one is just to verify Machine type of a .so. If the .so should be loaded by native bridge (arm library on x86 devices for example), the needs_native_bridge will be set, and native bridge is responsible for this library instead of dynamic linker. I think we should keep it.",
      "range": {
        "startLine": 231,
        "startChar": 9,
        "endLine": 231,
        "endChar": 24
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd26b29b_86c16af6",
        "filename": "include/nativebridge/native_bridge.h",
        "patchSetId": 2
      },
      "lineNbr": 231,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2016-07-07T16:19:50Z",
      "side": 1,
      "message": "one way to implement this is to scan directories and see of .so files have supported Machine type.\n\nThe difference between this and the old one is this should be determined for application before any of the actual loading starts. Also old one uses path to .so file - this one should be able to accept list of directories (native library search path)",
      "parentUuid": "3d8cca86_d6803412",
      "range": {
        "startLine": 231,
        "startChar": 9,
        "endLine": 231,
        "endChar": 24
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d2daa77_a8f55b22",
        "filename": "include/nativebridge/native_bridge.h",
        "patchSetId": 2
      },
      "lineNbr": 231,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-07-07T16:36:24Z",
      "side": 1,
      "message": "Yea, it looks a bit redundant. Any reason to not use the old one?",
      "parentUuid": "3d8cca86_d6803412",
      "range": {
        "startLine": 231,
        "startChar": 9,
        "endLine": 231,
        "endChar": 24
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd26b29b_86940ab3",
        "filename": "include/nativebridge/native_bridge.h",
        "patchSetId": 2
      },
      "lineNbr": 231,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2016-07-07T17:09:41Z",
      "side": 1,
      "message": "the old one assumes path to an actual library. Changing expected behavior and parameter of already exiting function did not seem right to me (even though parameter has the same c++ type - the actual type is different)",
      "parentUuid": "3d2daa77_a8f55b22",
      "range": {
        "startLine": 231,
        "startChar": 9,
        "endLine": 231,
        "endChar": 24
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d42162f_abd2a963",
        "filename": "include/nativebridge/native_bridge.h",
        "patchSetId": 2
      },
      "lineNbr": 237,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-07-07T16:36:24Z",
      "side": 1,
      "message": "document the format.",
      "range": {
        "startLine": 237,
        "startChar": 5,
        "endLine": 237,
        "endChar": 15
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5dda5eaa_c92431b7",
        "filename": "include/nativebridge/native_bridge.h",
        "patchSetId": 2
      },
      "lineNbr": 250,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-07-07T16:36:24Z",
      "side": 1,
      "message": "By original, you mean the namespace maintained by the linker? Be explicit about it.",
      "range": {
        "startLine": 250,
        "startChar": 72,
        "endLine": 250,
        "endChar": 80
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d36dec8_e9f595ef",
        "filename": "include/nativebridge/native_bridge.h",
        "patchSetId": 2
      },
      "lineNbr": 253,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-07-07T16:36:24Z",
      "side": 1,
      "message": "line too long",
      "range": {
        "startLine": 253,
        "startChar": 100,
        "endLine": 253,
        "endChar": 103
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3dd12a8d_c830af91",
        "filename": "include/nativebridge/native_bridge.h",
        "patchSetId": 2
      },
      "lineNbr": 257,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-07-07T16:36:24Z",
      "side": 1,
      "message": "I\u0027m not sure I get this. What is it used for and when is it permitted?",
      "range": {
        "startLine": 256,
        "startChar": 0,
        "endLine": 257,
        "endChar": 75
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd26b29b_06a9faf4",
        "filename": "include/nativebridge/native_bridge.h",
        "patchSetId": 2
      },
      "lineNbr": 257,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2016-07-07T17:09:41Z",
      "side": 1,
      "message": "for example - currently everything under /data is permitted.",
      "parentUuid": "3dd12a8d_c830af91",
      "range": {
        "startLine": 256,
        "startChar": 0,
        "endLine": 257,
        "endChar": 75
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd787271_9638cc94",
        "filename": "libnativebridge/native_bridge.cc",
        "patchSetId": 2
      },
      "lineNbr": 158,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-07-07T16:36:24Z",
      "side": 1,
      "message": "where is this coming from? Did you delete the arg by mistake?",
      "range": {
        "startLine": 158,
        "startChar": 6,
        "endLine": 158,
        "endChar": 15
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd26b29b_e67a1e58",
        "filename": "libnativebridge/native_bridge.cc",
        "patchSetId": 2
      },
      "lineNbr": 158,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2016-07-07T17:09:41Z",
      "side": 1,
      "message": "I am not sure what happened here - this is coming from ps1",
      "parentUuid": "fd787271_9638cc94",
      "range": {
        "startLine": 158,
        "startChar": 6,
        "endLine": 158,
        "endChar": 15
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d36dec8_49e5c13c",
        "filename": "libnativebridge/native_bridge.cc",
        "patchSetId": 2
      },
      "lineNbr": 516,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-07-07T16:36:24Z",
      "side": 1,
      "message": "Let\u0027s add a symbolic name. isCompatibleWith(kVersion2) reads better. Or maybe rename isCompatibleWith to isCompetibleWithVersion(..)",
      "range": {
        "startLine": 516,
        "startChar": 52,
        "endLine": 516,
        "endChar": 53
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d36dec8_c9c7f1a4",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-07-07T16:36:24Z",
      "side": 1,
      "message": "Looks a bit odd to me. You could get away with a single void* and get_as_native_bridge_ns() and get_as_android_ns() together with some extra checks.",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 77,
        "endChar": 47
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd26b29b_e6f5beef",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 77,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2016-07-07T17:09:41Z",
      "side": 1,
      "message": "I would like to avoid static/reinterpret_casts...\n\nI will need a flag anyways.. I was considering flag + union but it effectively is a hidden reinterpret_cast\u003c\u003e so I went with explicit pointer types.",
      "parentUuid": "5d36dec8_c9c7f1a4",
      "range": {
        "startLine": 75,
        "startChar": 0,
        "endLine": 77,
        "endChar": 47
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdc43ad3_24dd32eb",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 1104175
      },
      "writtenOn": "2016-07-07T06:41:46Z",
      "side": 1,
      "message": "NativeBridge cannot determinate whether itself should start on a app library path.",
      "range": {
        "startLine": 149,
        "startChar": 25,
        "endLine": 149,
        "endChar": 48
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd26b29b_c6bb6284",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2016-07-07T16:19:50Z",
      "side": 1,
      "message": "see above for one proposed way to implement this.",
      "parentUuid": "bdc43ad3_24dd32eb",
      "range": {
        "startLine": 149,
        "startChar": 25,
        "endLine": 149,
        "endChar": 48
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdc43ad3_64fe0a3b",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 152,
      "author": {
        "id": 1104175
      },
      "writtenOn": "2016-07-07T06:41:46Z",
      "side": 1,
      "message": "By this design, a namespace uses NativeBridge or not?\nI understand you want the library of an application is pure one ABI. We are the same.\n\nBut, Android is so diverse, there are many apps packed x86 \u0026 arm library together and declare itself as an x86 app. And there are other apps dynamically download x86 library but declare itself as a ARM app.\nBy this new \"IsSupport/namespace\" design, these apps cannot be compatible with Intel devices. Maybe we can follow the original design \"check if nativebridge is needed library by library?\"\n\nAnd, can we bridge the namespace of nativebridge and linker? We really need a way to handle the cases talked above.\nWe hate these apps much more than you guys, trust me. but we cannot persuade them to develop decent apps.... :(",
      "range": {
        "startLine": 152,
        "startChar": 26,
        "endLine": 152,
        "endChar": 42
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd26b29b_a643c652",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 152,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2016-07-07T16:19:50Z",
      "side": 1,
      "message": "It looks like an accident to me... I do not think these apps are doing it on purpose.\n\nAlso can you send me names of apps doing this (the more than better)?",
      "parentUuid": "bdc43ad3_64fe0a3b",
      "range": {
        "startLine": 152,
        "startChar": 26,
        "endLine": 152,
        "endChar": 42
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d4dfe58_d1f08402",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 152,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-07-07T16:36:24Z",
      "side": 1,
      "message": "Agree with Dimitry. I am not sure what these apps you are mentioning are doing but it looks to be a mistake. They would not be able to use different ABI libs on a normal device. There\u0027s no reason to support it on native bridge.\n\nDo you have names?",
      "parentUuid": "fd26b29b_a643c652",
      "range": {
        "startLine": 152,
        "startChar": 26,
        "endLine": 152,
        "endChar": 42
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafb1832_04049a0f",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 152,
      "author": {
        "id": 1104175
      },
      "writtenOn": "2016-07-08T03:17:53Z",
      "side": 1,
      "message": "Yes, I have. And I will list the reasons of why nativebridge_namespace and android_namespace is needed in mail.",
      "parentUuid": "5d4dfe58_d1f08402",
      "range": {
        "startLine": 152,
        "startChar": 26,
        "endLine": 152,
        "endChar": 42
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fafb1832_24ff9601",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 152,
      "author": {
        "id": 1104175
      },
      "writtenOn": "2016-07-08T03:17:53Z",
      "side": 1,
      "message": "Well, on platforms with nativebridge implementation, we really need both nativebridge_namespace and android_namespace. I will list the reasons in mail.",
      "parentUuid": "fd26b29b_a643c652",
      "range": {
        "startLine": 152,
        "startChar": 26,
        "endLine": 152,
        "endChar": 42
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdc43ad3_44494ea5",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 302,
      "author": {
        "id": 1104175
      },
      "writtenOn": "2016-07-07T06:41:46Z",
      "side": 1,
      "message": "I think NativeBridgeInitNamespace should always be called.\n\nAs far as I understand, InitPublicNamespace() can be called when:\n1. app is just started, dex loaded by Android, and ApplicationLoader calls into NativeLoader.\n2. app uses DexClassLoader, the classloader namespace is not created since the loading of this dex is not by ApplicationLoader. In this dex java code, app System.loadLibrary() and finally call into NativeLoader, and  namespace for new dex\u0027s classloader has not been created, so create classloader in OpenNativeLibrary().\n\nFor the first one, the path is library path of app. NativeBridge cannot determine whether the app needs it in app startup stage.\nFor the second one(we won\u0027t expect it here right?), the path is a library path, seems ok.\n\nI think that, InitNamespaces is just like let NativeBridge turn into a mode such that it could well handle library loading. I suggest let namespace of NativeBridge always init. This only actually happens on Intel devices which really equipped with nativebridge implementation.",
      "range": {
        "startLine": 302,
        "startChar": 9,
        "endLine": 302,
        "endChar": 25
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd3dd29f_ce4c6365",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 302,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-07-07T16:36:24Z",
      "side": 1,
      "message": "I am not sure I follow. Why cannot NB determine that the apps needs it here?\n\nAlso, please remember this is a generic piece of functionality (not Intel specific).",
      "parentUuid": "bdc43ad3_44494ea5",
      "range": {
        "startLine": 302,
        "startChar": 9,
        "endLine": 302,
        "endChar": 25
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdc43ad3_a4ef628c",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 454,
      "author": {
        "id": 1104175
      },
      "writtenOn": "2016-07-07T06:41:46Z",
      "side": 1,
      "message": "Is it NativeBridgeGetError() here?",
      "range": {
        "startLine": 454,
        "startChar": 19,
        "endLine": 454,
        "endChar": 26
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd26b29b_0633ba03",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 454,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2016-07-07T16:19:50Z",
      "side": 1,
      "message": "right - done.",
      "parentUuid": "bdc43ad3_a4ef628c",
      "range": {
        "startLine": 454,
        "startChar": 19,
        "endLine": 454,
        "endChar": 26
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdc43ad3_849fc61d",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 477,
      "author": {
        "id": 1104175
      },
      "writtenOn": "2016-07-07T06:41:46Z",
      "side": 1,
      "message": "NativeBridge v3 has NativeBridgeUnloadLibrary() now. NativeLoader can call it to unload a library when necessary.",
      "range": {
        "startLine": 477,
        "startChar": 5,
        "endLine": 477,
        "endChar": 23
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd26b29b_2630b6f4",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 477,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2016-07-07T16:19:50Z",
      "side": 1,
      "message": "it is currently done by art code.",
      "parentUuid": "bdc43ad3_849fc61d",
      "range": {
        "startLine": 477,
        "startChar": 5,
        "endLine": 477,
        "endChar": 23
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd787271_565714b8",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 477,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2016-07-07T16:36:24Z",
      "side": 1,
      "message": "Where? You mean UnloadNativeBridge? That\u0027s only for the entire native bridge.",
      "parentUuid": "fd26b29b_2630b6f4",
      "range": {
        "startLine": 477,
        "startChar": 5,
        "endLine": 477,
        "endChar": 23
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fd26b29b_86cdeaca",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 477,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2016-07-07T17:09:41Z",
      "side": 1,
      "message": "You are right - I forgot to add it - done.",
      "parentUuid": "fd787271_565714b8",
      "range": {
        "startLine": 477,
        "startChar": 5,
        "endLine": 477,
        "endChar": 23
      },
      "revId": "f6ecf11258185671e0e0189104629000d114ca2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}