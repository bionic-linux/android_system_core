{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "31e98e23_b1083a33",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/cow_format.h",
        "patchSetId": 20
      },
      "lineNbr": 109,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2023-11-14T20:40:31Z",
      "side": 1,
      "message": "\"Size of the block sequence buffer, in bytes.\"\n\nparser_v3 should check that the size % sizeof(uint32_t) \u003d\u003d 0.",
      "range": {
        "startLine": 109,
        "startChar": 13,
        "endLine": 109,
        "endChar": 33
      },
      "revId": "9052f4a6188aaddfa024d759e267d1efe31de650",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2c4cedfc_2a2ea6d3",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/cow_format.h",
        "patchSetId": 20
      },
      "lineNbr": 235,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-11-14T20:34:24Z",
      "side": 1,
      "message": "const CowHeaderV3\u0026",
      "range": {
        "startLine": 235,
        "startChar": 44,
        "endLine": 235,
        "endChar": 55
      },
      "revId": "9052f4a6188aaddfa024d759e267d1efe31de650",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b020871_c7f7bd96",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/cow_format.h",
        "patchSetId": 20
      },
      "lineNbr": 235,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-11-14T20:34:24Z",
      "side": 1,
      "message": "constexpr",
      "range": {
        "startLine": 235,
        "startChar": 7,
        "endLine": 235,
        "endChar": 13
      },
      "revId": "9052f4a6188aaddfa024d759e267d1efe31de650",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "839bc00e_0467a3aa",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/cow_format.h",
        "patchSetId": 20
      },
      "lineNbr": 239,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-11-14T20:34:24Z",
      "side": 1,
      "message": "const CowHeaderV3\u0026",
      "range": {
        "startLine": 239,
        "startChar": 42,
        "endLine": 239,
        "endChar": 53
      },
      "revId": "9052f4a6188aaddfa024d759e267d1efe31de650",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fe75a90_6b59e27a",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/cow_format.h",
        "patchSetId": 20
      },
      "lineNbr": 239,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-11-14T20:34:24Z",
      "side": 1,
      "message": "constexpr",
      "range": {
        "startLine": 239,
        "startChar": 7,
        "endLine": 239,
        "endChar": 13
      },
      "revId": "9052f4a6188aaddfa024d759e267d1efe31de650",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ea6711ef_018a8853",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/cow_reader.cpp",
        "patchSetId": 20
      },
      "lineNbr": 31,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-11-14T20:34:24Z",
      "side": 1,
      "message": "angle bracket",
      "revId": "9052f4a6188aaddfa024d759e267d1efe31de650",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25d42dc9_4bdcf974",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/cow_reader.cpp",
        "patchSetId": 20
      },
      "lineNbr": 278,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2023-11-14T20:40:31Z",
      "side": 1,
      "message": "This function is getting pretty big. Can we factor these cases into helpers?\n\nI was initially hoping we could do this in the parser, but I don\u0027t see a nice way. (Well, maybe if parser was shared_ptr, and stored on CowReader, and we made sure to zap v2_ops_ to curb memory use...)",
      "revId": "9052f4a6188aaddfa024d759e267d1efe31de650",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}