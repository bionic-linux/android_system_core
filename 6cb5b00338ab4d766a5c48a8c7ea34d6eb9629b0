{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "8146b679_0e3e6bd2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-09-08T16:16:30Z",
      "side": 1,
      "message": "otherwise lgtm now...",
      "revId": "6cb5b00338ab4d766a5c48a8c7ea34d6eb9629b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2ce0e93_45962dbc",
        "filename": "libuserpanic/include/android/userpanic.h",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-09-08T16:16:30Z",
      "side": 1,
      "message": "add `__noreturn` here, so the compiler can help you detect dead code caused by assuming this might return.",
      "revId": "6cb5b00338ab4d766a5c48a8c7ea34d6eb9629b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7fd887ea_17ebab65",
        "filename": "libuserpanic/libuserpanic.cpp",
        "patchSetId": 4
      },
      "lineNbr": 17,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-09-08T16:16:30Z",
      "side": 1,
      "message": "LOG_TAG isn\u0027t used for libbase logging.",
      "revId": "6cb5b00338ab4d766a5c48a8c7ea34d6eb9629b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "abb94288_42a17dd5",
        "filename": "libuserpanic/libuserpanic.cpp",
        "patchSetId": 4
      },
      "lineNbr": 19,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-09-08T16:16:30Z",
      "side": 1,
      "message": "unused?",
      "revId": "6cb5b00338ab4d766a5c48a8c7ea34d6eb9629b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e152adac_64f3e7a5",
        "filename": "libuserpanic/libuserpanic.cpp",
        "patchSetId": 4
      },
      "lineNbr": 20,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-09-08T16:16:30Z",
      "side": 1,
      "message": "unused?",
      "revId": "6cb5b00338ab4d766a5c48a8c7ea34d6eb9629b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a45c7b89_ddf7fd0e",
        "filename": "libuserpanic/libuserpanic.cpp",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-09-08T16:16:30Z",
      "side": 1,
      "message": "(it\u0027s traditional to put your own #include first, if only to check that it works stand-alone :-) )",
      "revId": "6cb5b00338ab4d766a5c48a8c7ea34d6eb9629b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0d545e96_bae5278d",
        "filename": "libuserpanic/libuserpanic.cpp",
        "patchSetId": 4
      },
      "lineNbr": 31,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-09-08T16:16:30Z",
      "side": 1,
      "message": "unused?",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 31,
        "endChar": 0
      },
      "revId": "6cb5b00338ab4d766a5c48a8c7ea34d6eb9629b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db57fe4d_6b4f75c7",
        "filename": "libuserpanic/libuserpanic.cpp",
        "patchSetId": 4
      },
      "lineNbr": 57,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-09-08T16:16:30Z",
      "side": 1,
      "message": "probably more helpful to say \"Successful writes should cause a reboot synchronously and never return. Just in case...\".\n\nif there\u0027s a reason why we don\u0027t just call the old-school reboot() function here, it\u0027s probably worth mentioning that too?",
      "revId": "6cb5b00338ab4d766a5c48a8c7ea34d6eb9629b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}