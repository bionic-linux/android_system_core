{
  "comments": [
    {
      "key": {
        "uuid": "76aed8fb_16254274",
        "filename": "base/include/android-base/parseint.h",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-08-28T22:44:25Z",
      "side": 1,
      "message": "Add here too?  Or maybe EINVAL ?",
      "revId": "3b88b3f01d87b85add05cac1863c5421f3817813",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d98a4682_5bc4ba41",
        "filename": "base/include/android-base/parseint.h",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-08-29T00:50:42Z",
      "side": 1,
      "message": "Even though ERANGE might not be correct in all cases, I think it\u0027s the better choice. If someone feels inclined to differentiate between ERANGE and the string is not a number but happens to start with \u0027-\u0027, we can add that check.",
      "parentUuid": "76aed8fb_16254274",
      "revId": "3b88b3f01d87b85add05cac1863c5421f3817813",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "615e8d71_951ea51b",
        "filename": "base/include/android-base/parseint.h",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-08-29T00:54:46Z",
      "side": 1,
      "message": "why do we actually care about the ERANGE case?",
      "parentUuid": "d98a4682_5bc4ba41",
      "revId": "3b88b3f01d87b85add05cac1863c5421f3817813",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ec2d6751_903d6a63",
        "filename": "base/include/android-base/parseint.h",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-08-29T00:56:17Z",
      "side": 1,
      "message": "ERANGE sgtm.\n\nenh@: I just figure if we\u0027re setting errno in the other cases that we return false, we should set it in all of them, for PLOG, especially.",
      "parentUuid": "615e8d71_951ea51b",
      "revId": "3b88b3f01d87b85add05cac1863c5421f3817813",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3139cd6_fc338475",
        "filename": "base/include/android-base/parseint.h",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-08-29T00:59:50Z",
      "side": 1,
      "message": "no, that\u0027s my question: either we should try to consistently set errno to distinguish the various failures, or we should say \"it doesn\u0027t matter\".\n\npersonally i\u0027m struggling to imagine that there\u0027s much value to saying anything more specific than \"invalid whatever: 9999999999\" or \"invalid whatever (max 666): 1234\" if we think the upper bound is non-obvious. a specific example might help motivate this...\n\n(but if we ever set errno, i think we should set errno on all the failure exits.)",
      "parentUuid": "ec2d6751_903d6a63",
      "revId": "3b88b3f01d87b85add05cac1863c5421f3817813",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cad1002_2d3bd845",
        "filename": "base/include/android-base/parseint.h",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-08-29T01:43:49Z",
      "side": 1,
      "message": "We\u0027re already setting errno given `if (errno !\u003d 0 || end \u003d\u003d s) return false;` so we definitely should set it in these other two returns.  EINVAL sounds a bit better to me, in case of \"-blah\".  I think it\u0027s fine to generalize to say any negative number is EINVAL too, so I should take back my ERANGE sgtm.\n\nYou do agree that we need to set something here, right?",
      "parentUuid": "b3139cd6_fc338475",
      "revId": "3b88b3f01d87b85add05cac1863c5421f3817813",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f976e827_af5677cc",
        "filename": "base/include/android-base/parseint.h",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-08-29T16:59:45Z",
      "side": 1,
      "message": "\u003e You do agree that we need to set something here, right?\n\nnot really. i\u0027m fairly skeptical of the value of being overly specific. that\u0027s what i meant by:\n\npersonally i\u0027m struggling to imagine that there\u0027s much value to saying anything more specific than \"invalid whatever: 9999999999\" or \"invalid whatever (max 666): 1234\" if we think the upper bound is non-obvious. a specific use case might help motivate this...\n\ntoo often i feel like it clutters up the code without actually benefiting any real user. i used to lean towards being maximally specific, but over time i\u0027ve taken a stronger YAGNI attitude and wait until i\u0027ve actually seen a user who would have been helped by a more specific error. because often the detail they were missing isn\u0027t something i\u0027d have expected myself.\n\n(if i\u0027d felt there was real value in distinguishing different kinds of failures, i\u0027d not have returned bool :-) )\n\nbut i don\u0027t really care, as long as we consistently do or don\u0027t set errno. (it\u0027s kind of weird that we *clobber* errno in this function as it stands. i also feel like -- especially if we\u0027re making errno part of the contract -- we should either *always* clobber errno [so 0 is meaningful too] or restore errno if we return true. i hate errno.)",
      "parentUuid": "5cad1002_2d3bd845",
      "revId": "3b88b3f01d87b85add05cac1863c5421f3817813",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7e981660_db55806c",
        "filename": "base/include/android-base/parseint.h",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-08-29T17:34:56Z",
      "side": 1,
      "message": "Well at the least we either need to stop setting errno as we are doing now or do this.\n\nI checked through the code for the places we\u0027re calling PLOG after these two functions; I figured we would have more than I saw.  \n\nParseInt() followed by PLOG has 3 results: https://cs.corp.google.com/search/?q\u003dpcre:yes+case:yes+(?m)ParseInt.*%5Cn.*PLOG\u0026m\u003d100\u0026sq\u003dpackage:%5Eandroid$\u0026type\u003dcs\nParseUint() followed by PLOG has 0 results: https://cs.corp.google.com/search/?q\u003dpcre:yes+case:yes+(?m)ParseUint.*%5Cn.*PLOG\u0026m\u003d100\u0026sq\u003dpackage:%5Eandroid$\u0026type\u003dcs\n\nSo looks like the real solution is to stop clobbering errno and make those PLOGs into LOGs?",
      "parentUuid": "f976e827_af5677cc",
      "revId": "3b88b3f01d87b85add05cac1863c5421f3817813",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2dcc89a1_85edc625",
        "filename": "base/include/android-base/parseint.h",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-08-29T17:42:35Z",
      "side": 1,
      "message": "sgtm. it\u0027s high time we moved ErrnoRestorer into its own .h anyway...",
      "parentUuid": "7e981660_db55806c",
      "revId": "3b88b3f01d87b85add05cac1863c5421f3817813",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}