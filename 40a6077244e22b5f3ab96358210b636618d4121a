{
  "comments": [
    {
      "key": {
        "uuid": "e5e41d6b_8656a270",
        "filename": "/COMMIT_MSG",
        "patchSetId": 5
      },
      "lineNbr": 16,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-05-08T18:27:29Z",
      "side": 1,
      "message": "There is a test/runtest.sh script that does something even though it doesn\u0027t look very comprehensive to me. Try that?\n\nCtsJniTestCases and maybe also CtsVendorJniTestCases could be relevant too (not too familiar with the latter one).\n\nEven considering those, WDYT about shaping up the unit testing here? I\u0027m thinking along the lines of making the various functions in public_libraries.cpp mockable and then do assertions on the created namespace objects.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 34
      },
      "revId": "40a6077244e22b5f3ab96358210b636618d4121a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96dfa76e_59521459",
        "filename": "libnativeloader/public_libraries.cpp",
        "patchSetId": 5
      },
      "lineNbr": 68,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-05-08T18:27:29Z",
      "side": 1,
      "message": "Why have this local \"debuggable\" variable at all? It\u0027s so weird it makes me start to suspect some subtle copy semantics thing or some other C++ insanity going on. I know it\u0027s only copied from the old code, but maybe worth a cleanup.\n\nOr maybe the variable was supposed to be static? Then the 2nd assignment would be wrong.",
      "range": {
        "startLine": 66,
        "startChar": 2,
        "endLine": 68,
        "endChar": 20
      },
      "revId": "40a6077244e22b5f3ab96358210b636618d4121a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9181cc14_29023560",
        "filename": "libnativeloader/public_libraries.cpp",
        "patchSetId": 5
      },
      "lineNbr": 199,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-05-08T18:27:29Z",
      "side": 1,
      "message": "Suggest putting this in a helper function to avoid having the same logic in two places, not the least to avoid duplicating the comment.",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 199,
        "endChar": 82
      },
      "revId": "40a6077244e22b5f3ab96358210b636618d4121a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28b38288_db9d5845",
        "filename": "libnativeloader/public_libraries.cpp",
        "patchSetId": 5
      },
      "lineNbr": 229,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-05-08T18:27:29Z",
      "side": 1,
      "message": "The assignments to the static variables in these functions aren\u0027t thread safe. Can we assume there are no concurrent threads in this code?\n\nMaybe it\u0027s altogether easier to make the code thread safe, just to avoid the doubt. I suggest using std::call_once in that case.",
      "range": {
        "startLine": 229,
        "startChar": 4,
        "endLine": 229,
        "endChar": 45
      },
      "revId": "40a6077244e22b5f3ab96358210b636618d4121a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "20b05d08_f6c1b1d8",
        "filename": "libnativeloader/public_libraries.cpp",
        "patchSetId": 5
      },
      "lineNbr": 229,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-05-08T19:00:16Z",
      "side": 1,
      "message": "oh, sorry, i wasn\u0027t paying enough attention here.\n\nthe easiest C++ way to fix this is\n\n  const std::string\u0026 system_public_libraries() {\n    static std::string list \u003d init_system_public_libraries();\n    return list;\n  }\n\nand move all the current \"!cached\" code into init_system_public_libraries(). the compiler will add the necessary boilerplate to call init_system_public_libraries() exactly once.",
      "parentUuid": "28b38288_db9d5845",
      "range": {
        "startLine": 229,
        "startChar": 4,
        "endLine": 229,
        "endChar": 45
      },
      "revId": "40a6077244e22b5f3ab96358210b636618d4121a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}