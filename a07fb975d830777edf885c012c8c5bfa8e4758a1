{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4a0e3e28_90901f6f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 12
      },
      "lineNbr": 0,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2020-12-15T07:41:26Z",
      "side": 1,
      "message": "With Tom\u0027s advice I\u0027ve tried a slightly different approach. snapuserd is now killed before loading sepolicy, and we try to do as much work as we can before killing it. This greatly reduces the number of audits. The full flow is described in the commit message and in selinux.cpp.",
      "revId": "a07fb975d830777edf885c012c8c5bfa8e4758a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "70853597_6726d0fa",
        "filename": "init/selinux.cpp",
        "patchSetId": 12
      },
      "lineNbr": 682,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2020-12-15T14:14:31Z",
      "side": 1,
      "message": "Ah, this is non-const since security_load_policy doesn\u0027t use const for data? ðŸ˜ž\n\nI\u0027d just pass the std::string\u0026 as is instead of dealing with the by-value argument and std::move trick.  It\u0027s even cheaper, since there\u0027s no move construction and it\u0027s simpler.  (Plus now we can move arguments by non-const reference per https://google.github.io/styleguide/cppguide.html#Inputs_and_Outputs)",
      "range": {
        "startLine": 682,
        "startChar": 30,
        "endLine": 682,
        "endChar": 41
      },
      "revId": "a07fb975d830777edf885c012c8c5bfa8e4758a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eebbd10d_c606e7a7",
        "filename": "init/snapuserd_transition.cpp",
        "patchSetId": 12
      },
      "lineNbr": 235,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2020-12-15T14:14:31Z",
      "side": 1,
      "message": "afaik, argv needs a nullptr as the last element.",
      "revId": "a07fb975d830777edf885c012c8c5bfa8e4758a1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}