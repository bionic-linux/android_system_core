{
  "comments": [
    {
      "key": {
        "uuid": "6ad75310_b50d3549",
        "filename": "init/service.cpp",
        "patchSetId": 6
      },
      "lineNbr": 996,
      "author": {
        "id": 1013030
      },
      "writtenOn": "2019-01-07T10:47:40Z",
      "side": 1,
      "message": "this seems a bit weird - if the propagation type is set to private, why would they propagate?\n\nI guess it is because bind-mounting /system/lib/libc.so is a mount event on \u0027/\u0027, so even if the mount /system/lib/libc.so itself is private, it will still be propagated because / is \u0027shared\u0027?",
      "range": {
        "startLine": 996,
        "startChar": 21,
        "endLine": 996,
        "endChar": 55
      },
      "revId": "8ccdd5ae2c6a1f03d5254b89b40bca184fee6ac9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38a9a58b_772bbf7b",
        "filename": "init/service.cpp",
        "patchSetId": 6
      },
      "lineNbr": 996,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-01-07T11:51:48Z",
      "side": 1,
      "message": "If we are not doing unshare, init and these pre-apexd processes are using the same mount namespace. So, regardless of the propagation type, everything that happen in the mount namespace are visible to all processes.",
      "parentUuid": "6ad75310_b50d3549",
      "range": {
        "startLine": 996,
        "startChar": 21,
        "endLine": 996,
        "endChar": 55
      },
      "revId": "8ccdd5ae2c6a1f03d5254b89b40bca184fee6ac9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f0383fe6_4fb21b16",
        "filename": "init/service.cpp",
        "patchSetId": 6
      },
      "lineNbr": 996,
      "author": {
        "id": 1013030
      },
      "writtenOn": "2019-01-07T12:39:54Z",
      "side": 1,
      "message": "Right, I\u0027m not saying it\u0027s wrong to unshare, but \u0027This unsharing is required to not propagate...whose propagation type is set to private\u0027 sounded a bit like a contradiction at first :)\n\nBTW just to confirm: the first time I mount something on /system/bin/linker64, it will be propagated based on the propagation settings of \u0027/\u0027; but if I then modify or unmount /system/bin/linker64, it will be propagated based on the propagation setting of \u0027/system/bin/linker64\u0027 itself, right?",
      "parentUuid": "38a9a58b_772bbf7b",
      "range": {
        "startLine": 996,
        "startChar": 21,
        "endLine": 996,
        "endChar": 55
      },
      "revId": "8ccdd5ae2c6a1f03d5254b89b40bca184fee6ac9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c14ad8d8_3f473305",
        "filename": "init/service.cpp",
        "patchSetId": 6
      },
      "lineNbr": 998,
      "author": {
        "id": 1013030
      },
      "writtenOn": "2019-01-07T10:47:40Z",
      "side": 1,
      "message": "mount",
      "range": {
        "startLine": 998,
        "startChar": 35,
        "endLine": 998,
        "endChar": 40
      },
      "revId": "8ccdd5ae2c6a1f03d5254b89b40bca184fee6ac9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "db12bcae_9c5141b5",
        "filename": "init/service.cpp",
        "patchSetId": 6
      },
      "lineNbr": 998,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-01-07T11:51:48Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c14ad8d8_3f473305",
      "range": {
        "startLine": 998,
        "startChar": 35,
        "endLine": 998,
        "endChar": 40
      },
      "revId": "8ccdd5ae2c6a1f03d5254b89b40bca184fee6ac9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4bc643bb_605e2498",
        "filename": "init/service.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1006,
      "author": {
        "id": 1013030
      },
      "writtenOn": "2019-01-07T10:47:40Z",
      "side": 1,
      "message": "does this still work correctly if \u0027pre_apex_\u0027 is true? Should we prevent this code from running in that case?",
      "range": {
        "startLine": 1006,
        "startChar": 9,
        "endLine": 1006,
        "endChar": 45
      },
      "revId": "8ccdd5ae2c6a1f03d5254b89b40bca184fee6ac9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34bba72c_ce2890f4",
        "filename": "init/service.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1006,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-01-07T11:51:48Z",
      "side": 1,
      "message": "Yes this and pre_apex_ can coexist though we don\u0027t have such service yet. So, no need to prevent pre_apex_ here.",
      "parentUuid": "4bc643bb_605e2498",
      "range": {
        "startLine": 1006,
        "startChar": 9,
        "endLine": 1006,
        "endChar": 45
      },
      "revId": "8ccdd5ae2c6a1f03d5254b89b40bca184fee6ac9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e4cc9f5_70141677",
        "filename": "init/service.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1394,
      "author": {
        "id": 1013030
      },
      "writtenOn": "2019-01-07T10:47:40Z",
      "side": 1,
      "message": "I guess init is single-threaded so this is not racy?",
      "range": {
        "startLine": 1392,
        "startChar": 0,
        "endLine": 1394,
        "endChar": 1
      },
      "revId": "8ccdd5ae2c6a1f03d5254b89b40bca184fee6ac9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "33dc9f67_bfa5ec0c",
        "filename": "init/service.cpp",
        "patchSetId": 6
      },
      "lineNbr": 1394,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-01-07T11:51:48Z",
      "side": 1,
      "message": "Right. Everything is executed in the main loop.",
      "parentUuid": "0e4cc9f5_70141677",
      "range": {
        "startLine": 1392,
        "startChar": 0,
        "endLine": 1394,
        "endChar": 1
      },
      "revId": "8ccdd5ae2c6a1f03d5254b89b40bca184fee6ac9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}