{
  "comments": [
    {
      "key": {
        "uuid": "63274868_a96c0e48",
        "filename": "libmeminfo/libdmabufinfo/include/dmabufinfo/dmabufinfo.h",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-01-30T15:35:59Z",
      "side": 1,
      "message": "no need for new line here, It was my mistake before probably too.",
      "revId": "302a259fa9755537f3bbcb2e848fade9e711ff5c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8a0cab72_ca4bfddd",
        "filename": "libmeminfo/libdmabufinfo/include/dmabufinfo/dmabufinfo.h",
        "patchSetId": 2
      },
      "lineNbr": 93,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-01-30T15:36:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "63274868_a96c0e48",
      "revId": "302a259fa9755537f3bbcb2e848fade9e711ff5c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44b0a993_fe9ab15b",
        "filename": "libmeminfo/libdmabufinfo/include/dmabufinfo/dmabufinfo.h",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-01-30T15:35:59Z",
      "side": 1,
      "message": "Its technically not \"Append\" (adding at the end of the vector). It is \"Add\" without duplicates.\nAdjust the comment to say the same.",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 96,
        "endChar": 0
      },
      "revId": "302a259fa9755537f3bbcb2e848fade9e711ff5c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f3417952_42a71b1d",
        "filename": "libmeminfo/libdmabufinfo/include/dmabufinfo/dmabufinfo.h",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-01-30T15:36:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "44b0a993_fe9ab15b",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 96,
        "endChar": 0
      },
      "revId": "302a259fa9755537f3bbcb2e848fade9e711ff5c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a2d06967_beadc66f",
        "filename": "libmeminfo/libdmabufinfo/include/dmabufinfo/dmabufinfo.h",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-01-30T16:50:54Z",
      "side": 1,
      "message": "if it\u0027s \"add without duplicates\"... should the argument be a set?\n\ndo you actually have a caller that needs this? otherwise this seems like you\u0027ve added an admittedly more general but more error-prone API that hasn\u0027t yet been shown to be necessary. that seems like a mistake? YAGNI.",
      "parentUuid": "f3417952_42a71b1d",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 96,
        "endChar": 0
      },
      "revId": "302a259fa9755537f3bbcb2e848fade9e711ff5c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b93e6bc8_9d64d87d",
        "filename": "libmeminfo/libdmabufinfo/include/dmabufinfo/dmabufinfo.h",
        "patchSetId": 2
      },
      "lineNbr": 96,
      "author": {
        "id": 1283094
      },
      "writtenOn": "2019-01-30T19:56:54Z",
      "side": 1,
      "message": "It is appending (mostly): When a new buffer (inode) is found, it will be added at the end of the vector, if the vector already contains the buffer then its reference counts by PID will be updated.\n\nSince there are updates involved I\u0027m not sure a set makes sense. I considered using a Map with inode as the key. When I discussed it with Sandeep he said either was ok.\n\nThe next CL I have planned adds a tool that builds a table for all PIDs using this.",
      "parentUuid": "a2d06967_beadc66f",
      "range": {
        "startLine": 91,
        "startChar": 0,
        "endLine": 96,
        "endChar": 0
      },
      "revId": "302a259fa9755537f3bbcb2e848fade9e711ff5c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}