{
  "comments": [
    {
      "key": {
        "uuid": "fad1def1_8905eaa5",
        "filename": "libmeminfo/include/meminfo/procmeminfo.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2019-01-07T21:53:14Z",
      "side": 1,
      "message": "nit: this function might perform faster with templates instead of std::function.",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 49
      },
      "revId": "50add038f802c923a37b54644414608967a7f3ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6cc7bfd_e55e7eef",
        "filename": "libmeminfo/include/meminfo/procmeminfo.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-01-07T22:26:36Z",
      "side": 1,
      "message": "Eh. the speed difference doesn\u0027t matter here, not in a function called once per VMA --- indirect calls are still plenty fast, especially if predicted --- and compile-time specialization can end up being worse once you take into account accumulated bloat. IMHO, std::function is fine here.",
      "parentUuid": "fad1def1_8905eaa5",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 49
      },
      "revId": "50add038f802c923a37b54644414608967a7f3ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5526da88_704f0963",
        "filename": "libmeminfo/include/meminfo/procmeminfo.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-01-08T00:42:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c6cc7bfd_e55e7eef",
      "range": {
        "startLine": 53,
        "startChar": 0,
        "endLine": 53,
        "endChar": 49
      },
      "revId": "50add038f802c923a37b54644414608967a7f3ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "073daf4b_b18b940e",
        "filename": "libmeminfo/libmeminfo_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 549,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2019-01-07T21:53:14Z",
      "side": 1,
      "message": "This test has hard-to-verify magic numbers. I think the smaps_short test above is sufficient.",
      "range": {
        "startLine": 549,
        "startChar": 25,
        "endLine": 549,
        "endChar": 31
      },
      "revId": "50add038f802c923a37b54644414608967a7f3ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e66a7d6_dda7c20b",
        "filename": "libmeminfo/libmeminfo_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 549,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-01-08T00:42:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "073daf4b_b18b940e",
      "range": {
        "startLine": 549,
        "startChar": 25,
        "endLine": 549,
        "endChar": 31
      },
      "revId": "50add038f802c923a37b54644414608967a7f3ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2be708b_bba09475",
        "filename": "libmeminfo/procmeminfo.cpp",
        "patchSetId": 3
      },
      "lineNbr": 354,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2019-01-07T21:53:14Z",
      "side": 1,
      "message": "Allocate on the stack and eliminate nullptr checks.",
      "range": {
        "startLine": 354,
        "startChar": 8,
        "endLine": 354,
        "endChar": 11
      },
      "revId": "50add038f802c923a37b54644414608967a7f3ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "51631fdb_b7f6e320",
        "filename": "libmeminfo/procmeminfo.cpp",
        "patchSetId": 3
      },
      "lineNbr": 354,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-01-08T00:42:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e2be708b_bba09475",
      "range": {
        "startLine": 354,
        "startChar": 8,
        "endLine": 354,
        "endChar": 11
      },
      "revId": "50add038f802c923a37b54644414608967a7f3ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6cd58686_265b79de",
        "filename": "libmeminfo/testdata1/showmap_test.sh",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2019-01-07T21:53:14Z",
      "side": 1,
      "message": "You need the original showmap to run this test. \nAlso, add build rules to Android.bp for this test. That way the test is built and installed into a standard location.",
      "revId": "50add038f802c923a37b54644414608967a7f3ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83d93e5b_228b50b5",
        "filename": "libmeminfo/testdata1/showmap_test.sh",
        "patchSetId": 3
      },
      "lineNbr": 1,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-01-08T00:42:54Z",
      "side": 1,
      "message": "yeah, I just noticed it and at the same time I am deleting the original showmap in this topic. Let me abandon that one and change this to showmap2 for now.\n\n\u003e Also, add build rules to Android.bp for this test. That way the test is built and installed into a standard location.\nThat, I\u0027m going to have to learn, so will find you.",
      "parentUuid": "6cd58686_265b79de",
      "revId": "50add038f802c923a37b54644414608967a7f3ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1458bf51_0e19a8db",
        "filename": "libmeminfo/tools/showmap.cpp",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2019-01-07T21:53:14Z",
      "side": 1,
      "message": "nit: using ::android::meminfo::Vma;",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 36
      },
      "revId": "50add038f802c923a37b54644414608967a7f3ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57dc1597_46d97f65",
        "filename": "libmeminfo/tools/showmap.cpp",
        "patchSetId": 3
      },
      "lineNbr": 31,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-01-09T01:14:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1458bf51_0e19a8db",
      "range": {
        "startLine": 31,
        "startChar": 0,
        "endLine": 31,
        "endChar": 36
      },
      "revId": "50add038f802c923a37b54644414608967a7f3ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "adda4ca2_286c470a",
        "filename": "libmeminfo/tools/showmap.cpp",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2019-01-07T21:53:14Z",
      "side": 1,
      "message": "Let\u0027s stick to 1 code style.",
      "range": {
        "startLine": 46,
        "startChar": 12,
        "endLine": 46,
        "endChar": 22
      },
      "revId": "50add038f802c923a37b54644414608967a7f3ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96631215_2de32313",
        "filename": "libmeminfo/tools/showmap.cpp",
        "patchSetId": 3
      },
      "lineNbr": 46,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-01-08T00:42:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "adda4ca2_286c470a",
      "range": {
        "startLine": 46,
        "startChar": 12,
        "endLine": 46,
        "endChar": 22
      },
      "revId": "50add038f802c923a37b54644414608967a7f3ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c0ad02a9_0032d223",
        "filename": "libmeminfo/tools/showmap.cpp",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2019-01-07T21:53:14Z",
      "side": 1,
      "message": "Why are these conditions necessary?",
      "range": {
        "startLine": 79,
        "startChar": 11,
        "endLine": 79,
        "endChar": 48
      },
      "revId": "50add038f802c923a37b54644414608967a7f3ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82979bdf_40f16545",
        "filename": "libmeminfo/tools/showmap.cpp",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-01-08T00:42:54Z",
      "side": 1,
      "message": "because that quickly eliminates a lot of anonymous VMAs that have names like .. [XXX]",
      "parentUuid": "c0ad02a9_0032d223",
      "range": {
        "startLine": 79,
        "startChar": 11,
        "endLine": 79,
        "endChar": 48
      },
      "revId": "50add038f802c923a37b54644414608967a7f3ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}