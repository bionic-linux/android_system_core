{
  "comments": [
    {
      "key": {
        "uuid": "00486077_0634bc85",
        "filename": "metricsd/Android.mk",
        "patchSetId": 12
      },
      "lineNbr": 93,
      "author": {
        "id": 1004277
      },
      "writtenOn": "2015-12-03T22:34:54Z",
      "side": 1,
      "message": "It\u0027s common to name this libmetricsd (the binder implementation would be generally assumed on Android, unless it\u0027s important to disambiguate from a dbus implementation?)",
      "range": {
        "startLine": 93,
        "startChar": 16,
        "endLine": 93,
        "endChar": 37
      },
      "revId": "c92b86bfc07cae7e80e34c4345dde4a4a3c7fd08",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e06d0cee_dd869f3c",
        "filename": "metricsd/include/metrics/metrics_library.h",
        "patchSetId": 12
      },
      "lineNbr": 177,
      "author": {
        "id": 1004277
      },
      "writtenOn": "2015-12-03T22:34:54Z",
      "side": 1,
      "message": "Names such as mMetricsd are also used in Android (maybe different naming convention) -- in any case, naming more specifically what it is a proxy for might be good.",
      "range": {
        "startLine": 177,
        "startChar": 51,
        "endLine": 177,
        "endChar": 57
      },
      "revId": "c92b86bfc07cae7e80e34c4345dde4a4a3c7fd08",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e0842cce_e5275093",
        "filename": "metricsd/metrics_library.cc",
        "patchSetId": 12
      },
      "lineNbr": 135,
      "author": {
        "id": 1004277
      },
      "writtenOn": "2015-12-03T22:34:54Z",
      "side": 1,
      "message": "This can be const",
      "range": {
        "startLine": 135,
        "startChar": 2,
        "endLine": 135,
        "endChar": 10
      },
      "revId": "c92b86bfc07cae7e80e34c4345dde4a4a3c7fd08",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "20a2c463_3f1d43f0",
        "filename": "metricsd/uploader/bn_metricsd_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 37,
      "author": {
        "id": 1057759
      },
      "writtenOn": "2015-12-03T22:16:23Z",
      "side": 1,
      "message": "You can just declare this as default",
      "revId": "c92b86bfc07cae7e80e34c4345dde4a4a3c7fd08",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8091b00f_02feec1e",
        "filename": "metricsd/uploader/bn_metricsd_impl.cc",
        "patchSetId": 12
      },
      "lineNbr": 40,
      "author": {
        "id": 1057759
      },
      "writtenOn": "2015-12-03T22:16:23Z",
      "side": 1,
      "message": "Probably call as well:\n\nProcessState::self()-\u003esetThreadPoolMaxThreadCount(0);\nIPCThreadState::self()-\u003edisableBackgroundScheduling(true);",
      "revId": "c92b86bfc07cae7e80e34c4345dde4a4a3c7fd08",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "204d6487_a7096444",
        "filename": "metricsd/uploader/metrics_service_runner.h",
        "patchSetId": 12
      },
      "lineNbr": 24,
      "author": {
        "id": 1057759
      },
      "writtenOn": "2015-12-03T22:16:23Z",
      "side": 1,
      "message": "Maybe prefer to use this with std::thread, now that that is a thing?",
      "revId": "c92b86bfc07cae7e80e34c4345dde4a4a3c7fd08",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}