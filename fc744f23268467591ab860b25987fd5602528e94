{
  "comments": [
    {
      "key": {
        "uuid": "0702b5dc_511a5358",
        "filename": "init/property_service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 734,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-02-04T18:41:35Z",
      "side": 1,
      "message": "Prefer to C++ style comments, so //",
      "revId": "fc744f23268467591ab860b25987fd5602528e94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8fe5c927_7dacfc89",
        "filename": "init/property_service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 734,
      "author": {
        "id": 1340374
      },
      "writtenOn": "2019-02-04T20:29:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0702b5dc_511a5358",
      "revId": "fc744f23268467591ab860b25987fd5602528e94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d48fff3d_55e78c85",
        "filename": "init/property_service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 745,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-02-04T18:41:35Z",
      "side": 1,
      "message": "FWIW, you can use range based for loops on arrays, so \n\nfor (const auto\u0026 property : RO_PRODUCT_PROPS).  \n\nIt\u0027ll be a bit cleaner than needing arraysize and safer than relying on indexing the array.",
      "revId": "fc744f23268467591ab860b25987fd5602528e94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "35ac88c2_d0b40410",
        "filename": "init/property_service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 745,
      "author": {
        "id": 1340374
      },
      "writtenOn": "2019-02-04T20:29:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d48fff3d_55e78c85",
      "revId": "fc744f23268467591ab860b25987fd5602528e94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6405f63_72885182",
        "filename": "init/property_service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 779,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-02-04T18:41:35Z",
      "side": 1,
      "message": "Probably better to have `using android::base::GetProperty` at the top of the file with the rest of the `using` lines and avoid needing to repeat android::base:: everywhere.",
      "range": {
        "startLine": 779,
        "startChar": 51,
        "endLine": 779,
        "endChar": 62
      },
      "revId": "fc744f23268467591ab860b25987fd5602528e94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44525455_5d990b8e",
        "filename": "init/property_service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 779,
      "author": {
        "id": 1340374
      },
      "writtenOn": "2019-02-04T20:29:08Z",
      "side": 1,
      "message": "Done. FWIW, other places in this file are using android::base::GetProperty; I didn\u0027t change them with this update.",
      "parentUuid": "f6405f63_72885182",
      "range": {
        "startLine": 779,
        "startChar": 51,
        "endLine": 779,
        "endChar": 62
      },
      "revId": "fc744f23268467591ab860b25987fd5602528e94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0de97c92_a3ce42d8",
        "filename": "init/property_service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 784,
      "author": {
        "id": 1340374
      },
      "writtenOn": "2019-02-01T19:44:28Z",
      "side": 1,
      "message": "This construction of the fingerprint matches https://android.googlesource.com/platform/frameworks/base/+/master/core/java/android/os/Build.java#957",
      "revId": "fc744f23268467591ab860b25987fd5602528e94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b420f01_acb3ef9d",
        "filename": "init/property_service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 784,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-02-04T14:58:11Z",
      "side": 1,
      "message": "instead of manually constructing it here, could you grab ro.\u003cpartition\u003e.build.fingerprint instead? that should be set appropriately I think?",
      "parentUuid": "0de97c92_a3ce42d8",
      "revId": "fc744f23268467591ab860b25987fd5602528e94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50bebd1e_b8d7b494",
        "filename": "init/property_service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 784,
      "author": {
        "id": 1340374
      },
      "writtenOn": "2019-02-04T16:03:06Z",
      "side": 1,
      "message": "I think it needs to be constructed here. Only the system partition knows the proper values for ro.build.*, and if it is a generic system image, it won\u0027t know the proper values for ro.product.* (they need to be resolved by other partitions).",
      "parentUuid": "0b420f01_acb3ef9d",
      "revId": "fc744f23268467591ab860b25987fd5602528e94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9881b102_1ddb27f6",
        "filename": "init/property_service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 784,
      "author": {
        "id": 1060959
      },
      "writtenOn": "2019-02-04T17:22:16Z",
      "side": 1,
      "message": "these ro.build.* props will only differ from ro.\u003cpartition\u003e.build.* props if the partitions are built at different releases right?. I would\u0027ve thought we\u0027d rework the fingerprint more substantially (a la b/110206261) before we do that.",
      "parentUuid": "50bebd1e_b8d7b494",
      "revId": "fc744f23268467591ab860b25987fd5602528e94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}