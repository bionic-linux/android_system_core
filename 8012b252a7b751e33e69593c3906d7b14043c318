{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "6ba78e08_49f3036d",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-11-20T00:12:03Z",
      "side": 1,
      "message": "Also, these doesn\u0027t seem to differentiate the two",
      "range": {
        "startLine": 148,
        "startChar": 0,
        "endLine": 153,
        "endChar": 73
      },
      "revId": "8012b252a7b751e33e69593c3906d7b14043c318",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6ad7e85f_00118ec4",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-11-20T00:12:23Z",
      "side": 1,
      "message": "same here",
      "range": {
        "startLine": 169,
        "startChar": 0,
        "endLine": 170,
        "endChar": 74
      },
      "revId": "8012b252a7b751e33e69593c3906d7b14043c318",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b2e4b525_15b752ed",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-11-20T00:28:02Z",
      "side": 1,
      "message": "yes, but all existing systems would be _expected_ to have both. (until we have pure 64 bit systems.)\n\nactually, i guess Go is an example that\u0027s currently 32-bit only. are your changes relevant to Go? if so, i guess just carry on as you were. otherwise it seems like it would be an error to have the 32-bit linker on a current system\u0027s ramdisk? ah, but that\u0027s Pixel-centric thinking --- someone can still ship a new non-Go 32-bit device in 2021 using this stuff?",
      "parentUuid": "6ad7e85f_00118ec4",
      "range": {
        "startLine": 169,
        "startChar": 0,
        "endLine": 170,
        "endChar": 74
      },
      "revId": "8012b252a7b751e33e69593c3906d7b14043c318",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "967a9f06_6748552a",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-11-20T00:41:07Z",
      "side": 1,
      "message": "cf_x86_phone (cuttlefish 32-bit) is another example, though I haven\u0027t installed tune2fs/resize2fs on it yet.",
      "parentUuid": "b2e4b525_15b752ed",
      "range": {
        "startLine": 169,
        "startChar": 0,
        "endLine": 170,
        "endChar": 74
      },
      "revId": "8012b252a7b751e33e69593c3906d7b14043c318",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0f64a504_4f2d7829",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 1
      },
      "lineNbr": 170,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-11-20T00:43:04Z",
      "side": 1,
      "message": "Once I install tune2fs/resize2fs on cuttlefish just like Pixel, this will be needed.",
      "parentUuid": "967a9f06_6748552a",
      "range": {
        "startLine": 169,
        "startChar": 0,
        "endLine": 170,
        "endChar": 74
      },
      "revId": "8012b252a7b751e33e69593c3906d7b14043c318",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78eb5861_7dd9beba",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 1
      },
      "lineNbr": 207,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-11-19T23:31:06Z",
      "side": 1,
      "message": "just add one or the other, not both?",
      "revId": "8012b252a7b751e33e69593c3906d7b14043c318",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9cd75310_ec016f40",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 1
      },
      "lineNbr": 207,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-11-19T23:32:13Z",
      "side": 1,
      "message": "Why not?\n\nIs there an #ifdef guard I can use here?",
      "parentUuid": "78eb5861_7dd9beba",
      "revId": "8012b252a7b751e33e69593c3906d7b14043c318",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9ee49354_b53f249c",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 1
      },
      "lineNbr": 207,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-11-20T00:28:02Z",
      "side": 1,
      "message": "`__LP64__`?",
      "parentUuid": "9cd75310_ec016f40",
      "revId": "8012b252a7b751e33e69593c3906d7b14043c318",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}