{
  "comments": [
    {
      "key": {
        "uuid": "8a2fd4b4_6533201b",
        "filename": "libcutils/socket_inaddr_any_server.c",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1015340
      },
      "writtenOn": "2014-05-05T16:59:20Z",
      "side": 1,
      "message": "This generates a warning on mingw because winsock inexplicably expects const char *.  See http://msdn.microsoft.com/en-us/library/windows/desktop/ms740476(v\u003dvs.85).aspx\n\nThe fix is to cast to const char *.  winsock gets what it wants and Berkeley sockets will still accept the more specific pointer type.",
      "range": {
        "startLine": 49,
        "startChar": 44,
        "endLine": 49,
        "endChar": 58
      },
      "revId": "b9d19b5ce6fe298c8c4c4c0d8cac21cd25fa0e27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8aba749a_247c6e91",
        "filename": "libcutils/socket_inaddr_any_server.c",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2014-05-05T17:07:58Z",
      "side": 1,
      "message": "yes, I saw the references to char * in other areas of code in our tree, did not know the significance of them, thanks for the catch!",
      "parentUuid": "8a2fd4b4_6533201b",
      "range": {
        "startLine": 49,
        "startChar": 44,
        "endLine": 49,
        "endChar": 58
      },
      "revId": "b9d19b5ce6fe298c8c4c4c0d8cac21cd25fa0e27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a2fd4b4_e20726a3",
        "filename": "libcutils/str_parms.c",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2014-05-05T16:23:57Z",
      "side": 1,
      "message": "This is a result in a flaw in the toolset, recommend the sdk team investigate and find a way to nullify this adjustment.",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 35,
        "endChar": 6
      },
      "revId": "b9d19b5ce6fe298c8c4c4c0d8cac21cd25fa0e27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8aba749a_a40cde58",
        "filename": "libcutils/str_parms.c",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1015340
      },
      "writtenOn": "2014-05-05T16:59:20Z",
      "side": 1,
      "message": "Not really a flaw in the toolchain; Windows\u0027s C runtime doesn\u0027t include these functions.\n\nIs str_parms ever actually used by any host code?  Otherwise I\u0027d expect breakage at link time.\n\nI prefer just disabling -Werror while investigating.  It\u0027s ugly but less ugly than silencing a legitimate warning.",
      "parentUuid": "8a2fd4b4_e20726a3",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 35,
        "endChar": 6
      },
      "revId": "b9d19b5ce6fe298c8c4c4c0d8cac21cd25fa0e27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aacbb83b_8022e43c",
        "filename": "libcutils/str_parms.c",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2014-05-05T17:07:58Z",
      "side": 1,
      "message": "What about removing str_parms.c from the host build? That would be a more accurate check of whether it is used (expecting a link error when I build without).\n\nDo we want to ifdef to use alternate handlers (strtok(), strdup() and malloc()+snprintf()) if the above fails?",
      "parentUuid": "8aba749a_a40cde58",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 35,
        "endChar": 6
      },
      "revId": "b9d19b5ce6fe298c8c4c4c0d8cac21cd25fa0e27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a2fd4b4_e5ad7088",
        "filename": "libcutils/str_parms.c",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1015340
      },
      "writtenOn": "2014-05-05T17:16:01Z",
      "side": 1,
      "message": "Short term just disable -Werror, we can investigate the right solution once the build is unbroken.\n\nMedium term we should determine whether this belongs in a host build, and if so use the corresponding Windows CRT functions on mingw builds.  Windows has stdio extensions which are often very similar to the missing POSIX functions.",
      "parentUuid": "aacbb83b_8022e43c",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 35,
        "endChar": 6
      },
      "revId": "b9d19b5ce6fe298c8c4c4c0d8cac21cd25fa0e27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aacbb83b_602b380b",
        "filename": "libcutils/str_parms.c",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1001100
      },
      "writtenOn": "2014-05-05T17:25:56Z",
      "side": 1,
      "message": "I\u0027d go for that. I\u0027m in favor of disabling whole library functions that are never used in windows host apps and only provide a complex re-implementation if truly useful. Otherwise you risk wasting your time writing an implementation that is never actually tested and if someone calls it later, it might be buggy and nobody knows.\n\nIf you do that, please add a HAVE_METHOD_NAME in build/core/combo/include/arch/*/AndroidConfig.h that is defined for all platforms except Windows. I\u0027d like to avoid sprinkling the code base with #ifndef _WIN32 as much as possible. It\u0027s more work to add a HAVE_xyz define but it\u0027s way more expressive of why something is missing.\n\nAlso please don\u0027t undef WIN32 (it\u0027s ok for local testing but I\u0027m always worried that would get merged by mistake).",
      "parentUuid": "aacbb83b_8022e43c",
      "range": {
        "startLine": 27,
        "startChar": 0,
        "endLine": 35,
        "endChar": 6
      },
      "revId": "b9d19b5ce6fe298c8c4c4c0d8cac21cd25fa0e27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}