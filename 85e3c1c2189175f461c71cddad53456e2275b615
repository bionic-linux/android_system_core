{
  "comments": [
    {
      "key": {
        "uuid": "711bb8b8_8c6dabd9",
        "filename": "fastboot/Android.mk",
        "patchSetId": 1
      },
      "lineNbr": 68,
      "author": {
        "id": 1078119
      },
      "writtenOn": "2016-02-02T21:57:13Z",
      "side": 1,
      "message": "Needed for FRIEND_TEST() macro to allow tests to muck with some protected class members.",
      "range": {
        "startLine": 68,
        "startChar": 4,
        "endLine": 68,
        "endChar": 17
      },
      "revId": "85e3c1c2189175f461c71cddad53456e2275b615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "711bb8b8_ec437f45",
        "filename": "fastboot/socket.cpp",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-02-02T21:58:28Z",
      "side": 1,
      "message": "the reason that having cutils_socket_buffer_t just be a typedef (to two different types) seemed reasonable was because it avoided any translation. if our only known user is going to have to do that anyway, should SendBuffer move to libcutils as cutils_socket_buffer_t, and the translation happen there?",
      "revId": "85e3c1c2189175f461c71cddad53456e2275b615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31c3005d_1a137dac",
        "filename": "fastboot/socket.cpp",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1078119
      },
      "writtenOn": "2016-02-02T22:10:07Z",
      "side": 1,
      "message": "Yeah that probably makes sense, I didn\u0027t realize initially I was going to have to do so much additional work here.\n\nI\u0027ll rework this a bit as you suggest, should simplify it.",
      "parentUuid": "711bb8b8_ec437f45",
      "revId": "85e3c1c2189175f461c71cddad53456e2275b615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31c3005d_5abb35dc",
        "filename": "fastboot/socket.cpp",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-02-02T21:58:28Z",
      "side": 1,
      "message": "what if you fail with ECONNRESET? this doesn\u0027t seem right. other than EINTR (which is already handled by TEMP_FAILURE_RETRY), why would you try again?",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 211,
        "endChar": 9
      },
      "revId": "85e3c1c2189175f461c71cddad53456e2275b615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "711bb8b8_ec37ffb3",
        "filename": "fastboot/socket.cpp",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1078119
      },
      "writtenOn": "2016-02-02T22:10:07Z",
      "side": 1,
      "message": "I think this does what you\u0027re suggesting already unless I\u0027m misunderstanding you - if this iteration returns -1, we break the loop and return the total number of bytes sent so far.\n\nThe special case is just saying if we never completed a send at all, return -1 instead of 0. I\u0027ll look into reworking the code to make this a little more obvious.",
      "parentUuid": "31c3005d_5abb35dc",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 211,
        "endChar": 9
      },
      "revId": "85e3c1c2189175f461c71cddad53456e2275b615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f127a8f2_10342ccd",
        "filename": "fastboot/socket.cpp",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-02-02T22:50:59Z",
      "side": 1,
      "message": "oh, duh. misread. which perhaps just proves that the special case is confusing :-)\n\nis it useful? if your success/failure test is actually \"does the return value equal the total size of the vector?\", how does -1 help callers? (and doesn\u0027t that mean that success/failure is actually hard to test for because you need to iterate your vector/carry additional metadata. another argument in favor of a bool return?)",
      "parentUuid": "711bb8b8_ec37ffb3",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 211,
        "endChar": 9
      },
      "revId": "85e3c1c2189175f461c71cddad53456e2275b615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71c9f878_fca6c129",
        "filename": "fastboot/socket.cpp",
        "patchSetId": 1
      },
      "lineNbr": 211,
      "author": {
        "id": 1078119
      },
      "writtenOn": "2016-02-02T23:37:55Z",
      "side": 1,
      "message": "Yeah agreed, switching it to a bool makes more sense here. And changing to a custom cutils_socket_buffer_t type is looking like it makes things a lot simpler too.\n\nTrying to rush too much to get the TCP done by tomorrow, sorry, I\u0027ll slow down a bit and try to think these things through a little more!",
      "parentUuid": "f127a8f2_10342ccd",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 211,
        "endChar": 9
      },
      "revId": "85e3c1c2189175f461c71cddad53456e2275b615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3115c084_67432cf4",
        "filename": "fastboot/socket.cpp",
        "patchSetId": 1
      },
      "lineNbr": 235,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-02-02T21:58:28Z",
      "side": 1,
      "message": "returning -1 or total is misleading too. do you really just want a boolean here, since you seem to be assuming that the only thing to do on failure is give up anyway (since you return -1 rather than what, if anything, was actually transferred)?",
      "range": {
        "startLine": 235,
        "startChar": 0,
        "endLine": 235,
        "endChar": 17
      },
      "revId": "85e3c1c2189175f461c71cddad53456e2275b615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5116b490_abba0d24",
        "filename": "fastboot/socket.cpp",
        "patchSetId": 1
      },
      "lineNbr": 235,
      "author": {
        "id": 1078119
      },
      "writtenOn": "2016-02-02T22:10:07Z",
      "side": 1,
      "message": "Boolean probably makes sense here as well, but current behavior does return the total number of bytes transferred up until the failure.",
      "parentUuid": "3115c084_67432cf4",
      "range": {
        "startLine": 235,
        "startChar": 0,
        "endLine": 235,
        "endChar": 17
      },
      "revId": "85e3c1c2189175f461c71cddad53456e2275b615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "31c3005d_baa8c997",
        "filename": "fastboot/socket.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-02-02T21:58:28Z",
      "side": 1,
      "message": "why is this nested?",
      "revId": "85e3c1c2189175f461c71cddad53456e2275b615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "711bb8b8_4cf73341",
        "filename": "fastboot/socket.h",
        "patchSetId": 1
      },
      "lineNbr": 54,
      "author": {
        "id": 1078119
      },
      "writtenOn": "2016-02-02T22:10:07Z",
      "side": 1,
      "message": "Just to avoid putting it in the global namespace.",
      "parentUuid": "31c3005d_baa8c997",
      "revId": "85e3c1c2189175f461c71cddad53456e2275b615",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}