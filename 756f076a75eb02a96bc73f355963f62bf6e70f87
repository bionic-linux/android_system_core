{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "db16f9fd_5b51e057",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2023-02-20T00:55:28Z",
      "side": 1,
      "message": "How can we ensure that?",
      "range": {
        "startLine": 10,
        "startChar": 1,
        "endLine": 10,
        "endChar": 64
      },
      "revId": "756f076a75eb02a96bc73f355963f62bf6e70f87",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f4577848_52abebd2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2023-02-22T00:55:46Z",
      "side": 1,
      "message": "There are several possibilities:\n- Either by inspecting that code. It is relatively easy to see that that code does not queue actions to the am object.\n- Or by adding a comment above the code that computes next_process_action_time that explains that that code should not queue actions.\n\nAnother solution would be not to use the singleton pattern for the ActionManager class but that would be a very invasive solution. This would require to pass the ActionManager object to many methods.\n\nDo you perhaps have a preference?",
      "parentUuid": "db16f9fd_5b51e057",
      "range": {
        "startLine": 10,
        "startChar": 1,
        "endLine": 10,
        "endChar": 64
      },
      "revId": "756f076a75eb02a96bc73f355963f62bf6e70f87",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79575379_be66a872",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2023-02-22T01:13:07Z",
      "side": 1,
      "message": "I believe that you did the inspection correctly; that wasn\u0027t the question ðŸ˜Š\n\nI just felt like the condition that this CL depends on is easy to be broken in the future, and wondered if there\u0027s a way to prevent that.\n\nAdding a comment sounds fair. I actually wanted a stronger assertion (like breaking the assumption will make the code not compilable), but if that requires a major refactoring like you described, I don\u0027t want to go that far.",
      "parentUuid": "f4577848_52abebd2",
      "range": {
        "startLine": 10,
        "startChar": 1,
        "endLine": 10,
        "endChar": 64
      },
      "revId": "756f076a75eb02a96bc73f355963f62bf6e70f87",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8622f6b6_2033b9f3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2023-02-22T19:27:34Z",
      "side": 1,
      "message": "How about adding a comment in init.cpp?",
      "parentUuid": "79575379_be66a872",
      "range": {
        "startLine": 10,
        "startChar": 1,
        "endLine": 10,
        "endChar": 64
      },
      "revId": "756f076a75eb02a96bc73f355963f62bf6e70f87",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db85c8a0_7a445177",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2023-02-23T01:49:50Z",
      "side": 1,
      "message": "That will work for me!",
      "parentUuid": "8622f6b6_2033b9f3",
      "range": {
        "startLine": 10,
        "startChar": 1,
        "endLine": 10,
        "endChar": 64
      },
      "revId": "756f076a75eb02a96bc73f355963f62bf6e70f87",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "28a280d6_a6a81a64",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2023-02-23T21:32:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "db85c8a0_7a445177",
      "range": {
        "startLine": 10,
        "startChar": 1,
        "endLine": 10,
        "endChar": 64
      },
      "revId": "756f076a75eb02a96bc73f355963f62bf6e70f87",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}