{
  "comments": [
    {
      "key": {
        "uuid": "9e48351f_9af71784",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1004277
      },
      "writtenOn": "2017-03-04T00:10:27Z",
      "side": 1,
      "message": "Not sure what this means?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 60
      },
      "revId": "6b6e1d3f7a7f3dde5bc0c7d8f3852f38f5de6f18",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1a06b264_e2af2ef2",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2017-03-06T16:31:07Z",
      "side": 1,
      "message": "End-to-End means I can write a log entry, and then turn around and read it back to confirm its content. This makes some aspects of the transport untestable except by a human. The gTests have been tuned instead to make sure that _nothing_ can be read back when this transport has been selected. In the case of LOGGER_STDERR, the message goes to stderr and if standalone (meaning you have not selected any other logger frontend mask that _does_ provide End-To-End), there is no way to read it back.\n\nThis is also reflected in the transport driver for this mask, it has no reader abstraction layer.",
      "parentUuid": "9e48351f_9af71784",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 60
      },
      "revId": "6b6e1d3f7a7f3dde5bc0c7d8f3852f38f5de6f18",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}