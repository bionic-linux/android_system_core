syntax = "proto2";
package android.trusty.keymaster.fuzz;

message Blob {
    required bytes data = 1;
}

message KeyParam {
  enum InvalidTag {
      KM_TAG_INVALID = 0;
  }
  enum BoolTag {
    KM_TAG_ECIES_SINGLE_HASH_MODE = 201;
    KM_TAG_INCLUDE_UNIQUE_ID = 202;
    KM_TAG_CALLER_NONCE = 7;
    KM_TAG_BOOTLOADER_ONLY = 302;
    KM_TAG_ROLLBACK_RESISTANCE = 303;
    KM_TAG_EARLY_BOOT_ONLY = 305;
    KM_TAG_ALL_USERS = 500;
    KM_TAG_NO_AUTH_REQUIRED = 503;
    KM_TAG_ALLOW_WHILE_ON_BODY = 506;
    KM_TAG_TRUSTED_USER_PRESENCE_REQUIRED = 507;
    KM_TAG_TRUSTED_CONFIRMATION_REQUIRED = 508;
    KM_TAG_UNLOCKED_DEVICE_REQUIRED = 509;
    KM_TAG_ALL_APPLICATIONS = 600;
    KM_TAG_EXPORTABLE = 602;
    KM_TAG_DEVICE_UNIQUE_ATTESTATION = 720;
    KM_TAG_ROLLBACK_RESISTANT = 703;
    KM_TAG_IDENTITY_CREDENTIAL_KEY = 721;
    KM_TAG_STORAGE_KEY = 722;
    KM_TAG_RESET_SINCE_ID_ROTATION = 1004;
  }
  enum IntTag {
    KM_TAG_KEY_SIZE = 3;
    KM_TAG_MIN_MAC_LENGTH = 8;
    KM_TAG_MIN_SECONDS_BETWEEN_OPS = 403;
    KM_TAG_MAX_USES_PER_BOOT = 404;
    KM_TAG_USAGE_COUNT_LIMIT = 405;
    KM_TAG_USER_ID = 501;
    KM_TAG_AUTH_TIMEOUT = 505;
    KM_TAG_VENDOR_PATCHLEVEL =  718;
    KM_TAG_BOOT_PATCHLEVEL =  719;
    KM_TAG_MAC_LENGTH = 1003;
    KM_TAG_MAX_BOOT_LEVEL = 1010;
    KM_TAG_OS_VERSION = 705;
    KM_TAG_OS_PATCHLEVEL = 706;
  }
  enum LongTag {
    KM_TAG_RSA_PUBLIC_EXPONENT = 200;
    KM_TAG_USER_SECURE_ID = 502;
  }
  enum DateTag {
    KM_TAG_ACTIVE_DATETIME = 400;
    KM_TAG_ORIGINATION_EXPIRE_DATETIME = 401;
    KM_TAG_USAGE_EXPIRE_DATETIME = 402;
    KM_TAG_CERTIFICATE_NOT_BEFORE = 1008;
    KM_TAG_CERTIFICATE_NOT_AFTER = 1009;
    KM_TAG_CREATION_DATETIME = 701;
  }
  enum BlobTag {
    KM_TAG_APPLICATION_ID = 601;
    KM_TAG_APPLICATION_DATA = 700;
    KM_TAG_ROOT_OF_TRUST = 704;
    KM_TAG_UNIQUE_ID = 707;
    KM_TAG_ATTESTATION_CHALLENGE = 708;
    KM_TAG_ATTESTATION_APPLICATION_ID = 709;
    KM_TAG_ATTESTATION_ID_BRAND = 710;
    KM_TAG_ATTESTATION_ID_DEVICE = 711;
    KM_TAG_ATTESTATION_ID_PRODUCT = 712;
    KM_TAG_ATTESTATION_ID_SERIAL = 713;
    KM_TAG_ATTESTATION_ID_IMEI = 714;
    KM_TAG_ATTESTATION_ID_MEID = 715;
    KM_TAG_ATTESTATION_ID_MANUFACTURER = 716;
    KM_TAG_ATTESTATION_ID_MODEL = 717;
    KM_TAG_ASSOCIATED_DATA = 1000;
    KM_TAG_NONCE = 1001;
    KM_TAG_AUTH_TOKEN = 1002;
    KM_TAG_CONFIRMATION_TOKEN = 1005;
    KM_TAG_CERTIFICATE_SUBJECT = 1007;
  }
  enum BignumTag {
    KM_TAG_CERTIFICATE_SERIAL = 1006;
  }
  message TaggedBool {
      required BoolTag tag = 1;
      required bool value = 2;
  }
  message TaggedInt {
      required IntTag tag = 1;
      required uint32 value = 2;
  }
  message TaggedLong {
      required LongTag tag = 1;
      required uint64 value = 2;
  }
  message TaggedDate {
      required DateTag tag = 1;
      required uint64 value = 2;
  }
  message TaggedBlob {
      required BlobTag tag = 1;
      required Blob value = 2;
  }
  message TaggedBignum {
      required BignumTag tag = 1;
      required Blob value = 2;
  }
  message TaggedEnum {
      oneof value {
        Purpose purpose = 1;
        Algorithm algorithm = 2;
        BlockMode block_mode = 3;
        Digest digest = 4;
        Padding padding = 5;
        Kdf kdf = 6;
        EcCurve ec_curve = 7;
        KeyBlobUsageReqs key_blob_usage_reqs = 8;
        HwAuthType hw_auth_type = 9;
        KeyOrigin key_origin = 10;
        Digest rsa_oaep_mgf_digest = 11;
      }
  }

  oneof tagged_value {
    TaggedEnum enumerated = 1;
    TaggedBool boolean = 2;
    TaggedInt integer = 3;
    TaggedLong long_integer = 4;
    TaggedDate date_time = 5;
    TaggedBlob blob = 6;
    TaggedBignum bignum = 7;
  }
  required bool tag_repeats = 8;
  optional uint32 random_value = 9;
}


enum VerifiedBoot {
    KM_VERIFIED_BOOT_VERIFIED = 0;
    KM_VERIFIED_BOOT_SELF_SIGNED = 1;
    KM_VERIFIED_BOOT_UNVERIFIED = 2;
    KM_VERIFIED_BOOT_FAILED = 3;
}

message VerificationToken {
    enum SecurityLevel {
        KM_SECURITY_LEVEL_SOFTWARE = 0;
        KM_SECURITY_LEVEL_TRUSTED_ENVIRONMENT = 1;
        KM_SECURITY_LEVEL_STRONGBOX = 2;
    }
    required uint64 challenge = 1;
    required uint64 timestamp = 2;
    required AuthorizationSet parameters_verified = 3;
    required SecurityLevel security_level = 4;
    required Blob mac = 5;
}

message HardwareAuthToken {
    enum HwAuthenticatorType {
        HW_AUTH_NONE = 0;
        HW_AUTH_PASSWORD = 1;
        HW_AUTH_FINGERPRINT = 2;
        // This should be 0xFFFF_FFFF
        HW_AUTH_ANY = -1;
    }
    required uint64 challenge = 1;
    required uint64 user_id = 2;
    required uint64 authenticator_id = 3;
    required HwAuthenticatorType authenticator_type = 4;
    required uint64 timestamp = 5;
    required Blob mac = 6;
}

message HmacSharingParametersArray  {
    repeated HmacSharingParameters params = 1;
}

message HmacSharingParameters {
    required Blob seed = 1;
    required Blob nonce = 2;
}

message AuthorizationSet {
  repeated KeyParam elements = 1;
}

message Buffer {
    required Blob blob = 1;
    required uint64 read_pos = 2;
    required uint64 write_pos = 3;
}

enum Purpose {
  KM_PURPOSE_ENCRYPT = 0;
  KM_PURPOSE_DECRYPT = 1;
  KM_PURPOSE_SIGN = 2;
  KM_PURPOSE_VERIFY = 3;
  KM_PURPOSE_DERIVE_KEY = 4;
  KM_PURPOSE_WRAP = 5;
  KM_PURPOSE_AGREE_KEY = 6;
  KM_PURPOSE_ATTEST_KEY = 7;
}

enum Algorithm {
    KM_ALGORITHM_RSA = 1;
    KM_ALGORITHM_EC = 3;
    KM_ALGORITHM_AES = 32;
    KM_ALGORITHM_TRIPLE_DES = 33;
    KM_ALGORITHM_HMAC = 128;
}

enum BlockMode {
    KM_MODE_ECB = 1;
    KM_MODE_CBC = 2;
    KM_MODE_CTR = 3;
    KM_MODE_GCM = 32;
}

enum Digest {
    KM_DIGEST_NONE = 0;
    KM_DIGEST_MD5 = 1;
    KM_DIGEST_SHA1 = 2;
    KM_DIGEST_SHA_2_224 = 3;
    KM_DIGEST_SHA_2_256 = 4;
    KM_DIGEST_SHA_2_384 = 5;
    KM_DIGEST_SHA_2_512 = 6;
}

enum Padding {
    KM_PAD_NONE = 1;
    KM_PAD_RSA_OAEP = 2;
    KM_PAD_RSA_PSS = 3;
    KM_PAD_RSA_PKCS1_1_5_ENCRYPT = 4;
    KM_PAD_RSA_PKCS1_1_5_SIGN = 5;
    KM_PAD_PKCS7 = 64;
}

enum Kdf {
    KM_KDF_NONE = 0;
    KM_KDF_RFC5869_SHA256 = 1;
    KM_KDF_ISO18033_2_KDF1_SHA1 = 2;
    KM_KDF_ISO18033_2_KDF1_SHA256 = 3;
    KM_KDF_ISO18033_2_KDF2_SHA1 = 4;
    KM_KDF_ISO18033_2_KDF2_SHA256 = 5;
}

enum EcCurve {
    KM_EC_CURVE_P_224 = 0;
    KM_EC_CURVE_P_256 = 1;
    KM_EC_CURVE_P_384 = 2;
    KM_EC_CURVE_P_521 = 3;
}

enum KeyBlobUsageReqs {
    KM_BLOB_STANDALONE = 0;
    KM_BLOB_REQUIRES_FILE_SYSTEM = 1;
}

enum HwAuthType {
    HW_AUTH_NONE = 0;
    HW_AUTH_PASSWORD = 1;
    HW_AUTH_FINGERPRINT = 2;
    HW_AUTH_ANY = -1;
}

enum KeyOrigin {
    KM_ORIGIN_GENERATED = 0;
    KM_ORIGIN_DERIVED = 1;
    KM_ORIGIN_IMPORTED = 2;
    KM_ORIGIN_UNKNOWN = 3;
}

enum Version {
    KEYMASTER_1 = 10;
    KEYMASTER_1_1 = 11;
    KEYMASTER_2 = 20;
    KEYMASTER_3 = 30;
    KEYMASTER_4 = 40;
    KEYMASTER_4_1 = 41;
    KEYMINT_1 = 100;
}

enum KeyFormat {
    KM_KEY_FORMAT_X509 = 0;
    KM_KEY_FORMAT_PKCS8 = 1;
    KM_KEY_FORMAT_RAW = 3;
}
