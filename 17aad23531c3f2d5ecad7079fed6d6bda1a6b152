{
  "comments": [
    {
      "key": {
        "uuid": "ad4bc472_87bae8ce",
        "filename": "include/cutils/service.h",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-08-19T17:40:52Z",
      "side": 1,
      "message": "use __BEGIN_DECLS/__END_DECLS from sys/cdefs.h",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad4bc472_8a6aefe8",
        "filename": "include/cutils/service.h",
        "patchSetId": 1
      },
      "lineNbr": 24,
      "author": {
        "id": 1023338
      },
      "writtenOn": "2013-08-21T19:52:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ad4bc472_87bae8ce",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad4bc472_27a574ae",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-08-19T17:40:52Z",
      "side": 1,
      "message": "don\u0027t use caps, make them look like #defines.",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad4bc472_cd780184",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1023338
      },
      "writtenOn": "2013-08-21T19:52:08Z",
      "side": 1,
      "message": "Done. These are constants so I made them look like #defines intentionally. I\u0027ve now made them lowercase so see which way you like better.",
      "parentUuid": "ad4bc472_27a574ae",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d25b0ee_edc9c143",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-08-21T20:07:49Z",
      "side": 1,
      "message": "yeah, I see what you are saying. I usually do caps for pre-processor stuff in C so it\u0027s easy to spot. In that case, you can just use #defines for strings since the all the uses will all be collapsed into the same single string anyway. If you want to keep them const strings with real ptrs, you can go ahead and use caps here if you really want..",
      "parentUuid": "ad4bc472_cd780184",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d25b0ee_ad8ce9c5",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1023338
      },
      "writtenOn": "2013-08-21T22:46:53Z",
      "side": 1,
      "message": "Switched to #define.",
      "parentUuid": "0d25b0ee_edc9c143",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad4bc472_476f5031",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-08-19T17:40:52Z",
      "side": 1,
      "message": "you should at least use strlcpy/strlcat.\n\nYou can also use snprintf, but that will likely be less readable :)\n\nsnprintf(start_command, sizeof(start_command), \"%s%s%s\", service_name, args ? \":\" : \"\", args ?: \"\");",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad4bc472_ad4b855a",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 42,
      "author": {
        "id": 1023338
      },
      "writtenOn": "2013-08-21T19:52:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ad4bc472_476f5031",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad4bc472_6795ac29",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-08-19T17:40:52Z",
      "side": 1,
      "message": "why not put the sched_yield in the service_wait_for_predicate() so you don\u0027t have to keep doing it before hand?",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad4bc472_cd4ec16c",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 57,
      "author": {
        "id": 1023338
      },
      "writtenOn": "2013-08-21T19:52:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ad4bc472_6795ac29",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad4bc472_67bc8cb3",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-08-19T17:40:52Z",
      "side": 1,
      "message": "newline between declarations and code",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad4bc472_0d5df91f",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1023338
      },
      "writtenOn": "2013-08-21T19:52:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ad4bc472_67bc8cb3",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad4bc472_47c1901d",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-08-19T17:40:52Z",
      "side": 1,
      "message": "newline between declarations and code",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad4bc472_2d58b52f",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1023338
      },
      "writtenOn": "2013-08-21T19:52:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ad4bc472_47c1901d",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad4bc472_87c66830",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-08-19T17:40:52Z",
      "side": 1,
      "message": "specify the timeout in ms, and use an unsigned long",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad4bc472_2db9d578",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1023338
      },
      "writtenOn": "2013-08-21T19:52:08Z",
      "side": 1,
      "message": "I\u0027ve switched to an unsigned long but I have not yet switched the interface to accept timeouts in ms. Given that the poll period is 100ms, I won\u0027t be able to honor arbitrary millisecond-resolution timeouts.\n\nBy only allowing second-resolution timeouts, I can honor any requested timeout value. Moreover, all current clients in the existing Android codebase specify their timeouts in multiples of seconds. I\u0027m hoping that once we provide a proper blocking interface for init properties, we will be able to honor millisecond-resolution timeouts. At that point, it may be worth migrating clients over.\n\nThoughts?",
      "parentUuid": "ad4bc472_87c66830",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d25b0ee_cd6cbd78",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-08-21T20:03:13Z",
      "side": 1,
      "message": "your poll interval is an implementation detail and sohuldn\u0027t drive the interface design. Most other polling interfaces take timeouts in milliseconds, and you should adhere to that. I don\u0027t think that anyone assumes that just because the unit is milliseconds that the timeout will be millisecond accurate.\n\nPlease go ahead and convert to milliseconds.",
      "parentUuid": "ad4bc472_2db9d578",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d25b0ee_ad7349e5",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 76,
      "author": {
        "id": 1023338
      },
      "writtenOn": "2013-08-21T22:46:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d25b0ee_cd6cbd78",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad4bc472_2708d4a9",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-08-19T17:40:52Z",
      "side": 1,
      "message": "the traditional way is to define USEC_PER_SEC, MSEC_PER_SEC, USEC_PER_MSEC, etc. and then use them for your operation so its clear.\n\nThen define your poll interval as a #define in terms of usecs, etc.\n\nAlso, we really should get a real polling interface to init for properties so you don\u0027t have to spin+sleep like this.",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad4bc472_ed5dfd7f",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1023338
      },
      "writtenOn": "2013-08-21T19:52:08Z",
      "side": 1,
      "message": "Done.\n\nI agree that init should provide an interface where clients don\u0027t have to spin/poll for property changes. Ideally, a caller be able to block until the next property change with a timeout.\n\nThe motivation behind this file is to hide the polling so that if/when we do have a blocking interface, we can update this one function and all clients would benefit.",
      "parentUuid": "ad4bc472_2708d4a9",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d25b0ee_2d95992a",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 77,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-08-21T20:03:13Z",
      "side": 1,
      "message": "my suggestion was to put the polling interface up top as a #define",
      "parentUuid": "ad4bc472_ed5dfd7f",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad4bc472_4736306b",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-08-19T17:40:52Z",
      "side": 1,
      "message": "dangerous to just pass a string ptr and hope it has enough space. I know this file is short and you can validate all the uses, but the much safer way would be to take length of the output string, and then only strlcpy() that much into it.",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d25b0ee_cd479d24",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1023338
      },
      "writtenOn": "2013-08-21T19:52:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ad4bc472_4736306b",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad4bc472_67180ceb",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2013-08-19T17:40:52Z",
      "side": 1,
      "message": "why aren\u0027t you using snprintf?",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad4bc472_4dead129",
        "filename": "libcutils/service.c",
        "patchSetId": 1
      },
      "lineNbr": 94,
      "author": {
        "id": 1023338
      },
      "writtenOn": "2013-08-21T19:52:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ad4bc472_67180ceb",
      "revId": "17aad23531c3f2d5ecad7079fed6d6bda1a6b152",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}