{
  "comments": [
    {
      "key": {
        "uuid": "a9e84590_9aa25f67",
        "filename": "trusty/libtrusty/include/trusty/shm.h",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1045553
      },
      "writtenOn": "2020-06-15T22:32:20Z",
      "side": 1,
      "message": "You are passing this to IOCTL it should be fixed size",
      "range": {
        "startLine": 10,
        "startChar": 4,
        "endLine": 10,
        "endChar": 31
      },
      "revId": "3c19ee8f421c0eee2338bcd794d8f7a3f19f25ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3832c2ff_e8b4eb71",
        "filename": "trusty/libtrusty/include/trusty/shm.h",
        "patchSetId": 2
      },
      "lineNbr": 10,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2020-06-15T23:10:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a9e84590_9aa25f67",
      "range": {
        "startLine": 10,
        "startChar": 4,
        "endLine": 10,
        "endChar": 31
      },
      "revId": "3c19ee8f421c0eee2338bcd794d8f7a3f19f25ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3a409d7d_b9817829",
        "filename": "trusty/libtrusty/include/trusty/tipc.h",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2020-06-15T23:04:36Z",
      "side": 1,
      "message": "Do we need to overlap with read() functionality?",
      "range": {
        "startLine": 28,
        "startChar": 26,
        "endLine": 28,
        "endChar": 61
      },
      "revId": "3c19ee8f421c0eee2338bcd794d8f7a3f19f25ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "485b993c_005415e6",
        "filename": "trusty/libtrusty/include/trusty/tipc.h",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2020-06-15T23:10:42Z",
      "side": 1,
      "message": "This signature was decided upon with the design doc. Since tipc is a message-oriented protocol, it is meaningfully different to send data *and* fds vs just send fds.",
      "parentUuid": "3a409d7d_b9817829",
      "range": {
        "startLine": 28,
        "startChar": 26,
        "endLine": 28,
        "endChar": 61
      },
      "revId": "3c19ee8f421c0eee2338bcd794d8f7a3f19f25ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2abe145b_ea5bab60",
        "filename": "trusty/libtrusty/include/trusty/tipc.h",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2020-06-15T23:04:36Z",
      "side": 1,
      "message": "This signature and struct definition suggest that this function only works with shared memory fds. Consider changing it into a generic function that sends fds (albeit with only memfds supported for now).",
      "range": {
        "startLine": 28,
        "startChar": 63,
        "endLine": 29,
        "endChar": 30
      },
      "revId": "3c19ee8f421c0eee2338bcd794d8f7a3f19f25ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3ea99298_c6698e55",
        "filename": "trusty/libtrusty/include/trusty/tipc.h",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2020-06-15T23:10:42Z",
      "side": 1,
      "message": "We can\u0027t generically send fds because reviewers wanted the ability to decide whether to SHARE or LEND explicitly rather than dynamically based on fd type.",
      "parentUuid": "2abe145b_ea5bab60",
      "range": {
        "startLine": 28,
        "startChar": 63,
        "endLine": 29,
        "endChar": 30
      },
      "revId": "3c19ee8f421c0eee2338bcd794d8f7a3f19f25ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f264990_fd71eb38",
        "filename": "trusty/libtrusty/include/trusty/tipc.h",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2020-06-15T23:32:04Z",
      "side": 1,
      "message": "OK, I wasn\u0027t aware we already settled on the signature.\nWhat I had in mind was to remove reference to shared mem from type names and use some opaque flags member variable instead of enum transfer_kind. That way, we\u0027d leave room to add support for other types of fds. Just some random thoughts. I\u0027m OK with the signature as is.",
      "parentUuid": "3ea99298_c6698e55",
      "range": {
        "startLine": 28,
        "startChar": 63,
        "endLine": 29,
        "endChar": 30
      },
      "revId": "3c19ee8f421c0eee2338bcd794d8f7a3f19f25ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36bfe910_35560259",
        "filename": "trusty/libtrusty/tipc-test/tipc_test.c",
        "patchSetId": 2
      },
      "lineNbr": 894,
      "author": {
        "id": 1045553
      },
      "writtenOn": "2020-06-15T22:54:01Z",
      "side": 1,
      "message": "Write to stderr.",
      "range": {
        "startLine": 894,
        "startChar": 8,
        "endLine": 894,
        "endChar": 14
      },
      "revId": "3c19ee8f421c0eee2338bcd794d8f7a3f19f25ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "19c3ba24_c90b5ff2",
        "filename": "trusty/libtrusty/tipc-test/tipc_test.c",
        "patchSetId": 2
      },
      "lineNbr": 894,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2020-06-15T23:10:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36bfe910_35560259",
      "range": {
        "startLine": 894,
        "startChar": 8,
        "endLine": 894,
        "endChar": 14
      },
      "revId": "3c19ee8f421c0eee2338bcd794d8f7a3f19f25ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f827ac5_6b54aac0",
        "filename": "trusty/libtrusty/tipc-test/tipc_test.c",
        "patchSetId": 2
      },
      "lineNbr": 922,
      "author": {
        "id": 1045553
      },
      "writtenOn": "2020-06-15T22:54:01Z",
      "side": 1,
      "message": "b is not initialized?",
      "range": {
        "startLine": 922,
        "startChar": 17,
        "endLine": 922,
        "endChar": 18
      },
      "revId": "3c19ee8f421c0eee2338bcd794d8f7a3f19f25ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f23af6c_d2619ec4",
        "filename": "trusty/libtrusty/tipc-test/tipc_test.c",
        "patchSetId": 2
      },
      "lineNbr": 922,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2020-06-15T23:10:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0f827ac5_6b54aac0",
      "range": {
        "startLine": 922,
        "startChar": 17,
        "endLine": 922,
        "endChar": 18
      },
      "revId": "3c19ee8f421c0eee2338bcd794d8f7a3f19f25ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e12108b_af149e32",
        "filename": "trusty/libtrusty/tipc-test/tipc_test.c",
        "patchSetId": 2
      },
      "lineNbr": 985,
      "author": {
        "id": 1045553
      },
      "writtenOn": "2020-06-15T22:54:01Z",
      "side": 1,
      "message": "Add to \"usage\".",
      "range": {
        "startLine": 985,
        "startChar": 33,
        "endLine": 985,
        "endChar": 42
      },
      "revId": "3c19ee8f421c0eee2338bcd794d8f7a3f19f25ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "37184b71_1ad6f587",
        "filename": "trusty/libtrusty/tipc-test/tipc_test.c",
        "patchSetId": 2
      },
      "lineNbr": 985,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2020-06-15T23:10:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0e12108b_af149e32",
      "range": {
        "startLine": 985,
        "startChar": 33,
        "endLine": 985,
        "endChar": 42
      },
      "revId": "3c19ee8f421c0eee2338bcd794d8f7a3f19f25ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca004017_a256d6e9",
        "filename": "trusty/libtrusty/tipc_ioctl.h",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1045553
      },
      "writtenOn": "2020-06-15T22:32:20Z",
      "side": 1,
      "message": "Make it fixed size.",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 28,
        "endChar": 11
      },
      "revId": "3c19ee8f421c0eee2338bcd794d8f7a3f19f25ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52691e53_38a8404c",
        "filename": "trusty/libtrusty/tipc_ioctl.h",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2020-06-15T23:10:42Z",
      "side": 1,
      "message": "Since the iovec type will be arch dependent as well, I don\u0027t see a reason to make the size_t independent.",
      "parentUuid": "ca004017_a256d6e9",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 28,
        "endChar": 11
      },
      "revId": "3c19ee8f421c0eee2338bcd794d8f7a3f19f25ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b53894ec_893367cf",
        "filename": "trusty/libtrusty/tipc_ioctl.h",
        "patchSetId": 2
      },
      "lineNbr": 28,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2020-06-19T20:45:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "52691e53_38a8404c",
      "range": {
        "startLine": 28,
        "startChar": 4,
        "endLine": 28,
        "endChar": 11
      },
      "revId": "3c19ee8f421c0eee2338bcd794d8f7a3f19f25ea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}