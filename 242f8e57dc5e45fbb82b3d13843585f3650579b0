{
  "comments": [
    {
      "key": {
        "uuid": "9841dbb6_6211e8be",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1615,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2019-03-18T13:46:55Z",
      "side": 1,
      "message": "Should we check entry.fs_mgr_flags.verify as well? (as it also uses dm-verity underneath).",
      "range": {
        "startLine": 1615,
        "startChar": 8,
        "endLine": 1615,
        "endChar": 31
      },
      "revId": "242f8e57dc5e45fbb82b3d13843585f3650579b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5cca494e_5aa23be5",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1615,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-03-18T19:40:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9841dbb6_6211e8be",
      "range": {
        "startLine": 1615,
        "startChar": 8,
        "endLine": 1615,
        "endChar": 31
      },
      "revId": "242f8e57dc5e45fbb82b3d13843585f3650579b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7c52346d_071d1524",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1628,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2019-03-18T13:46:55Z",
      "side": 1,
      "message": "when will we use this?\n\nDoes it require putting the string \u0027check_at_most_once\" when constructing the dm-verity table?\n\nhttps://android.googlesource.com/platform/system/core/+/4d6f4cc4fe51a06c2cf6bcb12f9e130c02824a7c/fs_mgr/libfs_avb/avb_util.cpp#76",
      "range": {
        "startLine": 1628,
        "startChar": 30,
        "endLine": 1628,
        "endChar": 48
      },
      "revId": "242f8e57dc5e45fbb82b3d13843585f3650579b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "afadc42c_6f6f270e",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1628,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-03-18T17:03:31Z",
      "side": 1,
      "message": "yes, this is needed for Go devices and I believe the DmVerityTarget will add the string in the table if set?\n\nI was wondering though, if we should just make this a class method for the verity target, like IsCheckAtMostOnce() / IsIgnoreZeroBlocks() etc.",
      "parentUuid": "7c52346d_071d1524",
      "range": {
        "startLine": 1628,
        "startChar": 30,
        "endLine": 1628,
        "endChar": 48
      },
      "revId": "242f8e57dc5e45fbb82b3d13843585f3650579b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0be5cfb_b15ff09c",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1628,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-03-18T19:40:24Z",
      "side": 1,
      "message": "Yeah, this is apparently used on some low-end devices. We don\u0027t have the class here, unfortunately, we don\u0027t reconstruct DmTargets from the raw strings DM_TABLE_INFO returns. (yet)",
      "parentUuid": "afadc42c_6f6f270e",
      "range": {
        "startLine": 1628,
        "startChar": 30,
        "endLine": 1628,
        "endChar": 48
      },
      "revId": "242f8e57dc5e45fbb82b3d13843585f3650579b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c5bf483_3f446823",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 2
      },
      "lineNbr": 509,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2019-03-18T13:46:55Z",
      "side": 1,
      "message": "From L509, seems we don\u0027t know why it\u0027s \"external media\" as shown in the LOG at L510.\n\nMaybe just rename forbid_check_most_at_once_ \u003d\u003e !gsi_on_userdata, to make it clear?",
      "range": {
        "startLine": 509,
        "startChar": 12,
        "endLine": 509,
        "endChar": 38
      },
      "revId": "242f8e57dc5e45fbb82b3d13843585f3650579b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f75c9ed2_37eb25b6",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 2
      },
      "lineNbr": 509,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-03-18T19:40:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4c5bf483_3f446823",
      "range": {
        "startLine": 509,
        "startChar": 12,
        "endLine": 509,
        "endChar": 38
      },
      "revId": "242f8e57dc5e45fbb82b3d13843585f3650579b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "622a611e_22532716",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 2
      },
      "lineNbr": 510,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2019-03-18T13:46:55Z",
      "side": 1,
      "message": "Btw, can you elaborate more for why \"check_most_at_once\" is forbidden on sdcard.\nIs there any concern to allow that on userdata?",
      "range": {
        "startLine": 510,
        "startChar": 27,
        "endLine": 510,
        "endChar": 45
      },
      "revId": "242f8e57dc5e45fbb82b3d13843585f3650579b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aab8e70d_ed644f86",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 2
      },
      "lineNbr": 510,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-03-18T19:40:24Z",
      "side": 1,
      "message": "This was requested by the security team. Given how easy it is to alter sdcards, the concern is you could write back new blocks after verification has occurred. And since there is no AOSP mechanism for applying check_at_most_once, it\u0027s not clear how we could just disable it for GSIs. (Other than grabbing the table, removing the parameter, and loading the table again).",
      "parentUuid": "622a611e_22532716",
      "range": {
        "startLine": 510,
        "startChar": 27,
        "endLine": 510,
        "endChar": 45
      },
      "revId": "242f8e57dc5e45fbb82b3d13843585f3650579b0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}