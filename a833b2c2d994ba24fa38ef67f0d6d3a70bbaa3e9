{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "e922f68a_64e5bb46",
        "filename": "fs_mgr/libsnapshot/cow_reader.cpp",
        "patchSetId": 9
      },
      "lineNbr": 138,
      "author": {
        "id": 1045980
      },
      "writtenOn": "2021-04-27T04:50:31Z",
      "side": 1,
      "message": "This is a bit redundant in the v2 verseion. We don\u0027t use this position before the seek for the vs+ case. We could move this into an else afterwards to avoid an unnecessary seek.",
      "range": {
        "startLine": 134,
        "startChar": 4,
        "endLine": 138,
        "endChar": 5
      },
      "revId": "a833b2c2d994ba24fa38ef67f0d6d3a70bbaa3e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4e35ca6b_ff8b59b9",
        "filename": "fs_mgr/libsnapshot/cow_reader.cpp",
        "patchSetId": 9
      },
      "lineNbr": 138,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2021-04-27T17:42:56Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e922f68a_64e5bb46",
      "range": {
        "startLine": 134,
        "startChar": 4,
        "endLine": 138,
        "endChar": 5
      },
      "revId": "a833b2c2d994ba24fa38ef67f0d6d3a70bbaa3e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1453c039_304dfe74",
        "filename": "fs_mgr/libsnapshot/cow_reader.cpp",
        "patchSetId": 9
      },
      "lineNbr": 141,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2021-04-19T19:43:59Z",
      "side": 1,
      "message": "One minor thought is that \"buffer_size\" will contain random data if a v2 tool reads a v1 COW. It might be worth moving this into the Parse(), and explicitly zero\u0027ing buffer_size if header_version \u003c 2.",
      "revId": "a833b2c2d994ba24fa38ef67f0d6d3a70bbaa3e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "62711736_32860344",
        "filename": "fs_mgr/libsnapshot/cow_reader.cpp",
        "patchSetId": 9
      },
      "lineNbr": 141,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2021-04-19T19:48:56Z",
      "side": 1,
      "message": "Sure, will do that; however, if v2 tool is reading v1 COW, this line should never execute as at L140, we check if major_version \u003e 2. v1 COW will have version 1.",
      "parentUuid": "1453c039_304dfe74",
      "revId": "a833b2c2d994ba24fa38ef67f0d6d3a70bbaa3e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3891431_c32562ae",
        "filename": "fs_mgr/libsnapshot/cow_reader.cpp",
        "patchSetId": 9
      },
      "lineNbr": 141,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2021-04-19T20:11:32Z",
      "side": 1,
      "message": "I\u0027m thinking about the context of inspect_cow or something. Diagnostic tools tend to just dump everything in these fields. If they have default values it makes it a little easier.",
      "parentUuid": "62711736_32860344",
      "revId": "a833b2c2d994ba24fa38ef67f0d6d3a70bbaa3e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "171ac987_0b289f74",
        "filename": "fs_mgr/libsnapshot/cow_reader.cpp",
        "patchSetId": 9
      },
      "lineNbr": 141,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2021-04-19T20:32:51Z",
      "side": 1,
      "message": "Actually, wouldn\u0027t zeroing out buffer_size to 0 if COW is v1 is wrong.. Since v1 header doesn\u0027t have buffer_size as the field, it will have other metadata; it will actually by a COW op field. If we zero it out forcefully, we will loose the data isn\u0027t it ?",
      "parentUuid": "c3891431_c32562ae",
      "revId": "a833b2c2d994ba24fa38ef67f0d6d3a70bbaa3e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1b04903_ae4ce836",
        "filename": "fs_mgr/libsnapshot/cow_reader.cpp",
        "patchSetId": 9
      },
      "lineNbr": 141,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2021-04-19T20:44:24Z",
      "side": 1,
      "message": "Since we\u0027re reading it into a separate object, it should be fine? (header_ isn\u0027t mmap\u0027d memory or anything I think?)",
      "parentUuid": "171ac987_0b289f74",
      "revId": "a833b2c2d994ba24fa38ef67f0d6d3a70bbaa3e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "440c4ea7_3a08df86",
        "filename": "fs_mgr/libsnapshot/cow_writer.cpp",
        "patchSetId": 9
      },
      "lineNbr": 170,
      "author": {
        "id": 1045980
      },
      "writtenOn": "2021-04-27T04:50:31Z",
      "side": 1,
      "message": "Isn\u0027t this value going to read some random value for v1 files? If the header was v1, this ought to be 0.",
      "range": {
        "startLine": 170,
        "startChar": 37,
        "endLine": 170,
        "endChar": 56
      },
      "revId": "a833b2c2d994ba24fa38ef67f0d6d3a70bbaa3e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "871be34d_253f76e7",
        "filename": "fs_mgr/libsnapshot/cow_writer.cpp",
        "patchSetId": 9
      },
      "lineNbr": 170,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2021-04-27T17:42:56Z",
      "side": 1,
      "message": "This is in the write path - In the write path, this will always write v2 COW version. There is nothing about v1 in this code path.\n\nThe value of header_.buffer_size is set in OpenForWrite() at L194.",
      "parentUuid": "440c4ea7_3a08df86",
      "range": {
        "startLine": 170,
        "startChar": 37,
        "endLine": 170,
        "endChar": 56
      },
      "revId": "a833b2c2d994ba24fa38ef67f0d6d3a70bbaa3e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}