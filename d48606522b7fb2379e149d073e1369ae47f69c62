{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "da059c25_4c82eece",
        "filename": "trusty/metrics/include/trusty/metrics/metrics.h",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1000205
      },
      "writtenOn": "2021-04-20T01:39:12Z",
      "side": 1,
      "message": "protected? Are any of these functions meant to be called by anyone other than a subclass?",
      "range": {
        "startLine": 34,
        "startChar": 2,
        "endLine": 34,
        "endChar": 8
      },
      "revId": "d48606522b7fb2379e149d073e1369ae47f69c62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ad5eddd4_2c62a11a",
        "filename": "trusty/metrics/include/trusty/metrics/metrics.h",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2021-04-20T06:02:12Z",
      "side": 1,
      "message": "Open(), WaitForEvent(), HandleEvent(), and GetRawFd() may be called by the service that will be on real devices. In the setup where the service only handles metrics events (like the test does), the event loop will call WaitForEvent() then HandleEvent() in a loop.",
      "parentUuid": "da059c25_4c82eece",
      "range": {
        "startLine": 34,
        "startChar": 2,
        "endLine": 34,
        "endChar": 8
      },
      "revId": "d48606522b7fb2379e149d073e1369ae47f69c62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ec587256_59627b69",
        "filename": "trusty/metrics/include/trusty/metrics/metrics.h",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1000205
      },
      "writtenOn": "2021-04-22T00:31:08Z",
      "side": 1,
      "message": "I would expect that service to be a subclass of this.",
      "parentUuid": "ad5eddd4_2c62a11a",
      "range": {
        "startLine": 34,
        "startChar": 2,
        "endLine": 34,
        "endChar": 8
      },
      "revId": "d48606522b7fb2379e149d073e1369ae47f69c62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c6590dcd_f2d63f30",
        "filename": "trusty/metrics/include/trusty/metrics/metrics.h",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2021-04-22T23:02:22Z",
      "side": 1,
      "message": "I would prefer to compose the service using a TrustyMetrics objects. IMO making the service a subclass this can make it confusing as to which function belongs should where. Generally speaking, composition is recommended over inheritance \nhttps://google.github.io/styleguide/cppguide.html#Inheritance",
      "parentUuid": "ec587256_59627b69",
      "range": {
        "startLine": 34,
        "startChar": 2,
        "endLine": 34,
        "endChar": 8
      },
      "revId": "d48606522b7fb2379e149d073e1369ae47f69c62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6dd1674c_16c1d76b",
        "filename": "trusty/metrics/include/trusty/metrics/metrics.h",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1000205
      },
      "writtenOn": "2021-04-23T00:08:37Z",
      "side": 1,
      "message": "OK. If you expect the subclass to be composed into another service, having HandleEvent() and GetRawFd() public is useful. I would expect an open call to me made on the subclass though, not a call that only opens the base class.",
      "parentUuid": "c6590dcd_f2d63f30",
      "range": {
        "startLine": 34,
        "startChar": 2,
        "endLine": 34,
        "endChar": 8
      },
      "revId": "d48606522b7fb2379e149d073e1369ae47f69c62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f4861ae7_d1df34ed",
        "filename": "trusty/metrics/include/trusty/metrics/metrics.h",
        "patchSetId": 8
      },
      "lineNbr": 34,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2021-04-23T19:34:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6dd1674c_16c1d76b",
      "range": {
        "startLine": 34,
        "startChar": 2,
        "endLine": 34,
        "endChar": 8
      },
      "revId": "d48606522b7fb2379e149d073e1369ae47f69c62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2cc5c05_0c877091",
        "filename": "trusty/metrics/metrics.cpp",
        "patchSetId": 8
      },
      "lineNbr": 54,
      "author": {
        "id": 1000205
      },
      "writtenOn": "2021-04-20T01:39:12Z",
      "side": 1,
      "message": "does this need to be here? Will it be used for anything other than your test?",
      "revId": "d48606522b7fb2379e149d073e1369ae47f69c62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22faf3f9_36dfd2e6",
        "filename": "trusty/metrics/metrics.cpp",
        "patchSetId": 8
      },
      "lineNbr": 54,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2021-04-20T06:02:12Z",
      "side": 1,
      "message": "I\u0027m planning to add a service that pipes the event to statsd on real devices. For now, metrics events are the only thing it will be listening to. So, it will be calling WaitForEvent() and HandleEvent() in a loop.",
      "parentUuid": "d2cc5c05_0c877091",
      "revId": "d48606522b7fb2379e149d073e1369ae47f69c62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "418b76ff_6cfa6981",
        "filename": "trusty/metrics/metrics.cpp",
        "patchSetId": 8
      },
      "lineNbr": 54,
      "author": {
        "id": 1000205
      },
      "writtenOn": "2021-04-22T00:31:08Z",
      "side": 1,
      "message": "Would that service not use binder at all? If it does I would expect you need both the binder and metrics fd in the same poll set.",
      "parentUuid": "22faf3f9_36dfd2e6",
      "revId": "d48606522b7fb2379e149d073e1369ae47f69c62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8f57c70a_952a6eca",
        "filename": "trusty/metrics/metrics.cpp",
        "patchSetId": 8
      },
      "lineNbr": 54,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2021-04-22T23:02:22Z",
      "side": 1,
      "message": "Yes, the service will need to use binder to report events to statsd. I\u0027m not familiar enough with binder, but does it expose the poll set? \n\nThe way statsd interface is used in our code base there is usually no need to manage a binder fd. For example, ag/14286216 is what I was thinking we do.",
      "parentUuid": "418b76ff_6cfa6981",
      "revId": "d48606522b7fb2379e149d073e1369ae47f69c62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9d3ceb8_39300158",
        "filename": "trusty/metrics/metrics.cpp",
        "patchSetId": 8
      },
      "lineNbr": 54,
      "author": {
        "id": 1000205
      },
      "writtenOn": "2021-04-23T00:08:37Z",
      "side": 1,
      "message": "It exposes a file descriptor for you to add to the poll set if you don\u0027t let lib binder create and manage the thread pool. Your process in ag/14286216 seem to not have any threads handling binder work though, which may or may not work correctly depending on what you send.",
      "parentUuid": "8f57c70a_952a6eca",
      "revId": "d48606522b7fb2379e149d073e1369ae47f69c62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a684e106_54e30950",
        "filename": "trusty/metrics/metrics.cpp",
        "patchSetId": 8
      },
      "lineNbr": 54,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2021-04-23T19:34:25Z",
      "side": 1,
      "message": "\u003e may or may not work correctly depending on what you send\n\nI don\u0027t know what exactly binder does under the hood. But calling reportVendorAtom() should be the only thing we ever need to do to report metrics events. If that doesn\u0027t require any binder threads, then our service can be single-threaded and only poll on Trusty metrics fd.",
      "parentUuid": "c9d3ceb8_39300158",
      "revId": "d48606522b7fb2379e149d073e1369ae47f69c62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1dd2fff7_4315d1e8",
        "filename": "trusty/metrics/metrics.cpp",
        "patchSetId": 8
      },
      "lineNbr": 54,
      "author": {
        "id": 1000205
      },
      "writtenOn": "2021-04-27T20:44:05Z",
      "side": 1,
      "message": "The service can definitely be single threaded, but whether it is safe to not poll on the binder-fd from that single threaded service depends on what the libraries call into do. Without a binder thread poll or calls to handlePolledCommands, work queued to the process by libbinder or the binder driver will not be processed. Usually this will cause leaks. It is possible that your simple process will never have anything on these queues, but it is difficult to tell without checking. If you want to be notified of any async events (e.g. that the service you called into has exited) you will definitely need one of the two ways to start/register a binder looper.",
      "parentUuid": "a684e106_54e30950",
      "revId": "d48606522b7fb2379e149d073e1369ae47f69c62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bafce236_ab17dd5a",
        "filename": "trusty/metrics/metrics_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 52,
      "author": {
        "id": 1000205
      },
      "writtenOn": "2021-04-20T01:39:12Z",
      "side": 1,
      "message": "would it be easier if this is also a subclass of TrustyMetrics?",
      "revId": "d48606522b7fb2379e149d073e1369ae47f69c62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f4c122e9_c91c012a",
        "filename": "trusty/metrics/metrics_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 52,
      "author": {
        "id": 1124693
      },
      "writtenOn": "2021-04-20T06:02:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bafce236_ab17dd5a",
      "revId": "d48606522b7fb2379e149d073e1369ae47f69c62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}