#!/usr/bin/bash

# Copyright (C) 2022 The Android Open Source Project
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#  * Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#  * Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in
#    the documentation and/or other materials provided with the
#    distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
# "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
# FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
# COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
# BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS
# OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
# AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
# OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
# OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.

rm -f core
ulimit -c unlimited

CMD=$(basename $0)

usage()
{
	echo "usage: $CMD [x64 | arm64]" 1>&2
	exit 1
}

if [ $# -ne 1 ] ; then
	usage
fi

ARCH="$1"

if [ "$ARCH" != x64 -a "$ARCH" != arm64 ] ; then
	usage
fi

if [ ! -f gen/binaries-$ARCH ] ; then
	echo "$CMD: file produced by mk is missing: gen/binaries-$ARCH" 1>&2
	exit 1
fi

STEP_COUNT=100

TEST_LIST=''

TEST_LIST="$TEST_LIST ./gen/test_schedq-g-$ARCH"
TEST_LIST="$TEST_LIST ./gen/test_schedq-O3-g-$ARCH"
TEST_LIST="$TEST_LIST ./gen/test_schedq-O3-$ARCH"
TEST_LIST="$TEST_LIST ./gen/test-pthread-O3-g-$ARCH"

# TEST_LIST="$TEST_LIST ./gen/test_schedq-clang-g-$ARCH"

go()
{
	for TEST in $(cat gen/binaries-$ARCH) $TEST_LIST ; do
		echo -n "$TEST: "
		$TEST
		STATUS="$?"

		if [ "$STATUS" -eq 0 ] ; then
			echo 'ok'
			continue
		fi

		if [ -f core ] ; then
			mv core "$TEST.core"
			echo "FAILED: status = $STATUS: core dumped"
			echo
			echo "gdb $TEST $TEST.core"
		else
			echo "FAILED: status = $STATUS"
		fi 1>&2
		return 1
	done
	return 0
}

STEP=0
while [ $STEP -lt $STEP_COUNT ] ; do
	if go ; then
		:
	else
		exit 1
	fi

	STEP=$[ STEP + 1 ]
done
