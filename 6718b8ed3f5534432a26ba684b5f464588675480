{
  "comments": [
    {
      "key": {
        "uuid": "b6e5ebf4_67913d43",
        "filename": "include/nativebridge/native_bridge.h",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2014-08-11T18:21:20Z",
      "side": 1,
      "message": "why do some APIs need a const std::string\u0026 while others take a const char * ? It\u0027s fine if this is the most convenient for callers, but it just seems odd.",
      "range": {
        "startLine": 26,
        "startChar": 43,
        "endLine": 26,
        "endChar": 44
      },
      "revId": "6718b8ed3f5534432a26ba684b5f464588675480",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76ea93f0_d1ff04ca",
        "filename": "include/nativebridge/native_bridge.h",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2014-08-11T18:28:09Z",
      "side": 1,
      "message": "Is this an API that will be used from other projects? Until stlport is out of the picture entirely, we need to be careful about using STL containers at API boundaries because the two STLs are not ABI compatible (we ran in to this problem while moving ART over).",
      "parentUuid": "b6e5ebf4_67913d43",
      "range": {
        "startLine": 26,
        "startChar": 43,
        "endLine": 26,
        "endChar": 44
      },
      "revId": "6718b8ed3f5534432a26ba684b5f464588675480",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6e5ebf4_24a9f3fe",
        "filename": "nativebridge/native_bridge.cc",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2014-08-11T18:21:20Z",
      "side": 1,
      "message": "\"cbs [IN] the pointer to NativeBridgeCallbacks\"\n\nart_cbs -\u003e cbs, NativeBridgeArtCallbacks -\u003e NativeBridgeCallbacks.",
      "revId": "6718b8ed3f5534432a26ba684b5f464588675480",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56a3cfb2_a4725aaf",
        "filename": "nativebridge/native_bridge.cc",
        "patchSetId": 2
      },
      "lineNbr": 55,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2014-08-11T18:21:20Z",
      "side": 1,
      "message": "cbs",
      "range": {
        "startLine": 54,
        "startChar": 46,
        "endLine": 55,
        "endChar": 54
      },
      "revId": "6718b8ed3f5534432a26ba684b5f464588675480",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56a3cfb2_f9040b7e",
        "filename": "nativebridge/native_bridge.cc",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-08-11T15:44:53Z",
      "side": 1,
      "message": "I\u0027m not sure what\u0027s the best strategy to pass this one. Thoughts?\n\nPassing it together with the nb_library_string seems like a good option to me.",
      "range": {
        "startLine": 114,
        "startChar": 51,
        "endLine": 114,
        "endChar": 84
      },
      "revId": "6718b8ed3f5534432a26ba684b5f464588675480",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6133f9f_19ac578c",
        "filename": "nativebridge/native_bridge.cc",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-08-11T16:33:45Z",
      "side": 1,
      "message": "Makes sense to me.",
      "parentUuid": "56a3cfb2_f9040b7e",
      "range": {
        "startLine": 114,
        "startChar": 51,
        "endLine": 114,
        "endChar": 84
      },
      "revId": "6718b8ed3f5534432a26ba684b5f464588675480",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56a3cfb2_c4b75ed7",
        "filename": "nativebridge/native_bridge.cc",
        "patchSetId": 2
      },
      "lineNbr": 114,
      "author": {
        "id": 1022077
      },
      "writtenOn": "2014-08-11T17:39:35Z",
      "side": 1,
      "message": "My only issue with this will related to pointer ownership, i.e. it seems easy to lose track of it when passing it through so many layers. I guess it can\u0027t be helped. \n\nIs there any reason why initialize doesn\u0027t take a const pointer? or it\u0027s just a glitch?",
      "parentUuid": "d6133f9f_19ac578c",
      "range": {
        "startLine": 114,
        "startChar": 51,
        "endLine": 114,
        "endChar": 84
      },
      "revId": "6718b8ed3f5534432a26ba684b5f464588675480",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}