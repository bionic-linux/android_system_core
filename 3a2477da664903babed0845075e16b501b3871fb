{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c760106a_2bd83273",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 10,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-08-09T14:40:10Z",
      "side": 1,
      "message": "what are these error spam? which line, how to trigger?\n\nI cannot reproduce this locally. I tried `adb remount vendor` two times and I just success?\n\n```\n$ adb root\n$ adb remount vendor\nVerity disabled; overlayfs enabled.\n$ adb reboot\n$ adb root\n$ adb remount vendor\nremount succeeded\n$ adb remount vendor\nremount succeeded\n```",
      "range": {
        "startLine": 10,
        "startChar": 16,
        "endLine": 10,
        "endChar": 26
      },
      "revId": "3a2477da664903babed0845075e16b501b3871fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fde7b9cc_4a7df8ec",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 10,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-08-09T19:15:37Z",
      "side": 1,
      "message": "I tested with a kernel that doesn\u0027t have override_creds. You can simulate this failure by putting an early return where override_creds is checked. It\u0027s not likely to happen, but if any kind of failure (transient or not) occurs, we\u0027ll try to remount twice on Cuttlefish, and wind up with lots of errors.",
      "parentUuid": "c760106a_2bd83273",
      "range": {
        "startLine": 10,
        "startChar": 16,
        "endLine": 10,
        "endChar": 26
      },
      "revId": "3a2477da664903babed0845075e16b501b3871fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f20240c_62ad1a0c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 10,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-08-10T17:09:09Z",
      "side": 1,
      "message": "I see. All this just leads me to think, why didn\u0027t we just call fs_mgr_overlayfs_valid() before trying to setup overlayfs at all? It surely could\u0027ve saved us a lot of error handling code?\n\nI also wonder could we just always try to setup overlayfs?\n\nRight now we have all these complex logic in fs_mgr_remount and fs_mgr_overlayfs trying to deduce which mountpoint uses overlayfs and which uses legacy remount, by looking at shared_block_dedup property of the mounted filesystem.\n\nWhy don\u0027t we just\n1. Look at kernel version \u0026 driver\n2. If kernel support overlayfs, just always use overlayfs for remount\n3. otherwise use legacy direct remount (basically does `mount -o remount,rw`)\n\nYes this wastes storage space on device that doesn\u0027t have shared_block_dedup, but\n1. It\u0027s simpler maintain. Code might still be complex, but at least the error states are simpler to reason with. Less mental burden for us.\n2. People get the \"adb enable-verity\" to discard overlay and return to fresh state ability everywhere\n3. We expect people to switch to erofs eventually anyway, so the \"waste space\" concern dwindles over time.",
      "parentUuid": "fde7b9cc_4a7df8ec",
      "range": {
        "startLine": 10,
        "startChar": 16,
        "endLine": 10,
        "endChar": 26
      },
      "revId": "3a2477da664903babed0845075e16b501b3871fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "14520c76_471a0f12",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 10,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-08-10T19:04:06Z",
      "side": 1,
      "message": "I like this idea, but it probably depends on us figuring out whether we can solve submounts. Right now those can be remounted through the legacy path but not through overlayfs.",
      "parentUuid": "2f20240c_62ad1a0c",
      "range": {
        "startLine": 10,
        "startChar": 16,
        "endLine": 10,
        "endChar": 26
      },
      "revId": "3a2477da664903babed0845075e16b501b3871fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "124a60c6_8b572e7b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 10,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-08-11T12:30:46Z",
      "side": 1,
      "message": "\u003e submounts\n\nI think these are orthogonal problems?\noverlayfs or legacy remount decides \"how\" we make a partition RW.\nSolving submounts decides \"what\" partitions are remounted.\n\nRight now we don\u0027t support submount for both overlayfs AND legacy remount.\nOTOH, legacy remount works on submounts *only if*\n1. The submount doesn\u0027t have shared_dup_blocks\n2. The user use the `mount` command directly `adb shell mount -o remount,rw /sub/mount/point`\n\nNo matter we choose to use overlayfs everywhere or not, legacy remount is not affected. Legacy remount is only affected by whether the underlying filesystem has share_dup_block or not.",
      "parentUuid": "14520c76_471a0f12",
      "range": {
        "startLine": 10,
        "startChar": 16,
        "endLine": 10,
        "endChar": 26
      },
      "revId": "3a2477da664903babed0845075e16b501b3871fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0cefdf30_c5993672",
        "filename": "fs_mgr/fs_mgr_remount.cpp",
        "patchSetId": 12
      },
      "lineNbr": 256,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-08-09T14:40:10Z",
      "side": 1,
      "message": "|entry-\u003emount_point| as L251 could modify |entry|",
      "range": {
        "startLine": 256,
        "startChar": 46,
        "endLine": 256,
        "endChar": 55
      },
      "revId": "3a2477da664903babed0845075e16b501b3871fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cda740a0_a057cd63",
        "filename": "fs_mgr/fs_mgr_remount.cpp",
        "patchSetId": 12
      },
      "lineNbr": 256,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-08-09T19:15:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0cefdf30_c5993672",
      "range": {
        "startLine": 256,
        "startChar": 46,
        "endLine": 256,
        "endChar": 55
      },
      "revId": "3a2477da664903babed0845075e16b501b3871fb",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}