{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fd67575c_1b44088d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-03-15T18:33:44Z",
      "side": 1,
      "message": "lg overall",
      "revId": "201f98c2bff1c0445a3e9ac8c21cb7f1a9f0cc42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cb794ff_b9d84af6",
        "filename": "libutils/include/utils/Errors.h",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-03-15T18:33:44Z",
      "side": 1,
      "message": "indent consistency",
      "range": {
        "startLine": 42,
        "startChar": 1,
        "endLine": 42,
        "endChar": 2
      },
      "revId": "201f98c2bff1c0445a3e9ac8c21cb7f1a9f0cc42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ee2dd69e_7b56c076",
        "filename": "libutils/include/utils/Errors.h",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-03-15T20:39:39Z",
      "side": 1,
      "message": "The original code was like this, and I tried adding the spaces to the new ones and clang-format removed them. Remove it here too?",
      "parentUuid": "8cb794ff_b9d84af6",
      "range": {
        "startLine": 42,
        "startChar": 1,
        "endLine": 42,
        "endChar": 2
      },
      "revId": "201f98c2bff1c0445a3e9ac8c21cb7f1a9f0cc42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6959b9c6_441fc6d3",
        "filename": "libutils/include/utils/Errors.h",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-03-15T22:38:28Z",
      "side": 1,
      "message": "sgtm",
      "parentUuid": "ee2dd69e_7b56c076",
      "range": {
        "startLine": 42,
        "startChar": 1,
        "endLine": 42,
        "endChar": 2
      },
      "revId": "201f98c2bff1c0445a3e9ac8c21cb7f1a9f0cc42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2a4ec343_2fe769d1",
        "filename": "libutils/include/utils/Errors.h",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-03-15T23:28:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6959b9c6_441fc6d3",
      "range": {
        "startLine": 42,
        "startChar": 1,
        "endLine": 42,
        "endChar": 2
      },
      "revId": "201f98c2bff1c0445a3e9ac8c21cb7f1a9f0cc42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2188f43d_93f23ba9",
        "filename": "libutils/include/utils/Errors.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-03-15T18:33:44Z",
      "side": 1,
      "message": "nit curious this, vs saving a few loc on:\n\n# define LIBUTILS_SAVED_NO_ERROR\n\n...\n\n#ifdef LIBUTILS_SAVED_NO_ERROR\n...",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 44,
        "endChar": 33
      },
      "revId": "201f98c2bff1c0445a3e9ac8c21cb7f1a9f0cc42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73353723_48d0241c",
        "filename": "libutils/include/utils/Errors.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-03-15T18:37:54Z",
      "side": 1,
      "message": "i wondered why we don\u0027t just *always* do this for `_WIN32`? why do we need our own #define at all?",
      "parentUuid": "2188f43d_93f23ba9",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 44,
        "endChar": 33
      },
      "revId": "201f98c2bff1c0445a3e9ac8c21cb7f1a9f0cc42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e1f206d6_5deb8ee1",
        "filename": "libutils/include/utils/Errors.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-03-15T20:39:39Z",
      "side": 1,
      "message": "\u003e #ifdef LIBUTILS_SAVED_NO_ERROR\n\nI was doing some defensive coding against LIBUTILS_SAVED_NO_ERROR already being defined somewhere else, but that\u0027s probably excessive. #ifdef wouldn\u0027t catch that, but that\u0027s probably fine.\n\n\u003e i wondered why we don\u0027t just *always* do this for  _WIN32 ? why do we need our own #define at all?\n\nThis is also needed for Trusty which also has its own NO_ERROR. I could remove the conditionals and always save NO_ERROR, if push_macro and #undef also work on undefined macros, e.g., on Linux/Android.",
      "parentUuid": "73353723_48d0241c",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 44,
        "endChar": 33
      },
      "revId": "201f98c2bff1c0445a3e9ac8c21cb7f1a9f0cc42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b89f3d5f_b8de7431",
        "filename": "libutils/include/utils/Errors.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-03-15T23:35:43Z",
      "side": 1,
      "message": "What about (in PS3) remove L39-L43, remove L47, remove L83-L86, then add:\n\n#ifndef NO_ERROR\n#define NO_ERROR 0\n#endif\n\n(switching to a macro definition of NO_ERROR instead of the enum definition)",
      "parentUuid": "e1f206d6_5deb8ee1",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 44,
        "endChar": 33
      },
      "revId": "201f98c2bff1c0445a3e9ac8c21cb7f1a9f0cc42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5c00cf06_fa3354f2",
        "filename": "libutils/include/utils/Errors.h",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-03-15T18:33:44Z",
      "side": 1,
      "message": "undef LIBUTILS_SAVED_NO_ERROR?",
      "range": {
        "startLine": 86,
        "startChar": 0,
        "endLine": 86,
        "endChar": 29
      },
      "revId": "201f98c2bff1c0445a3e9ac8c21cb7f1a9f0cc42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "36a60c60_1dcd2b02",
        "filename": "libutils/include/utils/Errors.h",
        "patchSetId": 2
      },
      "lineNbr": 86,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-03-15T23:28:59Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5c00cf06_fa3354f2",
      "range": {
        "startLine": 86,
        "startChar": 0,
        "endLine": 86,
        "endChar": 29
      },
      "revId": "201f98c2bff1c0445a3e9ac8c21cb7f1a9f0cc42",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}