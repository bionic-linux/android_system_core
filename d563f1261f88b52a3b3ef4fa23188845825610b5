{
  "comments": [
    {
      "key": {
        "uuid": "fd2e2979_3e63ad76",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-05-11T04:08:41Z",
      "side": 1,
      "message": "Can you provide an fstab example (e.g., for a partition, let\u0027s assume /vendor) for this CL?\n\ne.g., the how will the fstab-dt and fstab file be, respectively.\n\nhttps://source.android.com/devices/architecture/kernel/modular-kernels#early-mounting-device-tree-vboot-1-0",
      "revId": "d563f1261f88b52a3b3ef4fa23188845825610b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7f643012_46d3a55c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 14,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2018-05-11T19:49:29Z",
      "side": 1,
      "message": "walleye\u0027s fstab-dt for vendor looks like this:\n\n                vendor {\n                        compatible \u003d \"android,vendor\";\n                        dev \u003d \"vendor\";\n                        type \u003d \"ext4\";\n                        mnt_flags \u003d \"ro,barrier\u003d1\";\n                        fsmgr_flags \u003d \"wait,slotselect,avb,logical\";\n                };\n\nhikey960\u0027s fstab entry for vendor looks like this:\n\n  vendor              /vendor    ext4    ro                  wait,logical",
      "parentUuid": "fd2e2979_3e63ad76",
      "revId": "d563f1261f88b52a3b3ef4fa23188845825610b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc57a4bb_9bd43a98",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 4
      },
      "lineNbr": 812,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-05-11T04:08:41Z",
      "side": 1,
      "message": "this will be \"dm-N\", right?",
      "range": {
        "startLine": 812,
        "startChar": 65,
        "endLine": 812,
        "endChar": 76
      },
      "revId": "d563f1261f88b52a3b3ef4fa23188845825610b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c6f37b25_b36579ef",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 4
      },
      "lineNbr": 812,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-05-11T17:58:36Z",
      "side": 1,
      "message": "For my own education here, how will this work with verity?  Do we first create a logical partition for dm-linear, then create another logical partition for dm-verity that references the first logical partition?\n\nHow does this interact with https://cs.corp.google.com/android/system/core/fs_mgr/fs_mgr_verity.cpp?q\u003dfs_mgr_dm_get_device_name\u0026sq\u003dpackage:%5Eandroid$\u0026g\u003d0\u0026l\u003d814 ?  Is that all magically handled if blk_device gets updated to the logical device name, which it is in this function?",
      "parentUuid": "dc57a4bb_9bd43a98",
      "range": {
        "startLine": 812,
        "startChar": 65,
        "endLine": 812,
        "endChar": 76
      },
      "revId": "d563f1261f88b52a3b3ef4fa23188845825610b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "efffa13a_de0e255a",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 4
      },
      "lineNbr": 812,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2018-05-11T19:49:29Z",
      "side": 1,
      "message": "I\u0027ll fold the next CL into this one so it\u0027s clearer how it\u0027s handled.",
      "parentUuid": "c6f37b25_b36579ef",
      "range": {
        "startLine": 812,
        "startChar": 65,
        "endLine": 812,
        "endChar": 76
      },
      "revId": "d563f1261f88b52a3b3ef4fa23188845825610b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0aeee971_f9f10129",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 4
      },
      "lineNbr": 872,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-05-11T04:08:41Z",
      "side": 1,
      "message": "Btw, early mount partitions won\u0027t go through this code path as FirstStageMount::MountPartitions() --\u003e fs_mgr_do_mount_one().\n\nIt seems to me (take /vendor as an example):\n  /vendor physical device will be mounted during FirstStageMount::MountPartitions() as before.\n  /vendor (with MF_LOGICAL) will be in the fstab file, too. And mount_all will mount this linear device again? Do you need to umount /vendor before mount this dm-N under /vendor again?",
      "range": {
        "startLine": 872,
        "startChar": 17,
        "endLine": 872,
        "endChar": 48
      },
      "revId": "d563f1261f88b52a3b3ef4fa23188845825610b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02b2fc13_f3faa0f5",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 4
      },
      "lineNbr": 872,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-05-11T17:58:36Z",
      "side": 1,
      "message": "That seems wrong.  If vendor is logical then vendor must always be mounted as logical, right?  We\u0027ll need first stage mount to mount the logical version.",
      "parentUuid": "0aeee971_f9f10129",
      "range": {
        "startLine": 872,
        "startChar": 17,
        "endLine": 872,
        "endChar": 48
      },
      "revId": "d563f1261f88b52a3b3ef4fa23188845825610b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49292557_aaff5178",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 4
      },
      "lineNbr": 872,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2018-05-11T19:49:29Z",
      "side": 1,
      "message": "All the dm-linear devices are created early in the first stage, so mounting can work as normal whether it\u0027s in fstab-dt or fstab. But, maybe we want to change that.",
      "parentUuid": "02b2fc13_f3faa0f5",
      "range": {
        "startLine": 872,
        "startChar": 17,
        "endLine": 872,
        "endChar": 48
      },
      "revId": "d563f1261f88b52a3b3ef4fa23188845825610b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c087cd00_9e4d1097",
        "filename": "fs_mgr/fs_mgr_dm_linear.cpp",
        "patchSetId": 4
      },
      "lineNbr": 121,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-05-11T17:58:36Z",
      "side": 1,
      "message": "Is Map the right verb here?  This is just creating the dm entries for each of the partitions that require them, right?  Perhaps it should be called Create?",
      "range": {
        "startLine": 121,
        "startChar": 5,
        "endLine": 121,
        "endChar": 8
      },
      "revId": "d563f1261f88b52a3b3ef4fa23188845825610b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f8be8e27_bf6623a1",
        "filename": "fs_mgr/fs_mgr_priv.h",
        "patchSetId": 4
      },
      "lineNbr": 114,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-05-11T04:16:23Z",
      "side": 1,
      "message": "alignment?\n   \n#define MF_SYSFS           0X8000000\n#define MF_LOGICAL        0x10000000",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 114,
        "endChar": 29
      },
      "revId": "d563f1261f88b52a3b3ef4fa23188845825610b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb2efd40_40d01fde",
        "filename": "fs_mgr/fs_mgr_priv.h",
        "patchSetId": 4
      },
      "lineNbr": 114,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-05-11T17:58:36Z",
      "side": 1,
      "message": "Probably clang-format suggests this.  It doesn\u0027t believe in alignment.  I don\u0027t have a strong opinion either way.",
      "parentUuid": "f8be8e27_bf6623a1",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 114,
        "endChar": 29
      },
      "revId": "d563f1261f88b52a3b3ef4fa23188845825610b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "87e1719f_1e01419c",
        "filename": "fs_mgr/fs_mgr_priv.h",
        "patchSetId": 4
      },
      "lineNbr": 114,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2018-05-11T19:49:29Z",
      "side": 1,
      "message": "Yes... I had it as you suggested and clang-format rejected it :)",
      "parentUuid": "eb2efd40_40d01fde",
      "range": {
        "startLine": 114,
        "startChar": 0,
        "endLine": 114,
        "endChar": 29
      },
      "revId": "d563f1261f88b52a3b3ef4fa23188845825610b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a6e6856e_9320e3bd",
        "filename": "fs_mgr/include/fs_mgr_dm_linear.h",
        "patchSetId": 4
      },
      "lineNbr": 78,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-05-11T17:58:36Z",
      "side": 1,
      "message": "This is only valid for DmLinear, right?  Could we call this DmLinearPartitionTable or make it clearer that it\u0027s specifically for that?  The same for Partition and PartitionExtent above.",
      "revId": "d563f1261f88b52a3b3ef4fa23188845825610b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "04f25957_bb8ead39",
        "filename": "fs_mgr/include/fs_mgr_dm_linear.h",
        "patchSetId": 4
      },
      "lineNbr": 78,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2018-05-11T19:52:08Z",
      "side": 1,
      "message": "How do you feel about \"Logical\" as a prefix instead of \"DmLinear\" which might be a bit too operational?",
      "parentUuid": "a6e6856e_9320e3bd",
      "revId": "d563f1261f88b52a3b3ef4fa23188845825610b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3de70cf7_819124c8",
        "filename": "fs_mgr/include/fs_mgr_dm_linear.h",
        "patchSetId": 4
      },
      "lineNbr": 92,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-05-11T17:58:36Z",
      "side": 1,
      "message": "This comment isn\u0027t true in the most recent patch set, right?",
      "revId": "d563f1261f88b52a3b3ef4fa23188845825610b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d9c076c_59613b26",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 4
      },
      "lineNbr": 179,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-05-11T17:58:36Z",
      "side": 1,
      "message": "What does this do?  If I understand this code, these partition_name\u0027s are going to be the same as what is found in the fstab and added to this set via https://cs.corp.google.com/android/system/core/init/init_first_stage.cpp?type\u003dcs\u0026q\u003dinit_first_\u0026sq\u003dpackage:%5Eandroid$\u0026g\u003d0\u0026l\u003d325 or the equivalent V2 version?\n\nWe need to have the dm nodes created through fs_mgr_update_logical_partition() added to the set, right?  Where is this done (I don\u0027t think it\u0027s done here).",
      "revId": "d563f1261f88b52a3b3ef4fa23188845825610b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b9ecd95_213efe6a",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 4
      },
      "lineNbr": 179,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-05-11T18:08:22Z",
      "side": 1,
      "message": "It\u0027s done in the second CL I see now.\n\nMy original question remains: is this code needed?  I think it can be removed and everything would still work.",
      "parentUuid": "3d9c076c_59613b26",
      "revId": "d563f1261f88b52a3b3ef4fa23188845825610b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83b22b20_133ab01a",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 4
      },
      "lineNbr": 179,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2018-05-11T19:49:29Z",
      "side": 1,
      "message": "On a system designed to use dm-linear, there would only be one required device, and we would add it in GetDmLinearDevices(). Every extent would then map to a different region on the same block device. So we\u0027ll need *something* here, and the code would ideally look like this, because it ensures in any case that all extents are handled.\n\nOn the other hand, you\u0027re right that it\u0027s almost redundant for testing on walleye. It\u0027s still needed, because MapLogicalPartitions() doesn\u0027t check fstab, it just tries to create devices for everything. So it needs the backing devices for \"vendor_a\" and \"vendor_b\", whereas GetDmVerityDevices would only ensure the current slot.\n\nTo change that, we\u0027d need to split up when we create logical devices. Once in the first stage for devices in fstab-dt, and again in fs_mgr_mount_all/fs_mgr_do_mount_one.",
      "parentUuid": "7b9ecd95_213efe6a",
      "revId": "d563f1261f88b52a3b3ef4fa23188845825610b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}