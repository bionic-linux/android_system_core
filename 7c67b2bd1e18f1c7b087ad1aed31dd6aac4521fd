{
  "comments": [
    {
      "key": {
        "uuid": "b9a549e5_05fb679a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-06-29T06:42:50Z",
      "side": 1,
      "message": "Add\nBug: 62084631",
      "revId": "7c67b2bd1e18f1c7b087ad1aed31dd6aac4521fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "099f5831_4669601c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2017-07-05T21:48:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b9a549e5_05fb679a",
      "revId": "7c67b2bd1e18f1c7b087ad1aed31dd6aac4521fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91859a29_e54753f4",
        "filename": "init/action.cpp",
        "patchSetId": 2
      },
      "lineNbr": 332,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-06-29T06:29:56Z",
      "side": 1,
      "message": "This needs current_command_ \u003d 0; too.\n\nIn theory, this will leak a little bit of memory.  We\u0027re supposed to deallocate \u0027oneshot\u0027 actions, which right now are only Builtin actions after they\u0027ve been executed.  Particularly for Builtin actions, it makes sense because they won\u0027t be queued again.  But ya... probably not worth doing, especially since we\u0027re shutting down anyway.  Could be worth making a comment about?  Or perhaps this comment is enough for posterity.",
      "revId": "7c67b2bd1e18f1c7b087ad1aed31dd6aac4521fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92840427_3c7d6c36",
        "filename": "init/action.cpp",
        "patchSetId": 2
      },
      "lineNbr": 332,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2017-07-05T21:48:24Z",
      "side": 1,
      "message": "Added comments",
      "parentUuid": "91859a29_e54753f4",
      "revId": "7c67b2bd1e18f1c7b087ad1aed31dd6aac4521fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f77625fb_62831d6e",
        "filename": "init/builtins.cpp",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-06-29T06:29:56Z",
      "side": 1,
      "message": "Let\u0027s prefer C++ style comment, so //\n\nWhy do we not want to go through shutdown for recovery?  It makes sense to me for panic(), but not so much here.",
      "revId": "7c67b2bd1e18f1c7b087ad1aed31dd6aac4521fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5d4b8c10_28057767",
        "filename": "init/builtins.cpp",
        "patchSetId": 2
      },
      "lineNbr": 122,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2017-07-05T21:48:24Z",
      "side": 1,
      "message": "this is old behavior, and in recovery we targets for data wiping. But I agree, let\u0027s move to shutdown flow.",
      "parentUuid": "f77625fb_62831d6e",
      "revId": "7c67b2bd1e18f1c7b087ad1aed31dd6aac4521fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82e2be8b_671c9d13",
        "filename": "init/init.cpp",
        "patchSetId": 2
      },
      "lineNbr": 162,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-06-29T06:29:56Z",
      "side": 1,
      "message": "I\u0027ve been trying to move us CL by CL to having properly formatted functions, so this should be ResetWaitForProp().",
      "revId": "7c67b2bd1e18f1c7b087ad1aed31dd6aac4521fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "569e60b1_7a7a007a",
        "filename": "init/init.cpp",
        "patchSetId": 2
      },
      "lineNbr": 162,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2017-07-05T21:48:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "82e2be8b_671c9d13",
      "revId": "7c67b2bd1e18f1c7b087ad1aed31dd6aac4521fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "790a627a_42a5385d",
        "filename": "init/reboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 426,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-06-29T06:29:56Z",
      "side": 1,
      "message": "Same, DoShutdownDone()",
      "revId": "7c67b2bd1e18f1c7b087ad1aed31dd6aac4521fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a5d0e87_0d7d1d26",
        "filename": "init/reboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 426,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2017-07-05T21:48:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "790a627a_42a5385d",
      "revId": "7c67b2bd1e18f1c7b087ad1aed31dd6aac4521fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53f12037_9415bc65",
        "filename": "init/reboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 434,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-06-29T06:29:56Z",
      "side": 1,
      "message": "When would this ever be false?  We don\u0027t queue the action that calls this if it\u0027s invalid in HandlePowerctlMessage().",
      "range": {
        "startLine": 434,
        "startChar": 4,
        "endLine": 434,
        "endChar": 26
      },
      "revId": "7c67b2bd1e18f1c7b087ad1aed31dd6aac4521fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "26cf687a_61398744",
        "filename": "init/reboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 434,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2017-07-05T21:48:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "53f12037_9415bc65",
      "range": {
        "startLine": 434,
        "startChar": 4,
        "endLine": 434,
        "endChar": 26
      },
      "revId": "7c67b2bd1e18f1c7b087ad1aed31dd6aac4521fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cc67e355_9d9d5df3",
        "filename": "init/reboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 440,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2017-06-29T18:15:13Z",
      "side": 1,
      "message": "Why not put the fsk command within the vold service section?\n\nonshutdown /system/bin/fsck --options",
      "revId": "7c67b2bd1e18f1c7b087ad1aed31dd6aac4521fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "11ab2be7_234e382f",
        "filename": "init/reboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 440,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2017-07-05T21:48:24Z",
      "side": 1,
      "message": "We need unmount data/ to do fsck and on shutdown right now we kept data/ alive.",
      "parentUuid": "cc67e355_9d9d5df3",
      "revId": "7c67b2bd1e18f1c7b087ad1aed31dd6aac4521fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a611923_fd5ff3b9",
        "filename": "init/reboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 490,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-06-29T06:29:56Z",
      "side": 1,
      "message": "This takes a std::function\u003c\u003e, so you can have a lambda with captures here, meaning no need for a class and member variables.  You can capture cmd, command, reboot_target, and run_fsck by value and call DoReboot() in the lambda.\n\nI regret adding the singletons that I added previously.  Plan is to get rid of them eventually (and I\u0027m close with the Parser!), but it hasn\u0027t been enough of a priority to do that.  That said, we should avoid adding a new one.",
      "range": {
        "startLine": 490,
        "startChar": 52,
        "endLine": 490,
        "endChar": 68
      },
      "revId": "7c67b2bd1e18f1c7b087ad1aed31dd6aac4521fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "befb6b28_04efbb19",
        "filename": "init/reboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 490,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2017-07-05T21:48:24Z",
      "side": 1,
      "message": "I just think maybe we can have the shutting donn flag here, but if this is being deprecated, let us remove the class.",
      "parentUuid": "6a611923_fd5ff3b9",
      "range": {
        "startLine": 490,
        "startChar": 52,
        "endLine": 490,
        "endChar": 68
      },
      "revId": "7c67b2bd1e18f1c7b087ad1aed31dd6aac4521fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a8216b5_888f2eb8",
        "filename": "init/util.cpp",
        "patchSetId": 2
      },
      "lineNbr": 373,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-06-29T06:29:56Z",
      "side": 1,
      "message": "Let\u0027s prefer C++ style comments, //",
      "revId": "7c67b2bd1e18f1c7b087ad1aed31dd6aac4521fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "730acb8a_935718ee",
        "filename": "init/util.cpp",
        "patchSetId": 2
      },
      "lineNbr": 373,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2017-07-05T21:48:24Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6a8216b5_888f2eb8",
      "revId": "7c67b2bd1e18f1c7b087ad1aed31dd6aac4521fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "afab7d25_00488a5a",
        "filename": "rootdir/init.rc",
        "patchSetId": 2
      },
      "lineNbr": 682,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-06-29T06:29:56Z",
      "side": 1,
      "message": "This is in theory better in README.md, though we unfortunately don\u0027t document any of the other triggers, so here\u0027s fine for now too.  I filed b/62303461 for myself to write that documentation, but haven\u0027t yet...",
      "revId": "7c67b2bd1e18f1c7b087ad1aed31dd6aac4521fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "615b3d55_3e588b65",
        "filename": "rootdir/init.rc",
        "patchSetId": 2
      },
      "lineNbr": 682,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2017-06-29T18:15:13Z",
      "side": 1,
      "message": "Yeah not having the triggers documented has been a sore point. Glad to see that getting documented.",
      "parentUuid": "afab7d25_00488a5a",
      "revId": "7c67b2bd1e18f1c7b087ad1aed31dd6aac4521fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f61397c1_4afe3f5e",
        "filename": "rootdir/init.rc",
        "patchSetId": 2
      },
      "lineNbr": 682,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2017-07-05T21:48:24Z",
      "side": 1,
      "message": "yup, so for now, let us keep it here and move it in b/62303461",
      "parentUuid": "615b3d55_3e588b65",
      "revId": "7c67b2bd1e18f1c7b087ad1aed31dd6aac4521fd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}