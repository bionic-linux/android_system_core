{
  "comments": [
    {
      "key": {
        "uuid": "3691c097_25ed9851",
        "filename": "adb/transport.h",
        "patchSetId": 2
      },
      "lineNbr": 311,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2018-04-26T20:47:18Z",
      "side": 1,
      "message": "Instead of guarding this with a mutex, can we use std::atomic\u003cstd::shared_ptr\u003cConnection\u003e\u003e instead? (it\u0027ll be equivalent for now, but C++20 is (probably) adding a specialization for atomic\u003cshared_ptr\u003cT\u003e\u003e)",
      "range": {
        "startLine": 310,
        "startChar": 40,
        "endLine": 311,
        "endChar": 63
      },
      "revId": "2feedc8c3eb71c54fae226cd18fe1c403264b0c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ca123bc_4796dc29",
        "filename": "adb/transport.h",
        "patchSetId": 2
      },
      "lineNbr": 311,
      "author": {
        "id": 1066743
      },
      "writtenOn": "2018-04-26T20:56:26Z",
      "side": 1,
      "message": "Tried that at first, but the compiler didn\u0027t quite like it:\n\n external/libcxx/include/atomic:893:13: error: _Atomic cannot be applied to type \n \u0027std::__1::shared_ptr\u003cConnection\u003e\u0027 which is not trivially copyable\n     mutable _Atomic(_Tp) __a_;",
      "parentUuid": "3691c097_25ed9851",
      "range": {
        "startLine": 310,
        "startChar": 40,
        "endLine": 311,
        "endChar": 63
      },
      "revId": "2feedc8c3eb71c54fae226cd18fe1c403264b0c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8106e50a_74715195",
        "filename": "adb/transport.h",
        "patchSetId": 2
      },
      "lineNbr": 311,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2018-04-26T21:13:27Z",
      "side": 1,
      "message": "Well, that\u0027s unfortunate.\n\nSwitch to the atomic_load/atomic_store overloads instead? (http://en.cppreference.com/w/cpp/memory/shared_ptr/atomic)",
      "parentUuid": "1ca123bc_4796dc29",
      "range": {
        "startLine": 310,
        "startChar": 40,
        "endLine": 311,
        "endChar": 63
      },
      "revId": "2feedc8c3eb71c54fae226cd18fe1c403264b0c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f95b6009_d98f2b74",
        "filename": "adb/transport.h",
        "patchSetId": 2
      },
      "lineNbr": 311,
      "author": {
        "id": 1066743
      },
      "writtenOn": "2018-04-26T21:15:05Z",
      "side": 1,
      "message": "Also tried that! mingw did not like it: https://android-build.googleplex.com/builds/pending/P5843884/aosp_arm64-eng/latest/view/logs/build_error.log",
      "parentUuid": "8106e50a_74715195",
      "range": {
        "startLine": 310,
        "startChar": 40,
        "endLine": 311,
        "endChar": 63
      },
      "revId": "2feedc8c3eb71c54fae226cd18fe1c403264b0c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1927fb8f_714d72c0",
        "filename": "adb/transport.h",
        "patchSetId": 2
      },
      "lineNbr": 311,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2018-04-27T19:51:41Z",
      "side": 1,
      "message": ":-(",
      "parentUuid": "f95b6009_d98f2b74",
      "range": {
        "startLine": 310,
        "startChar": 40,
        "endLine": 311,
        "endChar": 63
      },
      "revId": "2feedc8c3eb71c54fae226cd18fe1c403264b0c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7cd993b_24e158f1",
        "filename": "adb/transport.h",
        "patchSetId": 2
      },
      "lineNbr": 311,
      "author": {
        "id": 1066743
      },
      "writtenOn": "2018-04-27T20:32:38Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1927fb8f_714d72c0",
      "range": {
        "startLine": 310,
        "startChar": 40,
        "endLine": 311,
        "endChar": 63
      },
      "revId": "2feedc8c3eb71c54fae226cd18fe1c403264b0c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}