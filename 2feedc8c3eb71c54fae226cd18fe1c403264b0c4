{
  "comments": [
    {
      "key": {
        "uuid": "3691c097_25ed9851",
        "filename": "adb/transport.h",
        "patchSetId": 2
      },
      "lineNbr": 311,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2018-04-26T20:47:18Z",
      "side": 1,
      "message": "Instead of guarding this with a mutex, can we use std::atomic\u003cstd::shared_ptr\u003cConnection\u003e\u003e instead? (it\u0027ll be equivalent for now, but C++20 is (probably) adding a specialization for atomic\u003cshared_ptr\u003cT\u003e\u003e)",
      "range": {
        "startLine": 310,
        "startChar": 40,
        "endLine": 311,
        "endChar": 63
      },
      "revId": "2feedc8c3eb71c54fae226cd18fe1c403264b0c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ca123bc_4796dc29",
        "filename": "adb/transport.h",
        "patchSetId": 2
      },
      "lineNbr": 311,
      "author": {
        "id": 1066743
      },
      "writtenOn": "2018-04-26T20:56:26Z",
      "side": 1,
      "message": "Tried that at first, but the compiler didn\u0027t quite like it:\n\n external/libcxx/include/atomic:893:13: error: _Atomic cannot be applied to type \n \u0027std::__1::shared_ptr\u003cConnection\u003e\u0027 which is not trivially copyable\n     mutable _Atomic(_Tp) __a_;",
      "parentUuid": "3691c097_25ed9851",
      "range": {
        "startLine": 310,
        "startChar": 40,
        "endLine": 311,
        "endChar": 63
      },
      "revId": "2feedc8c3eb71c54fae226cd18fe1c403264b0c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}