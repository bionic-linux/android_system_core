{
  "comments": [
    {
      "key": {
        "uuid": "fa6fafa9_d75a3e0d",
        "filename": "init/init.cpp",
        "patchSetId": 5
      },
      "lineNbr": 526,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2016-12-16T04:10:13Z",
      "side": 1,
      "message": "What would the partition be? Which .cil file does the vendor policy get built into?",
      "revId": "ab3bda2aba7cca96da2cef38a7a724c6deafe361",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa6fafa9_23d6d4de",
        "filename": "init/init.cpp",
        "patchSetId": 5
      },
      "lineNbr": 526,
      "author": {
        "id": 1026058
      },
      "writtenOn": "2016-12-16T19:26:07Z",
      "side": 1,
      "message": "final partition tbd.  The .cil file corresponding to device policy is nonplat_sepolicy.cil, which has in it the public policy included from the platform version it targets in addition to any new device-specific types, attributes and avc rules (just about everything else is verboten at present).  /plat_sepolicy.cil corresponds to the new platform version\u0027s policy, and /mapping_sepolicy.cil is all of the policy provided by the platform to make sure that the other two files work nicely together.",
      "parentUuid": "fa6fafa9_d75a3e0d",
      "revId": "ab3bda2aba7cca96da2cef38a7a724c6deafe361",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa6fafa9_176596c7",
        "filename": "init/init.cpp",
        "patchSetId": 5
      },
      "lineNbr": 546,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2016-12-16T04:10:13Z",
      "side": 1,
      "message": "Is the cil routine setting errno, why PLOG?",
      "revId": "ab3bda2aba7cca96da2cef38a7a724c6deafe361",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa6fafa9_a3f3c47d",
        "filename": "init/init.cpp",
        "patchSetId": 5
      },
      "lineNbr": 546,
      "author": {
        "id": 1026058
      },
      "writtenOn": "2016-12-16T19:26:07Z",
      "side": 1,
      "message": "I did not add any errno setting.  As for PLOG vs. LOG, dunno, I just followed the existing usage (enh@ would know previous justification here, if any).",
      "parentUuid": "fa6fafa9_176596c7",
      "revId": "ab3bda2aba7cca96da2cef38a7a724c6deafe361",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa6fafa9_83ffa83b",
        "filename": "init/init.cpp",
        "patchSetId": 5
      },
      "lineNbr": 546,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-12-16T19:28:21Z",
      "side": 1,
      "message": "if what you called set errno, you should use PLOG. if not, LOG.",
      "parentUuid": "fa6fafa9_a3f3c47d",
      "revId": "ab3bda2aba7cca96da2cef38a7a724c6deafe361",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa6fafa9_ae164b70",
        "filename": "init/init.cpp",
        "patchSetId": 5
      },
      "lineNbr": 546,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2016-12-16T21:35:57Z",
      "side": 1,
      "message": "I looked through the cil code, it doesn\u0027t appear to handle errno, so you def LOG here... PLOG is akin to perror()",
      "parentUuid": "fa6fafa9_83ffa83b",
      "revId": "ab3bda2aba7cca96da2cef38a7a724c6deafe361",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa6fafa9_49a1317a",
        "filename": "init/init.cpp",
        "patchSetId": 5
      },
      "lineNbr": 546,
      "author": {
        "id": 1026058
      },
      "writtenOn": "2016-12-16T22:33:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fa6fafa9_ae164b70",
      "revId": "ab3bda2aba7cca96da2cef38a7a724c6deafe361",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}