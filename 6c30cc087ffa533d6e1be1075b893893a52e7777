{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "25b6399f_267c2b1d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-04-14T01:10:20Z",
      "side": 1,
      "message": "should this be \u0027atest libsysutils_test\u0027?",
      "range": {
        "startLine": 12,
        "startChar": 6,
        "endLine": 12,
        "endChar": 7
      },
      "revId": "6c30cc087ffa533d6e1be1075b893893a52e7777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e02dbf13_e3d43bc7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1956258
      },
      "writtenOn": "2023-04-14T18:45:33Z",
      "side": 1,
      "message": "I wasn\u0027t able to verify if atest for this module are passing on treetop without this CL as well. I tried on go/abtd and it seems to be failing on tree top as well. https://android-build.corp.google.com/test_investigate/?invocationId\u003dI03100010150603372",
      "parentUuid": "25b6399f_267c2b1d",
      "range": {
        "startLine": 12,
        "startChar": 6,
        "endLine": 12,
        "endChar": 7
      },
      "revId": "6c30cc087ffa533d6e1be1075b893893a52e7777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68906e7a_5c51ddd8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-04-14T20:07:14Z",
      "side": 1,
      "message": "Probably best to fix the test first.",
      "parentUuid": "e02dbf13_e3d43bc7",
      "range": {
        "startLine": 12,
        "startChar": 6,
        "endLine": 12,
        "endChar": 7
      },
      "revId": "6c30cc087ffa533d6e1be1075b893893a52e7777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aad2046a_0a0d0333",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 12,
      "author": {
        "id": 1956258
      },
      "writtenOn": "2023-04-17T22:42:10Z",
      "side": 1,
      "message": "atest libsysutils_test is failing because of permission issue. Directly running the libsysutils_test in nativetest64 passes.",
      "parentUuid": "68906e7a_5c51ddd8",
      "range": {
        "startLine": 12,
        "startChar": 6,
        "endLine": 12,
        "endChar": 7
      },
      "revId": "6c30cc087ffa533d6e1be1075b893893a52e7777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "739edeab_0743bc91",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-04-14T00:25:42Z",
      "side": 1,
      "message": "oops - accidentally restarted presubmit. I think this is great, but I\u0027m wondering if the client which calls registerCmd should also delete it. The API is not so nice.",
      "revId": "6c30cc087ffa533d6e1be1075b893893a52e7777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "012bd5ea_90efede6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-04-14T01:10:36Z",
      "side": 1,
      "message": "yeah - I think the idea is that the client is supposed to own these.",
      "parentUuid": "739edeab_0743bc91",
      "revId": "6c30cc087ffa533d6e1be1075b893893a52e7777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "060af600_c51e3786",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1956258
      },
      "writtenOn": "2023-04-14T01:45:48Z",
      "side": 1,
      "message": "Clients of this API basically creating a new objects while calling and they don\u0027t hold the pointer to these command objects anywhere. All uses are in similar way.\nhttps://source.corp.google.com/android-internal/packages/modules/DnsResolver/DnsProxyListener.cpp;bpv\u003d1;bpt\u003d1;rcl\u003deeae447b7baf32568765801cb304d72dadfcd739;l\u003d662",
      "parentUuid": "012bd5ea_90efede6",
      "revId": "6c30cc087ffa533d6e1be1075b893893a52e7777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fcc5101b_dba14240",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-04-14T20:07:14Z",
      "side": 1,
      "message": "I think the code there may be wrong, and the API actually really is bad here (you could make a new API which has this class own things, and deprecate the existing one).\n\nThere are only 8 users of this API as well that I can see, so maybe we can fix all of them.",
      "parentUuid": "060af600_c51e3786",
      "revId": "6c30cc087ffa533d6e1be1075b893893a52e7777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd7c36f8_93b50ea8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1956258
      },
      "writtenOn": "2023-04-17T22:42:10Z",
      "side": 1,
      "message": "I updated one of the clients to hold pointers to command objects here: https://android-review.git.corp.google.com/c/platform/packages/modules/DnsResolver/+/2542070.",
      "parentUuid": "fcc5101b_dba14240",
      "revId": "6c30cc087ffa533d6e1be1075b893893a52e7777",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}