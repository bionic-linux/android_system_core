{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c910d795_231d726b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-03-24T19:09:08Z",
      "side": 1,
      "message": "(it\u0027s now _two_)",
      "range": {
        "startLine": 9,
        "startChar": 28,
        "endLine": 9,
        "endChar": 43
      },
      "revId": "796cc6e13f9426e308a87def70ffc5b97b87b8aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b6ee951a_bf8b7d42",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 9,
      "author": {
        "id": 1208973
      },
      "writtenOn": "2021-03-24T19:10:42Z",
      "side": 1,
      "message": "Ooh, thanks!",
      "parentUuid": "c910d795_231d726b",
      "range": {
        "startLine": 9,
        "startChar": 28,
        "endLine": 9,
        "endChar": 43
      },
      "revId": "796cc6e13f9426e308a87def70ffc5b97b87b8aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c907ccd_d1b11ddb",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1208973
      },
      "writtenOn": "2021-03-24T18:54:53Z",
      "side": 1,
      "message": "Elliot, is it okay to expose this file to Rust?  I initially thought not since it\u0027s in a folder called \"private\", but it seems like lots of C/C++ libraries in other projects use it, so it seems fine after all.",
      "revId": "796cc6e13f9426e308a87def70ffc5b97b87b8aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f9ff8c8_e4fd86bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-03-24T19:08:33Z",
      "side": 1,
      "message": "the --whitelist-function stuff is the complete list of what\u0027s being exported?\n\n(there are a few deprecated things in there that it would be better not to expose, but it looks like you\u0027re only exposing AID_USER_OFFSET [and not the deprecated AID_USER]?)",
      "parentUuid": "5c907ccd_d1b11ddb",
      "revId": "796cc6e13f9426e308a87def70ffc5b97b87b8aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "28409963_25758720",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1208973
      },
      "writtenOn": "2021-03-24T19:10:42Z",
      "side": 1,
      "message": "Correct.  I can easily export more (or even everything); I just figured I\u0027d start with the one thing I needed to play it safe.  Or we could wait and let people add more things here later if they\u0027re needed.  Either is fine with me.",
      "parentUuid": "5f9ff8c8_e4fd86bd",
      "revId": "796cc6e13f9426e308a87def70ffc5b97b87b8aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "087b7cbd_87603543",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-03-24T19:14:47Z",
      "side": 1,
      "message": "no, definitely not. i like the \"you have to explicitly export\" style, but i\u0027m worried that since it\u0027s hidden in a .bp file (rather than a .map.txt say) we don\u0027t have anything in gerrit to say \"pay close attention to this change, it\u0027s not like most changes\"...",
      "parentUuid": "28409963_25758720",
      "revId": "796cc6e13f9426e308a87def70ffc5b97b87b8aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a9a8b595_f3471acc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1208973
      },
      "writtenOn": "2021-03-24T19:17:40Z",
      "side": 1,
      "message": "Sorry, did you want me to add more things to the export list, or is this okay?\n\nThe idea of moving the allow/denylist into a separate file instead of Android.bp is interesting; I assume we could do that my modifying the build system a bit.  Would you like us to file a bug about that?  (It would also hopefully have the nice side effect of meaning you don\u0027t have to do the slow re-building of the Soong index of whatever whenever you change the list.)",
      "parentUuid": "087b7cbd_87603543",
      "revId": "796cc6e13f9426e308a87def70ffc5b97b87b8aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e8e7efd_37420da5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-03-24T19:26:23Z",
      "side": 1,
      "message": "\u003e Sorry, did you want me to add more things to the export list, or is this okay?\n\ni think this is fine for now.\n\ni\u0027m actually still mulling over in my head what this kind of thing should look like long-term, and i think cutils is very likely a \"hard cases make bad laws\" situation. things i\u0027m thinking:\n\n1. if a library uses .map.txt for C already, then we should probably aim for rust parity.\n2. but we should probably have the library owner sign off on that, with the possibility of a rust blocklist on top (so rust doesn\u0027t _start_ with already-deprecated API)\n3. far too many libraries don\u0027t have a .map.txt, so i\u0027m not sure what to do there.\n4. a lot of libraries [cutils being a canonical example] are a strange mixture of truly awful \"do not use\" stuff and \"you need this and can\u0027t get it anywhere else\" stuff.\n5. do you have translation of C++ API too, or are we only concerned with C symbols for now?\n\n\u003e Would you like us to file a bug about that?\n\nyes please. with all things rust, i\u0027m hoping we can avoid some of the mistakes we made with C/C++, and \"defaulting to exporting everything\" was one of them.",
      "parentUuid": "a9a8b595_f3471acc",
      "revId": "796cc6e13f9426e308a87def70ffc5b97b87b8aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa69a573_ead7b309",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1416371
      },
      "writtenOn": "2021-03-24T19:34:29Z",
      "side": 1,
      "message": "For Rust code itself, this is already done in the language (you need to put `pub` in front of something for it to get exported).\n\nI do agree that we should get the allowlist for bindgen moved to a file rather than Soong arguments someday.\n\nUnless I\u0027m misunderstanding how `.map.txt` is being used, the bindgen-generated-bindings like this should be subject to *both* those restrictions, and those in the explicit allowlist args.\n\nFor C++ API, we\u0027ve had a few people (mostly bluetooth) use it to bind within their own project, but haven\u0027t bound to C++ functions across projects yet.",
      "parentUuid": "3e8e7efd_37420da5",
      "revId": "796cc6e13f9426e308a87def70ffc5b97b87b8aa",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}