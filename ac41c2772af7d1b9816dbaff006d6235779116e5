{
  "comments": [
    {
      "key": {
        "uuid": "5c240ef3_2d1919be",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-03-17T21:56:45Z",
      "side": 1,
      "message": "Because system/core has tons of _stuff_ in it, prefix with logcat:. e.g.:\n\nlogcat: add --max-count",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 22
      },
      "revId": "ac41c2772af7d1b9816dbaff006d6235779116e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5cbb2e3b_d20d028a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 7,
      "author": {
        "id": 1080302
      },
      "writtenOn": "2016-03-24T20:29:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5c240ef3_2d1919be",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 22
      },
      "revId": "ac41c2772af7d1b9816dbaff006d6235779116e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c240ef3_6d13119e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-03-17T21:56:45Z",
      "side": 1,
      "message": "Historically this should be the last line in the footer.",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 52
      },
      "revId": "ac41c2772af7d1b9816dbaff006d6235779116e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5cbb2e3b_f2580602",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1080302
      },
      "writtenOn": "2016-03-24T20:29:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5c240ef3_6d13119e",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 52
      },
      "revId": "ac41c2772af7d1b9816dbaff006d6235779116e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c240ef3_ad2ce9e0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-03-17T21:56:45Z",
      "side": 1,
      "message": "All changes _should_ have a gTest designed for it. You can probably copy-n-paste the tail test(s) in tests/logcat_test.cpp and that should do the trick.",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 36
      },
      "revId": "ac41c2772af7d1b9816dbaff006d6235779116e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5cbb2e3b_3203ae5f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1080302
      },
      "writtenOn": "2016-03-24T20:29:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5c240ef3_ad2ce9e0",
      "range": {
        "startLine": 12,
        "startChar": 0,
        "endLine": 12,
        "endChar": 36
      },
      "revId": "ac41c2772af7d1b9816dbaff006d6235779116e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c240ef3_8dcda581",
        "filename": "logcat/logcat.cpp",
        "patchSetId": 1
      },
      "lineNbr": 280,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-03-17T21:56:45Z",
      "side": 1,
      "message": "I feel like we are playing WWPD (What Would POSIX Do). All by itself, this looks like [--head\u003d|-h] ...\n\nAs we know this is going to be paired with --regex (or a hypothetical [-v|--invert-match\u003d] option), the argument name makes sense.\n\nAlso, because head makes _no_sense for logcat because log resolution and pertinence is highest on the tail end, and can actually be missing lots of corroborating content from multiple log buffers at the head, we do _not_ want to create a new religion or cargo cult behavior to lead people astray by thinking a simple concept of --head makes sense.\n\nI will have troubles allowing a premature Commit of this CL without this one being a patch-stack dependency on the (future) --regex CL. Also, in that future CL, it should alter the help for this flag here to indicate that this argument is meant (but not limited) to be paired with --regex.",
      "range": {
        "startLine": 279,
        "startChar": 0,
        "endLine": 280,
        "endChar": 45
      },
      "revId": "ac41c2772af7d1b9816dbaff006d6235779116e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5cbb2e3b_52fab288",
        "filename": "logcat/logcat.cpp",
        "patchSetId": 1
      },
      "lineNbr": 280,
      "author": {
        "id": 1080302
      },
      "writtenOn": "2016-03-24T20:29:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5c240ef3_8dcda581",
      "range": {
        "startLine": 279,
        "startChar": 0,
        "endLine": 280,
        "endChar": 45
      },
      "revId": "ac41c2772af7d1b9816dbaff006d6235779116e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c240ef3_cdc79d5d",
        "filename": "logcat/logcat.cpp",
        "patchSetId": 1
      },
      "lineNbr": 288,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-03-17T21:56:45Z",
      "side": 1,
      "message": "POSIX tends towards --buffer-size, boy did we make a mistake here :-( We should change this _now_ since it is new behavior for N! We introduced long arguments in N, so all can be refactored.\n\nPlease put a refactor as a dependent CL to this one, or I can whip this up myself independently if you feel like I am pulling you into a quagmire ...",
      "range": {
        "startLine": 288,
        "startChar": 25,
        "endLine": 288,
        "endChar": 36
      },
      "revId": "ac41c2772af7d1b9816dbaff006d6235779116e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5cbb2e3b_f2392629",
        "filename": "logcat/logcat.cpp",
        "patchSetId": 1
      },
      "lineNbr": 288,
      "author": {
        "id": 1080302
      },
      "writtenOn": "2016-03-24T20:29:00Z",
      "side": 1,
      "message": "Yeah, I\u0027d rather sit this one out :)",
      "parentUuid": "5c240ef3_cdc79d5d",
      "range": {
        "startLine": 288,
        "startChar": 25,
        "endLine": 288,
        "endChar": 36
      },
      "revId": "ac41c2772af7d1b9816dbaff006d6235779116e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c240ef3_eabec7f3",
        "filename": "logcat/logcat.cpp",
        "patchSetId": 1
      },
      "lineNbr": 661,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-03-17T21:56:45Z",
      "side": 1,
      "message": "local getSizeTArg does all this and more size_t arguments in fewer lines.",
      "range": {
        "startLine": 657,
        "startChar": 16,
        "endLine": 661,
        "endChar": 17
      },
      "revId": "ac41c2772af7d1b9816dbaff006d6235779116e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5cbb2e3b_d217c286",
        "filename": "logcat/logcat.cpp",
        "patchSetId": 1
      },
      "lineNbr": 661,
      "author": {
        "id": 1080302
      },
      "writtenOn": "2016-03-24T20:29:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5c240ef3_eabec7f3",
      "range": {
        "startLine": 657,
        "startChar": 16,
        "endLine": 661,
        "endChar": 17
      },
      "revId": "ac41c2772af7d1b9816dbaff006d6235779116e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c240ef3_8dec85b0",
        "filename": "logcat/logcat.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1158,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-03-17T21:56:45Z",
      "side": 1,
      "message": "nit: _maybe_ validate g_maxCount against tail_lines as sourced by -t option, they should be considered mutually exclusive. The -T option (tail, then new content after block) on the other hand is acceptable since it does not strictly limit the number of lines collected from tail as it continues to flow afterwards. For example, one may use -T 1 to print from this time forward rather than letting all memorized content be evaluated.\n\nOnce --regex is introduced, pedantically g_maxCount must only be smaller than tail_lines selected with -t; but is still in flakey behavior territory. Restate: --regex makes sense with -t, -m does not makes sense with -t, but --regex plus -m does make some limited sense with -t albeit weak enough not to quibble over and acceptable to error out.",
      "range": {
        "startLine": 1158,
        "startChar": 11,
        "endLine": 1158,
        "endChar": 51
      },
      "revId": "ac41c2772af7d1b9816dbaff006d6235779116e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5cbb2e3b_926ffafe",
        "filename": "logcat/logcat.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1158,
      "author": {
        "id": 1080302
      },
      "writtenOn": "2016-03-24T20:29:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5c240ef3_8dec85b0",
      "range": {
        "startLine": 1158,
        "startChar": 11,
        "endLine": 1158,
        "endChar": 51
      },
      "revId": "ac41c2772af7d1b9816dbaff006d6235779116e5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}