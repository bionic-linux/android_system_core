{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "dc42c7b0_93236ad0",
        "filename": "libutils/include/utils/String8.h",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1133963
      },
      "writtenOn": "2023-08-09T22:33:43Z",
      "side": 1,
      "message": "why not int n \u003d vsnprintf..\n\nI can\u0027t imagine this is legacy C code since it uses std::string",
      "range": {
        "startLine": 48,
        "startChar": 4,
        "endLine": 48,
        "endChar": 5
      },
      "revId": "af0a6d5bb4f5521fdae918b40279972e452db99e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "670030e3_8d10af7b",
        "filename": "libutils/include/utils/String8.h",
        "patchSetId": 2
      },
      "lineNbr": 71,
      "author": {
        "id": 1133963
      },
      "writtenOn": "2023-08-09T22:33:43Z",
      "side": 1,
      "message": "String8 here for coherency?",
      "range": {
        "startLine": 71,
        "startChar": 7,
        "endLine": 71,
        "endChar": 18
      },
      "revId": "af0a6d5bb4f5521fdae918b40279972e452db99e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57e4a892_13c127fc",
        "filename": "libutils/include/utils/String8.h",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1569496
      },
      "writtenOn": "2023-08-09T22:25:57Z",
      "side": 1,
      "message": "Should we use the term \"u16string\" instead of \"ws(tring)\"? wstrings are not in the fixed size in C++ standard, and it means a different thing than u16strings.\n\nhttps://en.cppreference.com/w/cpp/language/types:\n\n\u003e In practice, it is 32 bits and holds UTF-32 on Linux and many other non-Windows systems, but 16 bits and holds UTF-16 code units on Windows. The standard used to require wchar_t to be large enough to represent any supported character code point. However, such requirement cannot be fulfilled on Windows, and thus it is considered as a defect and removed.",
      "revId": "af0a6d5bb4f5521fdae918b40279972e452db99e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "57adc8a0_9a6c9a8a",
        "filename": "libutils/include/utils/String8.h",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1133963
      },
      "writtenOn": "2023-08-09T22:33:43Z",
      "side": 1,
      "message": "+1 to Hao\u0027s comment here",
      "parentUuid": "57e4a892_13c127fc",
      "revId": "af0a6d5bb4f5521fdae918b40279972e452db99e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "30938b79_888b251b",
        "filename": "libutils/include/utils/String8.h",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1135107
      },
      "writtenOn": "2023-08-10T03:29:30Z",
      "side": 1,
      "message": "I don\u0027t understand this comment. I am using u16string, aren\u0027t I? Or you\u0027re referring to a quick-and-dirty conversion function name \"s2ws\"?",
      "parentUuid": "57adc8a0_9a6c9a8a",
      "revId": "af0a6d5bb4f5521fdae918b40279972e452db99e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39b24146_c1117454",
        "filename": "libutils/include/utils/String8.h",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1133963
      },
      "writtenOn": "2023-08-10T16:09:01Z",
      "side": 1,
      "message": "Ah yeah - I think the combo of the commented code + wstring_convert tricked me. The APIs being deprecated still stands, but that\u0027s orthogonal. @Hao maybe you meant something else?",
      "parentUuid": "30938b79_888b251b",
      "revId": "af0a6d5bb4f5521fdae918b40279972e452db99e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a69fcd88_b6b99dcd",
        "filename": "libutils/include/utils/String8.h",
        "patchSetId": 2
      },
      "lineNbr": 91,
      "author": {
        "id": 1569496
      },
      "writtenOn": "2023-08-09T22:19:00Z",
      "side": 1,
      "message": "Just FYI, those functions are deprecated in C++17. I remember that is because it throws and we disabled RTTI. I don\u0027t know if it works well with other parts of Android.",
      "revId": "af0a6d5bb4f5521fdae918b40279972e452db99e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60757260_5e73d908",
        "filename": "libutils/include/utils/String8.h",
        "patchSetId": 2
      },
      "lineNbr": 91,
      "author": {
        "id": 1133963
      },
      "writtenOn": "2023-08-09T22:33:43Z",
      "side": 1,
      "message": "what is the preferred approach in C++17 and beyond?",
      "parentUuid": "a69fcd88_b6b99dcd",
      "revId": "af0a6d5bb4f5521fdae918b40279972e452db99e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7bbca7e4_8f3acb46",
        "filename": "libutils/include/utils/String8.h",
        "patchSetId": 2
      },
      "lineNbr": 91,
      "author": {
        "id": 1135107
      },
      "writtenOn": "2023-08-10T03:29:30Z",
      "side": 1,
      "message": "Ah, I\u0027ll probably replace these conversion functions later with Android\u0027s implementation, this was just a quick and dirty one to get it building and figure out how many changes do we need to do to migrate android::StringX to std::string.",
      "parentUuid": "60757260_5e73d908",
      "revId": "af0a6d5bb4f5521fdae918b40279972e452db99e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}