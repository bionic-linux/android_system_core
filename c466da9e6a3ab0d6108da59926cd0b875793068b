{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "c82ccbd3_3f14b58a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-03-23T22:51:06Z",
      "side": 1,
      "message": "isn\u0027t it weird API-wise that the blocklist should be disabled by default?",
      "revId": "c466da9e6a3ab0d6108da59926cd0b875793068b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "983b93a4_7c460575",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2021-03-23T23:25:42Z",
      "side": 1,
      "message": "Yes I agree it\u0027s weird. Intuitively, I would think that if a modules.blocklist file exists, then it should be used by default. I didn\u0027t change this because I didn\u0027t want to break anything that depended on that. I think Pixel 5 is the first device to utilize the blocklist. So we are probably safe to implement it that way.",
      "parentUuid": "c82ccbd3_3f14b58a",
      "revId": "c466da9e6a3ab0d6108da59926cd0b875793068b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbc4e9bf_a645bccb",
        "filename": "libmodprobe/include/modprobe/modprobe.h",
        "patchSetId": 7
      },
      "lineNbr": 28,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-03-23T22:51:06Z",
      "side": 1,
      "message": "is a default argument a good idea here, or should callers be explicit?",
      "range": {
        "startLine": 28,
        "startChar": 18,
        "endLine": 28,
        "endChar": 39
      },
      "revId": "c466da9e6a3ab0d6108da59926cd0b875793068b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4aa6d83_0deb88fd",
        "filename": "libmodprobe/include/modprobe/modprobe.h",
        "patchSetId": 7
      },
      "lineNbr": 28,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2021-03-23T23:25:42Z",
      "side": 1,
      "message": "I made it a default argument to maintain the existing functionality. I\u0027m okay with either way.",
      "parentUuid": "dbc4e9bf_a645bccb",
      "range": {
        "startLine": 28,
        "startChar": 18,
        "endLine": 28,
        "endChar": 39
      },
      "revId": "c466da9e6a3ab0d6108da59926cd0b875793068b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ebb82c1c_ec8d6b4a",
        "filename": "libmodprobe/include/modprobe/modprobe.h",
        "patchSetId": 7
      },
      "lineNbr": 28,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2021-03-24T00:31:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b4aa6d83_0deb88fd",
      "range": {
        "startLine": 28,
        "startChar": 18,
        "endLine": 28,
        "endChar": 39
      },
      "revId": "c466da9e6a3ab0d6108da59926cd0b875793068b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4fb60ea9_f0a117d1",
        "filename": "libmodprobe/libmodprobe.cpp",
        "patchSetId": 7
      },
      "lineNbr": 339,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-03-23T22:51:06Z",
      "side": 1,
      "message": "why not just expose EnableBlockList() instead? if you only have two callers?",
      "revId": "c466da9e6a3ab0d6108da59926cd0b875793068b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a80441a_0cb5883d",
        "filename": "libmodprobe/libmodprobe.cpp",
        "patchSetId": 7
      },
      "lineNbr": 339,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2021-03-23T23:25:42Z",
      "side": 1,
      "message": "That is something I did think about while waiting for the reviews. I agree that\u0027s probably better. Let me re-work this to have first_stage_init just call EnableBlockList().",
      "parentUuid": "4fb60ea9_f0a117d1",
      "revId": "c466da9e6a3ab0d6108da59926cd0b875793068b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f050a363_00dcd1b8",
        "filename": "libmodprobe/libmodprobe.cpp",
        "patchSetId": 7
      },
      "lineNbr": 339,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2021-03-24T00:31:28Z",
      "side": 1,
      "message": "I decided to keep use_blocklist because it doesn\u0027t make sense for the file modules.blocklist to exist, but not be used by default. I think it\u0027s better to force the caller to be explicit instead which also makes it so you don\u0027t have to call EnableBlocklist(true).",
      "parentUuid": "0a80441a_0cb5883d",
      "revId": "c466da9e6a3ab0d6108da59926cd0b875793068b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cee83e77_fe116d91",
        "filename": "libmodprobe/libmodprobe.cpp",
        "patchSetId": 7
      },
      "lineNbr": 339,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-03-24T00:49:25Z",
      "side": 1,
      "message": "should it default to true though? who needs to EnableBlocklist(false)? there\u0027s only init and modprobe calling this, right?\n\n(and even if we do keep EnableBlocklist() internal [which seems worse than making it public and removing the constructor boolean argument?], it probably shouldn\u0027t be called _inside_ this loop?)\n\ndigging deeper it seems like:\n1. init always wants this enabled?\n2. traditional modprobe(8) has a -b option that determines whether blocklists are enabled (default no).\n\ninit has more call sites, so init wins the API tug of war? or is there reason to believe there will be more callers? or reason to believe that all callers should explicitly think about this? (i guess my assumption was \"if not for legacy reasons, we wouldn\u0027t even have the option to ignore the blocklist\"?)",
      "parentUuid": "f050a363_00dcd1b8",
      "revId": "c466da9e6a3ab0d6108da59926cd0b875793068b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "733df5ff_4dffe98b",
        "filename": "libmodprobe/libmodprobe.cpp",
        "patchSetId": 7
      },
      "lineNbr": 339,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2021-03-25T16:57:26Z",
      "side": 1,
      "message": "Okay, I\u0027m happy with that as well. I got the impression originally that you preferred the caller explicitly set use_blocklist or explicitly call EnableBlockList().\n\nRegarding EnableBlocklist(), it is already public and is used by modprobe to enable the blocklist when -b is used. This patch switches modprobe to just use the constructor argument for enabling/disabling the blocklist. So EnableBlocklist() will now only be used by libmodprobe_test.cpp.",
      "parentUuid": "cee83e77_fe116d91",
      "revId": "c466da9e6a3ab0d6108da59926cd0b875793068b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e5bc391c_42ca8dc8",
        "filename": "libmodprobe/libmodprobe.cpp",
        "patchSetId": 7
      },
      "lineNbr": 339,
      "author": {
        "id": 1557540
      },
      "writtenOn": "2021-03-31T16:35:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "733df5ff_4dffe98b",
      "revId": "c466da9e6a3ab0d6108da59926cd0b875793068b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}