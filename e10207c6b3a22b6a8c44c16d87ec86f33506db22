{
  "comments": [
    {
      "key": {
        "uuid": "21a4a2a1_b1567b4d",
        "filename": "liblog/README",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 1004277
      },
      "writtenOn": "2017-02-07T22:30:02Z",
      "side": 1,
      "message": "latter",
      "range": {
        "startLine": 168,
        "startChar": 41,
        "endLine": 168,
        "endChar": 46
      },
      "revId": "e10207c6b3a22b6a8c44c16d87ec86f33506db22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a0c7b35_a5871f24",
        "filename": "liblog/include/log/log_frontend.h",
        "patchSetId": 4
      },
      "lineNbr": 3,
      "author": {
        "id": 1004277
      },
      "writtenOn": "2017-02-07T22:30:02Z",
      "side": 1,
      "message": "Copied from existing file?  If not, use current year instead?",
      "range": {
        "startLine": 3,
        "startChar": 13,
        "endLine": 3,
        "endChar": 22
      },
      "revId": "e10207c6b3a22b6a8c44c16d87ec86f33506db22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dee986fc_0c309a94",
        "filename": "liblog/include/log/log_frontend.h",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1004277
      },
      "writtenOn": "2017-02-07T22:30:02Z",
      "side": 1,
      "message": "could be unsigned",
      "range": {
        "startLine": 24,
        "startChar": 29,
        "endLine": 24,
        "endChar": 32
      },
      "revId": "e10207c6b3a22b6a8c44c16d87ec86f33506db22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "040d6336_e570f56d",
        "filename": "liblog/include/log/log_frontend.h",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1004277
      },
      "writtenOn": "2017-02-07T22:30:02Z",
      "side": 1,
      "message": "Suggest comment describing return value.",
      "range": {
        "startLine": 24,
        "startChar": 0,
        "endLine": 24,
        "endChar": 3
      },
      "revId": "e10207c6b3a22b6a8c44c16d87ec86f33506db22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6defbf85_f8e9a1e6",
        "filename": "liblog/logger_write.c",
        "patchSetId": 4
      },
      "lineNbr": 653,
      "author": {
        "id": 1004277
      },
      "writtenOn": "2017-02-07T22:30:02Z",
      "side": 1,
      "message": "Not needed?",
      "range": {
        "startLine": 652,
        "startChar": 8,
        "endLine": 653,
        "endChar": 8
      },
      "revId": "e10207c6b3a22b6a8c44c16d87ec86f33506db22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d6a76938_3f2fafb2",
        "filename": "liblog/logger_write.c",
        "patchSetId": 4
      },
      "lineNbr": 653,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2017-02-07T22:55:08Z",
      "side": 1,
      "message": "BUG: write_to_log !\u003d __write_to_log_daemon",
      "range": {
        "startLine": 653,
        "startChar": 9,
        "endLine": 653,
        "endChar": 46
      },
      "revId": "e10207c6b3a22b6a8c44c16d87ec86f33506db22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d09cbf24_de920d98",
        "filename": "liblog/logger_write.c",
        "patchSetId": 4
      },
      "lineNbr": 654,
      "author": {
        "id": 1004277
      },
      "writtenOn": "2017-02-07T22:30:02Z",
      "side": 1,
      "message": "Always set this unconditionally?  \n\nIf write_to_log \u003d\u003d __write_to_log_null, it should not be left that way?",
      "range": {
        "startLine": 654,
        "startChar": 8,
        "endLine": 654,
        "endChar": 43
      },
      "revId": "e10207c6b3a22b6a8c44c16d87ec86f33506db22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92213fcd_c0b5e4c3",
        "filename": "liblog/logger_write.c",
        "patchSetId": 4
      },
      "lineNbr": 654,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2017-02-07T22:55:08Z",
      "side": 1,
      "message": "I guess I only want to set it to __write_to_log_init _only_ if not __write_to_log_daemon for the code as-is. And of course the lock protects us from the race with respect to __write_to_log_init which can asynchronously change to __write_to_log_daemon after completed. I added the check for both because I remain paranoid about any other values (write_to_log_stderr is in the wings for future changes, and thus this code would be untouched at that point.",
      "parentUuid": "d09cbf24_de920d98",
      "range": {
        "startLine": 654,
        "startChar": 8,
        "endLine": 654,
        "endChar": 43
      },
      "revId": "e10207c6b3a22b6a8c44c16d87ec86f33506db22",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}