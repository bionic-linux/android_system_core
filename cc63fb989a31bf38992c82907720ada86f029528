{
  "comments": [
    {
      "key": {
        "uuid": "aee13551_d4c242e5",
        "filename": "libunwindstack/Elf.cpp",
        "patchSetId": 3
      },
      "lineNbr": 144,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-11-26T22:15:09Z",
      "side": 1,
      "message": "Is it worth caching this value? I don\u0027t know how many times you expect to call this function. If it\u0027s only once, then definitely shouldn\u0027t be cached.",
      "range": {
        "startLine": 144,
        "startChar": 19,
        "endLine": 144,
        "endChar": 52
      },
      "revId": "cc63fb989a31bf38992c82907720ada86f029528",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "040940ff_34e76842",
        "filename": "libunwindstack/Elf.cpp",
        "patchSetId": 3
      },
      "lineNbr": 144,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2018-11-27T11:41:25Z",
      "side": 1,
      "message": "I left this open as I was meaning to talk to you about how to use this best from our side.\n\nDo you think we should attach this to every FrameData, with a boolean that can be set to enable or disable it (much like symbolization)? Or do you think we should more directly use the ELF object from heapprofd? If we do the former then we have to do caching, if we do the later we could also do it at another layer.\n\nLet me know what you think is best here.",
      "parentUuid": "aee13551_d4c242e5",
      "range": {
        "startLine": 144,
        "startChar": 19,
        "endLine": 144,
        "endChar": 52
      },
      "revId": "cc63fb989a31bf38992c82907720ada86f029528",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "008391bd_c2a6a78e",
        "filename": "libunwindstack/Elf.cpp",
        "patchSetId": 3
      },
      "lineNbr": 144,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-11-28T21:51:20Z",
      "side": 1,
      "message": "I think you should use the ELF object directly, that way you don\u0027t have to cache it in the ELF object and don\u0027t have to worry about performance since only those who want to get the value will actually get it.",
      "parentUuid": "040940ff_34e76842",
      "range": {
        "startLine": 144,
        "startChar": 19,
        "endLine": 144,
        "endChar": 52
      },
      "revId": "cc63fb989a31bf38992c82907720ada86f029528",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92d2168d_15c7abb9",
        "filename": "libunwindstack/Elf.cpp",
        "patchSetId": 3
      },
      "lineNbr": 144,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2018-11-29T13:25:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "008391bd_c2a6a78e",
      "range": {
        "startLine": 144,
        "startChar": 19,
        "endLine": 144,
        "endChar": 52
      },
      "revId": "cc63fb989a31bf38992c82907720ada86f029528",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "babe3883_4bf57528",
        "filename": "libunwindstack/ElfInterface.cpp",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-11-26T22:15:09Z",
      "side": 1,
      "message": "I think you should use (size + alignment - 1) \u0026 -(alignment - 1).\n\nAlso, this one liner should be good enough, no need for the if.",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 47,
        "endChar": 1
      },
      "revId": "cc63fb989a31bf38992c82907720ada86f029528",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3225c858_3e8bf4ce",
        "filename": "libunwindstack/ElfInterface.cpp",
        "patchSetId": 3
      },
      "lineNbr": 47,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2018-11-27T11:41:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "babe3883_4bf57528",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 47,
        "endChar": 1
      },
      "revId": "cc63fb989a31bf38992c82907720ada86f029528",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "830cb213_c1116539",
        "filename": "libunwindstack/ElfInterface.cpp",
        "patchSetId": 3
      },
      "lineNbr": 267,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-11-26T22:15:09Z",
      "side": 1,
      "message": "I don\u0027t know if it\u0027s worth doing this read, it\u0027s probably easier simple to check the type and just skip the name.",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 267,
        "endChar": 5
      },
      "revId": "cc63fb989a31bf38992c82907720ada86f029528",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "158152ee_b54a4d12",
        "filename": "libunwindstack/ElfInterface.cpp",
        "patchSetId": 3
      },
      "lineNbr": 267,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2018-11-27T11:41:25Z",
      "side": 1,
      "message": "man 5 elf says\n\n       n_type    Depending on the value of the name field, this member may\n                 have any of the following values:\n\nwhich is why I first read the field name to follow the spec. What do you think?",
      "parentUuid": "830cb213_c1116539",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 267,
        "endChar": 5
      },
      "revId": "cc63fb989a31bf38992c82907720ada86f029528",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "adc85553_5edd8139",
        "filename": "libunwindstack/ElfInterface.cpp",
        "patchSetId": 3
      },
      "lineNbr": 267,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-11-28T21:51:20Z",
      "side": 1,
      "message": "I had assumed that the n_type value would be unique across all namespaces, but I realize that might not be true, so leaving this as is correct.",
      "parentUuid": "158152ee_b54a4d12",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 267,
        "endChar": 5
      },
      "revId": "cc63fb989a31bf38992c82907720ada86f029528",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "67c3f95c_fc78dac2",
        "filename": "libunwindstack/ElfInterface.cpp",
        "patchSetId": 3
      },
      "lineNbr": 267,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2018-11-29T13:25:19Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "adc85553_5edd8139",
      "range": {
        "startLine": 264,
        "startChar": 0,
        "endLine": 267,
        "endChar": 5
      },
      "revId": "cc63fb989a31bf38992c82907720ada86f029528",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3d56814_e226c3e2",
        "filename": "libunwindstack/ElfInterface.cpp",
        "patchSetId": 3
      },
      "lineNbr": 358,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-11-26T22:15:09Z",
      "side": 1,
      "message": "Is there any measurable performance issue with this? I would think it\u0027s relatively small difference, but I\u0027m always worried about adding extras here.",
      "range": {
        "startLine": 357,
        "startChar": 0,
        "endLine": 358,
        "endChar": 43
      },
      "revId": "cc63fb989a31bf38992c82907720ada86f029528",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "36c019a0_afa4879d",
        "filename": "libunwindstack/ElfInterface.cpp",
        "patchSetId": 3
      },
      "lineNbr": 358,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2018-11-27T11:41:25Z",
      "side": 1,
      "message": "How do you recommend I test this? Is there some benchmark included I could run?",
      "parentUuid": "d3d56814_e226c3e2",
      "range": {
        "startLine": 357,
        "startChar": 0,
        "endLine": 358,
        "endChar": 43
      },
      "revId": "cc63fb989a31bf38992c82907720ada86f029528",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64dfd577_7457da1d",
        "filename": "libunwindstack/ElfInterface.cpp",
        "patchSetId": 3
      },
      "lineNbr": 358,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-11-28T21:51:20Z",
      "side": 1,
      "message": "I don\u0027t think there are any real good benchmarks for this. Probably one way is to run the libbacktrace tests individually, specifically, the check_for_leak_XXX, and keep track of the time it takes with and without this change. If you notice no real difference in runtime, then that\u0027s a good indication of the time it takes.\n\nThere are some backtrace benchmarks, but none of them do anything that would exercise this code.\n\nI\u0027m starting to add some benchmarks directly here (see https://android-review.googlesource.com/c/platform/system/core/+/836880).",
      "parentUuid": "36c019a0_afa4879d",
      "range": {
        "startLine": 357,
        "startChar": 0,
        "endLine": 358,
        "endChar": 43
      },
      "revId": "cc63fb989a31bf38992c82907720ada86f029528",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ce8bd84_ec914c6d",
        "filename": "libunwindstack/ElfInterface.cpp",
        "patchSetId": 3
      },
      "lineNbr": 358,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2018-11-29T13:25:19Z",
      "side": 1,
      "message": "These tests are not passing for me in AOSP on the host or on the device, even without this CL.\n\n$ out/host/linux-x86/testcases/backtrace_test/x86_64/backtrace_test\n...\n47 FAILED TESTS\n  YOU HAVE 1 DISABLED TEST\n\n\n$ atest backtrace_test\n...\nSummary\n-------\nbacktrace_test: Passed: 0, Failed: 47",
      "parentUuid": "64dfd577_7457da1d",
      "range": {
        "startLine": 357,
        "startChar": 0,
        "endLine": 358,
        "endChar": 43
      },
      "revId": "cc63fb989a31bf38992c82907720ada86f029528",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}