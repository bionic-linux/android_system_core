{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fdfbe189_56ccce5a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1041813
      },
      "writtenOn": "2023-04-06T19:53:49Z",
      "side": 1,
      "message": "Hi, Alexander\n\nJust curious what different actions would be taken between the 32bit and 64bit platforms in the future, there is one x15 devboard which is a arm32 bit platform, not sure if that will be affected in the the future.",
      "revId": "7a84c707eb9b27bedba5131075aa79b52b5e2ffc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1e804d6_e5457c37",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1084624
      },
      "writtenOn": "2023-04-17T12:49:34Z",
      "side": 1,
      "message": "\u003e Hi, Alexander\n\u003e \n\u003e Just curious what different actions would be taken between the 32bit and 64bit platforms in the future, there is one x15 devboard which is a arm32 bit platform, not sure if that will be affected in the the future.\n\nHi Yongqin,\n\nThe use-case for this property is KFENCE, which is only supported by 64-bit kernels. 32-bit platforms do not want to set up the collection of KFENCE error reports in the userspace to save memory, so they can use ro.kernel.bitness to decide.",
      "parentUuid": "fdfbe189_56ccce5a",
      "revId": "7a84c707eb9b27bedba5131075aa79b52b5e2ffc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8dfefc3f_bdbc639b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-04-17T14:14:06Z",
      "side": 1,
      "message": "is this worth doing in init at all? just check if TARGET_ARCH is arm or x86 in the build system instead? (i don\u0027t remember exactly, but there\u0027s a way to add system properties in the build --- we do it for ro.debuggable. yeah, `ADDITIONAL_SYSTEM_PROPERTIES +\u003d ` should do it?)",
      "parentUuid": "b1e804d6_e5457c37",
      "revId": "7a84c707eb9b27bedba5131075aa79b52b5e2ffc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8580a92e_d71a3060",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1084624
      },
      "writtenOn": "2023-04-17T14:23:42Z",
      "side": 1,
      "message": "This might work, but is TARGET_ARCH the one we are looking for?\nIn the case of a 32-bit userspace on top of a 64-bit kernel, what the value of TARGET_ARCH will be?",
      "parentUuid": "8dfefc3f_bdbc639b",
      "revId": "7a84c707eb9b27bedba5131075aa79b52b5e2ffc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51a7751a_f821fffd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-04-17T14:38:15Z",
      "side": 1,
      "message": "ah, +ccross because that might be something the build system doesn\u0027t even know.\n\ndoes the header of the kernel image tell you whether it\u0027s 32- or 64-bit? (in case you end up looking at that at build time.)",
      "parentUuid": "8580a92e_d71a3060",
      "revId": "7a84c707eb9b27bedba5131075aa79b52b5e2ffc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}