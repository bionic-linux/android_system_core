{
  "comments": [
    {
      "key": {
        "uuid": "b23fa961_cd7755c1",
        "filename": "init/ueventd_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 167,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2017-07-19T22:25:59Z",
      "side": 1,
      "message": "shouldn\u0027t this be strcmp() instead of !\u003d? The secontext pointer could be different but the contents should always be the same.",
      "revId": "ef4b7529c834aa0256b1b76c0e57cf9ddc3150a5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "582c851f_64846712",
        "filename": "init/ueventd_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 167,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2017-07-19T22:27:09Z",
      "side": 1,
      "message": "oops, sorry, I didn\u0027t realize that expected_context is std::string, not \"char *\".",
      "parentUuid": "b23fa961_cd7755c1",
      "revId": "ef4b7529c834aa0256b1b76c0e57cf9ddc3150a5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81d13f68_6bd42582",
        "filename": "init/ueventd_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 167,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-07-19T22:28:35Z",
      "side": 1,
      "message": "I store it as a std::string so the \u003d\u003d does a real comparison. (and I don\u0027t need to worry about free\u0027ing anything later).\n\nI should differentiate between the string check failure and the API failure.  The bad behavior that I\u0027ve been seeing has been the API returning -1.  I added the string check as an added check.",
      "parentUuid": "b23fa961_cd7755c1",
      "revId": "ef4b7529c834aa0256b1b76c0e57cf9ddc3150a5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec8c0c14_ad80871f",
        "filename": "init/ueventd_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 167,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-07-19T22:35:22Z",
      "side": 1,
      "message": "Actually, good thing that you mentioned this as I do in fact see both:\n\nsystem/core/init/ueventd_test.cpp:200: Failure\n      Expected: 0U\n      Which is: 0\nTo be equal to: num_api_failures\n      Which is: 1\nsystem/core/init/ueventd_test.cpp:201: Failure\n      Expected: 0U\n      Which is: 0\nTo be equal to: num_context_check_failures\n      Which is: 2\n[  FAILED  ] ueventd.selabel_lookup_MultiThreaded (211 ms)\n\nIt\u0027s pretty intermittent, but it\u0027s a sure failure and I can hit it for real at boot if I have multiple threads in init.",
      "parentUuid": "81d13f68_6bd42582",
      "revId": "ef4b7529c834aa0256b1b76c0e57cf9ddc3150a5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}