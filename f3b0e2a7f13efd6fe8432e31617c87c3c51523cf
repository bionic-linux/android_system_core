{
  "comments": [
    {
      "key": {
        "uuid": "d6bb729e_0af7fbb7",
        "filename": "adb/commandline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 448,
      "author": {
        "id": 1078119
      },
      "writtenOn": "2015-11-03T22:08:36Z",
      "side": 1,
      "message": "nit: raw ShellProtocol* might be preferable here, doesn\u0027t really matter to me I just remembered the C++ primer saying something about this.\n\n(from C++ primer: \"In general, if you find yourself wanting to use a pointer or reference to a unique_ptr, you\u0027re probably not transferring ownership, so you should usually just pass a pointer or reference to the underlying object, and keep unique_ptr out of it.\")",
      "range": {
        "startLine": 448,
        "startChar": 44,
        "endLine": 448,
        "endChar": 75
      },
      "revId": "f3b0e2a7f13efd6fe8432e31617c87c3c51523cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6335e1f_e17c4650",
        "filename": "adb/commandline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 470,
      "author": {
        "id": 1078119
      },
      "writtenOn": "2015-11-03T22:08:36Z",
      "side": 1,
      "message": "Is it safe to do this in a signal handler? I can\u0027t seem to find concrete information in the man pages but the articles/forum posts that I can find indicate this is unsafe.\n\nWould it be feasible to drop the lock and instead only enable SIGWINCH handling after the read thread has been set up?",
      "range": {
        "startLine": 470,
        "startChar": 4,
        "endLine": 470,
        "endChar": 18
      },
      "revId": "f3b0e2a7f13efd6fe8432e31617c87c3c51523cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b65c3e65_5c987159",
        "filename": "adb/commandline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 470,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2015-11-03T22:52:39Z",
      "side": 1,
      "message": "Why not just set a volatile sig_atomic_t flag here and read it when read() returns EINTR? As well as David\u0027s idea.",
      "parentUuid": "b6335e1f_e17c4650",
      "range": {
        "startLine": 470,
        "startChar": 4,
        "endLine": 470,
        "endChar": 18
      },
      "revId": "f3b0e2a7f13efd6fe8432e31617c87c3c51523cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f6a3167e_26feb823",
        "filename": "adb/commandline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 470,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-11-04T00:11:30Z",
      "side": 1,
      "message": "because read won\u0027t return EINTR unless i send the SIGUSR1. the SIGWINCH goes to the main thread (strictly, an arbitrary thread not of our choosing) so this signal handler exists merely to ensure that _some_ signal gets sent to the stdin read thread, which will cause the read to fail with EINTR.",
      "parentUuid": "b65c3e65_5c987159",
      "range": {
        "startLine": 470,
        "startChar": 4,
        "endLine": 470,
        "endChar": 18
      },
      "revId": "f3b0e2a7f13efd6fe8432e31617c87c3c51523cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96401a44_8ded56e9",
        "filename": "adb/commandline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 532,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-11-03T19:33:00Z",
      "side": 1,
      "message": "as an aside: now we\u0027re always building for Windows too, i wonder if we should just get rid of these #defines for Unix? (but keep them for Windows.) that way Unix-only code doesn\u0027t need to do stuff like this, but we\u0027ll still know straight away if we\u0027ve tried to use bare \u0027read\u0027 in code that runs on Windows.",
      "revId": "f3b0e2a7f13efd6fe8432e31617c87c3c51523cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b6335e1f_a126be93",
        "filename": "adb/commandline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 532,
      "author": {
        "id": 1078119
      },
      "writtenOn": "2015-11-03T22:08:36Z",
      "side": 1,
      "message": "Makes sense to me, enabling a 3rd read() function is kind of a bummer but it seems necessary, and better than having to mess with macros for a legitimate use case like this.",
      "parentUuid": "96401a44_8ded56e9",
      "revId": "f3b0e2a7f13efd6fe8432e31617c87c3c51523cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16a98a5f_e783bcb7",
        "filename": "adb/commandline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 532,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2015-11-03T22:52:39Z",
      "side": 1,
      "message": "It\u0027s up to you guys. I guess there\u0027s two main schools of thought:\n\n- Make read() on Windows work with C Runtime fds and sysdeps fds.\n- Split read() into unix_read() which works with C Runtime fds and adb_read() which works with sysdeps fds.\n\nSo the proposal is for a 3rd option?",
      "parentUuid": "b6335e1f_a126be93",
      "revId": "f3b0e2a7f13efd6fe8432e31617c87c3c51523cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36c12e1a_50ccd23e",
        "filename": "adb/commandline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 532,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-11-04T00:11:30Z",
      "side": 1,
      "message": "a 4th option would be \"remove the TEMP_FAILURE_RETRY from unix_read on Unix, and explicitly write TEMP_FAILURE_RETRY in all but one call site\". (which is the real problem that brought me here, not so much the fact that we have two different reads.)\n\ni wasn\u0027t planning on doing anything about this right now, just throwing out another idea.",
      "parentUuid": "16a98a5f_e783bcb7",
      "revId": "f3b0e2a7f13efd6fe8432e31617c87c3c51523cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96401a44_cdd35e29",
        "filename": "adb/commandline.cpp",
        "patchSetId": 2
      },
      "lineNbr": 682,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-11-03T19:33:00Z",
      "side": 1,
      "message": "(i\u0027d like to move all this code out into a separate file, but i\u0027ve been disruptive enough here already.)",
      "revId": "f3b0e2a7f13efd6fe8432e31617c87c3c51523cf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}