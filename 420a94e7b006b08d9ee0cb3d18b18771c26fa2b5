{
  "comments": [
    {
      "key": {
        "uuid": "1fe1cce4_04c07a8f",
        "filename": "include/android/log.h",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-10-06T21:51:30Z",
      "side": 1,
      "message": "I think anything prefixed with \"android_\" is probably okay. That\u0027s essentially a C namespace, and users should stay out of our namespace.",
      "range": {
        "startLine": 90,
        "startChar": 13,
        "endLine": 90,
        "endChar": 32
      },
      "revId": "420a94e7b006b08d9ee0cb3d18b18771c26fa2b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fe1cce4_a400a6ac",
        "filename": "include/android/log.h",
        "patchSetId": 1
      },
      "lineNbr": 90,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-10-06T22:11:23Z",
      "side": 1,
      "message": "I had to snuff this one out as it would be redefined if one did:\n\n#include \u003candroid/log.h\u003e\n#include \u003clog/log.h\u003e",
      "parentUuid": "1fe1cce4_04c07a8f",
      "range": {
        "startLine": 90,
        "startChar": 13,
        "endLine": 90,
        "endChar": 32
      },
      "revId": "420a94e7b006b08d9ee0cb3d18b18771c26fa2b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fe1cce4_a49fc6b2",
        "filename": "include/android/log.h",
        "patchSetId": 1
      },
      "lineNbr": 157,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-10-06T21:51:30Z",
      "side": 1,
      "message": "If we\u0027re going with a feature flag, the name should probably clearly be a feature flag. ANDROID_ENABLE_LOG_MACROS or something? We can set this flag globally in the build system for platform code and NDK code can opt in to it.",
      "range": {
        "startLine": 157,
        "startChar": 7,
        "endLine": 157,
        "endChar": 14
      },
      "revId": "420a94e7b006b08d9ee0cb3d18b18771c26fa2b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fe1cce4_64c93e72",
        "filename": "include/android/log.h",
        "patchSetId": 1
      },
      "lineNbr": 157,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-10-06T22:11:23Z",
      "side": 1,
      "message": "I have some trouble with that. Build system should not be involved in this, I do not want headers to change flavour just because of the build environment. They must be deterministic and consistent.\n\nI am not 100% behind LOG_TAG as the flag, I would prefer to add an #ifndef ANDROID_LEGACY that the bad code can use if they insist on near zero maintenance. They can add it to their files, or their Android.bp/Android.mk if the new android/log.h hurts them?\n\nWe are only going to export _one_ header to the NDK, and we should use the same header internally in exactly the same manner to make sure it is _correct_. Any more than one header and we cause confusion. I can not count the number of times vendors have asked us which header to use internally, or where I caught them picking the wrong one and adding their own flavours of workarounds.\n\nWe have to move everyone to the LOG macros, they are in external documentation yet the NDK is lacking them!!!",
      "parentUuid": "1fe1cce4_a49fc6b2",
      "range": {
        "startLine": 157,
        "startChar": 7,
        "endLine": 157,
        "endChar": 14
      },
      "revId": "420a94e7b006b08d9ee0cb3d18b18771c26fa2b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffddd82c_513404fd",
        "filename": "include/android/log.h",
        "patchSetId": 1
      },
      "lineNbr": 231,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-10-06T22:16:58Z",
      "side": 1,
      "message": "All of these are designed to be overridden, lets not ifdef then out with the feature flag.",
      "range": {
        "startLine": 224,
        "startChar": 0,
        "endLine": 231,
        "endChar": 6
      },
      "revId": "420a94e7b006b08d9ee0cb3d18b18771c26fa2b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fe1cce4_e499cecd",
        "filename": "include/android/log.h",
        "patchSetId": 1
      },
      "lineNbr": 826,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2016-10-06T21:51:30Z",
      "side": 1,
      "message": "Accidentally hid some functions too.",
      "range": {
        "startLine": 826,
        "startChar": 4,
        "endLine": 826,
        "endChar": 27
      },
      "revId": "420a94e7b006b08d9ee0cb3d18b18771c26fa2b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fe1cce4_c4af7297",
        "filename": "include/android/log.h",
        "patchSetId": 1
      },
      "lineNbr": 826,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-10-06T22:11:23Z",
      "side": 1,
      "message": "Good catch, but you do make a good point, I should not worry about functions with android in their names, they should not be ifdef\u0027d out with whatever feature flag we use.",
      "parentUuid": "1fe1cce4_e499cecd",
      "range": {
        "startLine": 826,
        "startChar": 4,
        "endLine": 826,
        "endChar": 27
      },
      "revId": "420a94e7b006b08d9ee0cb3d18b18771c26fa2b5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}