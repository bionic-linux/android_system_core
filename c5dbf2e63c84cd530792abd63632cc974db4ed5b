{
  "comments": [
    {
      "key": {
        "uuid": "cb14f6e0_3d099733",
        "filename": "libstorageinfo/storageinfo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 23,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-15T18:24:30Z",
      "side": 1,
      "message": "\u0027std::string\u0027 still appears below in a few places where it can be just string.",
      "revId": "c5dbf2e63c84cd530792abd63632cc974db4ed5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a1781b1_14052eaa",
        "filename": "libstorageinfo/storageinfo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 23,
      "author": {
        "id": 1138338
      },
      "writtenOn": "2017-03-15T21:25:59Z",
      "side": 1,
      "message": "thanks I will fix it",
      "parentUuid": "cb14f6e0_3d099733",
      "revId": "c5dbf2e63c84cd530792abd63632cc974db4ed5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "565c497d_2fbaa4bc",
        "filename": "libstorageinfo/storageinfo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 156,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-15T18:24:30Z",
      "side": 1,
      "message": "const string\u0026 fname\n\nPlease use bool for return value when indicating if a function succeeded or not.",
      "range": {
        "startLine": 156,
        "startChar": 40,
        "endLine": 156,
        "endChar": 52
      },
      "revId": "c5dbf2e63c84cd530792abd63632cc974db4ed5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "de2e0ed7_e0ef8a29",
        "filename": "libstorageinfo/storageinfo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 156,
      "author": {
        "id": 1138338
      },
      "writtenOn": "2017-03-15T21:25:59Z",
      "side": 1,
      "message": "I will fix it",
      "parentUuid": "565c497d_2fbaa4bc",
      "range": {
        "startLine": 156,
        "startChar": 40,
        "endLine": 156,
        "endChar": 52
      },
      "revId": "c5dbf2e63c84cd530792abd63632cc974db4ed5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd2723b0_f579457f",
        "filename": "libstorageinfo/storageinfo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 203,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-15T18:24:30Z",
      "side": 1,
      "message": "const string\u0026 name",
      "range": {
        "startLine": 203,
        "startChar": 57,
        "endLine": 203,
        "endChar": 73
      },
      "revId": "c5dbf2e63c84cd530792abd63632cc974db4ed5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "146b316e_fa334370",
        "filename": "libstorageinfo/storageinfo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 203,
      "author": {
        "id": 1138338
      },
      "writtenOn": "2017-03-15T21:25:59Z",
      "side": 1,
      "message": "I will fix it",
      "parentUuid": "bd2723b0_f579457f",
      "range": {
        "startLine": 203,
        "startChar": 57,
        "endLine": 203,
        "endChar": 73
      },
      "revId": "c5dbf2e63c84cd530792abd63632cc974db4ed5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23917122_b342c253",
        "filename": "libstorageinfo/storageinfo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 213,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-15T18:24:30Z",
      "side": 1,
      "message": "const string\u0026 name",
      "range": {
        "startLine": 213,
        "startChar": 67,
        "endLine": 213,
        "endChar": 83
      },
      "revId": "c5dbf2e63c84cd530792abd63632cc974db4ed5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91346359_525fe3c4",
        "filename": "libstorageinfo/storageinfo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 213,
      "author": {
        "id": 1138338
      },
      "writtenOn": "2017-03-15T21:25:59Z",
      "side": 1,
      "message": "I will fix it",
      "parentUuid": "23917122_b342c253",
      "range": {
        "startLine": 213,
        "startChar": 67,
        "endLine": 213,
        "endChar": 83
      },
      "revId": "c5dbf2e63c84cd530792abd63632cc974db4ed5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c44b221_30b19b43",
        "filename": "libstorageinfo/storageinfo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 223,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-15T18:24:30Z",
      "side": 1,
      "message": "std::make_unique\u003cStorageInfo\u003e();",
      "range": {
        "startLine": 223,
        "startChar": 16,
        "endLine": 223,
        "endChar": 64
      },
      "revId": "c5dbf2e63c84cd530792abd63632cc974db4ed5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3258cc7b_87830496",
        "filename": "libstorageinfo/storageinfo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 223,
      "author": {
        "id": 1138338
      },
      "writtenOn": "2017-03-15T21:25:59Z",
      "side": 1,
      "message": "I changed it but I got this error:\n\nxternal/libcxx/include/memory:3011:32: error: calling a private constructor of class \u0027StorageInfo\u0027\n    return unique_ptr\u003c_Tp\u003e(new _Tp(_VSTD::forward\u003c_Args\u003e(__args)...));\n\nSince StorageInfo constructor is private. As suggested by go/totw/42 when doing a factory function in order to force the only use of the factory function. So, I will keep this part with unique_ptr unless you have another suggestion.",
      "parentUuid": "8c44b221_30b19b43",
      "range": {
        "startLine": 223,
        "startChar": 16,
        "endLine": 223,
        "endChar": 64
      },
      "revId": "c5dbf2e63c84cd530792abd63632cc974db4ed5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c4cc890_a22dadca",
        "filename": "libstorageinfo/storageinfo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 223,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-15T21:42:06Z",
      "side": 1,
      "message": "Hmm.  That\u0027s unfortunate.  Looks like make_unique\u003c\u003e doesn\u0027t play along nicely with private constructors.  Given that caveat, I don\u0027t have any other suggestions - this is good as it is currently.",
      "parentUuid": "3258cc7b_87830496",
      "range": {
        "startLine": 223,
        "startChar": 16,
        "endLine": 223,
        "endChar": 64
      },
      "revId": "c5dbf2e63c84cd530792abd63632cc974db4ed5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c11fc44f_cf21762b",
        "filename": "libstorageinfo/storageinfo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 224,
      "author": {
        "id": 1097918
      },
      "writtenOn": "2017-03-15T21:37:11Z",
      "side": 1,
      "message": "info.reset(nullptr);",
      "range": {
        "startLine": 224,
        "startChar": 46,
        "endLine": 224,
        "endChar": 61
      },
      "revId": "c5dbf2e63c84cd530792abd63632cc974db4ed5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c879a7f_235641af",
        "filename": "libstorageinfo/storageinfo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 224,
      "author": {
        "id": 1138338
      },
      "writtenOn": "2017-03-15T21:41:46Z",
      "side": 1,
      "message": "do we need to do that? info gets out of scope it will be destroyed or copy which should also reset it to nullptr, right?",
      "parentUuid": "c11fc44f_cf21762b",
      "range": {
        "startLine": 224,
        "startChar": 46,
        "endLine": 224,
        "endChar": 61
      },
      "revId": "c5dbf2e63c84cd530792abd63632cc974db4ed5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60b74811_4f10659b",
        "filename": "libstorageinfo/storageinfo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 224,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-15T21:42:06Z",
      "side": 1,
      "message": "Why?  info is local, it should be destructed when we exit via `return nullptr`",
      "parentUuid": "c11fc44f_cf21762b",
      "range": {
        "startLine": 224,
        "startChar": 46,
        "endLine": 224,
        "endChar": 61
      },
      "revId": "c5dbf2e63c84cd530792abd63632cc974db4ed5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "525d36f8_2d3fac4a",
        "filename": "libstorageinfo/storageinfo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 224,
      "author": {
        "id": 1097918
      },
      "writtenOn": "2017-03-15T21:47:19Z",
      "side": 1,
      "message": "we should reset info in case of error, so that we return empty object; I prefer having only one return statement.",
      "parentUuid": "60b74811_4f10659b",
      "range": {
        "startLine": 224,
        "startChar": 46,
        "endLine": 224,
        "endChar": 61
      },
      "revId": "c5dbf2e63c84cd530792abd63632cc974db4ed5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "46e0e90f_0b9284f8",
        "filename": "libstorageinfo/storageinfo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 224,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-15T21:56:01Z",
      "side": 1,
      "message": "I disagree.  With C++, unique_ptr, lock_guard, etc all make it cleaner to return as soon as you know you have an error and let the objects on the stack handle the destruction of anything that\u0027s been previously allocated.",
      "parentUuid": "525d36f8_2d3fac4a",
      "range": {
        "startLine": 224,
        "startChar": 46,
        "endLine": 224,
        "endChar": 61
      },
      "revId": "c5dbf2e63c84cd530792abd63632cc974db4ed5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a9726a6b_986e35f4",
        "filename": "libstorageinfo/storageinfo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 224,
      "author": {
        "id": 1097918
      },
      "writtenOn": "2017-03-15T21:59:17Z",
      "side": 1,
      "message": "there are other reasons why you may want a \"single return\" policy that have nothing to do with memory management; among them could be the easy enter/exit tracking.",
      "parentUuid": "46e0e90f_0b9284f8",
      "range": {
        "startLine": 224,
        "startChar": 46,
        "endLine": 224,
        "endChar": 61
      },
      "revId": "c5dbf2e63c84cd530792abd63632cc974db4ed5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d4b24833_ff7e653f",
        "filename": "libstorageinfo/storageinfo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 224,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-15T22:20:18Z",
      "side": 1,
      "message": "That\u0027s fair.  I simply disagree.  I believe this function is the cleanest in this patchset where nullptr is returned immediately upon an error being encountered.  Fernando can make the decision he wants as this is a nit in any case.",
      "parentUuid": "a9726a6b_986e35f4",
      "range": {
        "startLine": 224,
        "startChar": 46,
        "endLine": 224,
        "endChar": 61
      },
      "revId": "c5dbf2e63c84cd530792abd63632cc974db4ed5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f320d8c9_a625a848",
        "filename": "libstorageinfo/storageinfo.cpp",
        "patchSetId": 7
      },
      "lineNbr": 224,
      "author": {
        "id": 1138338
      },
      "writtenOn": "2017-03-15T22:40:34Z",
      "side": 1,
      "message": "I also prefer to return nullptr immediately after an error. Also other functions are not following the single \"return policy\" which I agree sometimes is useful for breaks (and some times not because of compiler optimizations anyway). However this one is an easy to fix keeping everyone happy :)\n\n\nreturn Parser().ParseXml(info.get(), fname) ? info : nullptr;\n\nI think nobody has a problem with that :)",
      "parentUuid": "d4b24833_ff7e653f",
      "range": {
        "startLine": 224,
        "startChar": 46,
        "endLine": 224,
        "endChar": 61
      },
      "revId": "c5dbf2e63c84cd530792abd63632cc974db4ed5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}