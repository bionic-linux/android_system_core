{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "846fbf18_0b17bbe6",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2023-01-13T18:47:14Z",
      "side": 1,
      "message": "@pcc@google.com",
      "revId": "a7787f0511a5d7e74c224305cd36fd0f3dfedad8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b028ce2_de4e0947",
        "filename": "debuggerd/libdebuggerd/tombstone_proto_to_text.cpp",
        "patchSetId": 1
      },
      "lineNbr": 348,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2023-01-13T18:47:14Z",
      "side": 1,
      "message": "ALL CAPS is too much, really.\nWe could bikeshed about how to present this warning better. I think a note is fine. Consider how a similar note is worded in hwasan for allocation-tail-overwritten bugs.\n\nMaybe in addition to this change \"Backtrace:\" to \"Backtrace (imprecise):\" ?",
      "revId": "a7787f0511a5d7e74c224305cd36fd0f3dfedad8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4bcc39d1_2178d6ed",
        "filename": "debuggerd/libdebuggerd/tombstone_proto_to_text.cpp",
        "patchSetId": 1
      },
      "lineNbr": 348,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2023-01-13T19:43:20Z",
      "side": 1,
      "message": "Open to bikeshedding. I went for ALL-CAPS because I think this is the most important thing in this report, and if it makes a few more people read it, it will potentially save dozens of hours of wild goose-chasing of the wrong callstack.",
      "parentUuid": "9b028ce2_de4e0947",
      "revId": "a7787f0511a5d7e74c224305cd36fd0f3dfedad8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0ab69913_a90cdfb6",
        "filename": "debuggerd/libdebuggerd/tombstone_proto_to_text.cpp",
        "patchSetId": 1
      },
      "lineNbr": 348,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2023-01-14T00:35:59Z",
      "side": 1,
      "message": "Made the note less shouty and added (imprecise). PTAL",
      "parentUuid": "4bcc39d1_2178d6ed",
      "revId": "a7787f0511a5d7e74c224305cd36fd0f3dfedad8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca340375_1507f80d",
        "filename": "debuggerd/libdebuggerd/tombstone_proto_to_text.cpp",
        "patchSetId": 1
      },
      "lineNbr": 348,
      "author": {
        "id": 1453063
      },
      "writtenOn": "2023-01-14T00:56:58Z",
      "side": 1,
      "message": "hmm, maybe:\n\n\"This crash is an async MTE crash. Memory corruption has occurred in this process, but we do not know exactly where and when it happened. The stack trace below is the first system call or context switch that was executed after the memory corruption happened:\"\n\njust added a little bit more about the reason why we crashed (memory corruption), and made it clear that we don\u0027t know when it happened, but it\u0027s definitely not *this* stack trace",
      "parentUuid": "0ab69913_a90cdfb6",
      "revId": "a7787f0511a5d7e74c224305cd36fd0f3dfedad8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc06c377_5ab5bc0d",
        "filename": "debuggerd/libdebuggerd/tombstone_proto_to_text.cpp",
        "patchSetId": 1
      },
      "lineNbr": 348,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2023-01-17T18:32:28Z",
      "side": 1,
      "message": "Fine with me, @eugenis@google.com WDYT?",
      "parentUuid": "ca340375_1507f80d",
      "revId": "a7787f0511a5d7e74c224305cd36fd0f3dfedad8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}