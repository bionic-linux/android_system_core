{
  "comments": [
    {
      "key": {
        "uuid": "2f95ef89_76eb5805",
        "filename": "libcutils/include/private/fs_config.h",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-12-17T06:49:34Z",
      "side": 1,
      "message": "can we put something in this header to #error if it\u0027s used from a C context?",
      "revId": "b254a35d00632e69fe26f74b758fe3169a868258",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "156903e3_2214f0c0",
        "filename": "libcutils/include/private/fs_config.h",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2018-12-17T09:35:07Z",
      "side": 1,
      "message": "I\u0027d like that but that wouldn\u0027t work as it is now, because we do use this struct in a C context in some places. Those are not unsafe by itself because those are not defining fs_path_config objects. That said, I just noticed that we generate OEM fs config files that use fs_path_config, so a fixed size here is a bit too fragile. I\u0027ll see if that can be fixed or I\u0027ll probably have to scrape this.",
      "parentUuid": "2f95ef89_76eb5805",
      "revId": "b254a35d00632e69fe26f74b758fe3169a868258",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb5c24f4_755fb1b0",
        "filename": "libcutils/include/private/fs_config.h",
        "patchSetId": 1
      },
      "lineNbr": 63,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-12-17T17:01:57Z",
      "side": 1,
      "message": "What C code uses this?  We could just move it to C++; we\u0027ve been pretty unrelenting in the past in doing this.\n\nI think fs_config_generate.c is C just for historical reasons; I can\u0027t see any reasons not to move it to C++.",
      "parentUuid": "156903e3_2214f0c0",
      "revId": "b254a35d00632e69fe26f74b758fe3169a868258",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}