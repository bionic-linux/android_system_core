{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c7eca5e2_ce40ed4d",
        "filename": "fs_mgr/fs_mgr_fstab.cpp",
        "patchSetId": 1
      },
      "lineNbr": 658,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-06-23T17:09:47Z",
      "side": 1,
      "message": "Mounting logic elsewhere in fs_mgr will only look at adjacent entries. Eg,\n\n    /blah ext4 /system ro none\n    /blah ext4 /vendor ro none\n    /blah erofs /system ro none\n\nIs not a valid fstab since the \"/system\" entries should be grouped together.",
      "revId": "80d1afffc3a399784869d68d419685a512f158ab",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "80605e2b_370139c4",
        "filename": "fs_mgr/fs_mgr_fstab.cpp",
        "patchSetId": 1
      },
      "lineNbr": 658,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-06-24T09:00:31Z",
      "side": 1,
      "message": "That\u0027s the precondition of this function. I think the caller should ensure the mount entries with same mountpoint are grouped adjacent, in other words the fstab writer should do this.\n\nHere we just transform anything that looks worth transforming, ignoring the order (except for when we synthesis, then the order matters... urgh). I hope this keeps the complexity not going out of control, and the intended behavior of this function can be described concisely by its test.",
      "parentUuid": "c7eca5e2_ce40ed4d",
      "revId": "80d1afffc3a399784869d68d419685a512f158ab",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "43cf549f_28d35025",
        "filename": "fs_mgr/fs_mgr_fstab.cpp",
        "patchSetId": 1
      },
      "lineNbr": 679,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2022-06-24T06:17:08Z",
      "side": 1,
      "message": "How about s/want_/lack_ ?\n\nSeems more clear to me.",
      "range": {
        "startLine": 678,
        "startChar": 0,
        "endLine": 679,
        "endChar": 67
      },
      "revId": "80d1afffc3a399784869d68d419685a512f158ab",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1649dd93_23710d1c",
        "filename": "fs_mgr/fs_mgr_fstab.cpp",
        "patchSetId": 1
      },
      "lineNbr": 679,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-06-24T06:49:34Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "43cf549f_28d35025",
      "range": {
        "startLine": 678,
        "startChar": 0,
        "endLine": 679,
        "endChar": 67
      },
      "revId": "80d1afffc3a399784869d68d419685a512f158ab",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd3246f5_dd8d7d78",
        "filename": "fs_mgr/fs_mgr_fstab.cpp",
        "patchSetId": 1
      },
      "lineNbr": 706,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-06-23T17:09:47Z",
      "side": 1,
      "message": "We can probably drop barrier\u003d1 (and thus fs_options)? It looks like it only applies to writable filesystems.",
      "revId": "80d1afffc3a399784869d68d419685a512f158ab",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "83c1e749_cd521438",
        "filename": "fs_mgr/fs_mgr_fstab.cpp",
        "patchSetId": 1
      },
      "lineNbr": 706,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-06-24T06:48:52Z",
      "side": 1,
      "message": "I guess it\u0027s only useful when doing traditional remount,rw, so \u0027ro,barrier\u003d1\u0027 would be remounted as \u0027rw,barrier\u003d1\u0027. \n\nActually the kernel doc says \u0027barrier\u0027 defaults to on for ext4, so let\u0027s just remove this since it is redundant.",
      "parentUuid": "fd3246f5_dd8d7d78",
      "revId": "80d1afffc3a399784869d68d419685a512f158ab",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}