{
  "comments": [
    {
      "key": {
        "uuid": "7dbb8cf2_eccfd3a0",
        "filename": "bvb/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 19,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "-Werror?",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d09ccae_f2843536",
        "filename": "bvb/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 19,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Added.",
      "parentUuid": "7dbb8cf2_eccfd3a0",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7dbb8cf2_aca79be2",
        "filename": "bvb/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "Just use LOCAL_MODULE_HOST_OS?",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd0fc4b0_f13317aa",
        "filename": "bvb/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "OK, I didn\u0027t know about that one. Doing that.",
      "parentUuid": "7dbb8cf2_aca79be2",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1da7f0d2_31a3d80d",
        "filename": "bvb/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "nit: not needed",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7df0ecdc_45fb48d8",
        "filename": "bvb/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 50,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1da7f0d2_31a3d80d",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5dbec8e3_6b73a9b8",
        "filename": "bvb/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "nit: not needed?",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ddaf464_3d997b33",
        "filename": "bvb/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5dbec8e3_6b73a9b8",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3dacb4b4_0db2fd30",
        "filename": "bvb/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "Is this intentional? Should this default to a production build instead?",
      "range": {
        "startLine": 53,
        "startChar": 39,
        "endLine": 53,
        "endChar": 55
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bde6e426_ef01f69d",
        "filename": "bvb/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 53,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "It\u0027s intentional. Remember, the model (spelled out in README) is here that partners copy-paste the code into their own build-system for their bootloader and there they would likely not define BVB_ENABLE_DEBUG in production builds.\n\nThe only reason we build it is to ensure it compiles and works (unit tests)... it\u0027s handy to have the debug information for that.",
      "parentUuid": "3dacb4b4_0db2fd30",
      "range": {
        "startLine": 53,
        "startChar": 39,
        "endLine": 53,
        "endChar": 55
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1da7f0d2_714040dd",
        "filename": "bvb/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "nit: not needed",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5df328ea_9e3d0178",
        "filename": "bvb/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 54,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1da7f0d2_714040dd",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdce9ca2_0e80bf20",
        "filename": "bvb/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "nit: inconsistent use of tabs / spaces to indent",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd0fc4b0_714047dd",
        "filename": "bvb/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Done (throughout the file).",
      "parentUuid": "fdce9ca2_0e80bf20",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ddc9d89d_cda2cdd4",
        "filename": "bvb/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "nit: not needed?",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fde3fc1c_89d94e3f",
        "filename": "bvb/Android.mk",
        "patchSetId": 4
      },
      "lineNbr": 72,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ddc9d89d_cda2cdd4",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ddc9d89d_2d94a167",
        "filename": "bvb/README",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "optional nit: not necessary",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 63,
        "endChar": 13
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ddaf464_dd66f7f8",
        "filename": "bvb/README",
        "patchSetId": 4
      },
      "lineNbr": 63,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ddc9d89d_2d94a167",
      "range": {
        "startLine": 61,
        "startChar": 0,
        "endLine": 63,
        "endChar": 13
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdb5bcf8_eb37bd35",
        "filename": "bvb/README",
        "patchSetId": 4
      },
      "lineNbr": 125,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "Any guidance on exactly where we expect these variables to go in the typical case? Makefile vars? Environment vars?",
      "range": {
        "startLine": 125,
        "startChar": 56,
        "endLine": 125,
        "endChar": 64
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d4834fd_7e7351b8",
        "filename": "bvb/README",
        "patchSetId": 4
      },
      "lineNbr": 125,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "It\u0027s expected to be set by the BSP, after all the board has to support Brillo Verified Boot until it can be enabled. Each Brillo app (e.g. ledtester) is not supposed to have to do anything, it should just work out of the box. (Except for the rollback index, see below.)\n\nHow it\u0027ll work with the BDK, I\u0027m not sure yet....",
      "parentUuid": "fdb5bcf8_eb37bd35",
      "range": {
        "startLine": 125,
        "startChar": 56,
        "endLine": 125,
        "endChar": 64
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdb5bcf8_cbee41d9",
        "filename": "bvb/README",
        "patchSetId": 4
      },
      "lineNbr": 129,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "Can we use 4096 as the default? 8192 gives marginal crypto improvement for massive key generation cost and significant signature size and verification cost. I\u0027d rather not send the message that 8192 is preferred.",
      "range": {
        "startLine": 129,
        "startChar": 36,
        "endLine": 129,
        "endChar": 40
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5df328ea_be4fa508",
        "filename": "bvb/README",
        "patchSetId": 4
      },
      "lineNbr": 129,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Oops, sorry, this should say SHA256_RSA2048 as the default -see https://android-review.googlesource.com/#/c/199750/ for where the default is set. I\u0027ll update this README file.\n\nAs for 4096 vs 2048, I believe SHA256_RSA2048 still falls within current NIST recommendation so I\u0027d like to go with that if it\u0027s the same to you?",
      "parentUuid": "fdb5bcf8_cbee41d9",
      "range": {
        "startLine": 129,
        "startChar": 36,
        "endLine": 129,
        "endChar": 40
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdce9ca2_0968b9f5",
        "filename": "bvb/README",
        "patchSetId": 4
      },
      "lineNbr": 134,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "Is this the root public key that needs to be baked into the hw or fw? Clarify this?",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ddaf464_dd4dd76a",
        "filename": "bvb/README",
        "patchSetId": 4
      },
      "lineNbr": 134,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "It is. I\u0027ll add a paragraph stating this.",
      "parentUuid": "fdce9ca2_0968b9f5",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bde6e426_d29b848f",
        "filename": "bvb/README",
        "patchSetId": 4
      },
      "lineNbr": 136,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "Describe how this works?",
      "range": {
        "startLine": 136,
        "startChar": 39,
        "endLine": 136,
        "endChar": 63
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9de920fd_d3b6dfb9",
        "filename": "bvb/README",
        "patchSetId": 4
      },
      "lineNbr": 136,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "It\u0027s already described in the \"Rollback protection\" section of \"Brillo Boot Loader Requirements\" [1] which is shared with partners. I\u0027m not keen to reference that document in a public file since the document is available only under NDA... thoughts?\n\nThe initial Brillo Verified Boot plan called for the Developer Console to manage user keys and the rollback index, but unfortunately that idea was rejected (complexity and other things)... so now the poor users have to manage both keys (yikes!) and remember to increase the rollback index. It\u0027s really not ideal.\n\nI imagine we might still want to automate this down the road (current situation sucks)... until, I don\u0027t think we should say too much about it since in the ideal world, users should never have to configure verified boot or worry about rollback indexes or whatever (it really should just work out of the box and the developer console should manage all the difficult bits).\n\n[1] : see https://docs.google.com/document/d/1bNFwTzPI0kcxTPUfO1kiHbWSCs9MwUmY956pkIrMsaw/edit#heading\u003dh.fj4s28f8rdcd",
      "parentUuid": "bde6e426_d29b848f",
      "range": {
        "startLine": 136,
        "startChar": 39,
        "endLine": 136,
        "endChar": 63
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdc1846e_239ef8da",
        "filename": "bvb/README",
        "patchSetId": 4
      },
      "lineNbr": 139,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "Is there a default if this is missing?",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1dd53033_594d7613",
        "filename": "bvb/README",
        "patchSetId": 4
      },
      "lineNbr": 139,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Yes, zero. I\u0027m adding a paragraph to say this.",
      "parentUuid": "bdc1846e_239ef8da",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1da7f0d2_8c972fc0",
        "filename": "bvb/bvb_boot_image_header.h",
        "patchSetId": 4
      },
      "lineNbr": 17,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "BVB_BVB_BOOT_IMAGE_HEADER_H_ would be google style -- is this an Android-ism?\n\n(Same in other headers if you decide to change this)",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1da7f0d2_3702a8ec",
        "filename": "bvb/bvb_boot_image_header.h",
        "patchSetId": 4
      },
      "lineNbr": 17,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "I\u0027ll change it.",
      "parentUuid": "1da7f0d2_8c972fc0",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1da7f0d2_ac89cbe5",
        "filename": "bvb/bvb_boot_image_header.h",
        "patchSetId": 4
      },
      "lineNbr": 40,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "style nit: inconsistent max line length -- these lines wrap well before 80.",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1dd0d03a_a92e6586",
        "filename": "bvb/bvb_boot_image_header.h",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "nit: usually the term \u0027key pair\u0027 refers to the public and private key, not fields of the public key -- use \u0027number pair\u0027?",
      "range": {
        "startLine": 97,
        "startChar": 62,
        "endLine": 97,
        "endChar": 70
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fde3fc1c_692bc2c7",
        "filename": "bvb/bvb_boot_image_header.h",
        "patchSetId": 4
      },
      "lineNbr": 97,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Nice catch, I\u0027ll just use \u0027pair\u0027.",
      "parentUuid": "1dd0d03a_a92e6586",
      "range": {
        "startLine": 97,
        "startChar": 62,
        "endLine": 97,
        "endChar": 70
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d1200d7_29fa6d8c",
        "filename": "bvb/bvb_boot_image_header.h",
        "patchSetId": 4
      },
      "lineNbr": 98,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "Could more accurately (and relevantly) say \"... and can always be represented in |key_num_bits|\"?",
      "range": {
        "startLine": 98,
        "startChar": 43,
        "endLine": 98,
        "endChar": 56
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d4834fd_dee62592",
        "filename": "bvb/bvb_boot_image_header.h",
        "patchSetId": 4
      },
      "lineNbr": 98,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d1200d7_29fa6d8c",
      "range": {
        "startLine": 98,
        "startChar": 43,
        "endLine": 98,
        "endChar": 56
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdce9ca2_dbb724fd",
        "filename": "bvb/bvb_boot_image_header.h",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "why the null bytes? use of null-terminated strings for keys / values should be discouraged IMO",
      "range": {
        "startLine": 133,
        "startChar": 17,
        "endLine": 133,
        "endChar": 25
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5df328ea_decf09a1",
        "filename": "bvb/bvb_boot_image_header.h",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "The extra NUL-byte in the encoding gives you the nice guarantee that users of of bvb_lookup_property() can treat the returned value as a NUL-terminated string. This is a lot more convenient than having to fumble with both a char* and a size_t if you *know* that the value is going to be a string. This is perfectly safe as you\u0027d only use this on a verified boot image.\n\n(Note however that properties however are not restricted to strings - any blob can be stored, see e.g. BVBTool.CheckProperties - which is why bvb_lookup_property() returns both a pointer to the value and the size value.)",
      "parentUuid": "fdce9ca2_dbb724fd",
      "range": {
        "startLine": 133,
        "startChar": 17,
        "endLine": 133,
        "endChar": 25
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bdc1846e_ee10e7a4",
        "filename": "bvb/bvb_boot_image_header.h",
        "patchSetId": 4
      },
      "lineNbr": 134,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "followed",
      "range": {
        "startLine": 134,
        "startChar": 3,
        "endLine": 134,
        "endChar": 9
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d4834fd_7e1fd140",
        "filename": "bvb/bvb_boot_image_header.h",
        "patchSetId": 4
      },
      "lineNbr": 134,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bdc1846e_ee10e7a4",
      "range": {
        "startLine": 134,
        "startChar": 3,
        "endLine": 134,
        "endChar": 9
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d1200d7_89edd9ad",
        "filename": "bvb/bvb_boot_image_header.h",
        "patchSetId": 4
      },
      "lineNbr": 146,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "Sometimes this can tempt implementers to cast from an arbitrary point in a buffer which can lead to alignment errors on some architectures. Maybe that\u0027s not a concern here? The alternative is to leave the representation of the struct in memory up to the compiler and write Encode / Decode functions to serialize / parse.",
      "range": {
        "startLine": 146,
        "startChar": 2,
        "endLine": 146,
        "endChar": 25
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d4834fd_de34e5c5",
        "filename": "bvb/bvb_boot_image_header.h",
        "patchSetId": 4
      },
      "lineNbr": 146,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Alignment is not a concern here and users will never actually use the struct. It\u0027s only mentioned here because it\u0027s part of the binary format.",
      "parentUuid": "9d1200d7_89edd9ad",
      "range": {
        "startLine": 146,
        "startChar": 2,
        "endLine": 146,
        "endChar": 25
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5df328ea_a389d2e5",
        "filename": "bvb/bvb_boot_image_header.h",
        "patchSetId": 4
      },
      "lineNbr": 209,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "IIUC, we\u0027ll be pulling this in from external non-volatile memory during a sensitive stage (i.e. an exploit at this stage would be very bad)? If so, this set of size values is ripe for integer or buffer overflow vulns and all code that touches this struct should assume the values in here are hostile. I\u0027ll try to find spots where overflow checks are needed but more eyes on this would be good.\n\nMaybe a function to sanity check the header would be helpful?",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bde6e426_6f71861e",
        "filename": "bvb/bvb_boot_image_header.h",
        "patchSetId": 4
      },
      "lineNbr": 209,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Yup, verification of this struct is extremely important which is why it should never be touched until bvb_verify_boot_image() says it\u0027s good. I\u0027ll add a sentence pointing this out, I agree I missed that.\n\nAs for sanity checking, since you\u0027re supposed to use bvb_verify_boot_image(), I\u0027ve put all the sanity checks there.",
      "parentUuid": "5df328ea_a389d2e5",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5df328ea_43990632",
        "filename": "bvb/bvb_boot_image_header.h",
        "patchSetId": 4
      },
      "lineNbr": 211,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "Magic is ok but a CRC would be better to catch non-malicious corruption or other data errors.",
      "range": {
        "startLine": 211,
        "startChar": 10,
        "endLine": 211,
        "endChar": 15
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5df328ea_3ee975fd",
        "filename": "bvb/bvb_boot_image_header.h",
        "patchSetId": 4
      },
      "lineNbr": 211,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Corruption will be caught during verification (the hash includes the header) so a CRC for just the header is unnecessary, I think.",
      "parentUuid": "5df328ea_43990632",
      "range": {
        "startLine": 211,
        "startChar": 10,
        "endLine": 211,
        "endChar": 15
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5df328ea_2fc269fd",
        "filename": "bvb/bvb_boot_image_header.h",
        "patchSetId": 4
      },
      "lineNbr": 247,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "How? The term \u0027index\u0027 is ambiguous here, a bit more detail (or better name) would be nice.",
      "range": {
        "startLine": 247,
        "startChar": 42,
        "endLine": 247,
        "endChar": 46
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fde3fc1c_a9608adb",
        "filename": "bvb/bvb_boot_image_header.h",
        "patchSetId": 4
      },
      "lineNbr": 247,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "It\u0027s specified in the \"Verifying boot partitions\" part of https://docs.google.com/document/d/1bNFwTzPI0kcxTPUfO1kiHbWSCs9MwUmY956pkIrMsaw/edit#heading\u003dh.8c7pmldvx8f6 ... which is shared with partners under NDA.\n\nBtw, I expect to extend libbvb_refimpl to do this in the future, as well as A/B. But first things first...\n\nAs for the name rollback_index, is it really that bad? I mean, naming is hard and I kinda like that name now :-)",
      "parentUuid": "5df328ea_2fc269fd",
      "range": {
        "startLine": 247,
        "startChar": 42,
        "endLine": 247,
        "endChar": 46
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1dd0d03a_a943051b",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "nit: eschew abbreviation -- more below",
      "range": {
        "startLine": 24,
        "startChar": 28,
        "endLine": 24,
        "endChar": 29
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ddaf464_9d43cf1b",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "In general, I use very long variable names but in this case |h| makes perfect sense much the same way |n| is used for counting and |i| is used for iterators. E.g. it makes sense here since the BvbBootImageHeader is a central concept to the whole thing.",
      "parentUuid": "1dd0d03a_a943051b",
      "range": {
        "startLine": 24,
        "startChar": 28,
        "endLine": 24,
        "endChar": 29
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d1200d7_58a8c9a1",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "optional: I prefer to use braces even for single-line statements to defend against bad merges. More of these all over.",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5df328ea_980cf91c",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "nit: There\u0027s no cleanup to do -- return instead of goto?",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fdce9ca2_31c99770",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "For C, I prefer to consistently used \u0027goto out\u0027 (and for C++, I prefer to consistently use \u0027return\u0027 and RAII).",
      "parentUuid": "5df328ea_980cf91c",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9d1200d7_83a13270",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "Do we know whether image_data is on a \u003carch-word-size\u003e boundary? If we keep this approach, maybe call this out as a precondition or in the struct documentation (or both)?",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7dbb8cf2_72671892",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 59,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "I\u0027d add an assert... the tricky part is to determine what \u003carch-word-size\u003e is. Is there a guaranteed way to get it from the compiler? I\u0027d rather not play offsetof() games...\n\nI\u0027ll add a TODO for now.",
      "parentUuid": "9d1200d7_83a13270",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d09ccae_1d535f43",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 62,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "overflow checks",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd0fc4b0_241bae64",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "overflow checks",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1dd53033_471eb254",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "integer overflow checks?",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd0fc4b0_b17ebff0",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "I think replacing this with\n\n  if (prop_start \u003c image_data || prop_start \u003e image_end ||\n      prop_end \u003c image_data || prop_end \u003e image_end)\n\nshould be enough and include overflow checks, right?",
      "parentUuid": "1dd53033_471eb254",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ddaf464_d7cff6a0",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "alignment",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fde3fc1c_a9f52a36",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 74,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "I\u0027ll add a TODO (cf. the comment above).",
      "parentUuid": "3ddaf464_d7cff6a0",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9de920fd_9a43ccea",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "overflow check\n\nalso, please document literals\n\n 2 /* NUL bytes */",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5df328ea_49b5a5f8",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Overflow check is done below \"if (total + p \u003e prop_end)\".\n\nAdding the doc.",
      "parentUuid": "9de920fd_9a43ccea",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7df0ecdc_1ff8efd8",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 78,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "nit: add spaces: total \u0026 7\noptional nit2: use \u0027total % 8\u0027 and let compiler optimize?",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd0fc4b0_1497b965",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 78,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7df0ecdc_1ff8efd8",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bde6e426_3919905a",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 122,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "same here, no cleanup, prefer return",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d09ccae_af43fa1a",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 129,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "nit: not used\n\nalso, safer to just get value_size from the lookup?",
      "range": {
        "startLine": 129,
        "startChar": 15,
        "endLine": 129,
        "endChar": 25
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9de920fd_3319ab5a",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 129,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Nice catch.",
      "parentUuid": "7d09ccae_af43fa1a",
      "range": {
        "startLine": 129,
        "startChar": 15,
        "endLine": 129,
        "endChar": 25
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bde6e426_f960a8ae",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "use value_size instead of \\0?",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fde3fc1c_29193a5a",
        "filename": "bvb/bvb_property.c",
        "patchSetId": 4
      },
      "lineNbr": 132,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "That\u0027d be an extra line (for declaring the value_size variable).",
      "parentUuid": "bde6e426_f960a8ae",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7df0ecdc_b0da3892",
        "filename": "bvb/bvb_property.h",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "optional: bvb/ prefix on these?",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5df328ea_7ec6dd83",
        "filename": "bvb/bvb_property.h",
        "patchSetId": 4
      },
      "lineNbr": 24,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Since the code is supposed to be copy-pasted by the partner into their own buildsystem, adding this requirement would put burden on them. So I\u0027d prefer not to.",
      "parentUuid": "7df0ecdc_b0da3892",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7df0ecdc_846a565a",
        "filename": "bvb/bvb_property.h",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "CamelCase? (Or any reason not to use Google style?)",
      "range": {
        "startLine": 45,
        "startChar": 12,
        "endLine": 45,
        "endChar": 31
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bde6e426_d2b7f9fc",
        "filename": "bvb/bvb_property.h",
        "patchSetId": 4
      },
      "lineNbr": 45,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Mostly because it\u0027s C and not C++ and underscores help drive home that point. I would prefer to keep it this way.",
      "parentUuid": "7df0ecdc_846a565a",
      "range": {
        "startLine": 45,
        "startChar": 12,
        "endLine": 45,
        "endChar": 31
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9de920fd_f13448c5",
        "filename": "bvb/bvb_property.h",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "hexidecimal-\u003ehexadecimal",
      "range": {
        "startLine": 51,
        "startChar": 36,
        "endLine": 51,
        "endChar": 47
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1dd53033_390f4abe",
        "filename": "bvb/bvb_property.h",
        "patchSetId": 4
      },
      "lineNbr": 51,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9de920fd_f13448c5",
      "range": {
        "startLine": 51,
        "startChar": 36,
        "endLine": 51,
        "endChar": 47
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fde3fc1c_cc6e4f92",
        "filename": "bvb/bvb_property.h",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "format? 0x prefix required?",
      "range": {
        "startLine": 52,
        "startChar": 3,
        "endLine": 52,
        "endChar": 12
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1da7f0d2_b75a38f9",
        "filename": "bvb/bvb_property.h",
        "patchSetId": 4
      },
      "lineNbr": 52,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "0x prefix required. I\u0027ll clarify the docs.",
      "parentUuid": "fde3fc1c_cc6e4f92",
      "range": {
        "startLine": 52,
        "startChar": 3,
        "endLine": 52,
        "endChar": 12
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fde3fc1c_13334b4e",
        "filename": "bvb/bvb_rsa.h",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "nit: inconsistent 0 vs zero",
      "range": {
        "startLine": 41,
        "startChar": 11,
        "endLine": 41,
        "endChar": 12
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3d4834fd_de2e2543",
        "filename": "bvb/bvb_rsa.h",
        "patchSetId": 4
      },
      "lineNbr": 41,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fde3fc1c_13334b4e",
      "range": {
        "startLine": 41,
        "startChar": 11,
        "endLine": 41,
        "endChar": 12
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5df328ea_e3335aaa",
        "filename": "bvb/bvb_rsa.h",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "BvbRSAVerify?",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 43,
        "endChar": 17
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3ddaf464_7d7ee342",
        "filename": "bvb/bvb_rsa.h",
        "patchSetId": 4
      },
      "lineNbr": 43,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "I\u0027d rather change it to bvb_rsa_verify. I did it this way because it was just RSAVerify which won\u0027t work with the model we\u0027re targeting (partner code could have a RSAVerify() symbol already) so namespacing is paramount.",
      "parentUuid": "5df328ea_e3335aaa",
      "range": {
        "startLine": 43,
        "startChar": 4,
        "endLine": 43,
        "endChar": 17
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bde6e426_07d1c477",
        "filename": "bvb/bvb_sysdeps.h",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "Why require double brackets at every call site? Is there a case where \u0027#define BVB_DEBUG bvb_debug\u0027 or \u0027#define BVB_DEBUG(params) bvb_debug(params)\u0027 wouldn\u0027t work?",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd0fc4b0_f4c2e550",
        "filename": "bvb/bvb_sysdeps.h",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Yeah, it\u0027s double brackets right now because that\u0027s what vboot_reference did.\n\nI\u0027ll change the code to just use bvb_debug() and then make it a static empty inline function if BVB_ENABLE_DEBUG is not defined (much like the linux kernel sources does).",
      "parentUuid": "bde6e426_07d1c477",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd0fc4b0_84a13a70",
        "filename": "bvb/bvb_sysdeps.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "BVB_ENABLE_DEBUG?",
      "range": {
        "startLine": 37,
        "startChar": 7,
        "endLine": 37,
        "endChar": 16
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1dd53033_0c1a0ab6",
        "filename": "bvb/bvb_sysdeps.h",
        "patchSetId": 4
      },
      "lineNbr": 37,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "nice catch, thanks!",
      "parentUuid": "bd0fc4b0_84a13a70",
      "range": {
        "startLine": 37,
        "startChar": 7,
        "endLine": 37,
        "endChar": 16
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd0fc4b0_649e462e",
        "filename": "bvb/bvb_sysdeps.h",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "all caps?",
      "range": {
        "startLine": 38,
        "startChar": 8,
        "endLine": 38,
        "endChar": 18
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5df328ea_e910d9a4",
        "filename": "bvb/bvb_sysdeps.h",
        "patchSetId": 4
      },
      "lineNbr": 38,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Mmm, libc\u0027s assert() is lower-case and now BVB_DEBUG is also lower-case. So I\u0027d prefer to keep this lower-case too!",
      "parentUuid": "bd0fc4b0_649e462e",
      "range": {
        "startLine": 38,
        "startChar": 8,
        "endLine": 38,
        "endChar": 18
      },
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fde3fc1c_21c95470",
        "filename": "bvb/bvb_sysdeps_stub.c",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1079236
      },
      "writtenOn": "2016-02-12T00:13:06Z",
      "side": 1,
      "message": "nit: brace on prev line -- more below",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d09ccae_a5043933",
        "filename": "bvb/bvb_sysdeps_stub.c",
        "patchSetId": 4
      },
      "lineNbr": 26,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2016-02-12T18:07:53Z",
      "side": 1,
      "message": "Fixed throughout, in all files.",
      "parentUuid": "fde3fc1c_21c95470",
      "revId": "c59409ccf20580bf0f2c1cba1f54f0db6837b5fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}