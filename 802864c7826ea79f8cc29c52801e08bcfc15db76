{
  "comments": [
    {
      "key": {
        "uuid": "ed0d5247_2dfd6d9a",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 117,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2020-03-26T00:30:46Z",
      "side": 1,
      "message": "Why not eventfd?",
      "range": {
        "startLine": 117,
        "startChar": 10,
        "endLine": 117,
        "endChar": 25
      },
      "revId": "802864c7826ea79f8cc29c52801e08bcfc15db76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d06da3d1_ea43c0aa",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 448,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2020-03-26T00:30:46Z",
      "side": 1,
      "message": "Do we really need the arbitrary limit?",
      "range": {
        "startLine": 448,
        "startChar": 42,
        "endLine": 448,
        "endChar": 45
      },
      "revId": "802864c7826ea79f8cc29c52801e08bcfc15db76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb89a239_71c2d456",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 454,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2020-03-26T00:30:46Z",
      "side": 1,
      "message": "Please make a less generic-sounding function name for waking up the thread",
      "range": {
        "startLine": 454,
        "startChar": 4,
        "endLine": 454,
        "endChar": 13
      },
      "revId": "802864c7826ea79f8cc29c52801e08bcfc15db76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0b8410bd_06f96c76",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 466,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2020-03-26T00:30:46Z",
      "side": 1,
      "message": "I\u0027d just make a MaybeGetPendingControlMessage() function with lexically scoped locking returning an optional, then call that from here",
      "range": {
        "startLine": 466,
        "startChar": 8,
        "endLine": 466,
        "endChar": 22
      },
      "revId": "802864c7826ea79f8cc29c52801e08bcfc15db76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ac591c66_29790eb5",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 472,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2020-03-26T00:30:46Z",
      "side": 1,
      "message": "We repeat this logic elsewhere. Maybe it\u0027s worth making a MaybeSendControlMessageErrorReply() function?",
      "range": {
        "startLine": 472,
        "startChar": 12,
        "endLine": 472,
        "endChar": 36
      },
      "revId": "802864c7826ea79f8cc29c52801e08bcfc15db76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0dff98df_200dc6bc",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 473,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2020-03-26T00:30:46Z",
      "side": 1,
      "message": "Can\u0027t a control message sender make init block for arbitrarily long here? Why not use MSG_DONTWAIT to make sure the send is always non-blocking?",
      "range": {
        "startLine": 473,
        "startChar": 31,
        "endLine": 473,
        "endChar": 35
      },
      "revId": "802864c7826ea79f8cc29c52801e08bcfc15db76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5250c1a3_4b672071",
        "filename": "init/init.h",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2020-03-26T00:30:46Z",
      "side": 1,
      "message": "Nit: can\u0027t we take a string_view?",
      "range": {
        "startLine": 42,
        "startChar": 21,
        "endLine": 42,
        "endChar": 44
      },
      "revId": "802864c7826ea79f8cc29c52801e08bcfc15db76",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}