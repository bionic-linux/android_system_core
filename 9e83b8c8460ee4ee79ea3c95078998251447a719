{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4a992a24_0c13fee3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-08-18T09:32:01Z",
      "side": 1,
      "message": "This only logs errors. We can add retries for errors we can handle in a separate CL.",
      "revId": "9e83b8c8460ee4ee79ea3c95078998251447a719",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2bee88df_3fdc2af1",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2021-08-18T16:32:37Z",
      "side": 1,
      "message": "No assert() statements in production code please. From https://g3doc.corp.google.com/devtools/library_club/g3doc/totw/113.md?cl\u003dhead, about CHECK(): \"Use for undesired and unexpected events, that the program cannot recover from. Use extremely sparingly, only to protect code invariants from which no sane recovery is possible, or in situations where the most likely explanation is memory corruption that could lead to permanent damage to user data.\"",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 19
      },
      "revId": "9e83b8c8460ee4ee79ea3c95078998251447a719",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5393dee4_ad3da8c1",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 17,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-08-18T18:28:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2bee88df_3fdc2af1",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 19
      },
      "revId": "9e83b8c8460ee4ee79ea3c95078998251447a719",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fdd0d5d0_4f1a8332",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 138,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2021-08-18T16:32:37Z",
      "side": 1,
      "message": "Sense data is not specific to the SG/IO interface but applies to all of SCSI. Should this function perhaps be renamed into check_scsi_sense()?",
      "range": {
        "startLine": 138,
        "startChar": 11,
        "endLine": 138,
        "endChar": 25
      },
      "revId": "9e83b8c8460ee4ee79ea3c95078998251447a719",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05f29c1f_a5887d99",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 138,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-08-18T18:28:45Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fdd0d5d0_4f1a8332",
      "range": {
        "startLine": 138,
        "startChar": 11,
        "endLine": 138,
        "endChar": 25
      },
      "revId": "9e83b8c8460ee4ee79ea3c95078998251447a719",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f3317515_824144a6",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-08-18T09:32:01Z",
      "side": 1,
      "message": "I wasn\u0027t sure if we wanted to log the sense buffer for recovered errors here.",
      "revId": "9e83b8c8460ee4ee79ea3c95078998251447a719",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5e3d6dc_77f03d1e",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2021-08-18T16:32:37Z",
      "side": 1,
      "message": "Please log the sense code, ASC and ASCQ since these three numbers combined define the meaning of the sense code. See also https://www.t10.org/lists/asc-num.htm.",
      "parentUuid": "f3317515_824144a6",
      "revId": "9e83b8c8460ee4ee79ea3c95078998251447a719",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "057e6f9d_835f94ba",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-08-18T18:28:45Z",
      "side": 1,
      "message": "I assume you mean for RECOVERED_ERROR? Do we need to log more of the buffer for other errors or just the ASC and ASCQ?",
      "parentUuid": "b5e3d6dc_77f03d1e",
      "revId": "9e83b8c8460ee4ee79ea3c95078998251447a719",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1e278e4_a59aeb37",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2021-08-18T20:21:12Z",
      "side": 1,
      "message": "Does a UFS controller ever report the RECOVERED ERROR sense code?\n\nParsing a sense buffer manually is tedious. For people who analyze logs it is much easier if software decodes the sense code, ASC and ASCQ and also logs these values. I think it is useful to log these values every time sense data is present.",
      "parentUuid": "057e6f9d_835f94ba",
      "revId": "9e83b8c8460ee4ee79ea3c95078998251447a719",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7bafb3e5_18f68fed",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-08-18T22:18:18Z",
      "side": 1,
      "message": "afaict, no, it doesn\u0027t. I\u0027ve switched to debug-level logging of the codes for anything that looks successful and error-level logging for everything else.",
      "parentUuid": "a1e278e4_a59aeb37",
      "revId": "9e83b8c8460ee4ee79ea3c95078998251447a719",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bfb132ca_c9536607",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 191,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2021-08-18T16:32:37Z",
      "side": 1,
      "message": "Not all sense codes indicate a failure. E.g. (UNIT_ATTENTION (6), 0x3F, 0xE) indicates that the logical unit data changed and does not indicate command failure but rather that the command should be retried.",
      "range": {
        "startLine": 191,
        "startChar": 17,
        "endLine": 191,
        "endChar": 23
      },
      "revId": "9e83b8c8460ee4ee79ea3c95078998251447a719",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "80c4169f_f7f2cfac",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 191,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-08-18T18:28:45Z",
      "side": 1,
      "message": "Until we actually do retry, I think we need to log anything that doesn\u0027t indicate success as an error, since the transaction will fail. I\u0027ve updated the message to not imply that the sense key indicates an error.",
      "parentUuid": "bfb132ca_c9536607",
      "range": {
        "startLine": 191,
        "startChar": 17,
        "endLine": 191,
        "endChar": 23
      },
      "revId": "9e83b8c8460ee4ee79ea3c95078998251447a719",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "736661d6_aa840de0",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 191,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-08-18T23:26:29Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "80c4169f_f7f2cfac",
      "range": {
        "startLine": 191,
        "startChar": 17,
        "endLine": 191,
        "endChar": 23
      },
      "revId": "9e83b8c8460ee4ee79ea3c95078998251447a719",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "467f29f5_510a5c7e",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 201,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2021-08-18T16:32:37Z",
      "side": 1,
      "message": "Where does this constant come from? From SPC-6, section 5.3 Status:\n\n00h GOOD\n02h CHECK CONDITION\n04h CONDITION MET\n08h BUSY\n18h RESERVATION CONFLICT\n28h TASK SET FULL\n30h ACA ACTIVE\n40h TASK ABORTED\n\nAs one can see, CHECK CONDITION is a valid status and a status code for which one of the lower four bits has been set.",
      "range": {
        "startLine": 201,
        "startChar": 26,
        "endLine": 201,
        "endChar": 30
      },
      "revId": "9e83b8c8460ee4ee79ea3c95078998251447a719",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "05fc9f65_929129cd",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 201,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-08-18T18:28:45Z",
      "side": 1,
      "message": "Was supposed to be LSB (0x01) not 0x0f, fixed.",
      "parentUuid": "467f29f5_510a5c7e",
      "range": {
        "startLine": 201,
        "startChar": 26,
        "endLine": 201,
        "endChar": 30
      },
      "revId": "9e83b8c8460ee4ee79ea3c95078998251447a719",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f60dca16_c6939654",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2021-08-18T16:32:37Z",
      "side": 1,
      "message": "Not all sense codes indicate failure.",
      "range": {
        "startLine": 208,
        "startChar": 25,
        "endLine": 208,
        "endChar": 31
      },
      "revId": "9e83b8c8460ee4ee79ea3c95078998251447a719",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "483912f5_262c2fcc",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 208,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-08-18T18:28:45Z",
      "side": 1,
      "message": "Updated the text. I\u0027m planning to return an enum from check_scsi_sense indicating that we should retry, and we won\u0027t log an error immediately in that case.",
      "parentUuid": "f60dca16_c6939654",
      "range": {
        "startLine": 208,
        "startChar": 25,
        "endLine": 208,
        "endChar": 31
      },
      "revId": "9e83b8c8460ee4ee79ea3c95078998251447a719",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}