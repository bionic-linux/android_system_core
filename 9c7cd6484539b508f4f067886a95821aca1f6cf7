{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d14fcd8b_61ebeb50",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-08-31T13:28:21Z",
      "side": 1,
      "message": "unrelated, but looking at 1600+ lines of test written in shell script doesn\u0027t feel like I am living in 21st century. ðŸ˜ž\n\nI wish we had written this in a modern language and using a test framework. ",
      "revId": "9c7cd6484539b508f4f067886a95821aca1f6cf7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7e5ca49c_e5fec31c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-09-01T08:48:59Z",
      "side": 1,
      "message": "yeah writing this in python might be a tad more simple (friendlier string, int, list type) I was thinking about rewriting this all from scratch previously, but this test is basically a bunch of adb commands glued together, rewriting in python would pretty much end up with similar code.",
      "parentUuid": "d14fcd8b_61ebeb50",
      "revId": "9c7cd6484539b508f4f067886a95821aca1f6cf7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "edf8c1b0_4d0dab11",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-09-01T09:10:23Z",
      "side": 1,
      "message": "\u003e end up with similar code\n\nWith python, perhaps yes, but I was expecting a Junit test that uses tradefed where access to adb, etc are well abstracted.\n\nAnyway, I think this is P3 or even P4.",
      "parentUuid": "7e5ca49c_e5fec31c",
      "revId": "9c7cd6484539b508f4f067886a95821aca1f6cf7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "db0dc520_653eb37e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-09-01T13:48:31Z",
      "side": 1,
      "message": "My experience with writing Java hostside tests are pretty bad TBH... the abstraction is weird and inconsistent, sometimes errors are thrown, sometimes errors are returned as exit code. IO related try-catch blocks are a nightmare to write, and adb-related abstractions are almost always related to IO.\n\nI\u0027m also traumatized by the constant 30s~2min *warm up* cost of `atest`. That\u0027s why I prefer python/bash/gtest. I\u0027d rather just do `subprocess.run([\u0027adb\u0027, ...])` than deal with Java *host* side test ðŸ˜‚",
      "parentUuid": "edf8c1b0_4d0dab11",
      "revId": "9c7cd6484539b508f4f067886a95821aca1f6cf7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "51368613_ba92568d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-09-01T16:45:40Z",
      "side": 1,
      "message": "(yeah, much as i hate shell scripts, this is exactly why i own a handful of scripts like this [albeit none nearly as large as this] --- junit buys me nothing and slows me down. the ndk folks prefer python for this kind of thing, but they have more python experts -- and have invested in things like custom parallel python runner infrastructure -- which tips the scales in favor of python there.)",
      "parentUuid": "db0dc520_653eb37e",
      "revId": "9c7cd6484539b508f4f067886a95821aca1f6cf7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8973687a_0e1690d2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-09-01T23:48:08Z",
      "side": 1,
      "message": "Poor Java, you are not welcomed anywhere...",
      "parentUuid": "51368613_ba92568d",
      "revId": "9c7cd6484539b508f4f067886a95821aca1f6cf7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd7c232f_c2277fbf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-09-02T00:01:12Z",
      "side": 1,
      "message": "heh, don\u0027t get me wrong ... i love the java language. but i hate the startup time, and i hate the build time, and i hate our build system\u0027s overhead, and i hate junit\u0027s overhead (one of the first things i did when i was on the libcore team was write a replacement test runner so i did have to sit and wait for junit to serially enumerate all the tests before it started running any!). whereas i loathe python the language, and don\u0027t usually have anything nice to say about shell scripts more than a few lines long, but i really can\u0027t argue with their startup time :-(\n\nwhat i really want is something that\u0027s roughly java, but with python-like startup. sadly, i fear i\u0027ll have to write that myself after i retire. until then, i\u0027ll grudgingly admit that sometimes even sh isn\u0027t always the worst tool for the job!",
      "parentUuid": "8973687a_0e1690d2",
      "revId": "9c7cd6484539b508f4f067886a95821aca1f6cf7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "94ce9ea5_f98afffc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-09-02T00:04:20Z",
      "side": 1,
      "message": "(of course, thanks to our .par file stuff, we\u0027ve managed to bring all the pain of java builds to python! another reason to prefer sh for tools in our tree... /facepalm)",
      "parentUuid": "fd7c232f_c2277fbf",
      "revId": "9c7cd6484539b508f4f067886a95821aca1f6cf7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}