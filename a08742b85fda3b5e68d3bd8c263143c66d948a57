{
  "comments": [
    {
      "key": {
        "uuid": "4e5b4a4a_85bfb92c",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 11
      },
      "lineNbr": 385,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2017-12-19T14:26:08Z",
      "side": 1,
      "message": "nit: I do not think you need it here.",
      "range": {
        "startLine": 385,
        "startChar": 44,
        "endLine": 385,
        "endChar": 55
      },
      "revId": "a08742b85fda3b5e68d3bd8c263143c66d948a57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fd61e0ad_9ff23cbd",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 11
      },
      "lineNbr": 385,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2017-12-19T14:31:43Z",
      "side": 1,
      "message": "unwrapping std::string gives following compilation error:\n\nsystem/core/libnativeloader/native_loader.cpp:385:45: error: no viable conversion from \u0027basic_string\u003cchar, std::__1::char_traits\u003cchar\u003e, std::__1::allocator\u003cchar\u003e \u003e\u0027 to \u0027const char *\u0027\n\nThe second arg of android::base::EndsWith is const char*.",
      "parentUuid": "4e5b4a4a_85bfb92c",
      "range": {
        "startLine": 385,
        "startChar": 44,
        "endLine": 385,
        "endChar": 55
      },
      "revId": "a08742b85fda3b5e68d3bd8c263143c66d948a57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a02ba494_f01c111e",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 11
      },
      "lineNbr": 385,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2017-12-19T14:33:33Z",
      "side": 1,
      "message": "I meant std:string c-tor - just (\".\" + company_name + \".so\").c_str() should do the trick no?",
      "parentUuid": "fd61e0ad_9ff23cbd",
      "range": {
        "startLine": 385,
        "startChar": 44,
        "endLine": 385,
        "endChar": 55
      },
      "revId": "a08742b85fda3b5e68d3bd8c263143c66d948a57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a15c17ce_5f1b68e6",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 11
      },
      "lineNbr": 385,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2017-12-19T14:36:43Z",
      "side": 1,
      "message": "That worked! Done.",
      "parentUuid": "a02ba494_f01c111e",
      "range": {
        "startLine": 385,
        "startChar": 44,
        "endLine": 385,
        "endChar": 55
      },
      "revId": "a08742b85fda3b5e68d3bd8c263143c66d948a57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6778189b_bac9e1d6",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 11
      },
      "lineNbr": 385,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-12-20T17:51:49Z",
      "side": 1,
      "message": "sorry, this nonsense is my fault --- because we don\u0027t have std::string_view for Windows i only implemented the most common case (a const char* literal). every time someone has to work around that i\u0027ve said \"or just add the missing overload to libbase\" but no-one\u0027s ever taken me up on the offer. but the madness stops today. missing overloads, plus fixing up existing callers: https://android-review.googlesource.com/#/c/platform/system/core/+/573822/\n\n(the really sad part is that although, yes, const char* literals are more common, if you do need a non-constant prefix/suffix we really *do* want it to be built with std::string. and then we make those folks pay for a call to strlen. d\u0027oh.)",
      "parentUuid": "a15c17ce_5f1b68e6",
      "range": {
        "startLine": 385,
        "startChar": 44,
        "endLine": 385,
        "endChar": 55
      },
      "revId": "a08742b85fda3b5e68d3bd8c263143c66d948a57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c4c5c167_7ea0b90b",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 11
      },
      "lineNbr": 389,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2017-12-19T14:26:08Z",
      "side": 1,
      "message": "nit: \u0027: \u0027?",
      "range": {
        "startLine": 389,
        "startChar": 81,
        "endLine": 389,
        "endChar": 82
      },
      "revId": "a08742b85fda3b5e68d3bd8c263143c66d948a57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5fd85a0_8f3f97bb",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 11
      },
      "lineNbr": 389,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2017-12-19T14:31:43Z",
      "side": 1,
      "message": "Oops! Thanks.",
      "parentUuid": "c4c5c167_7ea0b90b",
      "range": {
        "startLine": 389,
        "startChar": 81,
        "endLine": 389,
        "endChar": 82
      },
      "revId": "a08742b85fda3b5e68d3bd8c263143c66d948a57",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}