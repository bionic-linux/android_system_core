{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c739ef0b_8b2db6a1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-12-15T00:51:38Z",
      "side": 1,
      "message": "does this need to be added as an init builtin, or is there a command-line tool for the bootloader message stuff (so we could just do this in a .rc file)? i feel like i\u0027ve seen such a thing? +xunchang who might either know what i\u0027m vaguely remembering, or be a canonical reference for \"no dude, you\u0027re imagining it\" :-) ",
      "revId": "01ea2b7491e6845ead3ccb164d31d23de522da23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5552497_bc8ed3ce",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2021-12-22T20:09:41Z",
      "side": 1,
      "message": "There is a misc_writer for Pixel that writes to the vendor space of /misc, so callers won\u0027t contend the offset. Though we don\u0027t have similar mechanism for the system space of /misc; as the contention is unlikely when system components call though the bootloader_messager library.  \n\nhttps://cs.android.com/android/platform/superproject/+/master:hardware/google/pixel/misc_writer/include/misc_writer/?q\u003dmisc_writer\u0026ss\u003dandroid%2Fplatform%2Fsuperproject",
      "parentUuid": "c739ef0b_8b2db6a1",
      "revId": "01ea2b7491e6845ead3ccb164d31d23de522da23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "be6211e8_058637d8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-01-18T22:01:22Z",
      "side": 1,
      "message": "ah, okay.\n\neven if we don\u0027t have an external tool, it seems (grepping for this include) that the existing init precedent is to add a builtin?\n\nit\u0027s +dvander\u0027s decision rather than mine though...",
      "parentUuid": "c5552497_bc8ed3ce",
      "revId": "01ea2b7491e6845ead3ccb164d31d23de522da23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "73d269c9_f4439831",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-01-18T22:13:22Z",
      "side": 1,
      "message": "Yeah, an init builtin (if this will be used in .rc files) or a cli tool would be much better. A new \"magic property\" would need a very compelling use case since they are very rare, and the existing ones are a lot more generic than this.",
      "parentUuid": "be6211e8_058637d8",
      "revId": "01ea2b7491e6845ead3ccb164d31d23de522da23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3784ae7_6b682d06",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-01-18T22:15:27Z",
      "side": 1,
      "message": "The precedent for a cli tool to modify misc is probably bootctl. Most of it goes through a HAL but the default HAL writes to misc.",
      "parentUuid": "73d269c9_f4439831",
      "revId": "01ea2b7491e6845ead3ccb164d31d23de522da23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "19e94b9b_cda72ae2",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 335,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-01-18T22:01:22Z",
      "side": 1,
      "message": "just `for (const auto\u0026 field : android::base::Split(value, \",\")) {` instead of all this?",
      "revId": "01ea2b7491e6845ead3ccb164d31d23de522da23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7afb6cdc_a8c7707b",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 362,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-01-18T22:01:22Z",
      "side": 1,
      "message": "include `value` in the failure message too?",
      "revId": "01ea2b7491e6845ead3ccb164d31d23de522da23",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}