{
  "comments": [
    {
      "key": {
        "uuid": "1845320e_4c57ead6",
        "filename": "init/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-05-24T20:58:48Z",
      "side": 1,
      "message": "The symbols exported by these aren\u0027t linked into the eventually-run-executable\u0027s linker namespace, right?",
      "range": {
        "startLine": 190,
        "startChar": 4,
        "endLine": 190,
        "endChar": 15
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "086f214f_c4822354",
        "filename": "init/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-05-24T21:15:54Z",
      "side": 1,
      "message": "Good point. I think they are. I\u0027ll fix this up in the linker.",
      "parentUuid": "1845320e_4c57ead6",
      "range": {
        "startLine": 190,
        "startChar": 4,
        "endLine": 190,
        "endChar": 15
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f55988c2_d446f918",
        "filename": "init/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-05-24T21:28:05Z",
      "side": 1,
      "message": "Updated aosp/954688.",
      "parentUuid": "086f214f_c4822354",
      "range": {
        "startLine": 190,
        "startChar": 4,
        "endLine": 190,
        "endChar": 15
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "68f40779_b482855e",
        "filename": "init/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 190,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-05-24T21:29:22Z",
      "side": 1,
      "message": "Thanks",
      "parentUuid": "f55988c2_d446f918",
      "range": {
        "startLine": 190,
        "startChar": 4,
        "endLine": 190,
        "endChar": 15
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "66318f1a_115dae00",
        "filename": "init/nativezygote.h",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-05-24T14:02:59Z",
      "side": 1,
      "message": "Why? Just let the SOCK_SEQPACKET socket fail with EMSGSIZE.",
      "range": {
        "startLine": 25,
        "startChar": 47,
        "endLine": 25,
        "endChar": 51
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5f46ce89_8b9d515a",
        "filename": "init/nativezygote.h",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-05-24T20:23:51Z",
      "side": 1,
      "message": "Don\u0027t you need to read the packet in one call and thus need to know the size of the buffer needed? Would you prefer the client sends the data size first and then the data in a second packet? (I didn\u0027t do that because I wanted to keep the server stateless.)",
      "parentUuid": "66318f1a_115dae00",
      "range": {
        "startLine": 25,
        "startChar": 47,
        "endLine": 25,
        "endChar": 51
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d0d7dd1d_d137052f",
        "filename": "init/nativezygote.h",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-05-24T20:58:48Z",
      "side": 1,
      "message": "You could MSG_PEEK. But I\u0027d just make the receive buffer larger than any possible datagram, which you can determine by looking at SO_SNDBUF. Or just make the limit larger than any reasonable datagram, say, 64k. 8k is pretty small and I can imagine hitting it.",
      "parentUuid": "5f46ce89_8b9d515a",
      "range": {
        "startLine": 25,
        "startChar": 47,
        "endLine": 25,
        "endChar": 51
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8529b05f_f82a97cc",
        "filename": "init/nativezygote.h",
        "patchSetId": 2
      },
      "lineNbr": 25,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-05-24T21:15:54Z",
      "side": 1,
      "message": "Set to 64k.",
      "parentUuid": "d0d7dd1d_d137052f",
      "range": {
        "startLine": 25,
        "startChar": 47,
        "endLine": 25,
        "endChar": 51
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a89ba9f0_ea0896b0",
        "filename": "init/nativezygote_client.cpp",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-05-24T14:02:59Z",
      "side": 1,
      "message": "Can\u0027t you just have it born O_CLOEXEC?",
      "range": {
        "startLine": 65,
        "startChar": 33,
        "endLine": 65,
        "endChar": 43
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae8428fd_e331834b",
        "filename": "init/nativezygote_client.cpp",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-05-24T20:23:51Z",
      "side": 1,
      "message": "How do I do that with socket_local_client?",
      "parentUuid": "a89ba9f0_ea0896b0",
      "range": {
        "startLine": 65,
        "startChar": 33,
        "endLine": 65,
        "endChar": 43
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "044b41e4_a7482ded",
        "filename": "init/nativezygote_client.cpp",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-05-24T20:58:48Z",
      "side": 1,
      "message": "Bitwise-or SOCK_CLOEXEC into SOCK_SEQPACKET.",
      "parentUuid": "ae8428fd_e331834b",
      "range": {
        "startLine": 65,
        "startChar": 33,
        "endLine": 65,
        "endChar": 43
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69f0d78f_a785ce8b",
        "filename": "init/nativezygote_client.cpp",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-05-24T21:15:54Z",
      "side": 1,
      "message": "Thanks. Done.",
      "parentUuid": "044b41e4_a7482ded",
      "range": {
        "startLine": 65,
        "startChar": 33,
        "endLine": 65,
        "endChar": 43
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "527f5e0c_df568cea",
        "filename": "init/nativezygote_client.h",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-05-24T14:02:59Z",
      "side": 1,
      "message": "std::string is probably safer from a lifetime POV",
      "range": {
        "startLine": 41,
        "startChar": 10,
        "endLine": 41,
        "endChar": 14
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3188c607_9145a227",
        "filename": "init/nativezygote_client.h",
        "patchSetId": 2
      },
      "lineNbr": 41,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-05-24T20:23:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "527f5e0c_df568cea",
      "range": {
        "startLine": 41,
        "startChar": 10,
        "endLine": 41,
        "endChar": 14
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2432c8a7_084c5516",
        "filename": "init/nativezygote_client.h",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-05-24T14:02:59Z",
      "side": 1,
      "message": "Let\u0027s use unique_fd for file descriptors.",
      "range": {
        "startLine": 42,
        "startChar": 18,
        "endLine": 42,
        "endChar": 21
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1323fde9_159f867d",
        "filename": "init/nativezygote_client.h",
        "patchSetId": 2
      },
      "lineNbr": 42,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-05-24T20:23:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2432c8a7_084c5516",
      "range": {
        "startLine": 42,
        "startChar": 18,
        "endLine": 42,
        "endChar": 21
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7811dcdb_77b01f17",
        "filename": "init/nativezygote_server.cpp",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-05-24T14:02:59Z",
      "side": 1,
      "message": "Why not just use std::string directly? The standard requires that its storage be contiguous. This class should at most be a free function.",
      "range": {
        "startLine": 65,
        "startChar": 6,
        "endLine": 65,
        "endChar": 27
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f80ec3f9_a6761424",
        "filename": "init/nativezygote_server.cpp",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-05-24T20:23:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7811dcdb_77b01f17",
      "range": {
        "startLine": 65,
        "startChar": 6,
        "endLine": 65,
        "endChar": 27
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d03bf950_4451fd79",
        "filename": "init/nativezygote_server.cpp",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-05-24T14:02:59Z",
      "side": 1,
      "message": "You don\u0027t need double fork. Use CLONE_PARENT.",
      "range": {
        "startLine": 101,
        "startChar": 6,
        "endLine": 101,
        "endChar": 16
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "82469c5d_ae629676",
        "filename": "init/nativezygote_server.cpp",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-05-24T20:23:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d03bf950_4451fd79",
      "range": {
        "startLine": 101,
        "startChar": 6,
        "endLine": 101,
        "endChar": 16
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "001b7555_a54a36d6",
        "filename": "init/nativezygote_server.cpp",
        "patchSetId": 2
      },
      "lineNbr": 193,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-05-24T14:02:59Z",
      "side": 1,
      "message": "Don\u0027t use select(2) in new code. The FD_SET mechanism is inefficient and error-prone. You want poll(2), or epoll if you\u0027re going for overkill.",
      "range": {
        "startLine": 193,
        "startChar": 12,
        "endLine": 193,
        "endChar": 18
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fba8bcd7_dfb1701b",
        "filename": "init/nativezygote_server.cpp",
        "patchSetId": 2
      },
      "lineNbr": 193,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-05-24T20:23:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "001b7555_a54a36d6",
      "range": {
        "startLine": 193,
        "startChar": 12,
        "endLine": 193,
        "endChar": 18
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91d92cdc_421c6f48",
        "filename": "init/nativezygote_server.cpp",
        "patchSetId": 2
      },
      "lineNbr": 281,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-05-24T14:02:59Z",
      "side": 1,
      "message": "TEMP_RETRY_FAIL here and throughout.",
      "range": {
        "startLine": 281,
        "startChar": 17,
        "endLine": 281,
        "endChar": 23
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07adab93_581f2fa1",
        "filename": "init/nativezygote_server.cpp",
        "patchSetId": 2
      },
      "lineNbr": 281,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-05-24T20:23:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "91d92cdc_421c6f48",
      "range": {
        "startLine": 281,
        "startChar": 17,
        "endLine": 281,
        "endChar": 23
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfbbee04_dd11597f",
        "filename": "init/nativezygote_server.cpp",
        "patchSetId": 2
      },
      "lineNbr": 312,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-05-24T14:02:59Z",
      "side": 1,
      "message": "\u003c 0 here and elsewhere",
      "range": {
        "startLine": 312,
        "startChar": 28,
        "endLine": 312,
        "endChar": 34
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "faf248f1_753b7fc9",
        "filename": "init/nativezygote_server.cpp",
        "patchSetId": 2
      },
      "lineNbr": 312,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-05-24T20:23:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bfbbee04_dd11597f",
      "range": {
        "startLine": 312,
        "startChar": 28,
        "endLine": 312,
        "endChar": 34
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbff8e6b_83c6408f",
        "filename": "init/nativezygote_server.cpp",
        "patchSetId": 2
      },
      "lineNbr": 315,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-05-24T14:02:59Z",
      "side": 1,
      "message": "This code is very similar to init\u0027s. Can we just share it? Maybe it makes sense to run the native zygote as a tweaked copy of init instead of an independent program with its own implementations of NS-setting goop.",
      "range": {
        "startLine": 315,
        "startChar": 12,
        "endLine": 315,
        "endChar": 17
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a6283bb_e5cd78af",
        "filename": "init/nativezygote_server.cpp",
        "patchSetId": 2
      },
      "lineNbr": 315,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-05-24T20:23:51Z",
      "side": 1,
      "message": "I discussed this with Tom and decided to duplicate the code, based on the assumption that dsolinkd will make native zygote obsolete not too far down the road. Merging with init comes with its own risk in that we can accidentally leak things from init if we are not careful. Also, keep in mind that nativezygote can only use LL-NDK shared libraries, so that\u0027d be another trouble we\u0027d have to deal with. Factoring out the duplicated code is another possible approach, but we\u0027d be reverting that once native zygote goes away.\n\nI\u0027ll let Tom comment on this since he\u0027s the init owner.",
      "parentUuid": "fbff8e6b_83c6408f",
      "range": {
        "startLine": 315,
        "startChar": 12,
        "endLine": 315,
        "endChar": 17
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "040a1b58_d5e32d6c",
        "filename": "init/nativezygote_server.cpp",
        "patchSetId": 2
      },
      "lineNbr": 315,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-05-24T20:58:48Z",
      "side": 1,
      "message": "Sure. Up to you. There\u0027s nothing so permanent as a temporary solution though. :) Let\u0027s at least add a TODO pointing back at init and asking for a merge if this thing has an unexpectedly long life.",
      "parentUuid": "4a6283bb_e5cd78af",
      "range": {
        "startLine": 315,
        "startChar": 12,
        "endLine": 315,
        "endChar": 17
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "604a49b6_b8e6ec57",
        "filename": "init/nativezygote_server.cpp",
        "patchSetId": 2
      },
      "lineNbr": 315,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-05-24T21:15:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "040a1b58_d5e32d6c",
      "range": {
        "startLine": 315,
        "startChar": 12,
        "endLine": 315,
        "endChar": 17
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd91e069_07a08e3e",
        "filename": "init/nativezygote_server.cpp",
        "patchSetId": 2
      },
      "lineNbr": 423,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-05-24T14:02:59Z",
      "side": 1,
      "message": "explain that we need indefinite lifetime because the kernel reads it directly.",
      "range": {
        "startLine": 423,
        "startChar": 61,
        "endLine": 423,
        "endChar": 68
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94c0d841_126bf2f6",
        "filename": "init/nativezygote_server.cpp",
        "patchSetId": 2
      },
      "lineNbr": 423,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-05-24T20:23:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dd91e069_07a08e3e",
      "range": {
        "startLine": 423,
        "startChar": 61,
        "endLine": 423,
        "endChar": 68
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7331d1d3_71b23d2f",
        "filename": "init/nativezygote_server.cpp",
        "patchSetId": 2
      },
      "lineNbr": 595,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-05-24T14:02:59Z",
      "side": 1,
      "message": "Instead of checking the count, why not just build a list of actual FDs and compare that?",
      "range": {
        "startLine": 595,
        "startChar": 8,
        "endLine": 595,
        "endChar": 30
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aaacdfee_5ff0cc7b",
        "filename": "init/nativezygote_server.cpp",
        "patchSetId": 2
      },
      "lineNbr": 595,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-05-24T20:23:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7331d1d3_71b23d2f",
      "range": {
        "startLine": 595,
        "startChar": 8,
        "endLine": 595,
        "endChar": 30
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3cad62b_5d362bf5",
        "filename": "init/service.cpp",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-05-24T14:02:59Z",
      "side": 1,
      "message": "const char*. No need to force callers to make strings.",
      "range": {
        "startLine": 115,
        "startChar": 28,
        "endLine": 115,
        "endChar": 44
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ca51db8b_f557fa44",
        "filename": "init/service.cpp",
        "patchSetId": 2
      },
      "lineNbr": 115,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-05-24T20:23:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c3cad62b_5d362bf5",
      "range": {
        "startLine": 115,
        "startChar": 28,
        "endLine": 115,
        "endChar": 44
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "51f32484_a911615b",
        "filename": "init/ueventd.cpp",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1130394
      },
      "writtenOn": "2019-05-24T14:02:59Z",
      "side": 1,
      "message": "Why?",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 20
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c2470d9_a4943eb0",
        "filename": "init/ueventd.cpp",
        "patchSetId": 2
      },
      "lineNbr": 40,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-05-24T20:23:51Z",
      "side": 1,
      "message": "Some part of selinux.h/cpp is factored out to selabel.h/cpp.",
      "parentUuid": "51f32484_a911615b",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 20
      },
      "revId": "26a9b73757d0589b053de54904fb676b26f06bcc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}