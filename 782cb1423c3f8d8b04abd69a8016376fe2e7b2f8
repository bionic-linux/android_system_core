{
  "comments": [
    {
      "key": {
        "uuid": "515e8215_b8c5e86e",
        "filename": "libsparse/include/sparse/sparse.h",
        "patchSetId": 6
      },
      "lineNbr": 306,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2017-04-20T22:02:40Z",
      "side": 1,
      "message": "Put these in a private header",
      "revId": "782cb1423c3f8d8b04abd69a8016376fe2e7b2f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ffe65aa_42a89817",
        "filename": "libsparse/include/sparse/sparse.h",
        "patchSetId": 6
      },
      "lineNbr": 325,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2017-04-20T22:02:40Z",
      "side": 1,
      "message": "Can this be a C++ interface so you can use default arguments?",
      "revId": "782cb1423c3f8d8b04abd69a8016376fe2e7b2f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d8218a8_3b188eb4",
        "filename": "libsparse/include/sparse/sparse.h",
        "patchSetId": 6
      },
      "lineNbr": 325,
      "author": {
        "id": 1156728
      },
      "writtenOn": "2017-04-21T14:43:29Z",
      "side": 1,
      "message": "If it\u0027s private, that\u0027s fine.  I imagined leaving these public in case fastboot, mkfs tools or the build system wanted them for something.",
      "parentUuid": "2ffe65aa_42a89817",
      "revId": "782cb1423c3f8d8b04abd69a8016376fe2e7b2f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "635b2203_b3ba5954",
        "filename": "libsparse/include/sparse/sparse.h",
        "patchSetId": 6
      },
      "lineNbr": 325,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-04-21T15:55:09Z",
      "side": 1,
      "message": "fastboot\u0027s C++ already, and there\u0027s no reason everything else shouldn\u0027t move...",
      "parentUuid": "6d8218a8_3b188eb4",
      "revId": "782cb1423c3f8d8b04abd69a8016376fe2e7b2f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5b16600_5dd73101",
        "filename": "libsparse/sparse_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 19,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-04-21T15:55:09Z",
      "side": 1,
      "message": "asprintf...",
      "revId": "782cb1423c3f8d8b04abd69a8016376fe2e7b2f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "adaabbfd_eeee4453",
        "filename": "libsparse/sparse_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 40,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-04-21T15:55:09Z",
      "side": 1,
      "message": "...but also fixed-size buffers?\n\nwhy not libbase\u0027s StringPrintf?\n\nunique_fd would simplify a lot of the fd cleanup too.",
      "revId": "782cb1423c3f8d8b04abd69a8016376fe2e7b2f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bd1d54ed_26e95ddd",
        "filename": "libsparse/sparse_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 63,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2017-04-20T22:02:40Z",
      "side": 1,
      "message": "print strerror?",
      "revId": "782cb1423c3f8d8b04abd69a8016376fe2e7b2f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ef198c9_5e89a464",
        "filename": "libsparse/sparse_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1156728
      },
      "writtenOn": "2017-04-20T19:50:46Z",
      "side": 1,
      "message": "return values are \"-1 or maybe -errno depending if sparse returned the error.\"\n\nI am counting on whoever is seeing errors, will also see stderr.  Is that OK, or should I clean up some of these return -1\u0027s to be more useful?",
      "revId": "782cb1423c3f8d8b04abd69a8016376fe2e7b2f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "468093c1_1433f20c",
        "filename": "libsparse/sparse_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2017-04-20T22:02:40Z",
      "side": 1,
      "message": "Might as well return -errno, although you\u0027ll have to stash it around the fprintf.",
      "parentUuid": "1ef198c9_5e89a464",
      "revId": "782cb1423c3f8d8b04abd69a8016376fe2e7b2f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d12b1758_cbda2f51",
        "filename": "libsparse/sparse_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 64,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-04-20T22:20:10Z",
      "side": 1,
      "message": "(which is another advantage of using libbase\u0027s google3-style LOG(ERROR) stuff... it never clobbers errno.)",
      "parentUuid": "468093c1_1433f20c",
      "revId": "782cb1423c3f8d8b04abd69a8016376fe2e7b2f8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}