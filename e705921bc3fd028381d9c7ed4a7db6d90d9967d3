{
  "comments": [
    {
      "key": {
        "uuid": "20aae7b0_9f4a4fe2",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 260,
      "author": {
        "id": 1010465
      },
      "writtenOn": "2017-07-05T16:55:46Z",
      "side": 1,
      "message": "also allow EXT4_GOOD_OLD_REV",
      "range": {
        "startLine": 260,
        "startChar": 8,
        "endLine": 260,
        "endChar": 43
      },
      "revId": "e705921bc3fd028381d9c7ed4a7db6d90d9967d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52d52719_59d8f33f",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 260,
      "author": {
        "id": 1180253
      },
      "writtenOn": "2017-07-06T02:24:27Z",
      "side": 1,
      "message": "ok，I add it.",
      "parentUuid": "20aae7b0_9f4a4fe2",
      "range": {
        "startLine": 260,
        "startChar": 8,
        "endLine": 260,
        "endChar": 43
      },
      "revId": "e705921bc3fd028381d9c7ed4a7db6d90d9967d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a640fb66_56bbc599",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 264,
      "author": {
        "id": 1010465
      },
      "writtenOn": "2017-07-05T16:55:46Z",
      "side": 1,
      "message": "use EXT4_BLOCK_SIZE macro and compare with EXT4_MIN_BLOCK_SIZE and EXT4_MAX_BLOCK_SIZE instead? Then no need to define MAX_BLOCK_LOG_SIZE here.",
      "range": {
        "startLine": 261,
        "startChar": 0,
        "endLine": 264,
        "endChar": 83
      },
      "revId": "e705921bc3fd028381d9c7ed4a7db6d90d9967d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9617fc9b_662d6cd2",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 264,
      "author": {
        "id": 1180253
      },
      "writtenOn": "2017-07-06T02:24:27Z",
      "side": 1,
      "message": "EXT4_BLOCK_SIZE can\u0027t be compared with other, because  EXT4_BLOCK_SIZE(\u0026sb) is shifting function(define EXT4_BLOCK_SIZE(s) (EXT4_MIN_BLOCK_SIZE \u003c\u003c (s)-\u003es_log_block_size))，but sb-\u003es_log_block_size can be any number. In our test case sb-\u003es_log_block_size is 0x2eab78cf ,this number will cause abort.",
      "parentUuid": "a640fb66_56bbc599",
      "range": {
        "startLine": 261,
        "startChar": 0,
        "endLine": 264,
        "endChar": 83
      },
      "revId": "e705921bc3fd028381d9c7ed4a7db6d90d9967d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6fc66eca_fee45ced",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 264,
      "author": {
        "id": 1010465
      },
      "writtenOn": "2017-07-06T17:29:09Z",
      "side": 1,
      "message": "Then move the macro definition to the top of this file (after include)",
      "parentUuid": "9617fc9b_662d6cd2",
      "range": {
        "startLine": 261,
        "startChar": 0,
        "endLine": 264,
        "endChar": 83
      },
      "revId": "e705921bc3fd028381d9c7ed4a7db6d90d9967d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9741bde5_994c84c5",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 265,
      "author": {
        "id": 1010465
      },
      "writtenOn": "2017-07-05T16:55:46Z",
      "side": 1,
      "message": "I see this macro from ext4.h, so this check is only valid for GOOD_OLD_REV, #define EXT4_INODE_SIZE(s) (((s)-\u003es_rev_level \u003d\u003d EXT4_GOOD_OLD_REV) ?   EXT4_GOOD_OLD_INODE_SIZE :   (s)-\u003es_inode_size). Remove it or add GOOD_OLD_REV check as well.",
      "range": {
        "startLine": 265,
        "startChar": 4,
        "endLine": 265,
        "endChar": 71
      },
      "revId": "e705921bc3fd028381d9c7ed4a7db6d90d9967d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d671a083_2dc7bda2",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 265,
      "author": {
        "id": 1180253
      },
      "writtenOn": "2017-07-06T02:24:27Z",
      "side": 1,
      "message": "In the case GOOD_OLD_REV ,EXT4_INODE_SIZE is EXT4_GOOD_OLD_INODE_SIZE(128bits).\nIn the new reversion, EXT4_INODE_SIZE is 256(bits). I think this value will increasing, for porting GOOD_OLD_REV.So this judgement is userful.",
      "parentUuid": "9741bde5_994c84c5",
      "range": {
        "startLine": 265,
        "startChar": 4,
        "endLine": 265,
        "endChar": 71
      },
      "revId": "e705921bc3fd028381d9c7ed4a7db6d90d9967d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7d8d2854_11edc008",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 265,
      "author": {
        "id": 1010465
      },
      "writtenOn": "2017-07-06T17:29:09Z",
      "side": 1,
      "message": "Then add separate check for GOOD_OLD_REV. Having to explain the behavior separately means the code is not clear.",
      "parentUuid": "d671a083_2dc7bda2",
      "range": {
        "startLine": 265,
        "startChar": 4,
        "endLine": 265,
        "endChar": 71
      },
      "revId": "e705921bc3fd028381d9c7ed4a7db6d90d9967d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "603f5b11_12403206",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 1010465
      },
      "writtenOn": "2017-07-05T16:55:46Z",
      "side": 1,
      "message": "this will not be that useful. remove.",
      "range": {
        "startLine": 266,
        "startChar": 4,
        "endLine": 266,
        "endChar": 55
      },
      "revId": "e705921bc3fd028381d9c7ed4a7db6d90d9967d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b715055b_7e1bb415",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 1180253
      },
      "writtenOn": "2017-07-06T02:24:27Z",
      "side": 1,
      "message": "Encrypted surper block may be any unexpect contexts.The judgment condition may be hard to come into effect, but it will be useful once it becomes effective.",
      "parentUuid": "603f5b11_12403206",
      "range": {
        "startLine": 266,
        "startChar": 4,
        "endLine": 266,
        "endChar": 55
      },
      "revId": "e705921bc3fd028381d9c7ed4a7db6d90d9967d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce908be5_c3999bc1",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 1010465
      },
      "writtenOn": "2017-07-06T17:29:09Z",
      "side": 1,
      "message": "ok, keep it then.",
      "parentUuid": "b715055b_7e1bb415",
      "range": {
        "startLine": 266,
        "startChar": 4,
        "endLine": 266,
        "endChar": 55
      },
      "revId": "e705921bc3fd028381d9c7ed4a7db6d90d9967d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}