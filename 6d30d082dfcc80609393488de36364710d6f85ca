{
  "comments": [
    {
      "key": {
        "uuid": "b0242aae_f0e01515",
        "filename": "logd/main.cpp",
        "patchSetId": 4
      },
      "lineNbr": 322,
      "author": {
        "id": 1015340
      },
      "writtenOn": "2015-04-14T23:58:41Z",
      "side": 1,
      "message": "Since you\u0027re not updating rc anymore, you can clean up that really messy for loop:\n\nif (rc \u003e\u003d 0) {\n    buf[len - 1] \u003d \u0027\\0\u0027;\n    for(char *ptr, *tok \u003d buf; tok; tok \u003d strtok_r(tok, \"\\r\\n\", \u0026ptr)) {\n        al-\u003elog(tok);\n    }\n}",
      "range": {
        "startLine": 316,
        "startChar": 1,
        "endLine": 322,
        "endChar": 13
      },
      "revId": "6d30d082dfcc80609393488de36364710d6f85ca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9033a6f4_3468db1e",
        "filename": "logd/main.cpp",
        "patchSetId": 4
      },
      "lineNbr": 322,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-15T00:21:55Z",
      "side": 1,
      "message": "consider android::base::Split?",
      "parentUuid": "b0242aae_f0e01515",
      "range": {
        "startLine": 316,
        "startChar": 1,
        "endLine": 322,
        "endChar": 13
      },
      "revId": "6d30d082dfcc80609393488de36364710d6f85ca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d080bec6_79720363",
        "filename": "logd/main.cpp",
        "patchSetId": 4
      },
      "lineNbr": 322,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-04-15T15:06:19Z",
      "side": 1,
      "message": "Good catch",
      "parentUuid": "b0242aae_f0e01515",
      "range": {
        "startLine": 316,
        "startChar": 1,
        "endLine": 322,
        "endChar": 13
      },
      "revId": "6d30d082dfcc80609393488de36364710d6f85ca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "907ac6a8_f7385a4f",
        "filename": "logd/main.cpp",
        "patchSetId": 4
      },
      "lineNbr": 322,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-04-15T15:06:19Z",
      "side": 1,
      "message": "len is in the range of 256K (depending on kernel configuration, some 64K, many 128K), using android::base::Split would result in more than doubling that allocation (at least temporarily if buf is forced out of scope right afterwards). Not a problem if logd starts where it should (PID\u003d148, very early), but can introduce problems if it should (heaven forbid, knock on wood) crash and restart.\n\nFor klogd (abandoned for the moment), this problem would get worse.\n\nI like the idea, adds some KISS, but must reject it on svelte grounds. In-place split up in buf[len] scales better.",
      "parentUuid": "9033a6f4_3468db1e",
      "range": {
        "startLine": 316,
        "startChar": 1,
        "endLine": 322,
        "endChar": 13
      },
      "revId": "6d30d082dfcc80609393488de36364710d6f85ca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10597645_434175f7",
        "filename": "logd/main.cpp",
        "patchSetId": 4
      },
      "lineNbr": 322,
      "author": {
        "id": 1015340
      },
      "writtenOn": "2015-04-15T15:55:23Z",
      "side": 1,
      "message": "OK, my \"simplification\" is wrong (you need to pass NULL to the second+ call to strtok_r, which my for loop isn\u0027t doing -- that\u0027s what I get for suggesting changes without testing them).  But I\u0027m pretty sure you can still simplify this, just not with the code I\u0027ve written.",
      "parentUuid": "d080bec6_79720363",
      "range": {
        "startLine": 316,
        "startChar": 1,
        "endLine": 322,
        "endChar": 13
      },
      "revId": "6d30d082dfcc80609393488de36364710d6f85ca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}