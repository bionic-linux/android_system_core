{
  "comments": [
    {
      "key": {
        "uuid": "2a3463db_86ebfe5e",
        "filename": "metricsd/uploader/bn_metricsd_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 54,
      "author": {
        "id": 1057759
      },
      "writtenOn": "2015-12-21T04:08:49Z",
      "side": 1,
      "message": "All this could move up into main() and still make sense.",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 54,
        "endChar": 1
      },
      "revId": "d172718fb8a8cad5e9a83a414436d0384b517dbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a2adb7b_bdfdeb88",
        "filename": "metricsd/uploader/bn_metricsd_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 54,
      "author": {
        "id": 1076133
      },
      "writtenOn": "2015-12-21T18:10:05Z",
      "side": 1,
      "message": "Parts of it could be moved (registering the binder interface) but the message_loop_ part should stay here IMO. It provides a nice isolation.",
      "parentUuid": "2a3463db_86ebfe5e",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 54,
        "endChar": 1
      },
      "revId": "d172718fb8a8cad5e9a83a414436d0384b517dbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a5c6f37_3626c6a5",
        "filename": "metricsd/uploader/bn_metricsd_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 58,
      "author": {
        "id": 1057759
      },
      "writtenOn": "2015-12-21T04:08:49Z",
      "side": 1,
      "message": "And then you wouldn\u0027t need to wrap this with a method on the binder object, which feels odd.",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 58,
        "endChar": 1
      },
      "revId": "d172718fb8a8cad5e9a83a414436d0384b517dbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a2517a8_c7da229b",
        "filename": "metricsd/uploader/bn_metricsd_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 58,
      "author": {
        "id": 1076133
      },
      "writtenOn": "2015-12-21T18:10:05Z",
      "side": 1,
      "message": "This is actually needed as we have two main loops and I didn\u0027t want to export |message_loops_| out of this object.",
      "parentUuid": "8a5c6f37_3626c6a5",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 58,
        "endChar": 1
      },
      "revId": "d172718fb8a8cad5e9a83a414436d0384b517dbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca33c71e_c1030255",
        "filename": "metricsd/uploader/bn_metricsd_impl.cc",
        "patchSetId": 6
      },
      "lineNbr": 58,
      "author": {
        "id": 1057759
      },
      "writtenOn": "2015-12-22T16:33:40Z",
      "side": 1,
      "message": "You need to quit the second mainloop, but that could also be done by passing a pointer to the second mainloop (or a closure wrapping the BreakLoop() function) to your first mainloop.",
      "parentUuid": "4a2517a8_c7da229b",
      "range": {
        "startLine": 56,
        "startChar": 0,
        "endLine": 58,
        "endChar": 1
      },
      "revId": "d172718fb8a8cad5e9a83a414436d0384b517dbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6a53bb27_f53822ca",
        "filename": "metricsd/uploader/bn_metricsd_impl.h",
        "patchSetId": 6
      },
      "lineNbr": 59,
      "author": {
        "id": 1057759
      },
      "writtenOn": "2015-12-21T04:08:49Z",
      "side": 1,
      "message": "It\u0027s weird that a particular binder object also contains a reference to the global mainloop that will run all binder objects in this process.  Can I convince you to move the message loop up into the main() or at least up to the upload service if you want to make that the top level concept?",
      "revId": "d172718fb8a8cad5e9a83a414436d0384b517dbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca62e7ed_dee301c0",
        "filename": "metricsd/uploader/bn_metricsd_impl.h",
        "patchSetId": 6
      },
      "lineNbr": 59,
      "author": {
        "id": 1076133
      },
      "writtenOn": "2015-12-21T18:10:05Z",
      "side": 1,
      "message": "Actually, this is not a global main loop but the main loop used for the binder thread only (to receive and handler metrics sample or \"quit\" event).\nThere is another main loop for the uploader part (aggregate the metrics, upload them, save them to disk, etc...).\n\nWe have two main loops to ensure we can receive lots of metrics samples even if we are doing IO work on the uploader thread.",
      "parentUuid": "6a53bb27_f53822ca",
      "revId": "d172718fb8a8cad5e9a83a414436d0384b517dbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa3a13f4_a0cd1ae4",
        "filename": "metricsd/uploader/bn_metricsd_impl.h",
        "patchSetId": 6
      },
      "lineNbr": 59,
      "author": {
        "id": 1057759
      },
      "writtenOn": "2015-12-22T16:33:40Z",
      "side": 1,
      "message": "I realized that it was the loop handling just the Binder interface.  You could argue that since this main loop only drives this particular object, that it makes sense to keep it here.\n\nHowever, my objection was more fundamental, that a binder object (even if it were the only binder object) should not hold a mainloop, since it is the mainloop that will drive all binder objects, and not the other way around.  My point was just that this leaves a marginally more confusing hierarchy for  the next person to add an interface to this service.\n\nSuppose that later we want to register a callback binder with metricsd to receive notification of some interesting events.  That person has to reallize that those notifications happen on this message loop inside BnMetricsdImpl.  Dunno, maybe that\u0027s over engineering, but I thought it might be nice to see the threading structure of the program clearly laid out in the top level (main()) function.",
      "parentUuid": "ca62e7ed_dee301c0",
      "revId": "d172718fb8a8cad5e9a83a414436d0384b517dbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca33c71e_a1007e49",
        "filename": "metricsd/uploader/bn_metricsd_impl.h",
        "patchSetId": 6
      },
      "lineNbr": 59,
      "author": {
        "id": 1057759
      },
      "writtenOn": "2015-12-22T16:37:43Z",
      "side": 1,
      "message": "Actually, that\u0027s a more interesting example than I thought it would be, because you could theoretically call methods on the callback object from anywhere in your process without passing through the mainloop.  I\u0027m unsure what happens when you call into the binder driver from a thread other than the one you\u0027ll be using for polling.  It seems safer to do this from that binder thread though, by passing the event to the binder message loop, and letting the callback happen on that thread.",
      "parentUuid": "aa3a13f4_a0cd1ae4",
      "revId": "d172718fb8a8cad5e9a83a414436d0384b517dbf",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}