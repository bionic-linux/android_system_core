{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a9b2dcd1_55a0612f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-08-04T23:44:59Z",
      "side": 1,
      "message": "New approach, instead the filtering takes place in fs_mgr_overlayfs_candidate_list. This simplifies a bunch of edge cases I was running into.\n\nI\u0027ve also added a function to check whether a partition is already remounted, which helps eliminate some other error spam.",
      "revId": "5dbef0df804d4c058ef16a1e7eb7c91057d834db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "486e2182_8e498a7a",
        "filename": "fs_mgr/fs_mgr_overlayfs.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1726,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-08-05T12:47:26Z",
      "side": 1,
      "message": "why do we need this I don\u0027t understand either?",
      "revId": "5dbef0df804d4c058ef16a1e7eb7c91057d834db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "002d2b3b_3c50a47f",
        "filename": "fs_mgr/fs_mgr_overlayfs.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1726,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-08-05T18:02:25Z",
      "side": 1,
      "message": "This is to handle the legacy case where we\u0027re not using overlayfs. Arguably it could be in fs_mgr_remount.cpp instead, I don\u0027t have a strong opinion.",
      "parentUuid": "486e2182_8e498a7a",
      "revId": "5dbef0df804d4c058ef16a1e7eb7c91057d834db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "54f137d4_326d09ca",
        "filename": "fs_mgr/fs_mgr_overlayfs.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1726,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-08-05T18:45:30Z",
      "side": 1,
      "message": "but how does an entry being readonly tells us it is already remounted?",
      "parentUuid": "002d2b3b_3c50a47f",
      "revId": "5dbef0df804d4c058ef16a1e7eb7c91057d834db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "ab834125_e15e8a81",
        "filename": "fs_mgr/fs_mgr_overlayfs.cpp",
        "patchSetId": 5
      },
      "lineNbr": 1726,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-08-05T18:51:24Z",
      "side": 1,
      "message": "Whoops, the test needs to be inverted. Fixed.",
      "parentUuid": "54f137d4_326d09ca",
      "revId": "5dbef0df804d4c058ef16a1e7eb7c91057d834db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5ff4b070_65a4580e",
        "filename": "fs_mgr/fs_mgr_remount.cpp",
        "patchSetId": 5
      },
      "lineNbr": 248,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-08-05T12:46:27Z",
      "side": 1,
      "message": "I don\u0027t follow...? what is this trying to do?",
      "revId": "5dbef0df804d4c058ef16a1e7eb7c91057d834db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "64daf38d_df4cd31a",
        "filename": "fs_mgr/fs_mgr_remount.cpp",
        "patchSetId": 5
      },
      "lineNbr": 248,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-08-05T18:02:25Z",
      "side": 1,
      "message": "If you \"adb remount /vendor\" and vendor is already remounted, it would error, because it\u0027s not remountable. If we exclude the partition from the candidate list, you\u0027d get a different error \"No remountable partitions found\".\n\nThe simplest thing seemed to include remounted partitions in the list, if given explicitly, and then skip over them when actually doing the remount.",
      "parentUuid": "5ff4b070_65a4580e",
      "revId": "5dbef0df804d4c058ef16a1e7eb7c91057d834db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9140cb4b_7d04b8e7",
        "filename": "fs_mgr/fs_mgr_remount.cpp",
        "patchSetId": 5
      },
      "lineNbr": 248,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-08-05T18:45:30Z",
      "side": 1,
      "message": "ahh I think I kind of get it now... it\u0027s due to the change in IsRemountable() making legacy remount \u0026 remounted overlayfs to be reported as not \"remountable\"\n\nso iiuc IsPartitionRemounted() actually does two things,\n1. calls fs_mgr_overlayfs_already_mounted for overlayFS remounted partition\n2. some kind of check to detect legacy remount (still don\u0027t fully understand that part ðŸ¤”)\n\nI\u0027m thinking the second case could be solved by having FundPartition() return the actual mounted entry by looking at /proc (similar treatment of fs_mgr_overlayfs_candidate_list). that would make the check unambiguous and we wouldn\u0027t need IsPartitionRemounted ? please CMIIW",
      "parentUuid": "64daf38d_df4cd31a",
      "revId": "5dbef0df804d4c058ef16a1e7eb7c91057d834db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "004c0fb3_2e83e811",
        "filename": "fs_mgr/fs_mgr_remount.cpp",
        "patchSetId": 5
      },
      "lineNbr": 248,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-08-05T18:49:05Z",
      "side": 1,
      "message": "(missed a few words)\nI mean FindPartition() return actual mounted mount entry would make IsRemountable() unambiguous",
      "parentUuid": "9140cb4b_7d04b8e7",
      "revId": "5dbef0df804d4c058ef16a1e7eb7c91057d834db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f24004e_89cd5d7c",
        "filename": "fs_mgr/fs_mgr_remount.cpp",
        "patchSetId": 5
      },
      "lineNbr": 248,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-08-05T19:03:39Z",
      "side": 1,
      "message": "It\u0027d still return false, right? Since it has that MS_RDONLY check. Or do you mean that we could replace is the IsPartitionRemounted call with a simple MS_RDONLY check? That seems reasonable.",
      "parentUuid": "004c0fb3_2e83e811",
      "revId": "5dbef0df804d4c058ef16a1e7eb7c91057d834db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1cab8ed6_41a83d18",
        "filename": "fs_mgr/fs_mgr_remount.cpp",
        "patchSetId": 5
      },
      "lineNbr": 248,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-08-05T19:25:14Z",
      "side": 1,
      "message": "yeah you\u0027re right.\n\nIf partition is covered by overlayFS already, fs_mgr_overlayfs_already_mounted would detect that.\nIf partition wants legacy remount, then doesn\u0027t IsRemountable() return true in this case. \n\nwhen would IsRemountable() return false for legacy remount partition?",
      "parentUuid": "7f24004e_89cd5d7c",
      "revId": "5dbef0df804d4c058ef16a1e7eb7c91057d834db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14cbdc9d_f2fd1c74",
        "filename": "fs_mgr/fs_mgr_remount.cpp",
        "patchSetId": 5
      },
      "lineNbr": 248,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-08-05T19:26:55Z",
      "side": 1,
      "message": "(missed few words again)\nYeah you\u0027re right, looking at /proc/mounts probably won\u0027t work due to the MS_RDONLY check.",
      "parentUuid": "1cab8ed6_41a83d18",
      "revId": "5dbef0df804d4c058ef16a1e7eb7c91057d834db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e7e0422c_f1a114e5",
        "filename": "fs_mgr/fs_mgr_remount.cpp",
        "patchSetId": 5
      },
      "lineNbr": 248,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-08-05T21:21:00Z",
      "side": 1,
      "message": "I took a quick stab at making FindPartition use /proc/mounts, but it\u0027d require merging the two entries since one has fs_mgr flags and the other doesn\u0027t. I think it\u0027s simple enough as-is.",
      "parentUuid": "14cbdc9d_f2fd1c74",
      "revId": "5dbef0df804d4c058ef16a1e7eb7c91057d834db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4052fb08_1d8727aa",
        "filename": "fs_mgr/fs_mgr_remount.cpp",
        "patchSetId": 5
      },
      "lineNbr": 248,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-08-06T04:43:28Z",
      "side": 1,
      "message": "I changed FindPartitions to use the candidate list, this seems to work.",
      "parentUuid": "e7e0422c_f1a114e5",
      "revId": "5dbef0df804d4c058ef16a1e7eb7c91057d834db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "47c77c36_ad3872ae",
        "filename": "fs_mgr/fs_mgr_remount.cpp",
        "patchSetId": 5
      },
      "lineNbr": 248,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-08-06T04:48:33Z",
      "side": 1,
      "message": "partitions that require legacy remount won\u0027t be in candidate_list right, so they would get an error at L233?",
      "parentUuid": "4052fb08_1d8727aa",
      "revId": "5dbef0df804d4c058ef16a1e7eb7c91057d834db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b1ef8c9f_fef0cc7b",
        "filename": "fs_mgr/fs_mgr_remount.cpp",
        "patchSetId": 5
      },
      "lineNbr": 248,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-08-06T05:44:21Z",
      "side": 1,
      "message": "Okay, so we have to use /proc/mounts then.",
      "parentUuid": "47c77c36_ad3872ae",
      "revId": "5dbef0df804d4c058ef16a1e7eb7c91057d834db",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}