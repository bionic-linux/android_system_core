{
  "comments": [
    {
      "key": {
        "uuid": "c28cd36c_794b3889",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 7
      },
      "lineNbr": 388,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2019-01-23T07:58:59Z",
      "side": 1,
      "message": "https://google.github.io/styleguide/cppguide.html#Reference_Arguments\n\nIn fact it is a very strong convention in Google code that input arguments are values or const references while output arguments are pointers. Input parameters may be const pointers, but we never allow non-const reference parameters except when required by convention, e.g., swap().\n\n\nHow about:\nbool FirstStageMount::MountPartition(const Fstab::iterator\u0026 begin, \n                                     bool erase_same_mounts,\n                                     Fstab::iterator* out_end) {\n    ...\n    \n    Fstab::iterator cur \u003d begin;\n    for (; cur !\u003d fstab_.end() \u0026\u0026 cur-\u003emount_point \u003d\u003d begin-\u003emount_point; cur++) {\n        ....\n    }\n    if (erase_same_mounts) {\n        fstab_.erase(begin, cur);\n    }\n    if (out_end) {\n       *out_end \u003d cur;\n    }\n}",
      "range": {
        "startLine": 388,
        "startChar": 37,
        "endLine": 388,
        "endChar": 81
      },
      "revId": "a852c5384b1686dabdbabed0baec666d2f7b5df8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "263204a6_2ae3a195",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 7
      },
      "lineNbr": 407,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2019-01-23T07:58:59Z",
      "side": 1,
      "message": "How about:\n\n// blk_device is already updated to /dev/dm-\u003cN\u003e by SetUpDmVerity() above.\n// Copy it from the begin iterator.",
      "range": {
        "startLine": 406,
        "startChar": 54,
        "endLine": 407,
        "endChar": 75
      },
      "revId": "a852c5384b1686dabdbabed0baec666d2f7b5df8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5bbaceb8_0b444fe3",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 7
      },
      "lineNbr": 423,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2019-01-23T07:58:59Z",
      "side": 1,
      "message": "No need this, just set \u0027erase_same_mount\u0027 to true.",
      "range": {
        "startLine": 423,
        "startChar": 8,
        "endLine": 423,
        "endChar": 28
      },
      "revId": "a852c5384b1686dabdbabed0baec666d2f7b5df8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77b0f6d8_63bc4589",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 7
      },
      "lineNbr": 427,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2019-01-23T07:58:59Z",
      "side": 1,
      "message": "No need this, just set \u0027erase_same_mount\u0027 to true.",
      "range": {
        "startLine": 427,
        "startChar": 8,
        "endLine": 427,
        "endChar": 46
      },
      "revId": "a852c5384b1686dabdbabed0baec666d2f7b5df8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b57371e_8f8d0005",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 7
      },
      "lineNbr": 483,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2019-01-23T07:58:59Z",
      "side": 1,
      "message": "Use \u0026end here, for output parameters.",
      "range": {
        "startLine": 483,
        "startChar": 37,
        "endLine": 483,
        "endChar": 40
      },
      "revId": "a852c5384b1686dabdbabed0baec666d2f7b5df8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}