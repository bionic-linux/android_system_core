{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f89e4fb1_a0edec12",
        "filename": "trusty/apploader/Android.bp",
        "patchSetId": 24
      },
      "lineNbr": 28,
      "author": {
        "id": 1000205
      },
      "writtenOn": "2021-01-26T03:02:19Z",
      "side": 1,
      "message": "are you using this?",
      "revId": "644f81080c0a1ced6ec648148b6ac5bbefd743a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5d989cce_911ff4e3",
        "filename": "trusty/apploader/apploader.cpp",
        "patchSetId": 24
      },
      "lineNbr": 40,
      "author": {
        "id": 1000205
      },
      "writtenOn": "2021-01-26T03:02:19Z",
      "side": 1,
      "message": "\u003e Prefer to use inclusive terms like \u0027they\u0027, \u0027them\u0027, or \u0027person\u0027; see https://developers.google.com/style/word-list#gender for more details. In the case of a false positive add BYPASS_INCLUSIVE_LANGUAGE_REASON\u003dmy_reason_here to your commit message to disable this check.\n\nPlease fix.",
      "parentUuid": "99e38e2b_1460803b",
      "range": {
        "startLine": 40,
        "startChar": 16,
        "endLine": 40,
        "endChar": 19
      },
      "revId": "644f81080c0a1ced6ec648148b6ac5bbefd743a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef407f46_4aadbae5",
        "filename": "trusty/apploader/apploader.cpp",
        "patchSetId": 24
      },
      "lineNbr": 40,
      "author": {
        "id": 1638873
      },
      "writtenOn": "2021-01-26T05:55:03Z",
      "side": 1,
      "message": "In this case, man is short for manual, do I just disable the check with this explanation?",
      "parentUuid": "5d989cce_911ff4e3",
      "range": {
        "startLine": 40,
        "startChar": 16,
        "endLine": 40,
        "endChar": 19
      },
      "revId": "644f81080c0a1ced6ec648148b6ac5bbefd743a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0a45616f_99af5844",
        "filename": "trusty/apploader/apploader.cpp",
        "patchSetId": 24
      },
      "lineNbr": 43,
      "author": {
        "id": 1000205
      },
      "writtenOn": "2021-01-26T03:02:19Z",
      "side": 1,
      "message": "Do you need this constant at all? sendfile returns how many bytes it sent which might be less than this anyway. Also this linux limit applies to read and write as well, it is not sendfile specific.",
      "range": {
        "startLine": 43,
        "startChar": 8,
        "endLine": 43,
        "endChar": 20
      },
      "revId": "644f81080c0a1ced6ec648148b6ac5bbefd743a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76d2f706_e9d84cc7",
        "filename": "trusty/apploader/apploader.cpp",
        "patchSetId": 24
      },
      "lineNbr": 43,
      "author": {
        "id": 1638873
      },
      "writtenOn": "2021-01-26T05:55:03Z",
      "side": 1,
      "message": "I use it to clamp the transfer size for sendfile(). The actual issue is that the file size is an off64_t and I need to cast that to a size_t, which would truncate it on 32-bit systems. I could probably do that cast manually and get rid of the constant.",
      "parentUuid": "0a45616f_99af5844",
      "range": {
        "startLine": 43,
        "startChar": 8,
        "endLine": 43,
        "endChar": 20
      },
      "revId": "644f81080c0a1ced6ec648148b6ac5bbefd743a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eaefe95b_0543327d",
        "filename": "trusty/apploader/apploader.cpp",
        "patchSetId": 24
      },
      "lineNbr": 45,
      "author": {
        "id": 1000205
      },
      "writtenOn": "2021-01-26T03:02:19Z",
      "side": 1,
      "message": "There should be command line option to override this. When we have multiple trusty instances they will not all be using this device.",
      "revId": "644f81080c0a1ced6ec648148b6ac5bbefd743a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6fdcb780_dbabe7e3",
        "filename": "trusty/apploader/apploader.cpp",
        "patchSetId": 24
      },
      "lineNbr": 116,
      "author": {
        "id": 1000205
      },
      "writtenOn": "2021-01-26T03:02:19Z",
      "side": 1,
      "message": "Does this still work? Don\u0027t you need a dmabuf now?",
      "revId": "644f81080c0a1ced6ec648148b6ac5bbefd743a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d0b6e601_3d36f6a2",
        "filename": "trusty/apploader/apploader.cpp",
        "patchSetId": 24
      },
      "lineNbr": 116,
      "author": {
        "id": 1638873
      },
      "writtenOn": "2021-01-26T05:55:03Z",
      "side": 1,
      "message": "Last time I checked with mmaurer, that hadn\u0027t been committed (a few weeks ago), and then the big redesign started. I\u0027ll check again.",
      "parentUuid": "6fdcb780_dbabe7e3",
      "revId": "644f81080c0a1ced6ec648148b6ac5bbefd743a8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}