{
  "comments": [
    {
      "key": {
        "uuid": "ce95c7c1_20b4a8e4",
        "filename": "fs_mgr/libfiemap_writer/fiemap_writer.cpp",
        "patchSetId": 11
      },
      "lineNbr": 49,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-12-29T02:58:28Z",
      "side": 1,
      "message": "Probably still should be BlockDeviceToName().  I know we do a horrible job of that in fs_mgr, but new code should be formatted like that at least.",
      "range": {
        "startLine": 49,
        "startChar": 12,
        "endLine": 49,
        "endChar": 32
      },
      "revId": "451d1844469ac06db85c2bb76b5d824d03fccd4e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "151eccbd_1a00a907",
        "filename": "fs_mgr/libfiemap_writer/fiemap_writer.cpp",
        "patchSetId": 11
      },
      "lineNbr": 49,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2018-12-29T05:48:36Z",
      "side": 1,
      "message": "I checked out https://cs.corp.google.com/aosp-master/system/core/fs_mgr/libfs_avb/fs_avb.cpp?l\u003d308 for example, which uses this nomenclature for local statics.\n\nI thought we used that for class vs non-class methods. I can change it in the last patchset if that was wrong. For now, I\u0027ll address other comments and add a bunch more tests.",
      "parentUuid": "ce95c7c1_20b4a8e4",
      "range": {
        "startLine": 49,
        "startChar": 12,
        "endLine": 49,
        "endChar": 32
      },
      "revId": "451d1844469ac06db85c2bb76b5d824d03fccd4e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34d7672f_8ff5e33a",
        "filename": "fs_mgr/libfiemap_writer/fiemap_writer.cpp",
        "patchSetId": 11
      },
      "lineNbr": 49,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2018-12-29T07:54:09Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "151eccbd_1a00a907",
      "range": {
        "startLine": 49,
        "startChar": 12,
        "endLine": 49,
        "endChar": 32
      },
      "revId": "451d1844469ac06db85c2bb76b5d824d03fccd4e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "62d864e3_0ef903f8",
        "filename": "fs_mgr/libfiemap_writer/fiemap_writer.cpp",
        "patchSetId": 11
      },
      "lineNbr": 49,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-12-29T16:28:16Z",
      "side": 1,
      "message": "Ya... fs_mgr doesn\u0027t do this well.  All functions should be LikeThis(), but since historically everything was like_this() including all the public APIs, there\u0027s a lot of momentum for the latter.  I\u0027m generally against big refactorings for the old code, but at least for new code I think it\u0027s good to do it right?  But it\u0027s probably fine not to too.",
      "parentUuid": "34d7672f_8ff5e33a",
      "range": {
        "startLine": 49,
        "startChar": 12,
        "endLine": 49,
        "endChar": 32
      },
      "revId": "451d1844469ac06db85c2bb76b5d824d03fccd4e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "60bb6003_878ac48b",
        "filename": "fs_mgr/libfiemap_writer/fiemap_writer.cpp",
        "patchSetId": 11
      },
      "lineNbr": 494,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-12-29T02:58:28Z",
      "side": 1,
      "message": "new doesn\u0027t return nullptr ever.  It\u0027ll throw (aka crash for us) if we\u0027re out of memory.",
      "revId": "451d1844469ac06db85c2bb76b5d824d03fccd4e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72c1b0db_d78f418c",
        "filename": "fs_mgr/libfiemap_writer/fiemap_writer.cpp",
        "patchSetId": 11
      },
      "lineNbr": 494,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2018-12-29T07:54:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "60bb6003_878ac48b",
      "revId": "451d1844469ac06db85c2bb76b5d824d03fccd4e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "96201cac_18046058",
        "filename": "fs_mgr/libfiemap_writer/fiemap_writer.cpp",
        "patchSetId": 11
      },
      "lineNbr": 616,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-12-29T02:58:28Z",
      "side": 1,
      "message": "0 ?",
      "range": {
        "startLine": 616,
        "startChar": 15,
        "endLine": 616,
        "endChar": 20
      },
      "revId": "451d1844469ac06db85c2bb76b5d824d03fccd4e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2eb36eac_4b8ab24f",
        "filename": "fs_mgr/libfiemap_writer/fiemap_writer.cpp",
        "patchSetId": 11
      },
      "lineNbr": 616,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2018-12-29T07:54:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "96201cac_18046058",
      "range": {
        "startLine": 616,
        "startChar": 15,
        "endLine": 616,
        "endChar": 20
      },
      "revId": "451d1844469ac06db85c2bb76b5d824d03fccd4e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2dd9c261_ae641771",
        "filename": "fs_mgr/libfiemap_writer/include/libfiemap_writer/fiemap_writer.h",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-12-29T02:58:28Z",
      "side": 1,
      "message": "Are these going to be used for anything else, particularly clients of FiemapWriter?  I\u0027m guessing not, since they\u0027re just used during initialization, right?  Probably better to make them constants within fiemap_writer.cpp itself.\n\n(Or just hardcode the paths directly where they\u0027re used since they\u0027re only used one time each?  They\u0027re pretty self explanatory string constants, so I don\u0027t really think factoring them out adds to readability.)",
      "revId": "451d1844469ac06db85c2bb76b5d824d03fccd4e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6af115e3_13389afd",
        "filename": "fs_mgr/libfiemap_writer/include/libfiemap_writer/fiemap_writer.h",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2018-12-29T05:48:36Z",
      "side": 1,
      "message": "ack, they are used more than once in fiemap_writer.cpp. Making them local static constants works..",
      "parentUuid": "2dd9c261_ae641771",
      "revId": "451d1844469ac06db85c2bb76b5d824d03fccd4e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "295b22ce_1134db8d",
        "filename": "fs_mgr/libfiemap_writer/include/libfiemap_writer/fiemap_writer.h",
        "patchSetId": 11
      },
      "lineNbr": 37,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2018-12-29T07:54:09Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6af115e3_13389afd",
      "revId": "451d1844469ac06db85c2bb76b5d824d03fccd4e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}