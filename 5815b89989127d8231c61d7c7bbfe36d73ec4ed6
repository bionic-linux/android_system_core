{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "536f1391_94b50a51",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1131148
      },
      "writtenOn": "2021-03-31T23:04:31Z",
      "side": 1,
      "message": "Hey Jeff and Jiyong, I wasn\u0027t aware of another way to validate that we\u0027re writing to drop_caches or taking any action on user builds for a CTS test. Some others suggested looking at \"free -m\" and \"/proc/meminfo\", but I\u0027m not sure those are reliable. The only log I\u0027ve seen is from \"init: ...\" and doesn\u0027t show up on user builds.",
      "revId": "5815b89989127d8231c61d7c7bbfe36d73ec4ed6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "68b5f10d_27b07035",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-03-31T23:50:05Z",
      "side": 1,
      "message": "I am afraid that this is easy to be worked around. What if someone deletes #1146 while leaving #1147?\n\nI think having an app which mmaps a big junk file and accesses the mapped memory, and comparing [Shared|Private]_Clean fields in /proc/self/smaps before and after the drop cache operation would be a lot harder to worked around.",
      "parentUuid": "536f1391_94b50a51",
      "revId": "5815b89989127d8231c61d7c7bbfe36d73ec4ed6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fa4e0c1a_ed99b0d9",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1131148
      },
      "writtenOn": "2021-04-01T19:34:14Z",
      "side": 1,
      "message": "Understood. I was a bit afraid of that too. I\u0027ll try to get something like your alternative working here and see how it goes. I notice others in init.rc aren\u0027t logging, but is there an opposition to adding this line anyway?",
      "parentUuid": "68b5f10d_27b07035",
      "revId": "5815b89989127d8231c61d7c7bbfe36d73ec4ed6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d875e9a9_d8c3253f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-04-01T20:01:26Z",
      "side": 1,
      "message": "aiui you\u0027re saying that the regular init logging of _successful_ commands is missing in user builds? i wonder whether we should add something akin to the Makefile distinction between `foo` and `@foo` so a command can explicitly request that init log regardless? (so the _opposite_ of what @ means in a Makefile, but ykwim.)\n\n+adelva as init maintainer.",
      "revId": "5815b89989127d8231c61d7c7bbfe36d73ec4ed6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "32615041_b0e607db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-04-01T20:02:50Z",
      "side": 1,
      "message": "(fwiw, i don\u0027t think it\u0027s true that we don\u0027t log on user builds --- i think it\u0027s that we don\u0027t log if it takes less than 50ms:\n```\n    // Any action longer than 50ms will be warned to user as slow operation\n    if (!result.has_value() || duration \u003e 50ms ||\n        android::base::GetMinimumLogSeverity() \u003c\u003d android::base::DEBUG) {\n        std::string trigger_name \u003d BuildTriggersString();\n        std::string cmd_str \u003d command.BuildCommandString();\n\n        LOG(INFO) \u003c\u003c \"Command \u0027\" \u003c\u003c cmd_str \u003c\u003c \"\u0027 action\u003d\" \u003c\u003c trigger_name \u003c\u003c \" (\" \u003c\u003c filename_\n                  \u003c\u003c \":\" \u003c\u003c command.line() \u003c\u003c \") took \" \u003c\u003c duration.count() \u003c\u003c \"ms and \"\n                  \u003c\u003c (result.ok() ? \"succeeded\" : \"failed: \" + result.error().message());\n    }\n```\n)",
      "parentUuid": "d875e9a9_d8c3253f",
      "revId": "5815b89989127d8231c61d7c7bbfe36d73ec4ed6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "47339f13_175067a0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1170070
      },
      "writtenOn": "2021-04-01T20:07:16Z",
      "side": 1,
      "message": "+1 to the point about leaving the comment in. It would be really hardy to be able to cross-reference in logcat when this command was executed.",
      "revId": "5815b89989127d8231c61d7c7bbfe36d73ec4ed6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "83bc7e4a_c1cb072d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1170070
      },
      "writtenOn": "2021-04-01T20:08:04Z",
      "side": 1,
      "message": "*handy",
      "parentUuid": "47339f13_175067a0",
      "revId": "5815b89989127d8231c61d7c7bbfe36d73ec4ed6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f8317e7f_4ff31c35",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1293738
      },
      "writtenOn": "2021-04-01T22:58:51Z",
      "side": 1,
      "message": "+David as init maintainer :)",
      "revId": "5815b89989127d8231c61d7c7bbfe36d73ec4ed6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "38aca4ce_a5c53402",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-04-01T23:00:36Z",
      "side": 1,
      "message": "(d\u0027oh! sorry!)",
      "parentUuid": "f8317e7f_4ff31c35",
      "revId": "5815b89989127d8231c61d7c7bbfe36d73ec4ed6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}