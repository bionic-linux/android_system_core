{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "a90b5726_831288c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 6
      },
      "lineNbr": 0,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2022-12-07T15:58:24Z",
      "side": 1,
      "message": "I updated the code so it doesn\u0027t regress anything. PTAL.",
      "revId": "6d4081767b87ce11fd494f4680bdea34a74c7f27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "356f0809_e9492060",
        "filename": "libprocessgroup/processgroup.cpp",
        "patchSetId": 6
      },
      "lineNbr": 435,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-12-07T17:32:12Z",
      "side": 1,
      "message": "This logic will not count processes which were already dead (ESRCH condition), which is a deviation from previous behavior which counted such processes among the killed ones. How about simplifying to:\n```\nif (!kill(-pgid, signal) || errno \u003d\u003d ESRCH) {\n  process++;\n} else {\n  PLOG(WARNING) \u003c\u003c \"kill(\" \u003c\u003c -pgid \u003c\u003c \", \" \u003c\u003c signal \u003c\u003c \") failed\";\n}\n```\n\nThis will count a kill to be successful if the process is already dead.",
      "range": {
        "startLine": 431,
        "startChar": 8,
        "endLine": 435,
        "endChar": 9
      },
      "revId": "6d4081767b87ce11fd494f4680bdea34a74c7f27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "90a69302_128c2269",
        "filename": "libprocessgroup/processgroup.cpp",
        "patchSetId": 6
      },
      "lineNbr": 435,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2022-12-08T01:22:04Z",
      "side": 1,
      "message": "Then how should we handle the cgroup unavailable situation? I think it\u0027s complex because:\n\n1) we skip the early-returning part above (when the file is empty or doesn\u0027t exist)\n2) initialPid is always included here. kill will always \"succeed\"\n3) the loop in `KillProcessGroup` won\u0027t stop, which is the reason of regression in the previous patchset\n\n    while ((processes \u003d DoKillProcessGroupOnce(cgroup, uid, initialPid, signal)) \u003e 0) {\n        if (max_processes !\u003d nullptr \u0026\u0026 processes \u003e *max_processes) {\n            *max_processes \u003d processes;\n        }\n        LOG(VERBOSE) \u003c\u003c \"Killed \" \u003c\u003c processes \u003c\u003c \" processes for processgroup \" \u003c\u003c initialPid;\n        if (retry \u003e 0) {\n            std::this_thread::sleep_for(5ms);\n            --retry;\n        } else {\n            break;\n        }\n    }\n    \nThis bug hasn\u0027t existed not because we counted `processes` correctly, but because we early-returned based on the file.",
      "parentUuid": "356f0809_e9492060",
      "range": {
        "startLine": 431,
        "startChar": 8,
        "endLine": 435,
        "endChar": 9
      },
      "revId": "6d4081767b87ce11fd494f4680bdea34a74c7f27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "77711161_6819993a",
        "filename": "libprocessgroup/processgroup.cpp",
        "patchSetId": 6
      },
      "lineNbr": 435,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-12-08T01:48:22Z",
      "side": 1,
      "message": "Ok, I think I understand you. Before your change this function would return:\n- the number of killed+dead processes if cgroups are available\n- 0 if cgroups are not available, even if it killed the initialPid\n\nIs that correct?\nIf so then I have to admit this logic it broken. We have to either always returned the number of killed processes or the number of killed+dead processes. Sounds like you want to always return the number of killed processes. Correct?",
      "parentUuid": "90a69302_128c2269",
      "range": {
        "startLine": 431,
        "startChar": 8,
        "endLine": 435,
        "endChar": 9
      },
      "revId": "6d4081767b87ce11fd494f4680bdea34a74c7f27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "85dc98be_a8b9463c",
        "filename": "libprocessgroup/processgroup.cpp",
        "patchSetId": 6
      },
      "lineNbr": 435,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2022-12-08T01:58:02Z",
      "side": 1,
      "message": "\u003e Is that correct?\n\nYes.\n\n\u003e Sounds like you want to always return the number of killed processes. Correct?\n\nYes, I think it fits better for the name `KillProcessGroup`.",
      "parentUuid": "77711161_6819993a",
      "range": {
        "startLine": 431,
        "startChar": 8,
        "endLine": 435,
        "endChar": 9
      },
      "revId": "6d4081767b87ce11fd494f4680bdea34a74c7f27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}