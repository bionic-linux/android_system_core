{
  "comments": [
    {
      "key": {
        "uuid": "06db0fc1_90d93bcd",
        "filename": "init/reboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 285,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2017-10-23T23:04:00Z",
      "side": 1,
      "message": "we could use std::for_each, but I think explicitly loop is better in this case.",
      "range": {
        "startLine": 283,
        "startChar": 12,
        "endLine": 285,
        "endChar": 13
      },
      "revId": "1fa3bd803de7af99f5aca282e6ccc10e914ee3dd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73916969_04e35eb4",
        "filename": "init/reboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 285,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-10-23T23:10:41Z",
      "side": 1,
      "message": "Maybe just \nif (!entry.Umount(false)) unmount_done \u003d false;\n\nIt\u0027d be unfortunate if the compiler short circuited the \u0026\u0026 here when unmount_done is false.",
      "parentUuid": "06db0fc1_90d93bcd",
      "range": {
        "startLine": 283,
        "startChar": 12,
        "endLine": 285,
        "endChar": 13
      },
      "revId": "1fa3bd803de7af99f5aca282e6ccc10e914ee3dd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84107a41_d0aaf37d",
        "filename": "init/reboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 285,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2017-10-23T23:23:06Z",
      "side": 1,
      "message": "\"\u0026\u0026\" should be guaranteed to be evaluated the first part, but yeah, let\u0027s change to \"if\"",
      "parentUuid": "73916969_04e35eb4",
      "range": {
        "startLine": 283,
        "startChar": 12,
        "endLine": 285,
        "endChar": 13
      },
      "revId": "1fa3bd803de7af99f5aca282e6ccc10e914ee3dd",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}