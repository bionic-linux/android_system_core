{
  "comments": [
    {
      "key": {
        "uuid": "2d90a094_70bfbed3",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-02-06T22:08:15Z",
      "side": 1,
      "message": "Do we need this or the PathMatchA() given that this source is moved to not_windows ?",
      "revId": "cf64d2738851a111c0902b8fb73c6bfcf66d06de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "52acf30c_7dc4b4f7",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-02-06T22:27:03Z",
      "side": 1,
      "message": "(I had same question, but let it go because libcutils in general is supposed to be portable to windows).\n\n(I also wanted an inline here that implement fnmatch with PathMatchSpecA to drop the pair of #ifdef\u0027s below)",
      "parentUuid": "2d90a094_70bfbed3",
      "revId": "cf64d2738851a111c0902b8fb73c6bfcf66d06de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "69403d89_9251f1c9",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-02-07T00:02:38Z",
      "side": 1,
      "message": "Remove _WIN32 code paths.",
      "parentUuid": "52acf30c_7dc4b4f7",
      "revId": "cf64d2738851a111c0902b8fb73c6bfcf66d06de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b88a9d24_15918636",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 4
      },
      "lineNbr": 30,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-02-07T03:11:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "69403d89_9251f1c9",
      "revId": "cf64d2738851a111c0902b8fb73c6bfcf66d06de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "670e950a_2d184934",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 4
      },
      "lineNbr": 275,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-02-06T22:08:15Z",
      "side": 1,
      "message": "Maybe time to just use std::string here?  Seems a lot safer than using the str* and mem* functions.\n\nCan also use StartsWith() in the places it makes sense if we bring in android-base for additional clarity.",
      "revId": "cf64d2738851a111c0902b8fb73c6bfcf66d06de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f45a610c_d3204034",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 4
      },
      "lineNbr": 275,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-02-06T22:27:03Z",
      "side": 1,
      "message": "I believe we can not depend on libbase, only libbase_headers. The make system may get a bit upset if we require libbase to be added to everyone that includes libcutils.",
      "parentUuid": "670e950a_2d184934",
      "revId": "cf64d2738851a111c0902b8fb73c6bfcf66d06de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c7b33774_1cb99393",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 4
      },
      "lineNbr": 275,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-02-06T22:57:52Z",
      "side": 1,
      "message": "Right, nevermind that last part then.",
      "parentUuid": "f45a610c_d3204034",
      "revId": "cf64d2738851a111c0902b8fb73c6bfcf66d06de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8b83945_f1e60725",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 4
      },
      "lineNbr": 275,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-02-07T00:02:38Z",
      "side": 1,
      "message": "K",
      "parentUuid": "c7b33774_1cb99393",
      "revId": "cf64d2738851a111c0902b8fb73c6bfcf66d06de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3181617b_351e3912",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 4
      },
      "lineNbr": 275,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-02-07T03:11:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "d8b83945_f1e60725",
      "revId": "cf64d2738851a111c0902b8fb73c6bfcf66d06de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}