{
  "comments": [
    {
      "key": {
        "uuid": "84259fc9_d88ad84d",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 8
      },
      "lineNbr": 451,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-01-18T17:53:52Z",
      "side": 1,
      "message": "This isn\u0027t C; this should be defined inline, right before it\u0027s first used, so \"std::string verity_support\" should be right before \n\nif (!android::base::ReadFileToString(SYSFS_EXT4_VERITY, \u0026verity_support)) {",
      "revId": "bb14bd0fab51fd692836bc1ce12ed419fef530c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92e05fa0_c189c246",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 8
      },
      "lineNbr": 451,
      "author": {
        "id": 1336427
      },
      "writtenOn": "2019-01-19T14:27:41Z",
      "side": 1,
      "message": "Sure, I will move to L457.",
      "parentUuid": "84259fc9_d88ad84d",
      "revId": "bb14bd0fab51fd692836bc1ce12ed419fef530c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c862ef4_273b24c3",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 8
      },
      "lineNbr": 463,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-01-18T17:53:52Z",
      "side": 1,
      "message": "Do you actually mean to compare just up to the length of \u0027supported\u0027 or is this better to compare the two strings directly?\n\nIf the former, then this should be `if (StartsWith(verity_support, \"supported\"))`\nIf the latter, then this should be `if (verity_support \u003d\u003d \"supported\")`\n\nI hope the latter is all that is needed too, is there any reason why the string might have something beyond \"supported\" ?\n\nYou don\u0027t need to factor out the constant string here, since it\u0027s only used once.",
      "revId": "bb14bd0fab51fd692836bc1ce12ed419fef530c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0a4ebc9d_e5fa22d7",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 8
      },
      "lineNbr": 463,
      "author": {
        "id": 1336427
      },
      "writtenOn": "2019-01-19T14:27:41Z",
      "side": 1,
      "message": "Because the string includes a newline character.\nIs it fine to you?\n\nif (verity_support !\u003d \"supported\\n\")",
      "parentUuid": "0c862ef4_273b24c3",
      "revId": "bb14bd0fab51fd692836bc1ce12ed419fef530c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4515676_fe4f6efa",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 8
      },
      "lineNbr": 463,
      "author": {
        "id": 1336427
      },
      "writtenOn": "2019-01-21T03:16:07Z",
      "side": 1,
      "message": "Talk with victor and I also think the former is better.\nSo I will use StartsWith():\nif (!StartsWith(verity_support, \"supported\"))",
      "parentUuid": "0a4ebc9d_e5fa22d7",
      "revId": "bb14bd0fab51fd692836bc1ce12ed419fef530c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53ee1789_4feb1027",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 8
      },
      "lineNbr": 463,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-01-21T19:06:18Z",
      "side": 1,
      "message": "If it\u0027s just the \\n then it\u0027d be even better to use android::base::Trim().  StartsWith() implies to me that it could be something like \"supported:extra information\" and you don\u0027t care about the extra information.  If it\u0027s just to get rid of the newline, then Trim() is your best option.\n\nif (Trim(verity_support) \u003d\u003d \"supported\")",
      "parentUuid": "b4515676_fe4f6efa",
      "revId": "bb14bd0fab51fd692836bc1ce12ed419fef530c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d97ca44_46551099",
        "filename": "fs_mgr/fs_mgr_fstab.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1091,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-01-18T17:53:52Z",
      "side": 1,
      "message": "Unless you have a user of this, drop it.  This old style fstab is going away, so better to not keep adding to it.",
      "revId": "bb14bd0fab51fd692836bc1ce12ed419fef530c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc72f54e_68416a7b",
        "filename": "fs_mgr/fs_mgr_fstab.cpp",
        "patchSetId": 8
      },
      "lineNbr": 1091,
      "author": {
        "id": 1336427
      },
      "writtenOn": "2019-01-19T14:27:41Z",
      "side": 1,
      "message": "Change at next version.",
      "parentUuid": "4d97ca44_46551099",
      "revId": "bb14bd0fab51fd692836bc1ce12ed419fef530c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}