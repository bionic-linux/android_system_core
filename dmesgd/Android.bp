package {
    default_applicable_licenses: ["system_core_dmesgd_license"],
}

// Added automatically by a large-scale-change that took the approach of
// 'apply every license found to every target'. While this makes sure we respect
// every license restriction, it may not be entirely correct.
//
// e.g. GPL in an MIT project might only apply to the contrib/ directory.
//
// Please consider splitting the single license below into multiple licenses,
// taking care not to lose any license_kind information, and overriding the
// default license using the 'licenses: [...]' property on targets as needed.
//
// For unused files, consider creating a 'fileGroup' with "//visibility:private"
// to attach the license to, and including a comment whether the files may be
// used in the current project.
// See: http://go/android-license-faq
license {
    name: "system_core_dmesgd_license",
    visibility: [":__subpackages__"],
    license_kinds: [
        "SPDX-license-identifier-Apache-2.0",
        "SPDX-license-identifier-BSD",
    ],
    // large-scale-change unable to identify any license_text files
}

cc_defaults {
    name: "dmesgd_defaults",
    cflags: [
        "-Wall",
        "-Wextra",
        "-Werror",
        "-Wno-unused-argument",
        "-Wno-unused-function",
        "-Wno-nullability-completeness",
        "-Os",
    ],

}

cc_binary {
    name: "dmesgd",
    srcs: [
        "dmesgd.cpp",
        "dmesg_parser.cpp",
    ],
    defaults: ["dmesgd_defaults"],

    static_libs: [
        "libbase",
        "libcutils",
        "libevent",
        "liblog",
        "libutils",
    ],
    shared_libs: [
        "libservices",
    ],
    init_rc: ["dmesgd.rc"],
}

cc_test {
    name: "dmesg_parser_test",
    defaults: ["dmesgd_defaults"],
    require_root: false,

    srcs: [
        "dmesg_parser.cpp",
        "dmesg_parser_test.cpp",
    ],
}
