{
  "comments": [
    {
      "key": {
        "uuid": "9746a8e7_aeb43dcf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-08-10T16:15:01Z",
      "side": 1,
      "message": "is that actually true though? i thought i\u0027d made this mistake (several times) before and been corrected by danalbert who made me put these back in?\n\ni thought versioner only does the headers in bionic (libc/libm/libdl)?",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 68
      },
      "revId": "a850ebd89b103f1aee947f4925e3ecb5eff3801f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ad898d1_49d490fe",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2020-08-10T22:31:14Z",
      "side": 1,
      "message": "Yeah, this isn\u0027t true. I don\u0027t think we can do this in isolation. We need to do this at the same time as we change the meaning of __INTRODUCED_IN.\n\nWe\u0027ll also need to make sure this doesn\u0027t break the NDK before we submit it, or else we risk not being able to revert if APEX starts depending on it before we find out it breaks the NDK. I strongly suspect we will need to make changes to keep things compatible with the NDK, particularly in libandroid_support and around all our legacy inlines.",
      "parentUuid": "9746a8e7_aeb43dcf",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 68
      },
      "revId": "a850ebd89b103f1aee947f4925e3ecb5eff3801f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "796aaced_d0707c88",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2020-08-11T00:48:22Z",
      "side": 1,
      "message": "Yes, these liblog headers are not processed by versioner. I will fix the comment.\n\nHowever, APEX can\u0027t use these APIs regardless of the existence of __ANDROID_API__ macros because they are provided with the liblog stub which doesn\u0027t have the new symbols in it. So, link error (instead of compilation error) will happen if the new symbols are used.",
      "parentUuid": "6ad898d1_49d490fe",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 68
      },
      "revId": "a850ebd89b103f1aee947f4925e3ecb5eff3801f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e5dfa59_074e3ed7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2020-08-11T20:31:45Z",
      "side": 1,
      "message": "\u003e So, link error (instead of compilation error) will happen if the new symbols are used.\n\nWhich confuses NDK users. I think this patch has to land _after_ `__INTRODUCED_IN` is fixed.",
      "parentUuid": "796aaced_d0707c88",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 68
      },
      "revId": "a850ebd89b103f1aee947f4925e3ecb5eff3801f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5db41fef_010eab77",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2020-08-11T23:59:46Z",
      "side": 1,
      "message": "BTW, I\u0027ve moved this change to internal ag/12343492 because there is another framework/native change that depends on internal-only code.\n\nI can add the __INTRODUCED_IN change to the topic (I have a WIP change in my host). But it will be no-op until I add \u0027-Wunguarded-availability\u0027 flag to the compiler, which in turn requires implementation of isOSVersionAtLeast and a few more changes to the build system, etc. to inject the implementation to everywhere.\n\nUnless I upload all the changes simultaneously, a temporary disruption seems inevitable and I think that\u0027s fine as we are not releasing NDK now (are we?). Moving to the internal gerrit might be a help too.\n\nI would like to introduce small changes incrementally and this change is needed for the build system change in this topic; otherwise I experience a build error when libbase is built for APEX.",
      "parentUuid": "4e5dfa59_074e3ed7",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 68
      },
      "revId": "a850ebd89b103f1aee947f4925e3ecb5eff3801f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b92879c4_4f3b9c18",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2020-08-12T21:22:54Z",
      "side": 1,
      "message": "I\u0027m pretty sure if you do this part of the incremental change *last* it will be a lot easier.\n\n1. Get clang to understand the difference between sdk_version and min_sdk_version (this could also be 3, but it\u0027s going to take the most idle time)\n2. Fix `__INTRODUCED_IN` to use `__attribute__((availability))`\n3. Remove guards\n4. Fix soong to pass both sdk_version and min_sdk_version to clang\n\nNone of those steps will require a complicated topic as long as they\u0027re done in order, right?",
      "parentUuid": "5db41fef_010eab77",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 68
      },
      "revId": "a850ebd89b103f1aee947f4925e3ecb5eff3801f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8059eaf2_f11749cf",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2020-08-13T05:46:57Z",
      "side": 1,
      "message": "I forgot to respond here.\n\nItem #1 and #4 need more discussion. As I replied in the other comment, I don\u0027t understand why we have to teach compiler sdk_version AND min_sdk_version. I thought we just need to give min_sdk_version.\n\nDoing item #2 up front is fine to me. I just wanted to emphasize that it will be no op until we emit \"-Wunguarded-availability\". Uploaded ag/12354822\n\nItem #3 IMO will take most of the time, because we are not sure which guards are still essential and which can be dropped in favor of the availability attribute.\n\nAlso, we need to manually add __builtin_available call wherever it is required. This will also take some time. I already had to do this in my local WIP impl.\n\nFinally, we have to modify the build system to inject __isOSVersionAtLeast which is behind the __buildin_available macro.",
      "parentUuid": "b92879c4_4f3b9c18",
      "range": {
        "startLine": 11,
        "startChar": 0,
        "endLine": 11,
        "endChar": 68
      },
      "revId": "a850ebd89b103f1aee947f4925e3ecb5eff3801f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a385e9e_e4b3db41",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2020-08-10T12:35:32Z",
      "side": 1,
      "message": "To the reviewers: this isn\u0027t ready for review yet. ",
      "revId": "a850ebd89b103f1aee947f4925e3ecb5eff3801f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12557e62_65ed18b5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2020-08-10T16:13:13Z",
      "side": 1,
      "message": "Sounds good to me if __INTRODUCED_IN can handle this.",
      "revId": "a850ebd89b103f1aee947f4925e3ecb5eff3801f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}