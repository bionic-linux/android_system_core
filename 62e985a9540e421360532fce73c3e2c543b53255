{
  "comments": [
    {
      "key": {
        "uuid": "2f0f2ff3_95483c8f",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 432,
      "author": {
        "id": 1013030
      },
      "writtenOn": "2018-09-07T13:50:43Z",
      "side": 1,
      "message": "I really don\u0027t like this, and in fact it\u0027s another reason to have a tiny libbinder in init. But for now, to unblock APEX module authors, I think this is the best we can do.",
      "range": {
        "startLine": 430,
        "startChar": 0,
        "endLine": 432,
        "endChar": 6
      },
      "revId": "62e985a9540e421360532fce73c3e2c543b53255",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "baf4d5ae_9b98d2c9",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 432,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-09-08T01:27:54Z",
      "side": 1,
      "message": "I recommend creating these files (with better names):\n\nuse_binder.h\nuse_binder.cpp\nuse_binder_recovery.cpp\n\nThen both of these files implement the same header, and the build options are restricted to the build file. The current type of solution, I feel, will have a growth problem.",
      "parentUuid": "2f0f2ff3_95483c8f",
      "range": {
        "startLine": 430,
        "startChar": 0,
        "endLine": 432,
        "endChar": 6
      },
      "revId": "62e985a9540e421360532fce73c3e2c543b53255",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3b73a171_1fbc67d3",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 432,
      "author": {
        "id": 1013030
      },
      "writtenOn": "2018-09-10T09:03:53Z",
      "side": 1,
      "message": "Yeah totally agree, I think we want to create such an abstraction for apex as well - and perhaps initially we can hide all of the binder use in the apex abstraction as well.\n\nFor now it just wanted this to get some soak; as more code gets added, we\u0027ll find a way to limit the number of #ifdef as much as we can.",
      "parentUuid": "baf4d5ae_9b98d2c9",
      "range": {
        "startLine": 430,
        "startChar": 0,
        "endLine": 432,
        "endChar": 6
      },
      "revId": "62e985a9540e421360532fce73c3e2c543b53255",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}