{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "5e8c9ca6_01bf4341",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-09-23T19:22:36Z",
      "side": 1,
      "message": "I\u0027m not sure how to best test this. If you know of a good point in the kernel to inject a UNIT ATTENTION or even better, a reliable way to cause a legitimate one, I\u0027d appreciate it.",
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4ebcea04_4ed16e2f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2021-09-24T18:26:39Z",
      "side": 1,
      "message": "Please use the sense data from the SG_IO ioctl response. Submitting a REQUEST SENSE command separately is not necessary.",
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "eb5dbacd_ebaa2a4b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-09-27T23:45:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4ebcea04_4ed16e2f",
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dbdd2464_09dcd3f3",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 233,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2021-09-24T18:39:10Z",
      "side": 1,
      "message": "What is the meaning of these status codes? Please document the meaning of these status codes.",
      "range": {
        "startLine": 228,
        "startChar": 0,
        "endLine": 233,
        "endChar": 2
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8f62d486_a49721b4",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 233,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-09-24T23:48:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "dbdd2464_09dcd3f3",
      "range": {
        "startLine": 228,
        "startChar": 0,
        "endLine": 233,
        "endChar": 2
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2c8f77d_9824f08c",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 293,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2021-09-24T18:39:10Z",
      "side": 1,
      "message": "Logging the ASC and ASCQ codes is not sufficient. The action taken by the caller must depend on the ASC and ASCQ codes reported by the UFS device. A list of ASC/ASCQ codes is available at https://www.t10.org/lists/asc-num.htm.",
      "range": {
        "startLine": 290,
        "startChar": 0,
        "endLine": 293,
        "endChar": 43
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec71359a_f4cdb195",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 293,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-09-24T23:48:12Z",
      "side": 1,
      "message": "I\u0027m not sure which ASC codes are relevant here, should we be retrying only on a subset of UA codes?",
      "parentUuid": "a2c8f77d_9824f08c",
      "range": {
        "startLine": 290,
        "startChar": 0,
        "endLine": 293,
        "endChar": 43
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd5b3878_d847738a",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 293,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2021-09-27T16:26:47Z",
      "side": 1,
      "message": "How about treating ASC \u003d\u003d 0x2a / ASCQ \u003d\u003d 0 as \"power on\"?\n\nThis is what I found in the JEDEC standard: \"UNIT ATTENTION â€“ Indicates that the unit has been reset or unexpectedly powered-on or that removable media has changed.\"\n\nI think we should continue treating \"medium changed\" as an error.",
      "parentUuid": "ec71359a_f4cdb195",
      "range": {
        "startLine": 290,
        "startChar": 0,
        "endLine": 293,
        "endChar": 43
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e0fe83d5_c4103980",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 293,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-09-27T23:45:20Z",
      "side": 1,
      "message": "The generic kernel SCSI handling seems to treat any UNIT ATTENTION in a non-removable device as worth retrying: https://elixir.bootlin.com/linux/latest/source/drivers/scsi/scsi_lib.c#L676\n\nI\u0027m a little hesitant to hard code ASCs to expect and retry here considering that we don\u0027t actually have a complete list. Is there any harm in retrying for any UA here? If the UA is persistent we should exceed our retry count and fail, and if it\u0027s transient, do we really care what it is?",
      "parentUuid": "dd5b3878_d847738a",
      "range": {
        "startLine": 290,
        "startChar": 0,
        "endLine": 293,
        "endChar": 43
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "29dee470_0d488789",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 293,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2021-09-28T17:24:48Z",
      "side": 1,
      "message": "The above link points at scsi_io_completion_action(). That function is not called from the regular completion path but only if a command completed partially (this does not happen with UFS devices as far as I know). The regular completion path is as follows:\n* The UFS driver calls scmd-\u003escsi_done(scmd).\n* The above results in calling scsi_mq_done().\n* scsi_mq_done() invokes blk_mq_complete_request().\n* blk_complete_request() calls rq-\u003eq-\u003emq_ops-\u003ecomplete(rq). For SCSI that involves calling scsi_complete().\n* scsi_complete() calls scsi_decide_disposition(). Depending on the value returned by that function, scsi_finish_command(), scsi_queue_insert() or scsi_eh_scmd_add() is called.\n* If the command should be completed, scsi_finish_command() calls drv-\u003edone(cmd) and scsi_io_completion().\n* scsi_io_completion() checks the SCSI result code. If it is not zero, scsi_io_completion_nz_result() is called.\n* scsi_end_request() is called.\n\nscsi_decide_disposition() calls scsi_check_sense() to decide how to proceed. As one can see in scsi_check_sense() some but not all unit attention conditions are retried.\n\nI prefer to retry only for certain unit attention conditions since I think that we should not retry commands if an unexpected unit attention code is received, e.g. because of cosmic radiation.\n\nAdditionally, retrying if the device reports e.g. \"INVALID FIELD IN CDB\" seems weird to me.",
      "parentUuid": "e0fe83d5_c4103980",
      "range": {
        "startLine": 290,
        "startChar": 0,
        "endLine": 293,
        "endChar": 43
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "09c66e88_75a879b2",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 293,
      "author": {
        "id": 1176763
      },
      "writtenOn": "2021-09-28T18:23:33Z",
      "side": 1,
      "message": "I got this once.\n09-28 11:06:13.966   451   451 D storageproxyd: UNIT ATTENTION with sense data: key\u003d6, asc\u003d0, ascq\u003d0",
      "parentUuid": "29dee470_0d488789",
      "range": {
        "startLine": 290,
        "startChar": 0,
        "endLine": 293,
        "endChar": 43
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5b0b11d3_3d4c8b31",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 293,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-09-29T00:04:27Z",
      "side": 1,
      "message": "I\u0027ve added an allowed list of conditions based on the kernel code with the addition of 0x29 and 0x2f, which it seems the kernel expects users to handle in passthrough operations.\n\nGetting off-topic a bit, won\u0027t scsi_io_completion_action() be called for the CHECK CONDITION status if the operation is not passthrough? scsi_decide_dispotion() may return SUCCESS instead of NEEDS_RETRY for a UA. In this case scsi_io_completion() will execute. blk_stat will be non-zero, so scsi_end_request() will not be called. If scsi_noretry_cmd() returns 0 (not the case for SG_IO as I understand), we\u0027ll get to the end of scsi_io_completion() with a non-zero result and scsi_io_completion_action() will be called, queuing a retry for most UA statuses.",
      "parentUuid": "09c66e88_75a879b2",
      "range": {
        "startLine": 290,
        "startChar": 0,
        "endLine": 293,
        "endChar": 43
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4d6c6bc5_d091bf6c",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 293,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2021-09-29T17:18:02Z",
      "side": 1,
      "message": "In scsi_io_completion() blk_stat is set by scsi_result_to_blk_status(). The latter function translates SAM_STAT_CHECK_CONDITION into BLK_STS_IOERR. I think the following code from scsi_io_completion() prevents the call to \nscsi_io_completion_action():\n\n\tif (unlikely(blk_stat \u0026\u0026 scsi_noretry_cmd(cmd))) {\n\t\tif (scsi_end_request(req, blk_stat, blk_rq_bytes(req)))\n\t\t\tWARN_ONCE(true,\n\t\t\t    \"Bytes remaining after failed, no-retry command\");\n\t\treturn;\n\t}\n\n\nscsi_noretry_cmd() returns 1 for pass-through commands if the host byte of the SCSI result is DID_OK and the SCSI status is SAM_STAT_CHECK_CONDITION.",
      "parentUuid": "5b0b11d3_3d4c8b31",
      "range": {
        "startLine": 290,
        "startChar": 0,
        "endLine": 293,
        "endChar": 43
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8161b146_a58324f9",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 314,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2021-09-24T18:39:10Z",
      "side": 1,
      "message": "Please remove this function. With modern SCSI devices like UFS devices it is not necessary to submit a REQUEST SENSE command explicitly. Sense data is returned in the SG_IO ioctl reply.",
      "range": {
        "startLine": 304,
        "startChar": 0,
        "endLine": 314,
        "endChar": 1
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "acea7eed_7e0992c4",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 314,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-09-24T19:20:21Z",
      "side": 1,
      "message": "I was under the impression that we needed to basically move https://android-review.googlesource.com/c/kernel/common/+/1835335 out into userspace to clear the unit attention condition, is that not the case?",
      "parentUuid": "8161b146_a58324f9",
      "range": {
        "startLine": 304,
        "startChar": 0,
        "endLine": 314,
        "endChar": 1
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0867130f_59c8bc6f",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 314,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2021-09-24T19:47:02Z",
      "side": 1,
      "message": "Submitting a REQUEST SENSE to clear a unit attention makes the code slower than necessary because an additional command is submitted.\n\nA quote from the SCSI Architecture Model (SAM) document: \"The device server shall maintain a queue of unit attention conditions of undefined order for each I_T nexus. The queue should be large enough to hold every unit attention condition that the device server is capable of reporting. [ ... ] A unit attention condition shall persist until the device server clears the unit attention condition. conditions are affected by the processing of commands as follows: [ ... ] c) if a REQUEST SENSE command enters the enabled command state while a unit attention condition exists for the SCSI initiator port associated with the I_T nexus on which the REQUEST SENSE command was received, then the device server shall process the command [ ... ] e) if a command other than INQUIRY, REPORT LUNS, REQUEST SENSE, or NOTIFY DATA TRANSFER DEVICE enters the enabled command state while a unit attention condition exists for the SCSI initiator port associated with the I_T nexus on which the command was received, then the device server shall terminate the command with a CHECK CONDITION status. The device server shall provide sense data that reports a unit attention condition for the SCSI initiator port that sent the command on the I_T nexus. If a device server reports a unit attention condition with a CHECK CONDITION status and the UA_INTLCK_CTRL field in the Control mode page contains 00b (see SPC-5), then the device server shall clear the reported unit attention condition for the SCSI initiator port associated with that I_T nexus on the logical unit. [ ... ]\"\n\nIn other words, whether a REQUEST SENSE or SECURITY PROTOCOL OUT or IN command is submitted, the effect is the same: the unit attention condition is dequeued and is reported to the initiator.",
      "parentUuid": "acea7eed_7e0992c4",
      "range": {
        "startLine": 304,
        "startChar": 0,
        "endLine": 314,
        "endChar": 1
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "55b7f735_7d19addb",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 314,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-09-24T23:48:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0867130f_59c8bc6f",
      "range": {
        "startLine": 304,
        "startChar": 0,
        "endLine": 314,
        "endChar": 1
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d407ef1f_6c5bd6a8",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2021-09-24T18:39:10Z",
      "side": 1,
      "message": "What does this return value mean?",
      "range": {
        "startLine": 331,
        "startChar": 12,
        "endLine": 331,
        "endChar": 34
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7ee2ae08_63cace31",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-09-24T23:48:12Z",
      "side": 1,
      "message": "Removed, was intended to mean that we successfully reset the UA.",
      "parentUuid": "d407ef1f_6c5bd6a8",
      "range": {
        "startLine": 331,
        "startChar": 12,
        "endLine": 331,
        "endChar": 34
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "af26f34f_51cc3f6e",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 331,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-09-24T23:48:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d407ef1f_6c5bd6a8",
      "range": {
        "startLine": 331,
        "startChar": 12,
        "endLine": 331,
        "endChar": 34
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1428975c_f04a69c2",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 454,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2021-09-24T18:39:10Z",
      "side": 1,
      "message": "Do all negative SG_IO ioctl return values indicate a non-retryable error?",
      "range": {
        "startLine": 450,
        "startChar": 0,
        "endLine": 454,
        "endChar": 13
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "84d4123f_089a3046",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 454,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-09-24T19:29:35Z",
      "side": 1,
      "message": "I have another change to retry on some ioctl errors (https://android-review.googlesource.com/c/platform/system/core/+/1801250/), but I don\u0027t think we\u0027ve ever actually seen that happen, so it\u0027s been lower priority.",
      "parentUuid": "1428975c_f04a69c2",
      "range": {
        "startLine": 450,
        "startChar": 0,
        "endLine": 454,
        "endChar": 13
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f7db169c_7a2ff1bd",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 454,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2021-09-29T17:18:02Z",
      "side": 1,
      "message": "Agreed that this is lower priority.",
      "parentUuid": "84d4123f_089a3046",
      "range": {
        "startLine": 450,
        "startChar": 0,
        "endLine": 454,
        "endChar": 13
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7276bc79_15e6f624",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 493,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2021-09-24T18:39:10Z",
      "side": 1,
      "message": "Retrying a SECURITY PROTOCOL OUT command until it succeeds is fine but retrying a SECURITY PROTOCOL IN command after a UFS device has been reset is not. What I think needs to happen if a POWER ON, RESET, OR BUS DEVICE RESET OCCURRED unit attention is reported is that the write counter is queried from the UFS device, that any other write counter values than (current write counter) and (current write counter) - 1 are rejected and that the entire transaction is restarted with the proper write counter.",
      "range": {
        "startLine": 482,
        "startChar": 0,
        "endLine": 493,
        "endChar": 36
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48c12bb9_e2c19b2f",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 493,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2021-09-24T18:39:10Z",
      "side": 1,
      "message": "Retrying a SECURITY PROTOCOL OUT command until it succeeds is fine but retrying a SECURITY PROTOCOL IN command after a UFS device has been reset is not. What I think needs to happen if",
      "range": {
        "startLine": 482,
        "startChar": 0,
        "endLine": 493,
        "endChar": 36
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "49148ec9_b670d55f",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 493,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-09-24T19:20:21Z",
      "side": 1,
      "message": "That makes sense. I think we need to fail the entire transaction then from the Trusty side, because we don\u0027t know at that point whether the block was correctly written before the reset. If so, this means that this patch is basically not required if we a) don\u0027t have to submit a REQUEST SENSE command, and b) need to fail the transaction anyway.",
      "parentUuid": "7276bc79_15e6f624",
      "range": {
        "startLine": 482,
        "startChar": 0,
        "endLine": 493,
        "endChar": 36
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef3057c5_80823b0d",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 493,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2021-09-24T19:47:02Z",
      "side": 1,
      "message": "I don\u0027t have a strong opinion about this but it may be a good idea to keep the retry loop in this code around the SECURITY PROTOCOL OUT command.",
      "parentUuid": "49148ec9_b670d55f",
      "range": {
        "startLine": 482,
        "startChar": 0,
        "endLine": 493,
        "endChar": 36
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "02a4550c_4f6707e9",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 493,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-09-24T23:48:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48c12bb9_e2c19b2f",
      "range": {
        "startLine": 482,
        "startChar": 0,
        "endLine": 493,
        "endChar": 36
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c71193b7_4eb52c79",
        "filename": "trusty/storage/proxy/rpmb.c",
        "patchSetId": 1
      },
      "lineNbr": 493,
      "author": {
        "id": 1809421
      },
      "writtenOn": "2021-09-24T23:48:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ef3057c5_80823b0d",
      "range": {
        "startLine": 482,
        "startChar": 0,
        "endLine": 493,
        "endChar": 36
      },
      "revId": "52b735093f845d7deeec02b64727fa1ccb410ade",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}