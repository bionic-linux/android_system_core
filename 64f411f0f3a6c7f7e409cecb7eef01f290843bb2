{
  "comments": [
    {
      "key": {
        "uuid": "99349308_4ab70704",
        "filename": "libbacktrace/GetPss.cpp",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-04-01T22:47:51Z",
      "side": 1,
      "message": "do you need that cast?",
      "revId": "64f411f0f3a6c7f7e409cecb7eef01f290843bb2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "995d7362_7c0575de",
        "filename": "libbacktrace/GetPss.cpp",
        "patchSetId": 4
      },
      "lineNbr": 36,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-04-03T02:11:32Z",
      "side": 1,
      "message": "Nope doesn\u0027t seem to be necessary. As far as I can tell off_t is signed, so I\u0027m changing the code slightly. If this off_t ever becomes unsigned, then this should result in a warning and this should fail to compile.",
      "parentUuid": "99349308_4ab70704",
      "revId": "64f411f0f3a6c7f7e409cecb7eef01f290843bb2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99349308_aabe93df",
        "filename": "libbacktrace/GetPss.cpp",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-04-01T22:47:51Z",
      "side": 1,
      "message": "don\u0027t care about leaking the FILE* and other fd? maybe just abort in these cases instead?",
      "revId": "64f411f0f3a6c7f7e409cecb7eef01f290843bb2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "79527f52_fb106bda",
        "filename": "libbacktrace/GetPss.cpp",
        "patchSetId": 4
      },
      "lineNbr": 58,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-04-03T02:11:32Z",
      "side": 1,
      "message": "Yikes, I didn\u0027t realize I was leaking all of these descriptors.\n\nI changed these to asserts since this is test code.",
      "parentUuid": "99349308_aabe93df",
      "revId": "64f411f0f3a6c7f7e409cecb7eef01f290843bb2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9a74f88_de32051f",
        "filename": "libbacktrace/GetPss.cpp",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-04-01T22:47:51Z",
      "side": 1,
      "message": "uintptr_t and SCNxPTR?",
      "revId": "64f411f0f3a6c7f7e409cecb7eef01f290843bb2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9587770_fd74e312",
        "filename": "libbacktrace/GetPss.cpp",
        "patchSetId": 4
      },
      "lineNbr": 66,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-04-03T02:11:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f9a74f88_de32051f",
      "revId": "64f411f0f3a6c7f7e409cecb7eef01f290843bb2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b92f97b4_8bcbd539",
        "filename": "libbacktrace/UnwindMap.cpp",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-04-01T22:47:51Z",
      "side": 1,
      "message": "or have GenerateMap always return true and then \"return unw_map_... \u003d\u003d 0 \u0026\u0026 GenerateMap();\"?",
      "revId": "64f411f0f3a6c7f7e409cecb7eef01f290843bb2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9ce6f4a_1b8187a2",
        "filename": "libbacktrace/UnwindMap.cpp",
        "patchSetId": 4
      },
      "lineNbr": 70,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-04-03T02:11:32Z",
      "side": 1,
      "message": "That makes the code a bit easier on the eyes, done.",
      "parentUuid": "b92f97b4_8bcbd539",
      "revId": "64f411f0f3a6c7f7e409cecb7eef01f290843bb2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99349308_ca23178c",
        "filename": "libbacktrace/UnwindMap.cpp",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-04-01T22:47:51Z",
      "side": 1,
      "message": "why do we do this three times?",
      "revId": "64f411f0f3a6c7f7e409cecb7eef01f290843bb2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9587770_3de01b7c",
        "filename": "libbacktrace/UnwindMap.cpp",
        "patchSetId": 4
      },
      "lineNbr": 84,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-04-03T02:11:32Z",
      "side": 1,
      "message": "I\u0027ll add a comment to describe this.",
      "parentUuid": "99349308_ca23178c",
      "revId": "64f411f0f3a6c7f7e409cecb7eef01f290843bb2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9a74f88_99f587f7",
        "filename": "libbacktrace/backtrace_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 698,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-04-01T22:47:51Z",
      "side": 1,
      "message": "uintptr_t?",
      "revId": "64f411f0f3a6c7f7e409cecb7eef01f290843bb2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9cb6b3b_7fa2f795",
        "filename": "libbacktrace/backtrace_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 698,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-04-03T02:11:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f9a74f88_99f587f7",
      "revId": "64f411f0f3a6c7f7e409cecb7eef01f290843bb2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9a74f88_59014f23",
        "filename": "libbacktrace/backtrace_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 715,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-04-01T22:47:51Z",
      "side": 1,
      "message": "SCNxPTR?",
      "revId": "64f411f0f3a6c7f7e409cecb7eef01f290843bb2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9cb6b3b_1f973337",
        "filename": "libbacktrace/backtrace_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 715,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-04-03T02:11:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f9a74f88_59014f23",
      "revId": "64f411f0f3a6c7f7e409cecb7eef01f290843bb2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99349308_6a380baf",
        "filename": "libbacktrace/backtrace_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 740,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-04-01T22:47:51Z",
      "side": 1,
      "message": "_exit?",
      "revId": "64f411f0f3a6c7f7e409cecb7eef01f290843bb2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f9ce6f4a_3b080384",
        "filename": "libbacktrace/backtrace_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 740,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-04-03T02:11:32Z",
      "side": 1,
      "message": "Good point, I changed all of my exits. Non of them should theoretically be reachable though.",
      "parentUuid": "99349308_6a380baf",
      "revId": "64f411f0f3a6c7f7e409cecb7eef01f290843bb2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b92f97b4_6b0931c0",
        "filename": "libbacktrace/backtrace_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 744,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-04-01T22:47:51Z",
      "side": 1,
      "message": "how has it been paused? do you mean \"because the child isn\u0027t doing anything interesting\"?",
      "revId": "64f411f0f3a6c7f7e409cecb7eef01f290843bb2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d9cb6b3b_3f9c6f56",
        "filename": "libbacktrace/backtrace_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 744,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-04-03T02:11:32Z",
      "side": 1,
      "message": "Oops, there should have been code that paused the fork\u0027d process. It\u0027s there now.",
      "parentUuid": "b92f97b4_6b0931c0",
      "revId": "64f411f0f3a6c7f7e409cecb7eef01f290843bb2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99349308_4ae267f6",
        "filename": "libbacktrace/backtrace_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 775,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-04-01T22:47:51Z",
      "side": 1,
      "message": "interesting. i wonder if we should have this available somewhere? in bionic i\u0027ve used mallinfo(3) for leak testing.",
      "revId": "64f411f0f3a6c7f7e409cecb7eef01f290843bb2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b9ba379a_190517df",
        "filename": "libbacktrace/backtrace_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 775,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2014-04-03T02:11:32Z",
      "side": 1,
      "message": "I used this because it catches the mmap leaks that I found in libunwind.",
      "parentUuid": "99349308_4ae267f6",
      "revId": "64f411f0f3a6c7f7e409cecb7eef01f290843bb2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}