{
  "comments": [
    {
      "key": {
        "uuid": "6002debe_c693fce9",
        "filename": "libmeminfo/include/meminfo/procmeminfo.h",
        "patchSetId": 1
      },
      "lineNbr": 43,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-01-22T17:59:05Z",
      "side": 1,
      "message": "e",
      "range": {
        "startLine": 43,
        "startChar": 22,
        "endLine": 43,
        "endChar": 23
      },
      "revId": "40f05019ac51e46233ba749749ed8be9a4482cc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a48bdf8a_ff677627",
        "filename": "libmeminfo/include/meminfo/procmeminfo.h",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-01-22T17:59:05Z",
      "side": 1,
      "message": ", t",
      "range": {
        "startLine": 44,
        "startChar": 61,
        "endLine": 44,
        "endChar": 64
      },
      "revId": "40f05019ac51e46233ba749749ed8be9a4482cc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94580bc1_820451b0",
        "filename": "libmeminfo/include/meminfo/procmeminfo.h",
        "patchSetId": 1
      },
      "lineNbr": 44,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-01-22T17:59:05Z",
      "side": 1,
      "message": "y",
      "range": {
        "startLine": 44,
        "startChar": 95,
        "endLine": 44,
        "endChar": 96
      },
      "revId": "40f05019ac51e46233ba749749ed8be9a4482cc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cdf760fa_57877ee9",
        "filename": "libmeminfo/procmeminfo.cpp",
        "patchSetId": 1
      },
      "lineNbr": 125,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-01-22T17:59:05Z",
      "side": 1,
      "message": "can ReadMaps leave maps_ in a bad state on failure? (i.e. do you want an empty vector on failure, or \"here\u0027s what we _did_ get\"?)",
      "range": {
        "startLine": 125,
        "startChar": 26,
        "endLine": 125,
        "endChar": 34
      },
      "revId": "40f05019ac51e46233ba749749ed8be9a4482cc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73fe0aa8_97a5132f",
        "filename": "libmeminfo/tools/wsstop.cpp",
        "patchSetId": 1
      },
      "lineNbr": 45,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-01-22T17:59:05Z",
      "side": 1,
      "message": "synopsis doesn\u0027t match the detail?",
      "range": {
        "startLine": 42,
        "startChar": 12,
        "endLine": 45,
        "endChar": 12
      },
      "revId": "40f05019ac51e46233ba749749ed8be9a4482cc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}