{
  "comments": [
    {
      "key": {
        "uuid": "44043071_4aeca42d",
        "filename": "libunwindstack/Symbols.cpp",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2020-04-09T09:28:04Z",
      "side": 1,
      "message": "Is it convention in libunwindstack to re-#include what was already included in the header?",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 17
      },
      "revId": "d060df40cf969be6066a7671e52324f195c46e34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ad92becf_985b6bfd",
        "filename": "libunwindstack/Symbols.cpp",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2020-04-09T17:39:40Z",
      "side": 1,
      "message": "The philosophy is to always include what you are using in the file. This way if the header changes, you don\u0027t have to change any implementation files. It\u0027s what we do in bionic.",
      "parentUuid": "44043071_4aeca42d",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 17
      },
      "revId": "d060df40cf969be6066a7671e52324f195c46e34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "49dbec9a_916b5179",
        "filename": "libunwindstack/Symbols.cpp",
        "patchSetId": 2
      },
      "lineNbr": 23,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-04-10T20:32:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ad92becf_985b6bfd",
      "range": {
        "startLine": 21,
        "startChar": 0,
        "endLine": 23,
        "endChar": 17
      },
      "revId": "d060df40cf969be6066a7671e52324f195c46e34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba97381c_775a1564",
        "filename": "libunwindstack/Symbols.cpp",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2020-04-09T17:39:40Z",
      "side": 1,
      "message": "did you mean might instead of mind?",
      "range": {
        "startLine": 47,
        "startChar": 49,
        "endLine": 47,
        "endChar": 53
      },
      "revId": "d060df40cf969be6066a7671e52324f195c46e34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "81b3a94a_29813ca9",
        "filename": "libunwindstack/Symbols.cpp",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-04-10T20:32:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba97381c_775a1564",
      "range": {
        "startLine": 47,
        "startChar": 49,
        "endLine": 47,
        "endChar": 53
      },
      "revId": "d060df40cf969be6066a7671e52324f195c46e34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e9f1fd8c_1eb942b7",
        "filename": "libunwindstack/Symbols.cpp",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2020-04-09T09:28:04Z",
      "side": 1,
      "message": "Log error if something looks corrupted.",
      "range": {
        "startLine": 83,
        "startChar": 16,
        "endLine": 83,
        "endChar": 72
      },
      "revId": "d060df40cf969be6066a7671e52324f195c46e34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e90084a6_4958359c",
        "filename": "libunwindstack/Symbols.cpp",
        "patchSetId": 2
      },
      "lineNbr": 83,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-04-10T20:32:28Z",
      "side": 1,
      "message": "I don\u0027t think that libunwind generally logs error.",
      "parentUuid": "e9f1fd8c_1eb942b7",
      "range": {
        "startLine": 83,
        "startChar": 16,
        "endLine": 83,
        "endChar": 72
      },
      "revId": "d060df40cf969be6066a7671e52324f195c46e34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e0d9c35_5dd7d113",
        "filename": "libunwindstack/Symbols.cpp",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2020-04-09T09:28:04Z",
      "side": 1,
      "message": "I do not understand this. AFAICT we use addr[i] to get the address for remap[i], correct? How come we only sometimes insert into remap_ then? Not saying this is incorrect, but if it\u0027s correct I think this is subtle enough to warrant a comment.",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 88,
        "endChar": 7
      },
      "revId": "d060df40cf969be6066a7671e52324f195c46e34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb02c56b_2d6063aa",
        "filename": "libunwindstack/Symbols.cpp",
        "patchSetId": 2
      },
      "lineNbr": 88,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-04-10T20:32:28Z",
      "side": 1,
      "message": "Done\n\nWe use addr[remap[i]] to get the address.",
      "parentUuid": "2e0d9c35_5dd7d113",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 88,
        "endChar": 7
      },
      "revId": "d060df40cf969be6066a7671e52324f195c46e34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd1590ed_c88ff235",
        "filename": "libunwindstack/Symbols.cpp",
        "patchSetId": 2
      },
      "lineNbr": 123,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2020-04-09T09:28:04Z",
      "side": 1,
      "message": "give it-\u003efirst and it-\u003esecond names",
      "range": {
        "startLine": 123,
        "startChar": 25,
        "endLine": 123,
        "endChar": 47
      },
      "revId": "d060df40cf969be6066a7671e52324f195c46e34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d2538441_5546d8f1",
        "filename": "libunwindstack/Symbols.h",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2020-04-09T09:28:04Z",
      "side": 1,
      "message": "Comment on what this indexes into?",
      "range": {
        "startLine": 34,
        "startChar": 4,
        "endLine": 34,
        "endChar": 18
      },
      "revId": "d060df40cf969be6066a7671e52324f195c46e34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b6c83dfd_bcb69fbf",
        "filename": "libunwindstack/Symbols.h",
        "patchSetId": 2
      },
      "lineNbr": 34,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-04-10T20:32:28Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d2538441_5546d8f1",
      "range": {
        "startLine": 34,
        "startChar": 4,
        "endLine": 34,
        "endChar": 18
      },
      "revId": "d060df40cf969be6066a7671e52324f195c46e34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1646f180_1b97acf1",
        "filename": "libunwindstack/Symbols.h",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2020-04-09T09:28:04Z",
      "side": 1,
      "message": "Just confirming that Symbols isn\u0027t instantiated often. \n\n  On the other hand, deques typically have large minimal memory cost; a deque holding\n  just one element has to allocate its full internal array (e.g. 8 times the object\n  size on 64-bit libstdc++; 16 times the object size or 4096 bytes, whichever is\n  larger, on 64-bit libc++).\n  https://en.cppreference.com/w/cpp/container/deque",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 66,
        "endChar": 87
      },
      "revId": "d060df40cf969be6066a7671e52324f195c46e34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "458d02fb_c15020ed",
        "filename": "libunwindstack/Symbols.h",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2020-04-09T09:37:04Z",
      "side": 1,
      "message": "More generally: why is this a deque? We only append to the end",
      "parentUuid": "1646f180_1b97acf1",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 66,
        "endChar": 87
      },
      "revId": "d060df40cf969be6066a7671e52324f195c46e34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7caeb2e_8e975897",
        "filename": "libunwindstack/Symbols.h",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-04-10T20:32:28Z",
      "side": 1,
      "message": "Done (use vector).",
      "parentUuid": "458d02fb_c15020ed",
      "range": {
        "startLine": 66,
        "startChar": 0,
        "endLine": 66,
        "endChar": 87
      },
      "revId": "d060df40cf969be6066a7671e52324f195c46e34",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}