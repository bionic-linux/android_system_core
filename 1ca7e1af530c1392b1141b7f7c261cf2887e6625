{
  "comments": [
    {
      "key": {
        "uuid": "24c9459e_aa32ce72",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-06-17T22:10:27Z",
      "side": 1,
      "message": "required",
      "range": {
        "startLine": 7,
        "startChar": 35,
        "endLine": 7,
        "endChar": 43
      },
      "revId": "1ca7e1af530c1392b1141b7f7c261cf2887e6625",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fcc44a36_c23b9993",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2017-06-19T16:47:33Z",
      "side": 1,
      "message": "yes, this addresses my comments in the bug. thanks.",
      "range": {
        "startLine": 19,
        "startChar": 1,
        "endLine": 22,
        "endChar": 29
      },
      "revId": "1ca7e1af530c1392b1141b7f7c261cf2887e6625",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7b97a3b_4b6bf862",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 149,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-06-17T22:10:27Z",
      "side": 1,
      "message": "or just\n\n  return GetRequiredDevices() \u0026\u0026 InitRequiredDevices();\n\n?\n\n(or is this function likely to grow again?)",
      "range": {
        "startLine": 145,
        "startChar": 0,
        "endLine": 149,
        "endChar": 16
      },
      "revId": "1ca7e1af530c1392b1141b7f7c261cf2887e6625",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a87ee09_d43c10fd",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 149,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2017-06-18T17:39:38Z",
      "side": 1,
      "message": "Unlikely to grow again to me.\n\nIf if it does, I\u0027m guessing the grow can be in either GetRequiredDevices() or InitRequiredDevices().",
      "parentUuid": "b7b97a3b_4b6bf862",
      "range": {
        "startLine": 145,
        "startChar": 0,
        "endLine": 149,
        "endChar": 16
      },
      "revId": "1ca7e1af530c1392b1141b7f7c261cf2887e6625",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76facaa2_390f0b1d",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-06-17T22:10:27Z",
      "side": 1,
      "message": "you don\u0027t like chrono_literals? being able to write 10s is pretty much my favorite thing about C++14...",
      "range": {
        "startLine": 173,
        "startChar": 58,
        "endLine": 173,
        "endChar": 82
      },
      "revId": "1ca7e1af530c1392b1141b7f7c261cf2887e6625",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "16ee452d_9ac3afd4",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 173,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-06-19T16:54:00Z",
      "side": 1,
      "message": "I keep forgetting if it\u0027s std::chrono::literals or std::chrono_literals or std::literals::chrono_literals or what and secretly dislike including the namespace just for the 2 simple uses that I have here.\n\nI\u0027ll probably add it later though anyway.",
      "parentUuid": "76facaa2_390f0b1d",
      "range": {
        "startLine": 173,
        "startChar": 58,
        "endLine": 173,
        "endChar": 82
      },
      "revId": "1ca7e1af530c1392b1141b7f7c261cf2887e6625",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "767983ee_893390cc",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 191,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-06-17T22:10:27Z",
      "side": 1,
      "message": "__PRETTY_FUNCTION__ will give you the parens (or arguments)",
      "range": {
        "startLine": 191,
        "startChar": 22,
        "endLine": 191,
        "endChar": 34
      },
      "revId": "1ca7e1af530c1392b1141b7f7c261cf2887e6625",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f8825d00_35536be6",
        "filename": "init/uevent_listener.cpp",
        "patchSetId": 3
      },
      "lineNbr": 182,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2017-06-19T15:04:14Z",
      "side": 1,
      "message": "nit: adding a \u0027end_time\u0027 seems more intuitive to me, just FYI.\n\ne.g.,\nusing Ms \u003d std::chrono::milliseconds;     \n\nvoid UeventListener::PollWithTimeout(const ListenerCallback\u0026 callback,\n                                     const Ms relative_timeout) const {  \n\n   ...\n   auto start_time \u003d std::chrono::time_point_cast\u003cMs\u003e(std::chrono::steady_clock::now());\n   auto end_time \u003d start_time + relative_timeout_ms; \n  \n   while (true) {\n        auto now \u003d std::chrono::time_point_cast\u003cMs\u003e(std::chrono::steady_clock::now());\n        if (now \u003e end_time) return;                                             \n                                                                                \n        auto remaining_timeout_ms \u003d (end_time - now).count();   \n   }\n}",
      "range": {
        "startLine": 182,
        "startChar": 9,
        "endLine": 182,
        "endChar": 19
      },
      "revId": "1ca7e1af530c1392b1141b7f7c261cf2887e6625",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d86be5f1_110f8fdc",
        "filename": "init/uevent_listener.cpp",
        "patchSetId": 3
      },
      "lineNbr": 182,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-06-19T16:54:00Z",
      "side": 1,
      "message": "Makse sense, but the \u0027+\u0027 to create end_time can overflow, particularly if we have a really long time out like enh@ suggests below.  See what I did with https://android-review.googlesource.com/#/c/357589/.   I copied this code from there.",
      "parentUuid": "f8825d00_35536be6",
      "range": {
        "startLine": 182,
        "startChar": 9,
        "endLine": 182,
        "endChar": 19
      },
      "revId": "1ca7e1af530c1392b1141b7f7c261cf2887e6625",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7138ca01_a742b34b",
        "filename": "init/uevent_listener.cpp",
        "patchSetId": 3
      },
      "lineNbr": 211,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-06-17T22:10:27Z",
      "side": 1,
      "message": "combine these two cases rather than duplicate? maybe just have this call PollWithTimeout with a 10 year timeout or something (since there\u0027s no convenient way to actually say \"forever\")?",
      "revId": "1ca7e1af530c1392b1141b7f7c261cf2887e6625",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1267a610_c760ed6d",
        "filename": "init/uevent_listener.cpp",
        "patchSetId": 3
      },
      "lineNbr": 211,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-06-19T16:54:00Z",
      "side": 1,
      "message": "Ya, I plan to.  Truthfully, I put the last parts of this change together a bit quickly to make sure those who wanted to test it on the weekend could.  It does pain me to add extra clock stuff in an infinite loop, but oh well.\n\nMaybe std::optional could help here?  If it\u0027s empty, it\u0027s an infinite timeout and we can continue to pass -1 to poll().",
      "parentUuid": "7138ca01_a742b34b",
      "revId": "1ca7e1af530c1392b1141b7f7c261cf2887e6625",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "81e483aa_8e8f2c7e",
        "filename": "init/uevent_listener.cpp",
        "patchSetId": 3
      },
      "lineNbr": 225,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-06-17T22:10:27Z",
      "side": 1,
      "message": "s/there//",
      "range": {
        "startLine": 225,
        "startChar": 87,
        "endLine": 225,
        "endChar": 92
      },
      "revId": "1ca7e1af530c1392b1141b7f7c261cf2887e6625",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}