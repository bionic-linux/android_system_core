{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7c0582b3_2352be9a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1339259
      },
      "writtenOn": "2020-10-28T20:19:54Z",
      "side": 1,
      "message": "Verified on my local device.",
      "revId": "3a4275388f7fc59be0dd6347b9a4f780b0c9b108",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "6c5719ed_272ef624",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2020-10-28T20:38:50Z",
      "side": 1,
      "message": "feel free to leave as is though",
      "revId": "3a4275388f7fc59be0dd6347b9a4f780b0c9b108",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "46137988_5a88755d",
        "filename": "init/security.cpp",
        "patchSetId": 2
      },
      "lineNbr": 232,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2020-10-28T20:38:50Z",
      "side": 1,
      "message": "this could be a single if\n\nalso an argument could be made for taking the same exit out of this function as the normal code path.\n\nso something like:\n\nf() {\n  if (ALLOW_PERMISSIVE_SELINUX \u0026\u0026 !security_getenforce()) {\n    LOG(INFO) \u003c\u003c \"Permissive...\";\n  } else {\n    existing tests, with various error returns\n  }\n  SetProp(..., \"1\")\n  return {}\n}",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 232,
        "endChar": 37
      },
      "revId": "3a4275388f7fc59be0dd6347b9a4f780b0c9b108",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e2260b6a_2870179c",
        "filename": "init/security.cpp",
        "patchSetId": 2
      },
      "lineNbr": 232,
      "author": {
        "id": 1128769
      },
      "writtenOn": "2020-10-29T17:46:51Z",
      "side": 1,
      "message": "Thanks for the suggestions, I think the complexity here is low enough that any variant works. Reasons I gravitated to the option I\u0027ve posted:\n* keeping the early-exit self-contained (at the cost of code duplication), s.t. it can be easily ignored/forgotten about when reading the rest of the function.\n* highlighting the define in its own if-clause, as I think that\u0027s clearer at a glance (but I would merge the clauses were this codepath to get more complicated).",
      "parentUuid": "46137988_5a88755d",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 232,
        "endChar": 37
      },
      "revId": "3a4275388f7fc59be0dd6347b9a4f780b0c9b108",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d4d5cfff_de76fc88",
        "filename": "init/security.cpp",
        "patchSetId": 2
      },
      "lineNbr": 232,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2020-10-29T17:55:52Z",
      "side": 1,
      "message": "I\u0027m happy with this as is too.  We\u0027ve typically put these compile time flags in their own if statement for clarity.  This could (and perhaps should) be `if constexpr` even, to ensure that the compiler strips it in builds where this flag is not true, in which case we\u0027d certainly need the nested if\u0027s.",
      "parentUuid": "e2260b6a_2870179c",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 232,
        "endChar": 37
      },
      "revId": "3a4275388f7fc59be0dd6347b9a4f780b0c9b108",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "459ca632_03faacc4",
        "filename": "init/security.cpp",
        "patchSetId": 2
      },
      "lineNbr": 232,
      "author": {
        "id": 1040443
      },
      "writtenOn": "2020-10-29T19:19:23Z",
      "side": 1,
      "message": "FWIW clang (and I assume other compilers too) figures out \"if constexpr\" patterns  without nesting ifs even with -O0.. as long as you put the constexpr at the beginning (otherwise the compiler might have to run the other if statements to guarantee side-effects).\n\nhttps://godbolt.org/z/fPK69j\n\nActually you don\u0027t even need constexpr:\nhttps://godbolt.org/z/dqhqbP \n\nCompilers, clever creatures.",
      "parentUuid": "d4d5cfff_de76fc88",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 232,
        "endChar": 37
      },
      "revId": "3a4275388f7fc59be0dd6347b9a4f780b0c9b108",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}