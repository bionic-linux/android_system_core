{
  "comments": [
    {
      "key": {
        "uuid": "12a8718f_52409242",
        "filename": "include/cutils/str.h",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1013887
      },
      "writtenOn": "2013-09-02T20:17:54Z",
      "side": 1,
      "message": "spelling mistake on sting and sring",
      "revId": "b90487ce5fe40db1591c6728751db11ed1e33906",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12a8718f_72459651",
        "filename": "include/cutils/str.h",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1013887
      },
      "writtenOn": "2013-09-02T20:17:54Z",
      "side": 1,
      "message": "spelling mistake with aquired",
      "revId": "b90487ce5fe40db1591c6728751db11ed1e33906",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12a8718f_b24ffe66",
        "filename": "libcutils/str.c",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1013887
      },
      "writtenOn": "2013-09-02T20:17:54Z",
      "side": 1,
      "message": "What should be the expected behavior if I invoke like so:\n\n replace(\"he cried\", \"\", \"she\");\n\nI\u0027m getting \"shehe cried\"",
      "revId": "b90487ce5fe40db1591c6728751db11ed1e33906",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12a8718f_92291a9a",
        "filename": "libcutils/str.c",
        "patchSetId": 2
      },
      "lineNbr": 29,
      "author": {
        "id": 1013887
      },
      "writtenOn": "2013-09-02T20:17:54Z",
      "side": 1,
      "message": "space between if and \u0027(\u0027. Same goes for the rest of the code.",
      "revId": "b90487ce5fe40db1591c6728751db11ed1e33906",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12a8718f_b2261ec7",
        "filename": "libcutils/str.c",
        "patchSetId": 2
      },
      "lineNbr": 37,
      "author": {
        "id": 1013887
      },
      "writtenOn": "2013-09-02T20:17:54Z",
      "side": 1,
      "message": "Should this be strdup(str)?",
      "revId": "b90487ce5fe40db1591c6728751db11ed1e33906",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12a8718f_d233a203",
        "filename": "libcutils/str.c",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1013887
      },
      "writtenOn": "2013-09-02T20:17:54Z",
      "side": 1,
      "message": "Is old not being found in str really an error? Should it maybe just return strdup(str)? If it must stay then I\u0027m not sure that \u0027No such file or directory\u0027 is helpful.",
      "revId": "b90487ce5fe40db1591c6728751db11ed1e33906",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12a8718f_f230a6f9",
        "filename": "libcutils/str.c",
        "patchSetId": 2
      },
      "lineNbr": 47,
      "author": {
        "id": 1013887
      },
      "writtenOn": "2013-09-02T20:17:54Z",
      "side": 1,
      "message": "Isn\u0027t size too big? Shouldn\u0027t it be something like\n\n size +\u003d strlen(str) + 1 - strlen(old)",
      "revId": "b90487ce5fe40db1591c6728751db11ed1e33906",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "12a8718f_9252fa0d",
        "filename": "libcutils/str.c",
        "patchSetId": 2
      },
      "lineNbr": 65,
      "author": {
        "id": 1013887
      },
      "writtenOn": "2013-09-02T20:17:54Z",
      "side": 1,
      "message": "If I invoke this function like so:\n\n  replace_all(\"he cried\", \"he\", \"she\")\n\nI get a infinite loop.",
      "revId": "b90487ce5fe40db1591c6728751db11ed1e33906",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}