{
  "comments": [
    {
      "key": {
        "uuid": "AAAA4n///zI\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 234,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-08-10T21:52:44Z",
      "side": 1,
      "message": "Nit: can you rename \"name\" to \"ifname\"?",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///yQ\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 263,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-08-10T21:52:44Z",
      "side": 1,
      "message": "Instead of saving errno, why not do:\n\n    if (result \u003c 0) {\n        if (errno \u003d\u003d EEXIST) {\n            result \u003d 0;\n        } else {\n            result \u003d -errno;\n        }\n    }\n    ifc_close();\n    return result;\n\nAlso for IPv6 below.",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///yI\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 508,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-08-10T21:52:44Z",
      "side": 1,
      "message": "return -ENXIO;",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///yE\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 528,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-08-10T21:52:44Z",
      "side": 1,
      "message": "return -errno;",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///x8\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 532,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-08-10T21:52:44Z",
      "side": 1,
      "message": "As above:\n\n    if (result \u003c 0) {\n        if (errno \u003d\u003d EEXIST) {\n            result \u003d 0;\n        } else {\n            result \u003d -errno;\n        }\n    }\n    ifc_close6();\n    return result;",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///xk\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 547,
      "author": {
        "id": 1002609
      },
      "writtenOn": "2010-08-10T21:55:13Z",
      "side": 1,
      "message": "ipv4_addr -\u003e ipv4_dest",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///wo\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 547,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-08-10T22:10:42Z",
      "side": 1,
      "message": "dest or dst?",
      "parentUuid": "AAAA4n///xk\u003d",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///v4\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 547,
      "author": {
        "id": 1002609
      },
      "writtenOn": "2010-08-10T22:23:39Z",
      "side": 1,
      "message": "ipv4_dst",
      "parentUuid": "AAAA4n///wo\u003d",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///xg\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 548,
      "author": {
        "id": 1002609
      },
      "writtenOn": "2010-08-10T21:55:13Z",
      "side": 1,
      "message": "ipv6_addr -\u003e ipv6_dest",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///v0\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 548,
      "author": {
        "id": 1002609
      },
      "writtenOn": "2010-08-10T22:23:39Z",
      "side": 1,
      "message": "ipv6_dst",
      "parentUuid": "AAAA4n///xg\u003d",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///xY\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 552,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-08-10T21:52:44Z",
      "side": 1,
      "message": "Nit: two spaces between end of line and start of comment.",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///zU\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 554,
      "author": {
        "id": 1004300
      },
      "writtenOn": "2010-08-10T20:12:33Z",
      "side": 1,
      "message": "Did not explicitly check dst for null since getaddrinfo() returns error any way if both node and service are null.",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///xU\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 554,
      "author": {
        "id": 1002609
      },
      "writtenOn": "2010-08-10T21:55:13Z",
      "side": 1,
      "message": "but we want to support dst \u003d\u003d null for default gateways and the error handling returns rather than proceeding.  I think the\nif (ret !\u003d 0) {\nline should be\nif (ret !\u003d 0 \u0026\u0026 dst !\u003d NULL) {",
      "parentUuid": "AAAA4n///zU\u003d",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///w0\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 554,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-08-10T22:10:42Z",
      "side": 1,
      "message": "Actually, thinking about it some more, I don\u0027t think we should support dst \u003d null to indicate the default route, because then we wouldn\u0027t know if it\u0027s an IPv4 or IPv6 default route.\n\nI think it\u0027s fine to mandate that the calling code always specify a destination. In the end, a route is just a destination with some associated attributes, so the destination is the most basic part of a route and must always be present. The gateway, on the other hand, may or may not be needed (so we allow it to be null).\n\nAlso, supporting null doesn\u0027t save much code in the caller: all it needs to do is pass in \"0.0.0.0\" or \"::\" instead of null.\n\nWhat do you think?",
      "parentUuid": "AAAA4n///xU\u003d",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///vo\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 554,
      "author": {
        "id": 1002609
      },
      "writtenOn": "2010-08-10T22:23:39Z",
      "side": 1,
      "message": "Can\u0027t you tell by the addr family of the gateway?  Either can be null, but not both.  I see default and host routes as being opposite ends of the spectrum..  if we allow null gateway, I think we should allow null dst.   Symmetry is nice.",
      "parentUuid": "AAAA4n///w0\u003d",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///uo\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 554,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-08-10T23:26:05Z",
      "side": 1,
      "message": "I suppose you can.\n\nSymmetry is nice, but this isn\u0027t really symmetric, because while there can be a route without a gateway, there cannot be a route without a destination. So a null gateway means \"there is no gateway\", but a null destination cannot mean \"there is no destination\" (because a route without a destination doesn\u0027t make sense). Allowing null destinations would probably require more code.\n\nThat said, I don\u0027t feel strongly about it, so would be fine either way. Do you want the code to accept null gateways?",
      "parentUuid": "AAAA4n///vo\u003d",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///qQ\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 554,
      "author": {
        "id": 1002609
      },
      "writtenOn": "2010-08-11T17:54:19Z",
      "side": 1,
      "message": "ok - I\u0027m fine with this as is.",
      "parentUuid": "AAAA4n///uo\u003d",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///x0\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 559,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-08-10T21:52:44Z",
      "side": 1,
      "message": "return -EINVAL;",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///xQ\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 563,
      "author": {
        "id": 1002609
      },
      "writtenOn": "2010-08-10T21:55:13Z",
      "side": 1,
      "message": "need a clause in here to deal with real error of gw \u003d\u003d NULL \u0026\u0026 dst \u003d\u003d NULL:\nif (dst \u003d\u003d NULL) {\n    printerr(\"both dst and gw are NULL\");\n    return -1;\n}",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///ws\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 563,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-08-10T22:10:42Z",
      "side": 1,
      "message": "If we don\u0027t support null destinations, then this is fine as is, right? Then we\u0027ll never get here if dst is null, because getaddrinfo(dst, ...) will fail and the function will return failure.",
      "parentUuid": "AAAA4n///xQ\u003d",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///x4\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 574,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-08-10T21:52:44Z",
      "side": 1,
      "message": "return -EINVAL;",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///xw\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 581,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-08-10T21:52:44Z",
      "side": 1,
      "message": "return -EINVAL;",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///yU\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 592,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-08-10T21:52:44Z",
      "side": 1,
      "message": "Should these be just ipv4_addr.sin_addr and ipv4_gw.sin_addr instead of ipv4_addr.sin_addr.s_addr and ipv4_gw_sin_addr.s_addr?",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA4n///xo\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 6
      },
      "lineNbr": 597,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-08-10T21:52:44Z",
      "side": 1,
      "message": "ret \u003d -EAFNOSUPPORT;",
      "revId": "05f453e326175f636f4218575abebf9bd77d18df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}