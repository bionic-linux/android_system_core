{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "21fdd7d6_37935b20",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1945845
      },
      "writtenOn": "2023-09-01T20:35:02Z",
      "side": 1,
      "message": "Konstantin: Thanks also for the review!",
      "revId": "e15115361dd2d7e820ff2f2e395021e50de06d0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "212c61f4_b096bb5a",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 425,
      "author": {
        "id": 1590141
      },
      "writtenOn": "2023-09-01T19:54:16Z",
      "side": 1,
      "message": "`android::base::StartsWith(serial, \"tcp:\")`",
      "revId": "e15115361dd2d7e820ff2f2e395021e50de06d0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7ee60b6_b9c56a75",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 425,
      "author": {
        "id": 1945845
      },
      "writtenOn": "2023-09-01T20:34:38Z",
      "side": 1,
      "message": "Thanks for the suggestion. I\u0027ll rework this later to include it.",
      "parentUuid": "212c61f4_b096bb5a",
      "revId": "e15115361dd2d7e820ff2f2e395021e50de06d0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1df8d012_9d2e078d",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 428,
      "author": {
        "id": 1590141
      },
      "writtenOn": "2023-09-01T19:50:03Z",
      "side": 1,
      "message": "do you need to print the device again?",
      "revId": "e15115361dd2d7e820ff2f2e395021e50de06d0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cb8c3b8a_9c9806e5",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 428,
      "author": {
        "id": 1945845
      },
      "writtenOn": "2023-09-01T20:34:38Z",
      "side": 1,
      "message": "I believe so, in order for `fastboot devices` to not be empty when you specify a network device as the serial option.\n\nThe devices list includes USB attached devices as well as network devices that had previously been connected via `fastboot connect` but the inconsistency I\u0027m trying to resolve is that when you specify a network device on the serial option (or via environment variables) but have not called `fastboot connect`, `fastboot devices` returns empty, which seems to commonly breaks scripts.\n\nSo here, we\u0027re only printing out the device if it was specified explicitly (via -s or env variable) and is not already in the devices list.",
      "parentUuid": "1df8d012_9d2e078d",
      "revId": "e15115361dd2d7e820ff2f2e395021e50de06d0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "691dc44d_b2a12b3c",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 428,
      "author": {
        "id": 1590141
      },
      "writtenOn": "2023-09-01T21:19:43Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "cb8c3b8a_9c9806e5",
      "revId": "e15115361dd2d7e820ff2f2e395021e50de06d0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aae9fed4_7915fdc6",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 432,
      "author": {
        "id": 1590141
      },
      "writtenOn": "2023-09-01T19:50:03Z",
      "side": 1,
      "message": "how does the caller of the function know if `result` matches the `serial` or it is the last valid `transport` from devices?",
      "revId": "e15115361dd2d7e820ff2f2e395021e50de06d0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a49157bc_83912e3b",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 432,
      "author": {
        "id": 1945845
      },
      "writtenOn": "2023-09-01T20:34:38Z",
      "side": 1,
      "message": "This is a good question. The existing loop to process the devices list seems to have the same problem - it only returns the last valid transport value. So it seemed to me that matching the behavior with the specified serial device being the last device checked (if it was not already connected and added to the device list).\n\nDo you have an alternative suggestion?",
      "parentUuid": "aae9fed4_7915fdc6",
      "revId": "e15115361dd2d7e820ff2f2e395021e50de06d0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c70174b4_4b17b8a5",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 432,
      "author": {
        "id": 1590141
      },
      "writtenOn": "2023-09-01T20:44:27Z",
      "side": 1,
      "message": "I was actually curious about the goal of the function as well. It appears to loop over all the devices; When `print` is set, it makes sense to iterate over the whole list and print their status. When `print` is not set, it merely returns the last device it could connect to, whether it needs to be last or any is also unclear, as you could break on the first one found.\n\nThere are two callers into this function; One being `list_devices()` which will just print all the devices. The other is from `open_device()` when the serial number is not specified, in such a case fastboot just wants to connect to first available devices. As your logic is not needed for for `list_devices()` and is unreachable when `serial` is set, your overall intent might not work.",
      "parentUuid": "a49157bc_83912e3b",
      "revId": "e15115361dd2d7e820ff2f2e395021e50de06d0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d221125_1f801900",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 432,
      "author": {
        "id": 1945845
      },
      "writtenOn": "2023-09-01T21:10:54Z",
      "side": 1,
      "message": "I\u0027m not sure I\u0027m following how the logic is not needed for `list_devices()`?\n\nThe problem is running:\n `fastboot -s tcp:localhost:39909 getenv all` - works\n `fastboot -s tcp:localhost:39909 devices` - returns empty\n \nBecause unless `fastboot connect` was called, the specified serial device *isn\u0027t* in the devices list. Most other fastboot commands utilize the specified serial value without a dependency on calling `fastboot connect`, so this inconsistency commonly causes problems with scripts.\n\nSo my patch is trying to make it so the specified serial value is considered when we list the devices.\n\nDoes that clarify things, or am I still just missing something?",
      "parentUuid": "c70174b4_4b17b8a5",
      "revId": "e15115361dd2d7e820ff2f2e395021e50de06d0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "58c0d60a_56017e95",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 432,
      "author": {
        "id": 1590141
      },
      "writtenOn": "2023-09-01T21:19:43Z",
      "side": 1,
      "message": "I didn\u0027t realize a device has to be explicitly connected to prior to being enumerated in fastboot. For usb `fastboot devices` the `-s SERIAL` flag has no effect. You are correct here.",
      "parentUuid": "7d221125_1f801900",
      "revId": "e15115361dd2d7e820ff2f2e395021e50de06d0f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}