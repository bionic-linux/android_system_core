{
  "comments": [
    {
      "key": {
        "uuid": "AAACdn////o\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1003977
      },
      "writtenOn": "2012-02-07T02:06:04Z",
      "side": 1,
      "message": "We can\u0027t use g_ffs since it does not support other functions that we need. Adding f_fs to the android gadget driver should work though.\n\nAlso, we don\u0027t usually build kernel modules for Android. We prefer build all the drivers in the kernel.",
      "revId": "4b42eb267ffa50fca7a5fba46f388a2f083e8b2d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAACrn////8\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1010203
      },
      "writtenOn": "2012-02-07T08:09:01Z",
      "side": 1,
      "message": "I used g_ffs \"as is\" and it worked, but in order to set the vendor id and device serial number g_ffs uses kernel module parameters, hence they are used here. When compiled-in, the parameters can be passed on kernel command line. As you point out, g_ffs cannot be used in Android anyway.",
      "parentUuid": "AAACdn////o\u003d",
      "revId": "4b42eb267ffa50fca7a5fba46f388a2f083e8b2d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAACrX////o\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1003977
      },
      "writtenOn": "2012-02-07T02:06:04Z",
      "side": 1,
      "message": "What do you mean by \"adbd is run standalone\"?",
      "revId": "4b42eb267ffa50fca7a5fba46f388a2f083e8b2d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAACrn////4\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1010203
      },
      "writtenOn": "2012-02-07T08:09:01Z",
      "side": 1,
      "message": "I mean adbd is (statically) compiled and run on a device which has no other Android stuff on it, in particular, no properties database. If there is no properties database, adbd falls back to defaults, which is to change uid,gid to 2000,2000.",
      "parentUuid": "AAACrX////o\u003d",
      "revId": "4b42eb267ffa50fca7a5fba46f388a2f083e8b2d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAACrn////g\u003d",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1010203
      },
      "writtenOn": "2012-02-07T08:09:01Z",
      "side": 1,
      "message": "The implementation as posted here does not handle ep0 events, but I think it would be good to handle them and I intend to do so when time permits.",
      "revId": "4b42eb267ffa50fca7a5fba46f388a2f083e8b2d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAACdX////8\u003d",
        "filename": "adb/Android.mk",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1003977
      },
      "writtenOn": "2012-02-07T02:06:04Z",
      "side": 1,
      "message": "We can\u0027t enable it by default for now but it can be enabled for devices that supports it, in the device Android.mk",
      "revId": "4b42eb267ffa50fca7a5fba46f388a2f083e8b2d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAACrn////0\u003d",
        "filename": "adb/Android.mk",
        "patchSetId": 1
      },
      "lineNbr": 99,
      "author": {
        "id": 1010203
      },
      "writtenOn": "2012-02-07T08:09:01Z",
      "side": 1,
      "message": "Right.",
      "parentUuid": "AAACdX////8\u003d",
      "revId": "4b42eb267ffa50fca7a5fba46f388a2f083e8b2d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAACrX////4\u003d",
        "filename": "adb/adb.c",
        "patchSetId": 1
      },
      "lineNbr": 954,
      "author": {
        "id": 1003977
      },
      "writtenOn": "2012-02-07T02:06:04Z",
      "side": 1,
      "message": "To avoid adding a ifndef, maybe define a USB_ADB_PATH for both case",
      "revId": "4b42eb267ffa50fca7a5fba46f388a2f083e8b2d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAACrn////w\u003d",
        "filename": "adb/adb.c",
        "patchSetId": 1
      },
      "lineNbr": 954,
      "author": {
        "id": 1010203
      },
      "writtenOn": "2012-02-07T08:09:01Z",
      "side": 1,
      "message": "I like your idea.",
      "parentUuid": "AAACrX////4\u003d",
      "revId": "4b42eb267ffa50fca7a5fba46f388a2f083e8b2d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAACdX////4\u003d",
        "filename": "adb/usb_funcfs_linux_client.c",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1003977
      },
      "writtenOn": "2012-02-07T02:06:04Z",
      "side": 1,
      "message": "Need a patch for bionic to introduce these headers",
      "revId": "4b42eb267ffa50fca7a5fba46f388a2f083e8b2d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAACrn////s\u003d",
        "filename": "adb/usb_funcfs_linux_client.c",
        "patchSetId": 1
      },
      "lineNbr": 32,
      "author": {
        "id": 1010203
      },
      "writtenOn": "2012-02-07T08:09:01Z",
      "side": 1,
      "message": "Right. I just copied the relevant file from linux kernel. What do you suggest to do?",
      "parentUuid": "AAACdX////4\u003d",
      "revId": "4b42eb267ffa50fca7a5fba46f388a2f083e8b2d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAACrX////w\u003d",
        "filename": "adb/usb_funcfs_linux_client.c",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1003977
      },
      "writtenOn": "2012-02-07T02:06:04Z",
      "side": 1,
      "message": "Already defined in adb.h",
      "revId": "4b42eb267ffa50fca7a5fba46f388a2f083e8b2d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAACrn////o\u003d",
        "filename": "adb/usb_funcfs_linux_client.c",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1010203
      },
      "writtenOn": "2012-02-07T08:09:01Z",
      "side": 1,
      "message": "Oh, I found it now. It\u0027s just that it is called \"ADB_CLASS\".",
      "parentUuid": "AAACrX////w\u003d",
      "revId": "4b42eb267ffa50fca7a5fba46f388a2f083e8b2d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAACrX////0\u003d",
        "filename": "adb/usb_funcfs_linux_client.c",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 1003977
      },
      "writtenOn": "2012-02-07T02:06:04Z",
      "side": 1,
      "message": "You should avoid the chdir, it makes \u0027adb shell\u0027 open into the functionfs directory. Use absolute path.",
      "revId": "4b42eb267ffa50fca7a5fba46f388a2f083e8b2d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAACrn////k\u003d",
        "filename": "adb/usb_funcfs_linux_client.c",
        "patchSetId": 1
      },
      "lineNbr": 306,
      "author": {
        "id": 1010203
      },
      "writtenOn": "2012-02-07T08:09:01Z",
      "side": 1,
      "message": "I wanted something simple for a start. To use absolute paths for endpoint files some memory needs to be set aside in init_functionfs to store the absolute path. Since the length of the path is the length of a static string USB_ADB_PATH plus 3 (ep0/ep1/ep2), I am wondering if it would be possible to determine the length at compile time?",
      "parentUuid": "AAACrX////0\u003d",
      "revId": "4b42eb267ffa50fca7a5fba46f388a2f083e8b2d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}