{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2632f7a7_c86858e0",
        "filename": "libprocessgroup/processgroup.cpp",
        "patchSetId": 7
      },
      "lineNbr": 466,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2023-03-17T17:34:11Z",
      "side": 1,
      "message": "These and checks above implement the same checks. I thought we decided to keep this patch for testing only and mark it as DO NOT MERGE. Is that changed?",
      "range": {
        "startLine": 464,
        "startChar": 0,
        "endLine": 466,
        "endChar": 0
      },
      "revId": "4df82b383884983f3c8b25495792c220082bd9ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "82284a6d_c58223f4",
        "filename": "libprocessgroup/processgroup.cpp",
        "patchSetId": 7
      },
      "lineNbr": 466,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2023-03-22T18:42:45Z",
      "side": 1,
      "message": "I removed \"DO NOT MERGE\" since I think the checks added by this CL are useful for other developers.",
      "parentUuid": "2632f7a7_c86858e0",
      "range": {
        "startLine": 464,
        "startChar": 0,
        "endLine": 466,
        "endChar": 0
      },
      "revId": "4df82b383884983f3c8b25495792c220082bd9ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9dcd38c4_e57d706a",
        "filename": "libprocessgroup/processgroup.cpp",
        "patchSetId": 7
      },
      "lineNbr": 549,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2023-03-17T17:34:11Z",
      "side": 1,
      "message": "KillProcessGroup already checks them, no need to do that multiple times.",
      "range": {
        "startLine": 548,
        "startChar": 0,
        "endLine": 549,
        "endChar": 28
      },
      "revId": "4df82b383884983f3c8b25495792c220082bd9ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "de1eced0_de06a9a7",
        "filename": "libprocessgroup/processgroup.cpp",
        "patchSetId": 7
      },
      "lineNbr": 549,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2023-03-22T18:42:45Z",
      "side": 1,
      "message": "KillProcessGroup() returns an error code instead of calling abort() in case of invalid arguments. The latter behavior makes it easier for developers to identify the function that passed the invalid arguments.",
      "parentUuid": "9dcd38c4_e57d706a",
      "range": {
        "startLine": 548,
        "startChar": 0,
        "endLine": 549,
        "endChar": 28
      },
      "revId": "4df82b383884983f3c8b25495792c220082bd9ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "067a988b_6ebc0969",
        "filename": "libprocessgroup/processgroup.cpp",
        "patchSetId": 7
      },
      "lineNbr": 549,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2023-03-22T19:45:20Z",
      "side": 1,
      "message": "Then just move the new checks to the top of KillProcessGroup().",
      "parentUuid": "de1eced0_de06a9a7",
      "range": {
        "startLine": 548,
        "startChar": 0,
        "endLine": 549,
        "endChar": 28
      },
      "revId": "4df82b383884983f3c8b25495792c220082bd9ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "150b28f1_ab9a01b3",
        "filename": "libprocessgroup/processgroup.cpp",
        "patchSetId": 7
      },
      "lineNbr": 549,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2023-03-22T20:23:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "067a988b_6ebc0969",
      "range": {
        "startLine": 548,
        "startChar": 0,
        "endLine": 549,
        "endChar": 28
      },
      "revId": "4df82b383884983f3c8b25495792c220082bd9ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "36e7743d_2862ab8a",
        "filename": "libprocessgroup/processgroup.cpp",
        "patchSetId": 7
      },
      "lineNbr": 555,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2023-03-17T17:34:11Z",
      "side": 1,
      "message": "ditto",
      "range": {
        "startLine": 554,
        "startChar": 4,
        "endLine": 555,
        "endChar": 28
      },
      "revId": "4df82b383884983f3c8b25495792c220082bd9ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "738f8f64_9db020e4",
        "filename": "libprocessgroup/processgroup.cpp",
        "patchSetId": 7
      },
      "lineNbr": 555,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2023-03-22T18:42:45Z",
      "side": 1,
      "message": "KillProcessGroup() returns an error code instead of calling abort() in case of invalid arguments. The latter behavior makes it easier for developers to identify the function that passed the invalid arguments.",
      "parentUuid": "36e7743d_2862ab8a",
      "range": {
        "startLine": 554,
        "startChar": 4,
        "endLine": 555,
        "endChar": 28
      },
      "revId": "4df82b383884983f3c8b25495792c220082bd9ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e3e1a986_fa7c03e0",
        "filename": "libprocessgroup/processgroup.cpp",
        "patchSetId": 7
      },
      "lineNbr": 555,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2023-03-22T20:23:33Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "738f8f64_9db020e4",
      "range": {
        "startLine": 554,
        "startChar": 4,
        "endLine": 555,
        "endChar": 28
      },
      "revId": "4df82b383884983f3c8b25495792c220082bd9ae",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}