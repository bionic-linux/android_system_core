{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "4205c0bc_b444639e",
        "filename": "fs_mgr/libsnapshot/cow_writer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 329,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-01-13T18:31:45Z",
      "side": 1,
      "message": "A build on T will creates a payload estimate based on this new logic, but an S build applying the T OTA does not have this logic. A full OTA will be entirely replace ops. What\u0027s the upper bound on miscalculated bytes? Is there a risk this results in a COW image being too small?",
      "revId": "1c2626d7aee8887fdba80b4f07eb54fe4377a83f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dd2596d9_6cd9924f",
        "filename": "fs_mgr/libsnapshot/cow_writer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 329,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2022-01-13T19:09:42Z",
      "side": 1,
      "message": "\u003e  but an S build applying the T OTA does not have this logic.\n\nwhen will this happen ? on downgrade right ? for downgrades, we disable VABC completely.. for full OTA, we should never have this issue IIUC",
      "parentUuid": "4205c0bc_b444639e",
      "revId": "1c2626d7aee8887fdba80b4f07eb54fe4377a83f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "39495bdf_44bad127",
        "filename": "fs_mgr/libsnapshot/cow_writer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 329,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2022-01-13T19:32:30Z",
      "side": 1,
      "message": "It would happen if we use T otatools to generate an S -\u003e T upgrade OTA.",
      "parentUuid": "dd2596d9_6cd9924f",
      "revId": "1c2626d7aee8887fdba80b4f07eb54fe4377a83f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5a499af4_17d8e622",
        "filename": "fs_mgr/libsnapshot/cow_writer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 329,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2022-01-13T19:59:46Z",
      "side": 1,
      "message": "we shouldn\u0027t allow that to happen then isn\u0027t it ?",
      "parentUuid": "39495bdf_44bad127",
      "revId": "1c2626d7aee8887fdba80b4f07eb54fe4377a83f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "71efc376_6fd471dd",
        "filename": "fs_mgr/libsnapshot/cow_writer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 329,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-01-13T20:01:23Z",
      "side": 1,
      "message": "In general it is the only way to build an OTA package. otatools does not work across dessert releases.",
      "parentUuid": "5a499af4_17d8e622",
      "revId": "1c2626d7aee8887fdba80b4f07eb54fe4377a83f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8b6c9e43_06fb9032",
        "filename": "fs_mgr/libsnapshot/cow_writer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 329,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2022-01-13T20:04:46Z",
      "side": 1,
      "message": "We usually tell partners to use newer otatools when generating OTA across dessert releases. Backward compatibility is carefully maintained over the past years.",
      "parentUuid": "71efc376_6fd471dd",
      "revId": "1c2626d7aee8887fdba80b4f07eb54fe4377a83f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}