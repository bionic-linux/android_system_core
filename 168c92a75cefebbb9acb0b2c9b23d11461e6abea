{
  "comments": [
    {
      "key": {
        "uuid": "40bcbc39_44f82104",
        "filename": "init/init.cpp",
        "patchSetId": 1
      },
      "lineNbr": 718,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-07T23:34:43Z",
      "side": 1,
      "message": "Convention is to pass r/w values as pointers, not references.",
      "range": {
        "startLine": 718,
        "startChar": 46,
        "endLine": 718,
        "endChar": 63
      },
      "revId": "168c92a75cefebbb9acb0b2c9b23d11461e6abea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4b7bbf80_d4131731",
        "filename": "init/init.cpp",
        "patchSetId": 1
      },
      "lineNbr": 718,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-08T17:59:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "40bcbc39_44f82104",
      "range": {
        "startLine": 718,
        "startChar": 46,
        "endLine": 718,
        "endChar": 63
      },
      "revId": "168c92a75cefebbb9acb0b2c9b23d11461e6abea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a3ac72f4_0051a306",
        "filename": "init/init.cpp",
        "patchSetId": 1
      },
      "lineNbr": 730,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-07T23:34:43Z",
      "side": 1,
      "message": "Could we rename this to check_valid_precompiled_split_policy() or something similar and have it return a bool?  The string for the policy can then be defined directly in the selinux_load_split_policy() function where it\u0027s used.",
      "revId": "168c92a75cefebbb9acb0b2c9b23d11461e6abea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "867910f1_386ec5fd",
        "filename": "init/init.cpp",
        "patchSetId": 1
      },
      "lineNbr": 730,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-08T17:59:40Z",
      "side": 1,
      "message": "I\u0027m not sure I understand what you\u0027re suggesting. If we make this a no-arg check, then the path to the precompiled policy moves from being local to the method to being visible to all methods for no obvious reason. If we make this check take the path to the precompiled policy as a parameter, then the implementation of this check becomes weird because it looks at hard-coded paths, such as /vendor/etc/selinux/precompiled_sepolicy.plat.sha256. We could solve this by making the check obtain such a path by appending \".plat.sha256\" to the provided path, but that sounds like extra complication for no gain.",
      "parentUuid": "a3ac72f4_0051a306",
      "revId": "168c92a75cefebbb9acb0b2c9b23d11461e6abea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2bc4c75b_73bea384",
        "filename": "init/init.cpp",
        "patchSetId": 1
      },
      "lineNbr": 730,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-08T18:32:54Z",
      "side": 1,
      "message": "Okay; nevermind my comment.  I didn\u0027t see the access() check originally and thought this function was only checking the hashes, in which case it didn\u0027t make sense to conflate those checks and the path itself.\n\nIn general, it\u0027s the returning of an empty string to mean not found/not valid that I dislike here.  This may be overkill, so feel free not to, but returning std::optional\u003cstd::string\u003e would be nice.",
      "parentUuid": "867910f1_386ec5fd",
      "revId": "168c92a75cefebbb9acb0b2c9b23d11461e6abea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ae0f6c1_e225ca32",
        "filename": "init/init.cpp",
        "patchSetId": 1
      },
      "lineNbr": 730,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-08T19:15:13Z",
      "side": 1,
      "message": "I\u0027m happy to use std::optional here. Waiting on the verdict about whether we should be using std::experimental::optional, because std::optional is not yet available here.",
      "parentUuid": "2bc4c75b_73bea384",
      "revId": "168c92a75cefebbb9acb0b2c9b23d11461e6abea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "18a94abd_28bf83d3",
        "filename": "init/init.cpp",
        "patchSetId": 1
      },
      "lineNbr": 730,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-03-08T19:20:54Z",
      "side": 1,
      "message": "taking a std::string* and returning bool would be more typical.",
      "parentUuid": "1ae0f6c1_e225ca32",
      "revId": "168c92a75cefebbb9acb0b2c9b23d11461e6abea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3974465a_9bf534b1",
        "filename": "init/init.cpp",
        "patchSetId": 1
      },
      "lineNbr": 730,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-08T20:26:00Z",
      "side": 1,
      "message": "Done.",
      "parentUuid": "18a94abd_28bf83d3",
      "revId": "168c92a75cefebbb9acb0b2c9b23d11461e6abea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "539debb3_6b7161ce",
        "filename": "init/init.cpp",
        "patchSetId": 1
      },
      "lineNbr": 731,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-07T23:34:43Z",
      "side": 1,
      "message": "static constexpr const char",
      "range": {
        "startLine": 731,
        "startChar": 4,
        "endLine": 731,
        "endChar": 24
      },
      "revId": "168c92a75cefebbb9acb0b2c9b23d11461e6abea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8cbfc5b2_838a773b",
        "filename": "init/init.cpp",
        "patchSetId": 1
      },
      "lineNbr": 731,
      "author": {
        "id": 1018773
      },
      "writtenOn": "2017-03-08T17:59:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "539debb3_6b7161ce",
      "range": {
        "startLine": 731,
        "startChar": 4,
        "endLine": 731,
        "endChar": 24
      },
      "revId": "168c92a75cefebbb9acb0b2c9b23d11461e6abea",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}