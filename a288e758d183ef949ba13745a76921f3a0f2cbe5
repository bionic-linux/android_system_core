{
  "comments": [
    {
      "key": {
        "uuid": "88b8272e_e95fc9e6",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 556,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-05-03T22:04:02Z",
      "side": 1,
      "message": "this is very broken now.",
      "revId": "a288e758d183ef949ba13745a76921f3a0f2cbe5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f14c7477_aa120c53",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 556,
      "author": {
        "id": 1051712
      },
      "writtenOn": "2017-05-03T22:34:12Z",
      "side": 1,
      "message": "you meant call win32_tmpfile instead of re-define tmpfile?",
      "parentUuid": "88b8272e_e95fc9e6",
      "revId": "a288e758d183ef949ba13745a76921f3a0f2cbe5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "77cd6cde_11b93dd1",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 564,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-05-03T22:04:02Z",
      "side": 1,
      "message": "if you\u0027re messing with these functions (for reasons i don\u0027t understand?), why not fix the TODO?",
      "revId": "a288e758d183ef949ba13745a76921f3a0f2cbe5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d21459e9_7dceb2ff",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 564,
      "author": {
        "id": 1051712
      },
      "writtenOn": "2017-05-03T22:34:12Z",
      "side": 1,
      "message": "I\u0027m not familiar with windows side and doesn\u0027t have a setup to verify so I\u0027m holding back changing this too much : )\n\nWhy this wasn\u0027t a open at the first place? Is it because some flags with fopen are not supported with open? If open doesn\u0027t work, I\u0027m not sure what\u0027s the best way to fix this safely, i.e. not to make it worse : )",
      "parentUuid": "77cd6cde_11b93dd1",
      "revId": "a288e758d183ef949ba13745a76921f3a0f2cbe5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e5120337_3b87422c",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 565,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-05-03T22:04:02Z",
      "side": 1,
      "message": "how did this pass our .clang-format check?",
      "range": {
        "startLine": 565,
        "startChar": 4,
        "endLine": 565,
        "endChar": 10
      },
      "revId": "a288e758d183ef949ba13745a76921f3a0f2cbe5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8fdd0c46_4fe17527",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 565,
      "author": {
        "id": 1051712
      },
      "writtenOn": "2017-05-03T22:34:12Z",
      "side": 1,
      "message": "not sure. presubmit didn\u0027t complain when I ran it in internal master.",
      "parentUuid": "e5120337_3b87422c",
      "range": {
        "startLine": 565,
        "startChar": 4,
        "endLine": 565,
        "endChar": 10
      },
      "revId": "a288e758d183ef949ba13745a76921f3a0f2cbe5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9e1bb4d3_0481071d",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 567,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-05-03T22:04:02Z",
      "side": 1,
      "message": "nullptr\n\nsame line or brace",
      "range": {
        "startLine": 566,
        "startChar": 0,
        "endLine": 567,
        "endChar": 18
      },
      "revId": "a288e758d183ef949ba13745a76921f3a0f2cbe5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "049c2cc3_d5212bbd",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 603,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-05-03T22:04:02Z",
      "side": 1,
      "message": "that\u0027s not what this function does.",
      "range": {
        "startLine": 603,
        "startChar": 19,
        "endLine": 603,
        "endChar": 42
      },
      "revId": "a288e758d183ef949ba13745a76921f3a0f2cbe5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5c647f06_d7813ac6",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 603,
      "author": {
        "id": 1051712
      },
      "writtenOn": "2017-05-03T22:34:12Z",
      "side": 1,
      "message": "This functions make a tmp filename and returns the filename and fd. It looks to me that it makes a tmp filename : )\n\nThe reason I return fd is to prevent the secuity hole as tmpnam().\n\nAlthough these functions generate names that are difficult to guess,\n       it is nevertheless possible that between the time that the pathname\n       is returned and the time that the program opens it, another program\n       might create that pathname using open(2), or create it as a symbolic\n       link.  This can lead to security holes.  To avoid such possibilities,\n       use the open(2) O_EXCL flag to open the pathname.  Or better yet, use\n       mkstemp(3) or tmpfile(3).",
      "parentUuid": "049c2cc3_d5212bbd",
      "range": {
        "startLine": 603,
        "startChar": 19,
        "endLine": 603,
        "endChar": 42
      },
      "revId": "a288e758d183ef949ba13745a76921f3a0f2cbe5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "be1fc757_4f9ffba4",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1478,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-05-03T22:04:02Z",
      "side": 1,
      "message": "no new gotos.",
      "revId": "a288e758d183ef949ba13745a76921f3a0f2cbe5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10e5c423_7f695719",
        "filename": "fastboot/fs.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-05-03T22:04:02Z",
      "side": 1,
      "message": "why?",
      "revId": "a288e758d183ef949ba13745a76921f3a0f2cbe5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4fd1d884_c92fa10d",
        "filename": "fastboot/fs.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1,
      "author": {
        "id": 1051712
      },
      "writtenOn": "2017-05-03T22:34:12Z",
      "side": 1,
      "message": "It\u0027s in fastboot.cpp for the open call so I duped it here. Seems no error in local build if I remove it. Not sure about other builds though, mac, window.",
      "parentUuid": "10e5c423_7f695719",
      "revId": "a288e758d183ef949ba13745a76921f3a0f2cbe5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "04bd74b4_8d14d02e",
        "filename": "fastboot/fs.cpp",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-05-03T22:04:02Z",
      "side": 1,
      "message": "O_CREAT with no mode? does this actually work? (i thought we caught this at compile time these days.)",
      "range": {
        "startLine": 23,
        "startChar": 28,
        "endLine": 23,
        "endChar": 35
      },
      "revId": "a288e758d183ef949ba13745a76921f3a0f2cbe5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1832dd32_f815fd59",
        "filename": "fastboot/fs.cpp",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1051712
      },
      "writtenOn": "2017-05-03T22:34:12Z",
      "side": 1,
      "message": "Mode is there after flags, i.e. S_IRUSR | S_IWUSR",
      "parentUuid": "04bd74b4_8d14d02e",
      "range": {
        "startLine": 23,
        "startChar": 28,
        "endLine": 23,
        "endChar": 35
      },
      "revId": "a288e758d183ef949ba13745a76921f3a0f2cbe5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d945367b_a389ef7b",
        "filename": "fastboot/fs.cpp",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-05-03T22:04:02Z",
      "side": 1,
      "message": "android::base::unique_fd",
      "revId": "a288e758d183ef949ba13745a76921f3a0f2cbe5",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}