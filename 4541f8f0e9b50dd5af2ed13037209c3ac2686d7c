{
  "comments": [
    {
      "key": {
        "uuid": "bc32212e_af5d0c5e",
        "filename": "libziparchive/entry_name_utils-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2017-06-06T00:16:14Z",
      "side": 1,
      "message": "Is there something wrong with __builtin_memcpy() not using a const void * for the source argument? I don\u0027t see why we should be casting const away here otherwise.",
      "revId": "4541f8f0e9b50dd5af2ed13037209c3ac2686d7c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2588b035_cd0ceb04",
        "filename": "libziparchive/entry_name_utils-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1080359
      },
      "writtenOn": "2017-06-06T00:44:10Z",
      "side": 1,
      "message": "I agree that removing the const cast should work.  Let me try that tomorrow and I will send an updated patch.",
      "parentUuid": "bc32212e_af5d0c5e",
      "revId": "4541f8f0e9b50dd5af2ed13037209c3ac2686d7c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa9702da_e258308d",
        "filename": "libziparchive/entry_name_utils-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2017-06-06T00:16:14Z",
      "side": 1,
      "message": "Coalesce declaration with initialization below.",
      "revId": "4541f8f0e9b50dd5af2ed13037209c3ac2686d7c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "85f6e29a_de511bab",
        "filename": "libziparchive/entry_name_utils-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 67,
      "author": {
        "id": 1080359
      },
      "writtenOn": "2017-06-06T00:44:10Z",
      "side": 1,
      "message": "I missed this one.",
      "parentUuid": "fa9702da_e258308d",
      "revId": "4541f8f0e9b50dd5af2ed13037209c3ac2686d7c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a37cbb3f_85552c16",
        "filename": "libziparchive/entry_name_utils-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2017-06-06T00:16:14Z",
      "side": 1,
      "message": ":( - Is this statement necessary (and does it build for all targets/platforms)?",
      "revId": "4541f8f0e9b50dd5af2ed13037209c3ac2686d7c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8101e6f9_9f7b07c0",
        "filename": "libziparchive/entry_name_utils-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 75,
      "author": {
        "id": 1080359
      },
      "writtenOn": "2017-06-06T00:44:10Z",
      "side": 1,
      "message": "I think the compiler should already align loops.\nI will remove this stmt.",
      "parentUuid": "a37cbb3f_85552c16",
      "revId": "4541f8f0e9b50dd5af2ed13037209c3ac2686d7c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "10e27fec_50bc9404",
        "filename": "libziparchive/entry_name_utils-inl.h",
        "patchSetId": 3
      },
      "lineNbr": 83,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2017-06-06T00:16:14Z",
      "side": 1,
      "message": "0x80",
      "range": {
        "startLine": 83,
        "startChar": 15,
        "endLine": 83,
        "endChar": 18
      },
      "revId": "4541f8f0e9b50dd5af2ed13037209c3ac2686d7c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}