{
  "comments": [
    {
      "key": {
        "uuid": "665b2640_c7dc5ecc",
        "filename": "libcutils/files.cpp",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-10-27T20:41:23Z",
      "side": 1,
      "message": "copy and paste from android_get_control_socket implementation sucks.\n\nThis should use asprintf in both cases.",
      "range": {
        "startLine": 41,
        "startChar": 0,
        "endLine": 42,
        "endChar": 67
      },
      "revId": "64db3a81af0ab777f7aecbddcfbd40653b5c6842",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "665b2640_a7d96ada",
        "filename": "libcutils/files.cpp",
        "patchSetId": 3
      },
      "lineNbr": 45,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-10-27T20:41:23Z",
      "side": 1,
      "message": "also \u0027-\u0027 spaces etc.\n\nSwitch to using isalphanum() and iterate through it ourselves.",
      "range": {
        "startLine": 45,
        "startChar": 33,
        "endLine": 45,
        "endChar": 37
      },
      "revId": "64db3a81af0ab777f7aecbddcfbd40653b5c6842",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "665b2640_8788a6ae",
        "filename": "libcutils/files.cpp",
        "patchSetId": 3
      },
      "lineNbr": 57,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-10-27T20:41:23Z",
      "side": 1,
      "message": "sysconf(_SC_OPEN_MAX) (also for socket variant too)",
      "range": {
        "startLine": 57,
        "startChar": 25,
        "endLine": 57,
        "endChar": 32
      },
      "revId": "64db3a81af0ab777f7aecbddcfbd40653b5c6842",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "665b2640_6741327f",
        "filename": "libcutils/files.cpp",
        "patchSetId": 3
      },
      "lineNbr": 61,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-10-27T20:41:23Z",
      "side": 1,
      "message": "The risk of this is we will have something in the environment declaring this file, and yet the fd has been closed ... or _worse_ reused!!!!",
      "range": {
        "startLine": 61,
        "startChar": 4,
        "endLine": 61,
        "endChar": 51
      },
      "revId": "64db3a81af0ab777f7aecbddcfbd40653b5c6842",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "665b2640_072716e7",
        "filename": "libcutils/files.cpp",
        "patchSetId": 3
      },
      "lineNbr": 62,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-10-27T20:49:59Z",
      "side": 1,
      "message": "Perform a fcntl(fd, F_GETFD) to see if the file descriptor is still open and valid.\n\nWe should also consider readlink(/proc/self/fd/\u003cpid\u003e,...) and check for a match to the incoming name.\n\nNB: same could be done for socket variant, except we use getsockname(fd,...)",
      "range": {
        "startLine": 62,
        "startChar": 4,
        "endLine": 62,
        "endChar": 33
      },
      "revId": "64db3a81af0ab777f7aecbddcfbd40653b5c6842",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}