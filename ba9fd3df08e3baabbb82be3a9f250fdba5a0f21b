{
  "comments": [
    {
      "key": {
        "uuid": "63f74ae2_38062d4e",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 34,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2015-04-03T20:23:05Z",
      "side": 1,
      "message": "Should there be alignment pragma\u0027s with this to ensure that it\u0027s formatted the same across architectures, especially since we\u0027re writing this out to a file?",
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c4727c_705f08fa",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-04-02T22:41:33Z",
      "side": 1,
      "message": "Really should state \u0027if not bionic version of unistd.h\u0027",
      "range": {
        "startLine": 119,
        "startChar": 3,
        "endLine": 119,
        "endChar": 13
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c4727c_dce14b15",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-03T00:15:50Z",
      "side": 1,
      "message": "*please* just pull in one of the existing ones. there are so many to choose from!",
      "parentUuid": "23c4727c_705f08fa",
      "range": {
        "startLine": 119,
        "startChar": 3,
        "endLine": 119,
        "endChar": 13
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c4727c_907977c3",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-04-03T00:48:28Z",
      "side": 1,
      "message": "Do we have unistd.h defined with this on all platforms (MAC?)",
      "parentUuid": "23c4727c_dce14b15",
      "range": {
        "startLine": 119,
        "startChar": 3,
        "endLine": 119,
        "endChar": 13
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3d47630_7cddb10a",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-03T03:21:46Z",
      "side": 1,
      "message": "no. that\u0027s why there are so many choices in the tree. \u003cutils/Compat.h\u003e is popular. i see \u003ccutils/fs.h\u003e has one too. et cetera.",
      "parentUuid": "23c4727c_907977c3",
      "range": {
        "startLine": 119,
        "startChar": 3,
        "endLine": 119,
        "endChar": 13
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c4727c_64f2a1b7",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-04-03T15:09:54Z",
      "side": 1,
      "message": "Ahh, got it, I was looking left instead of down at my feet, cutils/fs.h \u003cperfect\u003e",
      "parentUuid": "c3d47630_7cddb10a",
      "range": {
        "startLine": 119,
        "startChar": 3,
        "endLine": 119,
        "endChar": 13
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c4727c_a4be79a0",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-03T15:21:52Z",
      "side": 1,
      "message": "yeah --- that\u0027s the real problem (and why i complained about this): most of the copies are in weird places. we should try to maneuver them into commonly-included .h files so everyone just has them by accident :-)\n\nhttp://b/20059045",
      "parentUuid": "23c4727c_64f2a1b7",
      "range": {
        "startLine": 119,
        "startChar": 3,
        "endLine": 119,
        "endChar": 13
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c4727c_306990a5",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-04-02T22:41:33Z",
      "side": 1,
      "message": "Demonstrate precedence here by ensuring that the comparison is within brackets.",
      "range": {
        "startLine": 139,
        "startChar": 13,
        "endLine": 139,
        "endChar": 49
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3bdfae6_52e883f8",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2015-04-03T00:06:33Z",
      "side": 1,
      "message": "Since we know if we\u0027re using conf_file or conf_dir based on what the dir parameter is set to, can we simply do \n+ (dir ? sizeof(conf_dir) : sizeof(conf_file))\n\n?",
      "parentUuid": "23c4727c_306990a5",
      "range": {
        "startLine": 139,
        "startChar": 13,
        "endLine": 139,
        "endChar": 49
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3bdfae6_d5ad9d15",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-03T00:15:50Z",
      "side": 1,
      "message": "asprintf?",
      "parentUuid": "e3bdfae6_52e883f8",
      "range": {
        "startLine": 139,
        "startChar": 13,
        "endLine": 139,
        "endChar": 49
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c4727c_1c62233b",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-04-03T00:48:28Z",
      "side": 1,
      "message": "I used to have that, it results in \u0027code\u0027, this one reduces to a constant and thus a simple addition.",
      "parentUuid": "e3bdfae6_52e883f8",
      "range": {
        "startLine": 139,
        "startChar": 13,
        "endLine": 139,
        "endChar": 49
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c4727c_10c9e7a6",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-04-03T00:48:28Z",
      "side": 1,
      "message": "I was concerned asprintf was not available on all platforms when I did this (MAC?)",
      "parentUuid": "e3bdfae6_d5ad9d15",
      "range": {
        "startLine": 139,
        "startChar": 13,
        "endLine": 139,
        "endChar": 49
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03092eaf_0b38c19b",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-03T03:21:46Z",
      "side": 1,
      "message": "https://developer.apple.com/library/ios/documentation/System/Conceptual/ManPages_iPhoneOS/man3/asprintf.3.html",
      "parentUuid": "23c4727c_10c9e7a6",
      "range": {
        "startLine": 139,
        "startChar": 13,
        "endLine": 139,
        "endChar": 49
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c4727c_1057ac60",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-04-02T23:00:15Z",
      "side": 1,
      "message": "Could probably reuse name here, so that TEMP_FAILURE_RETRY is not continuously re-evaluating this?",
      "range": {
        "startLine": 147,
        "startChar": 37,
        "endLine": 147,
        "endChar": 63
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3bdfae6_75a5b129",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-03T00:15:50Z",
      "side": 1,
      "message": "why bother? it would only be less readable.",
      "parentUuid": "23c4727c_1057ac60",
      "range": {
        "startLine": 147,
        "startChar": 37,
        "endLine": 147,
        "endChar": 63
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c4727c_3012ab90",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-04-03T00:48:28Z",
      "side": 1,
      "message": "I viewed it as more readable since it would change this line to match exactly the open above. No problem, as-is then.",
      "parentUuid": "e3bdfae6_75a5b129",
      "range": {
        "startLine": 147,
        "startChar": 37,
        "endLine": 147,
        "endChar": 63
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3d47630_9ce76dd8",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-03T03:21:46Z",
      "side": 1,
      "message": "L142 hurts my brain enough already. i think you should be moving _away_ from that, not towards it!",
      "parentUuid": "23c4727c_3012ab90",
      "range": {
        "startLine": 147,
        "startChar": 37,
        "endLine": 147,
        "endChar": 63
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3bdfae6_970165bf",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-04-03T15:09:54Z",
      "side": 1,
      "message": "L142 will get split up ...",
      "parentUuid": "c3d47630_9ce76dd8",
      "range": {
        "startLine": 147,
        "startChar": 37,
        "endLine": 147,
        "endChar": 63
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c4727c_1620c498",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2015-04-03T00:06:33Z",
      "side": 1,
      "message": "Nit-picky, but could we make this a do while loop instead of using break?  It\u0027s the same as TEMP_FAILURE_RETRY, which is what I believe this is emulating.\n\ndo {\naddress \u003d mmap(NULL, st.st_size, PROT_READ, MAP_PRIVATE, fd, 0);\nwhile (address \u003d\u003d MAP_FAILED \u0026\u0026 errno \u003d\u003d EINTR);",
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c4727c_901cd795",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-04-03T00:48:28Z",
      "side": 1,
      "message": "You get a warning for _rc \u003d\u003d -1, -Werror tears this.",
      "parentUuid": "23c4727c_1620c498",
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3bdfae6_d70c7def",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-04-03T15:09:54Z",
      "side": 1,
      "message": "Post CL cleanup. @enh should we fix all the variants do to _rc \u003d\u003d (typeof (exp))-1?",
      "parentUuid": "23c4727c_901cd795",
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c4727c_24e389cf",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-04-03T15:21:52Z",
      "side": 1,
      "message": "is EINTR from mmap actually possible?",
      "parentUuid": "e3bdfae6_d70c7def",
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c4727c_55ace99c",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-04-03T18:01:49Z",
      "side": 1,
      "message": "Ummmm IDK ;-) you may be right, it sets up the address pointing to a null page with copy on access. There are no expected resource contentions to result in a sleep. Until I am 100% sure, and I will investigate ...",
      "parentUuid": "23c4727c_24e389cf",
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63f74ae2_9d7cf335",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 188,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2015-04-03T20:23:05Z",
      "side": 1,
      "message": "Why is there a -sizeof(*p) here?  This won\u0027t get us the last entry of the file, since the size of the last entry is (sizeof(*p) + strlen(pc-\u003eprefix) + sizeof(uint64_t)) \u0026 -sizeof(uint64_t); Even if pc-\u003eprefix is null, there is the alignment space too.\n\nDoesn\u0027t continually incrementing p by p-\u003elen get us to exactly address + st.st_size?  Why not set e \u003d (const struct fs_path_config_from_file *)((const char *)address + st.st_size and keep the check as p \u003c e?",
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c4727c_9b950f43",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2015-04-03T20:23:05Z",
      "side": 1,
      "message": "Should we use strnlen since we know the buffer size and there\u0027s no guarantee the input file will have a null character to stop strlen from overrunning?\n\nMaybe even combine this and be below lines into,\n\nlen \u003d strnlen(p-\u003eprefix, min(MAX_BUFFER_SIZE, p-\u003elen - sizeof(*p)));",
      "range": {
        "startLine": 190,
        "startChar": 26,
        "endLine": 190,
        "endChar": 32
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63f74ae2_98a40185",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 190,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-10-08T14:31:52Z",
      "side": 1,
      "message": "min has no common header to define across all architectures.",
      "parentUuid": "23c4727c_9b950f43",
      "range": {
        "startLine": 190,
        "startChar": 26,
        "endLine": 190,
        "endChar": 32
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3bdfae6_68edcb86",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 195,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2015-04-03T20:23:05Z",
      "side": 1,
      "message": "(const char *)p + sizeof(*p) + len \u003e (const char *)address + st.st_size\n\nIt\u0027s a more straight forward check to me, especially if address + st.st_size ends up being used in the loop condition.",
      "range": {
        "startLine": 195,
        "startChar": 30,
        "endLine": 195,
        "endChar": 71
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}