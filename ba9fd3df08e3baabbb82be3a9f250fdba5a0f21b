{
  "comments": [
    {
      "key": {
        "uuid": "23c4727c_705f08fa",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 119,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-04-02T22:41:33Z",
      "side": 1,
      "message": "Really should state \u0027if not bionic version of unistd.h\u0027",
      "range": {
        "startLine": 119,
        "startChar": 3,
        "endLine": 119,
        "endChar": 13
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c4727c_306990a5",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-04-02T22:41:33Z",
      "side": 1,
      "message": "Demonstrate precedence here by ensuring that the comparison is within brackets.",
      "range": {
        "startLine": 139,
        "startChar": 13,
        "endLine": 139,
        "endChar": 49
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3bdfae6_52e883f8",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 139,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2015-04-03T00:06:33Z",
      "side": 1,
      "message": "Since we know if we\u0027re using conf_file or conf_dir based on what the dir parameter is set to, can we simply do \n+ (dir ? sizeof(conf_dir) : sizeof(conf_file))\n\n?",
      "parentUuid": "23c4727c_306990a5",
      "range": {
        "startLine": 139,
        "startChar": 13,
        "endLine": 139,
        "endChar": 49
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c4727c_1057ac60",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-04-02T23:00:15Z",
      "side": 1,
      "message": "Could probably reuse name here, so that TEMP_FAILURE_RETRY is not continuously re-evaluating this?",
      "range": {
        "startLine": 147,
        "startChar": 37,
        "endLine": 147,
        "endChar": 63
      },
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "23c4727c_1620c498",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2015-04-03T00:06:33Z",
      "side": 1,
      "message": "Nit-picky, but could we make this a do while loop instead of using break?  It\u0027s the same as TEMP_FAILURE_RETRY, which is what I believe this is emulating.\n\ndo {\naddress \u003d mmap(NULL, st.st_size, PROT_READ, MAP_PRIVATE, fd, 0);\nwhile (address \u003d\u003d MAP_FAILED \u0026\u0026 errno \u003d\u003d EINTR);",
      "revId": "ba9fd3df08e3baabbb82be3a9f250fdba5a0f21b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}