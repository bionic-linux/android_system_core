{
  "comments": [
    {
      "key": {
        "uuid": "2d5466e3_53a3b6b0",
        "filename": "init/parser/input_stream.cpp",
        "patchSetId": 1
      },
      "lineNbr": 28,
      "author": {
        "id": 1076138
      },
      "writtenOn": "2015-07-30T17:05:52Z",
      "side": 1,
      "message": "Would it make sense for this to return a smarter struct that would prevent OOB reads?",
      "range": {
        "startLine": 28,
        "startChar": 30,
        "endLine": 28,
        "endChar": 61
      },
      "revId": "f99f8a79635d8f2904edd45a8fd532d2315d76ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed3dee9f_31eb8aec",
        "filename": "init/parser/input_stream.h",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1076138
      },
      "writtenOn": "2015-07-30T17:05:52Z",
      "side": 1,
      "message": "What are we doing with indentation in the end?",
      "range": {
        "startLine": 30,
        "startChar": 0,
        "endLine": 30,
        "endChar": 2
      },
      "revId": "f99f8a79635d8f2904edd45a8fd532d2315d76ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d6242c0_fa2645ea",
        "filename": "init/parser/input_stream.h",
        "patchSetId": 1
      },
      "lineNbr": 35,
      "author": {
        "id": 1076138
      },
      "writtenOn": "2015-07-30T17:05:52Z",
      "side": 1,
      "message": "Nit: past?",
      "range": {
        "startLine": 35,
        "startChar": 13,
        "endLine": 35,
        "endChar": 19
      },
      "revId": "f99f8a79635d8f2904edd45a8fd532d2315d76ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4d4d1a59_547562bc",
        "filename": "init/parser/input_stream.h",
        "patchSetId": 1
      },
      "lineNbr": 55,
      "author": {
        "id": 1076138
      },
      "writtenOn": "2015-07-30T17:05:52Z",
      "side": 1,
      "message": "Nit: outlive",
      "range": {
        "startLine": 55,
        "startChar": 38,
        "endLine": 55,
        "endChar": 46
      },
      "revId": "f99f8a79635d8f2904edd45a8fd532d2315d76ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d57a2ea_d21a422f",
        "filename": "init/parser/scoped_fd.cpp",
        "patchSetId": 1
      },
      "lineNbr": 20,
      "author": {
        "id": 1076138
      },
      "writtenOn": "2015-07-30T17:05:52Z",
      "side": 1,
      "message": "Extra space.",
      "range": {
        "startLine": 20,
        "startChar": 22,
        "endLine": 20,
        "endChar": 26
      },
      "revId": "f99f8a79635d8f2904edd45a8fd532d2315d76ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d6242c0_7a13158e",
        "filename": "init/parser/scoped_fd.cpp",
        "patchSetId": 1
      },
      "lineNbr": 39,
      "author": {
        "id": 1076138
      },
      "writtenOn": "2015-07-30T17:05:52Z",
      "side": 1,
      "message": "In https://code.google.com/p/chromium/codesearch#chromium/src/base/scoped_generic.h this operation would be called \"Reset\", since it also does Close().",
      "range": {
        "startLine": 39,
        "startChar": 15,
        "endLine": 39,
        "endChar": 19
      },
      "revId": "f99f8a79635d8f2904edd45a8fd532d2315d76ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ed3dee9f_31f2aad8",
        "filename": "init/parser/tokenizer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 64,
      "author": {
        "id": 1076138
      },
      "writtenOn": "2015-07-30T17:05:52Z",
      "side": 1,
      "message": "Nit: backslash",
      "range": {
        "startLine": 64,
        "startChar": 26,
        "endLine": 64,
        "endChar": 35
      },
      "revId": "f99f8a79635d8f2904edd45a8fd532d2315d76ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d6242c0_da60a102",
        "filename": "init/parser/tokenizer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 67,
      "author": {
        "id": 1076138
      },
      "writtenOn": "2015-07-30T17:05:52Z",
      "side": 1,
      "message": "Doesn\u0027t this mean you should just skip the backslash and continue tokenizing without producing TOK_NEWLINE?",
      "range": {
        "startLine": 63,
        "startChar": 6,
        "endLine": 67,
        "endChar": 28
      },
      "revId": "f99f8a79635d8f2904edd45a8fd532d2315d76ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a40cc41_36d5a02f",
        "filename": "init/parser/tokenizer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-07-30T17:01:23Z",
      "side": 1,
      "message": "since you\u0027re copying here anyway, wouldn\u0027t it be easier to just read the whole file into a std::string with the existing android::base::ReadFileToString and then have your tokenizer work on a std::string (which is fine for both real life and tests, and lets you remove most of this code)?",
      "revId": "f99f8a79635d8f2904edd45a8fd532d2315d76ce",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}