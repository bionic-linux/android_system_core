{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "f005bbd7_fc6870b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 10
      },
      "lineNbr": 0,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2023-12-19T20:29:19Z",
      "side": 1,
      "message": "One question below. Looks good",
      "revId": "4fb7bb355d9416d8501b538f60fbf0f3b96d11e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "adffafd2_5b1ffe9c",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/writer_v3.cpp",
        "patchSetId": 10
      },
      "lineNbr": 324,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2023-12-19T20:29:19Z",
      "side": 1,
      "message": "don\u0027t we need cached_ops_.size() \u003e\u003d batch_size_ check as well  ?",
      "revId": "4fb7bb355d9416d8501b538f60fbf0f3b96d11e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3b5cd837_76dee951",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/writer_v3.cpp",
        "patchSetId": 10
      },
      "lineNbr": 324,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-12-19T22:24:35Z",
      "side": 1,
      "message": "some ops do not have data associated(ZERO and COPY), and the amount of memory used by these ops is tiny(14 bytes each). Therefore I intentionally allowed more aggressive caching for these ops.",
      "parentUuid": "adffafd2_5b1ffe9c",
      "revId": "4fb7bb355d9416d8501b538f60fbf0f3b96d11e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eb386702_799c4e15",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/writer_v3.cpp",
        "patchSetId": 10
      },
      "lineNbr": 324,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2023-12-19T22:31:06Z",
      "side": 1,
      "message": "Fair enough; however, if we have a mix of zero/copy and replace ops, cached_ops_ can still overflow.\n\nI see that you have those checks in EmitCopy() and EmitZeroBlocks(). What prevents cached_ops_ not overflowing ?",
      "parentUuid": "3b5cd837_76dee951",
      "revId": "4fb7bb355d9416d8501b538f60fbf0f3b96d11e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a7436930_d2aa740b",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/writer_v3.cpp",
        "patchSetId": 10
      },
      "lineNbr": 324,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-12-19T22:52:06Z",
      "side": 1,
      "message": "Added a NeedsFlush() function to maintain a consistent criteria on when is flushing needed. We flush if amount of REPLACE/XOR ops exceeds batch_size_, or number of non-data ops exceeds block size.",
      "parentUuid": "eb386702_799c4e15",
      "revId": "4fb7bb355d9416d8501b538f60fbf0f3b96d11e9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}