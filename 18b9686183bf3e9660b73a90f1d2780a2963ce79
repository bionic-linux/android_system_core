{
  "comments": [
    {
      "key": {
        "uuid": "SNowJx3Q",
        "filename": "adb/adb.c",
        "patchSetId": 2
      },
      "lineNbr": 1445,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2013-03-21T20:49:20Z",
      "side": 1,
      "message": "space after \"if\" and space after comma.",
      "revId": "18b9686183bf3e9660b73a90f1d2780a2963ce79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ST7M42Ks",
        "filename": "adb/adb.c",
        "patchSetId": 2
      },
      "lineNbr": 1445,
      "author": {
        "id": 1000411
      },
      "writtenOn": "2013-03-21T21:19:11Z",
      "side": 1,
      "message": "that\u0027s not my code, I\u0027m just cut-and-pasting here, but I\u0027ll fix it :-)",
      "parentUuid": "SNowJx3Q",
      "revId": "18b9686183bf3e9660b73a90f1d2780a2963ce79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "SNqwGA2A",
        "filename": "adb/adb.c",
        "patchSetId": 2
      },
      "lineNbr": 1450,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2013-03-21T20:49:20Z",
      "side": 1,
      "message": "check malloc return value?",
      "revId": "18b9686183bf3e9660b73a90f1d2780a2963ce79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ST9M-VI8",
        "filename": "adb/adb.c",
        "patchSetId": 2
      },
      "lineNbr": 1450,
      "author": {
        "id": 1000411
      },
      "writtenOn": "2013-03-21T21:19:11Z",
      "side": 1,
      "message": "I\u0027ll add that (again, original code).",
      "parentUuid": "SNqwGA2A",
      "revId": "18b9686183bf3e9660b73a90f1d2780a2963ce79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "SNmysmzQ",
        "filename": "adb/adb.c",
        "patchSetId": 2
      },
      "lineNbr": 1467,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2013-03-21T20:49:20Z",
      "side": 1,
      "message": "The adb host will write OKAY twice? Is this intentional?\n\nLike you did on line 1523, can you add a similar comment if this is intentional.",
      "revId": "18b9686183bf3e9660b73a90f1d2780a2963ce79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "STzNMyFA",
        "filename": "adb/adb.c",
        "patchSetId": 2
      },
      "lineNbr": 1467,
      "author": {
        "id": 1000411
      },
      "writtenOn": "2013-03-21T21:19:11Z",
      "side": 1,
      "message": "the original code was writing \"OKAYOKAY\" on the host, so I\u0027ve tried to keep it the same. However, I\u0027m not convinced that this was necessary in any way. I\u0027ll test it to be sure.",
      "parentUuid": "SNmysmzQ",
      "revId": "18b9686183bf3e9660b73a90f1d2780a2963ce79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "SNgyxV4c",
        "filename": "adb/adb.c",
        "patchSetId": 2
      },
      "lineNbr": 1471,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2013-03-21T20:49:20Z",
      "side": 1,
      "message": "space after if (here and below)",
      "revId": "18b9686183bf3e9660b73a90f1d2780a2963ce79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "SNiy2k4A",
        "filename": "adb/adb.c",
        "patchSetId": 2
      },
      "lineNbr": 1477,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2013-03-21T20:49:20Z",
      "side": 1,
      "message": "space after commas",
      "revId": "18b9686183bf3e9660b73a90f1d2780a2963ce79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "SNixSE0A",
        "filename": "adb/adb.c",
        "patchSetId": 2
      },
      "lineNbr": 1517,
      "author": {
        "id": 1002975
      },
      "writtenOn": "2013-03-21T21:09:00Z",
      "side": 1,
      "message": "I don\u0027t think this binds to a transport, so any device can connect to the now opened port on the host.",
      "revId": "18b9686183bf3e9660b73a90f1d2780a2963ce79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "STzMeiCA",
        "filename": "adb/adb.c",
        "patchSetId": 2
      },
      "lineNbr": 1517,
      "author": {
        "id": 1000411
      },
      "writtenOn": "2013-03-21T22:26:11Z",
      "side": 1,
      "message": "I\u0027m not sure I understand what you\u0027re referring to. Can you clarify?\n\nthere is an acquire_one_transport() call just above. When running on the device, ttype will be kTransportAny, and serial will be NULL. The acquire_one_transport() above will return the single active transport that adbd knows about (it fails if there is no transport, i.e. the device is not connected through USB or has USB debugging disabled, or even if there are more than one transport, which I don\u0027t think would happen on the device).\n\nWe could add support for kTransportHost on acquire_one_transport() and modify its implementation to only support it for !ADB_HOST, but I\u0027m not sure this adds much.\n\nWhen running on the host, this function should perform exactly like the original code.",
      "parentUuid": "SNixSE0A",
      "revId": "18b9686183bf3e9660b73a90f1d2780a2963ce79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "TXsQr-us",
        "filename": "adb/adb.c",
        "patchSetId": 2
      },
      "lineNbr": 1517,
      "author": {
        "id": 1002975
      },
      "writtenOn": "2013-04-15T22:31:54Z",
      "side": 1,
      "message": "I think I meant a USB device can say \"send this packet to listener N.\"  I don\u0027t think there is any validation of device -\u003e host \"connections\"  So you may intend to open a listener only for Device A, but Device B can also send things to that listener if it knows the number.\n\nI could be wrong, but I remember looking at this before.",
      "parentUuid": "STzMeiCA",
      "revId": "18b9686183bf3e9660b73a90f1d2780a2963ce79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e125cd90_c6536217",
        "filename": "adb/adb.c",
        "patchSetId": 2
      },
      "lineNbr": 1517,
      "author": {
        "id": 1000411
      },
      "writtenOn": "2013-10-10T09:41:54Z",
      "side": 1,
      "message": "I\u0027m sorry, but I still don\u0027t understand. Can you give a concrete example?\n\nLet\u0027s assume a malvolent USB device that implements a custom adbd daemon that tries to attack the adb server running on the host. According to protocols.txt, the device could send an OPEN(local-id, 0, \u003cdestination\u003e) with \u003cdestination\u003e crafted  in various ways:\n\n* tcp:\u003cport\u003e, where \u003cport\u003e is adb-forwarded to a different device.\n\u003d\u003e This allows the bad device to connect directly to a different one, however, this is already possible with the existing code base, so this patch doesn\u0027t change anything.\n\nI wonder if we check for connections to tcp:5037 though, since this might give a _lot_ of control to the attacking device, but again, this is irrelevant for this specific change.\n\n* host-serial:\u003cserial\u003e:forward:\u003clocal\u003e;\u003cremote\u003e\n\u003d\u003e This asks the host ADB server to create a redirection from host \u003clocal\u003e port to \u003cremote\u003e port on a given device \u003cserial\u003e.\nThis won\u0027t work because only smart sockets can handle \u003chost-prefix\u003e commands, and they\u0027re never connected to a transport socket (from my reading of the current sources, it might be worthwhile to add some runtime checks / assertions here). Again, unrelated to this change.\n\n* reverse:forward:\u003clocal\u003e;\u003cremote\u003e\n\u003d\u003e This will ask the ADB server to bind to host port \u003clocal\u003e, and redirect connections to device port \u003cremote\u003e, i.e. this is asking for an explicit \"adb forward\" to the bad device. This won\u0027t work because \u0027reverse:\u0027 is only implemented if ADB_HOST is _not_ defined.\n\nMaybe you\u0027re thinking of something else?",
      "parentUuid": "TXsQr-us",
      "revId": "18b9686183bf3e9660b73a90f1d2780a2963ce79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4844ff56_b232bed6",
        "filename": "adb/adb.c",
        "patchSetId": 2
      },
      "lineNbr": 1517,
      "author": {
        "id": 1003977
      },
      "writtenOn": "2013-12-11T23:07:38Z",
      "side": 1,
      "message": "I think the problem is with WRITE(0, remote-id, \"data\") packets because remote ids are shared between devices. A device could send a packet to a remote id that has been allocated for a different device. Kenny, is this the problem you were referring?\n\nThis problem is not introduced by this change, so this should be fixed in a separate change.",
      "parentUuid": "e125cd90_c6536217",
      "revId": "18b9686183bf3e9660b73a90f1d2780a2963ce79",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}