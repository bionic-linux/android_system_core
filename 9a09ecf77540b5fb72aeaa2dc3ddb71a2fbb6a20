{
  "comments": [
    {
      "key": {
        "uuid": "c3750b6e_4c9bb3ef",
        "filename": "adb/fastdeploy/deploypatchgenerator/apk_archive.cpp",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-12-17T16:53:07Z",
      "side": 1,
      "message": "I actually was wondering how that was compiling...",
      "range": {
        "startLine": 53,
        "startChar": 55,
        "endLine": 53,
        "endChar": 56
      },
      "revId": "9a09ecf77540b5fb72aeaa2dc3ddb71a2fbb6a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03f601d2_a6e21c03",
        "filename": "adb/fastdeploy/deploypatchgenerator/apk_archive.cpp",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-12-17T00:34:27Z",
      "side": 1,
      "message": "From our quick conversation on this earlier today: the original issue was that we wanted to avoid the allocation from unique_ptr, right?  What about using std::optional instead?  There\u0027s no allocation done with that class, but you can still check if its valid or not (has_value() or operator bool).",
      "revId": "9a09ecf77540b5fb72aeaa2dc3ddb71a2fbb6a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85d0bc8b_490879ff",
        "filename": "adb/fastdeploy/deploypatchgenerator/apk_archive.cpp",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-12-17T16:58:21Z",
      "side": 1,
      "message": "we can\u0027t change the FromFd API because it\u0027s already in use in multiple places, and there were no numbers in the original CL motivating this for the FromOsHandle API, so i\u0027m unconvinced that it makes sense to have two different APIs. something to consider for future API though.\n\n(i was hoping the style guide might give some advice here, but although it talks about std::unique_ptr it doesn\u0027t mention std::optional at all.)",
      "parentUuid": "03f601d2_a6e21c03",
      "revId": "9a09ecf77540b5fb72aeaa2dc3ddb71a2fbb6a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b10703e5_8fd05b85",
        "filename": "adb/fastdeploy/deploypatchgenerator/apk_archive.cpp",
        "patchSetId": 1
      },
      "lineNbr": 60,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-12-17T17:03:29Z",
      "side": 1,
      "message": "Ack.\n\nI\u0027d be interested in seeing what others think about that too.  I haven\u0027t seen that part of the style guide updated since C++17 was released, so I don\u0027t know if they don\u0027t think it\u0027s a good idea or just haven\u0027t had a chance to add it.  In theory, it may be harder to tease out the pointer to the object from the optional for passing to other functions, but I don\u0027t think it\u0027s insurmountable.  Avoiding the allocation could be worth it.",
      "parentUuid": "85d0bc8b_490879ff",
      "revId": "9a09ecf77540b5fb72aeaa2dc3ddb71a2fbb6a20",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}