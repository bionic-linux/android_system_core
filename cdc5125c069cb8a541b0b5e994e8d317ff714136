{
  "comments": [
    {
      "key": {
        "uuid": "df2f62e2_953f7d5d",
        "filename": "include/backtrace/BacktraceMap.h",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-03-22T21:45:17Z",
      "side": 1,
      "message": "static?",
      "revId": "cdc5125c069cb8a541b0b5e994e8d317ff714136",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65c2360e_bcd5400f",
        "filename": "include/backtrace/BacktraceMap.h",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-03-22T21:57:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "df2f62e2_953f7d5d",
      "revId": "cdc5125c069cb8a541b0b5e994e8d317ff714136",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83729635_ff4e4495",
        "filename": "libbacktrace/Backtrace.cpp",
        "patchSetId": 2
      },
      "lineNbr": 62,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2017-03-22T22:05:55Z",
      "side": 1,
      "message": "How does PROT_DEVICE_MAP get set? It looks like BacktraceMap.cpp parses the \"rwxp\" in /proc/\u003cpid\u003e/maps and will only ever set PROT_READ/WRITE/EXEC?\n\n(I was originally going to ask whether this was relying on these architecture specific values, but I couldn\u0027t actually find where they were escaping the kernel: https://github.com/torvalds/linux/blob/master/arch/arm/include/asm/pgtable.h#L92)",
      "range": {
        "startLine": 62,
        "startChar": 26,
        "endLine": 62,
        "endChar": 36
      },
      "revId": "cdc5125c069cb8a541b0b5e994e8d317ff714136",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3c915ca0_e4ab8028",
        "filename": "libbacktrace/backtrace_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1449,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-03-22T21:45:17Z",
      "side": 1,
      "message": "UNUSED?",
      "range": {
        "startLine": 1449,
        "startChar": 2,
        "endLine": 1449,
        "endChar": 13
      },
      "revId": "cdc5125c069cb8a541b0b5e994e8d317ff714136",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "513cc1cd_83d2027e",
        "filename": "libbacktrace/backtrace_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1449,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-03-22T21:57:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3c915ca0_e4ab8028",
      "range": {
        "startLine": 1449,
        "startChar": 2,
        "endLine": 1449,
        "endChar": 13
      },
      "revId": "cdc5125c069cb8a541b0b5e994e8d317ff714136",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "36856f0d_b8c07c5f",
        "filename": "libbacktrace/backtrace_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1491,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-03-22T21:45:17Z",
      "side": 1,
      "message": "static?",
      "revId": "cdc5125c069cb8a541b0b5e994e8d317ff714136",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "230451ad_415aedd7",
        "filename": "libbacktrace/backtrace_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1491,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-03-22T21:57:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "36856f0d_b8c07c5f",
      "revId": "cdc5125c069cb8a541b0b5e994e8d317ff714136",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "074ece8e_5b22bd5f",
        "filename": "libbacktrace/backtrace_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1582,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-03-22T21:45:17Z",
      "side": 1,
      "message": "xfail?",
      "revId": "cdc5125c069cb8a541b0b5e994e8d317ff714136",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b8f031a_16d5d71d",
        "filename": "libbacktrace/backtrace_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1582,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-03-22T21:57:35Z",
      "side": 1,
      "message": "This isn\u0027t using the bionic test runner which supports this. That\u0027s my next task, but I did try it and some test failed in a weird way, so one thing at a time.",
      "parentUuid": "074ece8e_5b22bd5f",
      "revId": "cdc5125c069cb8a541b0b5e994e8d317ff714136",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}