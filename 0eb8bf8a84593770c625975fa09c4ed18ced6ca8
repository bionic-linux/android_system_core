{
  "comments": [
    {
      "key": {
        "uuid": "517710d1_6db9cd95",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-04-20T18:09:11Z",
      "side": 1,
      "message": "Previously",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 9
      },
      "revId": "0eb8bf8a84593770c625975fa09c4ed18ced6ca8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8ef78145_707902c1",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2017-04-21T10:27:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "517710d1_6db9cd95",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 9
      },
      "revId": "0eb8bf8a84593770c625975fa09c4ed18ced6ca8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d98b8421_a4de25b7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-04-20T18:09:11Z",
      "side": 1,
      "message": "the first stage",
      "range": {
        "startLine": 12,
        "startChar": 3,
        "endLine": 12,
        "endChar": 13
      },
      "revId": "0eb8bf8a84593770c625975fa09c4ed18ced6ca8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3437a38c_509cfba3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2017-04-21T10:27:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d98b8421_a4de25b7",
      "range": {
        "startLine": 12,
        "startChar": 3,
        "endLine": 12,
        "endChar": 13
      },
      "revId": "0eb8bf8a84593770c625975fa09c4ed18ced6ca8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bad1491a_97af3cd8",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 206,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-04-20T18:09:11Z",
      "side": 1,
      "message": "Why is this moved before device_init_partitions?",
      "range": {
        "startLine": 202,
        "startChar": 0,
        "endLine": 206,
        "endChar": 5
      },
      "revId": "0eb8bf8a84593770c625975fa09c4ed18ced6ca8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7124157d_8acfeb77",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 206,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2017-04-21T04:39:15Z",
      "side": 1,
      "message": "Oh, actually I just want to kill the \u0027goto done\u0027 below so move it forward. No other practical reason.",
      "parentUuid": "bad1491a_97af3cd8",
      "range": {
        "startLine": 202,
        "startChar": 0,
        "endLine": 206,
        "endChar": 5
      },
      "revId": "0eb8bf8a84593770c625975fa09c4ed18ced6ca8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "74650e94_b490c153",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 206,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-04-21T16:22:59Z",
      "side": 1,
      "message": "sgtm; I was wondering if there was a more specific reason.  If it\u0027s just to kill the goto, then maybe we should do that with the refactoring change to make the intention of this CL more clear?",
      "parentUuid": "7124157d_8acfeb77",
      "range": {
        "startLine": 202,
        "startChar": 0,
        "endLine": 206,
        "endChar": 5
      },
      "revId": "0eb8bf8a84593770c625975fa09c4ed18ced6ca8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9cb805cf_bc8d1b84",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 206,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2017-04-24T06:08:51Z",
      "side": 1,
      "message": "Agree, will move there!",
      "parentUuid": "74650e94_b490c153",
      "range": {
        "startLine": 202,
        "startChar": 0,
        "endLine": 206,
        "endChar": 5
      },
      "revId": "0eb8bf8a84593770c625975fa09c4ed18ced6ca8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2eab560e_6317ab3d",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 417,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-04-20T18:09:11Z",
      "side": 1,
      "message": "Same comment about function naming on the other CL, let\u0027s use SetInitAvbVersionInRecovery().",
      "revId": "0eb8bf8a84593770c625975fa09c4ed18ced6ca8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c02e76b7_4242bd5d",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 417,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2017-04-21T04:39:15Z",
      "side": 1,
      "message": "OK, will do.",
      "parentUuid": "2eab560e_6317ab3d",
      "revId": "0eb8bf8a84593770c625975fa09c4ed18ced6ca8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "98fffbda_72f1cae9",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 417,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2017-04-21T10:27:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c02e76b7_4242bd5d",
      "revId": "0eb8bf8a84593770c625975fa09c4ed18ced6ca8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52c70c3d_0b28a265",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 432,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-04-20T18:09:11Z",
      "side": 1,
      "message": "We initialize all of the partitions but don\u0027t actually mount them?  Is it just the verity device that we need or is it actually important to do coldboot for the devices too?  Is that needed to allow recovery to optionally mount /system, etc later?",
      "revId": "0eb8bf8a84593770c625975fa09c4ed18ced6ca8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ffeff57_f241e6ce",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 432,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2017-04-21T04:39:15Z",
      "side": 1,
      "message": "Yes, we don\u0027t need to mount it. In recovery, we\u0027d prefer not to mount unnecessary partitions to prevent further recovery.\n\nActually here we just want to ensure the libavb version can successfully verify the AVB metadata on all partitions, before we set it into ro.boot.avb_version.\n\nIt\u0027s possible for FsManagerAvbHandle::Open() to include two different libavb versions inside: e.g., libavb (1.0) and libavb (2.1) and try to use both to verify the AVB metadata. But only the working libavb version that successfully verifies the metadata will be used in the FsManagerAvbUniquePtr, where we can get its version via avb_handle-\u003eavb_version(). See below for more details.\n\nAnyway, I\u0027ll add some comments here in the next PS.\nThanks for the feedback.\n\nhttps://docs.google.com/drawings/d/15-hg40L5G6ujxhYjx62UeaJlTjfbUFZLccqepy5hIfU/edit\n\nhttps://docs.google.com/document/d/1jnCNutEghY46s3FlC1uZ8OKZycn07-ah6M0HgL9L8ho/edit#heading\u003dh.e6w538w3glef",
      "parentUuid": "52c70c3d_0b28a265",
      "revId": "0eb8bf8a84593770c625975fa09c4ed18ced6ca8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f1a0856_940e12f5",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 432,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-04-21T16:22:59Z",
      "side": 1,
      "message": "Thanks for the info.  In particular, I believe the below answers my question:\n\n\u003e Actually here we just want to ensure the libavb version can successfully verify the AVB metadata on all partitions, before we set it into ro.boot.avb_version.\n\nThis means that we actually need to do the coldboot on the partitions to read their verify their meta data?\n\nI was wondering if it would be possible or make sense to skip the coldboot here and let ueventd do it later, if we didn\u0027t need to access the partitions, but that\u0027s probably a pre-mature optimization anyway.  Saving a 10? 100s? of ms in recovery boot time wouldn\u0027t be worth diverging these code paths.",
      "parentUuid": "5ffeff57_f241e6ce",
      "revId": "0eb8bf8a84593770c625975fa09c4ed18ced6ca8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3faad45a_e09e030e",
        "filename": "init/init_first_stage.cpp",
        "patchSetId": 3
      },
      "lineNbr": 432,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2017-04-24T06:08:51Z",
      "side": 1,
      "message": "This means that we actually need to do the coldboot on the partitions to read their verify their meta data?\n --\u003e Yes.\n\nI actually considered the ueventd solution before.\nhttps://android-review.googlesource.com/#/c/373794/\n\nBut it doesn\u0027t work because ueventd is too late to create those by-name* paths. Maybe postpone it further (still in init second stage because we need to set ro.boot.*) could work. But the code structure there isn\u0027t good, i.e., inserting the SetInitAvbVersioin() during the am.Queue* groups in the second stage. And we\u0027ll need to polling until the by-name symlink is created, so maybe it won\u0027t save much and might need to wait a bit longer (I didn\u0027t do real experiment though).\n\nhttps://android.googlesource.com/platform/system/core/+/master/fs_mgr/fs_mgr_avb_ops.cpp#118\n\nhttps://cs.corp.google.com/android/system/core/fs_mgr/fs_mgr.cpp?q\u003dfs_mgr_test_access+p:android\u0026dr\u003dCSs\u0026l\u003d778\n\n\nI think setting it here is better:\n - No worry about the race condition (ueventd creates the by-name symlink v.s. we read the metadata from the partition)\n\n - More consistent with normal boot flow: setenv INIT_AVB_VERSION in the first stage then set \"ro.boot.avb_version\" in the second stage.\n\n - Optimizing it in the recovery path seems not worth to me :)",
      "parentUuid": "8f1a0856_940e12f5",
      "revId": "0eb8bf8a84593770c625975fa09c4ed18ced6ca8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}