{
  "comments": [
    {
      "key": {
        "uuid": "09f9a08d_5cfbf56c",
        "filename": "libmetricslogger/metrics_logger.cpp",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-10-17T17:12:07Z",
      "side": 1,
      "message": "this doesn\u0027t seem to match its name (you want CLOCK_REALTIME for wall-clock time [http://man7.org/linux/man-pages/man2/clock_gettime.2.html]).\n\ni\u0027m also surprised that you have CLOCK_BOOTTIME on the host and CLOCK_MONOTONIC on the device...  not quite clear what you actually wanted to do here.",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 52,
        "endChar": 1
      },
      "revId": "d68ff219c9e21a4dcfe55290a29d5f7621fd60e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "986afab0_794c5829",
        "filename": "libmetricslogger/metrics_logger.cpp",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1061217
      },
      "writtenOn": "2018-10-17T18:55:13Z",
      "side": 1,
      "message": "The elapsedRealtimeNano() in libutils/SystemClock ends up with using CLOCK_MONOTONIC for Android, CLOCK_BOOTTIME for linux, and gettimeofday() for other platforms.\n\nmaybe we should do the same too?\n\nThe reason that this library has host version is because bootstats depends on this lib and bootstats has host library. The timestamp is not useful on host.",
      "parentUuid": "09f9a08d_5cfbf56c",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 52,
        "endChar": 1
      },
      "revId": "d68ff219c9e21a4dcfe55290a29d5f7621fd60e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1d1ed0c_2f1f2d4c",
        "filename": "libstats/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1061217
      },
      "writtenOn": "2018-10-17T03:26:10Z",
      "side": 1,
      "message": "lmkd wants static lib instead of shared lib.\n\nhttps://cs.corp.google.com/android/system/core/lmkd/Android.bp?l\u003d11",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 10
      },
      "revId": "d68ff219c9e21a4dcfe55290a29d5f7621fd60e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "90e68dcc_220d7baf",
        "filename": "libstats/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1258293
      },
      "writtenOn": "2018-10-17T04:22:29Z",
      "side": 1,
      "message": "IIUC, cc_library builds both variations (shared and static).\n(It fails if I replace cc_library with cc_library_shared)",
      "parentUuid": "b1d1ed0c_2f1f2d4c",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 10
      },
      "revId": "d68ff219c9e21a4dcfe55290a29d5f7621fd60e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "db5d21eb_089fab2b",
        "filename": "libstats/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1061217
      },
      "writtenOn": "2018-10-17T16:03:28Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "90e68dcc_220d7baf",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 10
      },
      "revId": "d68ff219c9e21a4dcfe55290a29d5f7621fd60e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "766e67f2_1c7c2527",
        "filename": "libstats/Android.bp",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-10-17T17:12:07Z",
      "side": 1,
      "message": "(correct.)",
      "parentUuid": "db5d21eb_089fab2b",
      "range": {
        "startLine": 20,
        "startChar": 0,
        "endLine": 20,
        "endChar": 10
      },
      "revId": "d68ff219c9e21a4dcfe55290a29d5f7621fd60e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0f1e9366_78c299f0",
        "filename": "libstats/statsd_writer.c",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1060129
      },
      "writtenOn": "2018-10-16T23:42:49Z",
      "side": 1,
      "message": "why do you need this?",
      "range": {
        "startLine": 19,
        "startChar": 27,
        "endLine": 20,
        "endChar": 27
      },
      "revId": "d68ff219c9e21a4dcfe55290a29d5f7621fd60e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc2ebd64_588d27a3",
        "filename": "libstats/statsd_writer.c",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1258293
      },
      "writtenOn": "2018-10-16T23:59:13Z",
      "side": 1,
      "message": "Without it, TEMP_FAILURE_RETRY (called throughout this CL) complains due to being implicitly defined. This is due to an increased exposure of libstats as we are including it in libmetricslogger. It actually took sometime to identify the issue and Yao helped me fix it.",
      "parentUuid": "0f1e9366_78c299f0",
      "range": {
        "startLine": 19,
        "startChar": 27,
        "endLine": 20,
        "endChar": 27
      },
      "revId": "d68ff219c9e21a4dcfe55290a29d5f7621fd60e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "67dfa4d6_75191f53",
        "filename": "libstats/statsd_writer.c",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-10-17T00:33:10Z",
      "side": 1,
      "message": "TEMP_FAILURE_RETRY is in \u003cunistd.h\u003e for bionic and glibc. (it\u0027s not in \u003ccutils/threads.h\u003e for any OS.)",
      "parentUuid": "dc2ebd64_588d27a3",
      "range": {
        "startLine": 19,
        "startChar": 27,
        "endLine": 20,
        "endChar": 27
      },
      "revId": "d68ff219c9e21a4dcfe55290a29d5f7621fd60e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f2f2500_9aefb231",
        "filename": "libstats/statsd_writer.c",
        "patchSetId": 2
      },
      "lineNbr": 20,
      "author": {
        "id": 1258293
      },
      "writtenOn": "2018-10-17T00:41:19Z",
      "side": 1,
      "message": "You\u0027re correct. The actual error message w/o \u003ccutils/threads.h\u003e is as below. \n\nsystem/core/libstats/statsd_writer.c:178:18: error: implicit declaration of function \u0027gettid\u0027 is invalid in C99 [-Werror,-Wimplicit-function-declaration]\n\nThat\u0027s why we need it.",
      "parentUuid": "67dfa4d6_75191f53",
      "range": {
        "startLine": 19,
        "startChar": 27,
        "endLine": 20,
        "endChar": 27
      },
      "revId": "d68ff219c9e21a4dcfe55290a29d5f7621fd60e0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}