{
  "comments": [
    {
      "key": {
        "uuid": "1e5ec0fd_8aa4029e",
        "filename": "libbacktrace/BacktraceThread.cpp",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-30T16:33:12Z",
      "side": 1,
      "message": "you\u0027re allowed your own logging macro, you know :-)\n\n(see also __PRETTY_FUNCTION__, which is closer to what you were manually doing in the previous file.)",
      "revId": "cdef9218de3a33c9a4ecf8bd0cf035f4e82485a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e5ec0fd_3b034625",
        "filename": "libbacktrace/BacktraceThread.cpp",
        "patchSetId": 1
      },
      "lineNbr": 187,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-30T21:19:05Z",
      "side": 1,
      "message": "Yeah, I was planning to go back and standardize all of the log macros. But now is as good a time as any. I created a new macro that is used instead of ALOGW.",
      "parentUuid": "1e5ec0fd_8aa4029e",
      "revId": "cdef9218de3a33c9a4ecf8bd0cf035f4e82485a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e5ec0fd_0a8632dd",
        "filename": "libbacktrace/UnwindCurrent.cpp",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-30T16:33:12Z",
      "side": 1,
      "message": "we should look at fixing bionic at some point. i wonder if uapi helps with this?",
      "revId": "cdef9218de3a33c9a4ecf8bd0cf035f4e82485a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe62ccbe_5dc719e5",
        "filename": "libbacktrace/UnwindCurrent.cpp",
        "patchSetId": 1
      },
      "lineNbr": 30,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-30T21:19:05Z",
      "side": 1,
      "message": "Yes, it\u0027s kind of a pain that we have this kind of ucontext stuff all over. Including in some of the external code.",
      "parentUuid": "1e5ec0fd_0a8632dd",
      "revId": "cdef9218de3a33c9a4ecf8bd0cf035f4e82485a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e49184c_4064ac1d",
        "filename": "libbacktrace/UnwindCurrent.cpp",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-30T16:33:12Z",
      "side": 1,
      "message": "it\u0027s still __i386__ :-)",
      "revId": "cdef9218de3a33c9a4ecf8bd0cf035f4e82485a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e5ec0fd_c0adf9c6",
        "filename": "libbacktrace/UnwindCurrent.cpp",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-30T21:19:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e49184c_4064ac1d",
      "revId": "cdef9218de3a33c9a4ecf8bd0cf035f4e82485a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e5ec0fd_4a902a0d",
        "filename": "libbacktrace/UnwindCurrent.cpp",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-30T16:33:12Z",
      "side": 1,
      "message": "#else\n  #error unsupported architecture\n\n?",
      "revId": "cdef9218de3a33c9a4ecf8bd0cf035f4e82485a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe62ccbe_fdd70d94",
        "filename": "libbacktrace/UnwindCurrent.cpp",
        "patchSetId": 1
      },
      "lineNbr": 53,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-30T21:19:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e5ec0fd_4a902a0d",
      "revId": "cdef9218de3a33c9a4ecf8bd0cf035f4e82485a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e5ec0fd_ea81febe",
        "filename": "libbacktrace/UnwindCurrent.cpp",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-30T16:33:12Z",
      "side": 1,
      "message": "oops. might need to grep for this, though cs/ suggests this is the only place we screwed up.\n\n(it sucks that the obviously right name is the one that doesn\u0027t work!)",
      "revId": "cdef9218de3a33c9a4ecf8bd0cf035f4e82485a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e49184c_144bc633",
        "filename": "libbacktrace/UnwindCurrent.cpp",
        "patchSetId": 1
      },
      "lineNbr": 177,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-30T21:19:05Z",
      "side": 1,
      "message": "I grep\u0027ed and this file is the only place that contains this.\n\nThe unfortunate part is that our makfiles use arm/mips/x86 (and x86_64 now) so I expected a symmetry to the arch defines. I should have known better.",
      "parentUuid": "1e5ec0fd_ea81febe",
      "revId": "cdef9218de3a33c9a4ecf8bd0cf035f4e82485a3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}