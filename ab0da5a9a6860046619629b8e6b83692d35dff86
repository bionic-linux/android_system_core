{
  "comments": [
    {
      "key": {
        "uuid": "704e1b58_6b351d0c",
        "filename": "libnativebridge/native_bridge.cc",
        "patchSetId": 8
      },
      "lineNbr": 208,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2014-09-26T04:18:22Z",
      "side": 1,
      "message": "if kRuntimeISA is \"x86\", this also returns true for instruction_set\u003d\"x86_64\". Same thing for arm and arm64. Is this intentional?",
      "revId": "ab0da5a9a6860046619629b8e6b83692d35dff86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "108f9fae_de625a1c",
        "filename": "libnativebridge/native_bridge.cc",
        "patchSetId": 8
      },
      "lineNbr": 208,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-09-26T04:30:49Z",
      "side": 1,
      "message": "No, this should have been strlen+1. I always mess up that strlen doesn\u0027t include the zero-termination.",
      "parentUuid": "704e1b58_6b351d0c",
      "revId": "ab0da5a9a6860046619629b8e6b83692d35dff86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "704e1b58_8b324123",
        "filename": "libnativebridge/native_bridge.cc",
        "patchSetId": 8
      },
      "lineNbr": 229,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2014-09-26T04:18:22Z",
      "side": 1,
      "message": "nit: \"less than or equal to 10 characters\", to match the conditional on line 225",
      "revId": "ab0da5a9a6860046619629b8e6b83692d35dff86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5053d7fc_24d0aa02",
        "filename": "libnativebridge/native_bridge.cc",
        "patchSetId": 8
      },
      "lineNbr": 244,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2014-09-26T03:45:44Z",
      "side": 1,
      "message": "isn\u0027t this backwards? You want to mount cpuinfo_path on top of /proc/cpuinfo, not the other way around.",
      "revId": "ab0da5a9a6860046619629b8e6b83692d35dff86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50859788_0a571c06",
        "filename": "libnativebridge/native_bridge.cc",
        "patchSetId": 8
      },
      "lineNbr": 244,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-09-26T04:30:49Z",
      "side": 1,
      "message": "Yes, that\u0027s true. I only glanced at the first search result for posix mount when checking the original submission, and they used mount point for the name of the first parameter. My stupidity. The problem is that this isn\u0027t unit-testable because of the restrictions of the cpuinfo source.",
      "parentUuid": "5053d7fc_24d0aa02",
      "revId": "ab0da5a9a6860046619629b8e6b83692d35dff86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}