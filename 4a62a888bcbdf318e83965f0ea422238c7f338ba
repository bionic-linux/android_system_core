{
  "comments": [
    {
      "key": {
        "uuid": "8b8c504a_09be0312",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1589,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-02-08T16:37:49Z",
      "side": 0,
      "message": "\u003cflipping coin\u003e The caller could be responsible for this for _efficiency_, but given this, the documentation (comments in fs_mgr.h) should indicate that the caller is responsible for checking this.",
      "range": {
        "startLine": 1585,
        "startChar": 5,
        "endLine": 1589,
        "endChar": 0
      },
      "revId": "4a62a888bcbdf318e83965f0ea422238c7f338ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e10ed61b_ea368b75",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1589,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-02-08T21:20:24Z",
      "side": 0,
      "message": "This function returning false doesn\u0027t actually give us a good signal like \"verity is disabled\".  The only reason that this function would return false is if the default fstab wasn\u0027t read.  And given that this function is now going to take an individual FstabEntry to check, that\u0027s not even something we care about.\n\nBeyond that \u0027mode\u0027 isn\u0027t used anywhere in this function, nor was it being used before in overlayfs; only in init.\n\nSo I think we\u0027re good to just drop it entirely.",
      "parentUuid": "8b8c504a_09be0312",
      "range": {
        "startLine": 1585,
        "startChar": 5,
        "endLine": 1589,
        "endChar": 0
      },
      "revId": "4a62a888bcbdf318e83965f0ea422238c7f338ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8035ab7_d4c5c48c",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1599,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-02-08T16:37:49Z",
      "side": 0,
      "message": "This check should remain here, as this is a burden on all callers.",
      "range": {
        "startLine": 1599,
        "startChar": 8,
        "endLine": 1599,
        "endChar": 68
      },
      "revId": "4a62a888bcbdf318e83965f0ea422238c7f338ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "daab509d_5155f3c9",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 3
      },
      "lineNbr": 1599,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-02-08T21:20:24Z",
      "side": 0,
      "message": "Will add back.",
      "parentUuid": "d8035ab7_d4c5c48c",
      "range": {
        "startLine": 1599,
        "startChar": 8,
        "endLine": 1599,
        "endChar": 68
      },
      "revId": "4a62a888bcbdf318e83965f0ea422238c7f338ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06b79b97_1df90976",
        "filename": "fs_mgr/fs_mgr_overlayfs.cpp",
        "patchSetId": 3
      },
      "lineNbr": 280,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-02-08T16:37:49Z",
      "side": 0,
      "message": "The API of exported interfaces preserves the errors, however, these two errors occur as a result of verity checking and mean that verity is disabled (which is OK from our perspective), this needs to be reflected below so that we get an accurate errno.\n\nWithout this, adb will report an error instantiating overlayfs, when there isn\u0027t one.\n\nWill need to wrap fs_mgr_get_verity_mount_point call to preserve errno like this.",
      "range": {
        "startLine": 280,
        "startChar": 4,
        "endLine": 280,
        "endChar": 66
      },
      "revId": "4a62a888bcbdf318e83965f0ea422238c7f338ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f338b5ef_46c05794",
        "filename": "fs_mgr/fs_mgr_overlayfs.cpp",
        "patchSetId": 3
      },
      "lineNbr": 280,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-02-08T21:20:24Z",
      "side": 0,
      "message": "I don\u0027t fully understand.  Does fs_mgr_candidate_list() return an errno value that this function may be clobbering?  \n\n(In general, I think it\u0027d be better if we got rid of errno and reporting actual error strings from overlayfs, especially since those errors are explicitly set instead of implicitly like errno is).",
      "parentUuid": "06b79b97_1df90976",
      "range": {
        "startLine": 280,
        "startChar": 4,
        "endLine": 280,
        "endChar": 66
      },
      "revId": "4a62a888bcbdf318e83965f0ea422238c7f338ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "83f5edb5_8010b6cb",
        "filename": "fs_mgr/fs_mgr_overlayfs.cpp",
        "patchSetId": 3
      },
      "lineNbr": 280,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-02-08T22:13:11Z",
      "side": 0,
      "message": "The verity check leaves errno set if verity is not enabled, ENXIO and ENOENT are the two values depending on type of verity protection. These are not errors, this is expected behavior since we do stuff when verity is disabled. We do, however, want to know about _other_ errno values as we see them (in malconfigured systems).\n\nThe higher level API is currently 100% _accurate_ for errno results, if these two are not reverted to save_errno, then it will no longer be 100% accurate, and the callers (adb disable verity and adb remount in this case) will _log_ an error when in fact there is no error.\n\nYes, converting to returning an error string from overlayfs is an alternative, but that is cleanup and unnecessary at this point; I see no reason _that_ work should block these adjustments. One step at a time.",
      "parentUuid": "f338b5ef_46c05794",
      "range": {
        "startLine": 280,
        "startChar": 4,
        "endLine": 280,
        "endChar": 66
      },
      "revId": "4a62a888bcbdf318e83965f0ea422238c7f338ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "636ad144_56398234",
        "filename": "fs_mgr/fs_mgr_overlayfs.cpp",
        "patchSetId": 3
      },
      "lineNbr": 280,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-02-08T22:56:41Z",
      "side": 0,
      "message": "Got it, sort of.  I ignore those two errno values in fs_mgr_candidate_list() now but let the others go through.\n\nI\u0027m not saying that not using errno is a blocker here, just a thing to think about.",
      "parentUuid": "83f5edb5_8010b6cb",
      "range": {
        "startLine": 280,
        "startChar": 4,
        "endLine": 280,
        "endChar": 66
      },
      "revId": "4a62a888bcbdf318e83965f0ea422238c7f338ba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}