{
  "comments": [
    {
      "key": {
        "uuid": "0fb56e41_3e219701",
        "filename": "libprocessgroup/profiles/task_profiles.json",
        "patchSetId": 1
      },
      "lineNbr": 500,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2019-09-12T18:28:43Z",
      "side": 1,
      "message": "Not really sure about the purpose but AFAICT task_profiles.json is for profiles, and these are actually sched_policy to profile mapping, isn\u0027t better this mapping being kept in a seperate file better? or at least a seperate section if in the same json file.",
      "range": {
        "startLine": 496,
        "startChar": 5,
        "endLine": 500,
        "endChar": 5
      },
      "revId": "bd5a9d3f4b4377ad4c4510a4b8af083d0b93b403",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "297beb3d_60fce99d",
        "filename": "libprocessgroup/profiles/task_profiles.json",
        "patchSetId": 1
      },
      "lineNbr": 500,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2019-09-13T18:54:34Z",
      "side": 1,
      "message": "I would also prefer aggregate profiles to be described in a separate section, however this approach provides more flexibility in terms of ordering and mixing SetProfile action with other actions, so functionally this approach seems to be better.",
      "parentUuid": "0fb56e41_3e219701",
      "range": {
        "startLine": 496,
        "startChar": 5,
        "endLine": 500,
        "endChar": 5
      },
      "revId": "bd5a9d3f4b4377ad4c4510a4b8af083d0b93b403",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f2a4fced_ab985dbf",
        "filename": "libprocessgroup/profiles/task_profiles.json",
        "patchSetId": 1
      },
      "lineNbr": 500,
      "author": {
        "id": 1324603
      },
      "writtenOn": "2019-09-17T09:26:51Z",
      "side": 1,
      "message": "The purpose is for the future replacement of set_cpuset/sched_policy calls by SetTaskProfiles, so we need to implement an easy way to do it, and Suren suggests to use aggregate profile like this. It seems protobuf does not support (or I don\u0027t know how to) having 2 types of params in one message, so I separate it to another section, but still add it to the same TaskProfiles to keep the same functionality.",
      "parentUuid": "297beb3d_60fce99d",
      "range": {
        "startLine": 496,
        "startChar": 5,
        "endLine": 500,
        "endChar": 5
      },
      "revId": "bd5a9d3f4b4377ad4c4510a4b8af083d0b93b403",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dd76822e_d1817d48",
        "filename": "libprocessgroup/sched_policy.cpp",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-09-12T15:07:08Z",
      "side": 1,
      "message": "We should be able to implement this part, if not all of this function, in terms of the new functions, right?",
      "range": {
        "startLine": 47,
        "startChar": 4,
        "endLine": 80,
        "endChar": 0
      },
      "revId": "bd5a9d3f4b4377ad4c4510a4b8af083d0b93b403",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3bc10ed8_039d37bb",
        "filename": "libprocessgroup/sched_policy.cpp",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1324603
      },
      "writtenOn": "2019-09-17T09:26:51Z",
      "side": 1,
      "message": "Yes, they should be the first client of the new feature. Thanks for reminding :)",
      "parentUuid": "dd76822e_d1817d48",
      "range": {
        "startLine": 47,
        "startChar": 4,
        "endLine": 80,
        "endChar": 0
      },
      "revId": "bd5a9d3f4b4377ad4c4510a4b8af083d0b93b403",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c1055ad6_eb4c33e1",
        "filename": "libprocessgroup/sched_policy.cpp",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-09-12T15:07:08Z",
      "side": 1,
      "message": "Same comment as above.",
      "range": {
        "startLine": 135,
        "startChar": 4,
        "endLine": 160,
        "endChar": 5
      },
      "revId": "bd5a9d3f4b4377ad4c4510a4b8af083d0b93b403",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46850abc_6c53bc5a",
        "filename": "libprocessgroup/sched_policy.cpp",
        "patchSetId": 1
      },
      "lineNbr": 160,
      "author": {
        "id": 1324603
      },
      "writtenOn": "2019-09-17T09:26:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c1055ad6_eb4c33e1",
      "range": {
        "startLine": 135,
        "startChar": 4,
        "endLine": 160,
        "endChar": 5
      },
      "revId": "bd5a9d3f4b4377ad4c4510a4b8af083d0b93b403",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6073506e_6e010dc0",
        "filename": "libprocessgroup/task_profiles.cpp",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2019-09-13T18:54:34Z",
      "side": 1,
      "message": "Could you refactor the code so that these functions (https://android.googlesource.com/platform/system/core/+/master/libprocessgroup/processgroup.cpp#118) are implemented here inside task_profiles.cpp and processgroup.cpp simply calls them? Then you would not need forward declarations here.",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 51,
        "endChar": 0
      },
      "revId": "bd5a9d3f4b4377ad4c4510a4b8af083d0b93b403",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0d8358a9_52b5a26e",
        "filename": "libprocessgroup/task_profiles.cpp",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1324603
      },
      "writtenOn": "2019-09-17T09:26:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6073506e_6e010dc0",
      "range": {
        "startLine": 47,
        "startChar": 0,
        "endLine": 51,
        "endChar": 0
      },
      "revId": "bd5a9d3f4b4377ad4c4510a4b8af083d0b93b403",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ca5ae2a_ce1cf2e1",
        "filename": "libprocessgroup/task_profiles.cpp",
        "patchSetId": 1
      },
      "lineNbr": 456,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2019-09-13T18:54:34Z",
      "side": 1,
      "message": "In here we need to check for recursive usage of the profile to prevent cases like this:\n\nProfile \"A\" { Actions { \"SetProfile\", [\"A\"] } }\n\nor an indirect recursion like this:\n\nProfile \"A\" { Actions { \"SetProfile\", [\"B\"] } }\nProfile \"B\" { Actions { \"SetProfile\", [\"A\"] } }\n\nFirst recursion can be trivially checked to make sure \"profiles\" does not contain \"profile_name\" and the second one can be implemented by simply checking that all values in \"profiles\" are valid profiles using TaskProfiles::GetProfile(profiles[i]) for all \"i\". IOW profiles can be used only after they are defined. If we implement such a check then\n\nProfile \"A\" { Actions { \"SetProfile\", [\"B\"] } }\nProfile \"B\" { Actions { \"SetProfile\", [\"A\"] } }\n\nwould yield an error because profile \"B\" is used in the first line before it is defined in the second line.",
      "range": {
        "startLine": 456,
        "startChar": 20,
        "endLine": 456,
        "endChar": 70
      },
      "revId": "bd5a9d3f4b4377ad4c4510a4b8af083d0b93b403",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "59ec6c1b_1d1ff7a3",
        "filename": "libprocessgroup/task_profiles.cpp",
        "patchSetId": 1
      },
      "lineNbr": 456,
      "author": {
        "id": 1324603
      },
      "writtenOn": "2019-09-17T09:26:51Z",
      "side": 1,
      "message": "Yes, it should check the recursive usages. Thanks for the tips :)",
      "parentUuid": "7ca5ae2a_ce1cf2e1",
      "range": {
        "startLine": 456,
        "startChar": 20,
        "endLine": 456,
        "endChar": 70
      },
      "revId": "bd5a9d3f4b4377ad4c4510a4b8af083d0b93b403",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e86e391_a26ead46",
        "filename": "libprocessgroup/task_profiles.h",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-09-12T15:07:08Z",
      "side": 1,
      "message": "const std::vector\u003cstd::string\u003e\u0026",
      "range": {
        "startLine": 144,
        "startChar": 21,
        "endLine": 144,
        "endChar": 55
      },
      "revId": "bd5a9d3f4b4377ad4c4510a4b8af083d0b93b403",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c8c8717_c3ac281f",
        "filename": "libprocessgroup/task_profiles.h",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1324603
      },
      "writtenOn": "2019-09-17T09:26:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e86e391_a26ead46",
      "range": {
        "startLine": 144,
        "startChar": 21,
        "endLine": 144,
        "endChar": 55
      },
      "revId": "bd5a9d3f4b4377ad4c4510a4b8af083d0b93b403",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0d43bedd_0863a8e2",
        "filename": "libprocessgroup/task_profiles.h",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-09-12T15:07:08Z",
      "side": 1,
      "message": "vectors have a copy constructor so you only need profiles_(profiles).",
      "revId": "bd5a9d3f4b4377ad4c4510a4b8af083d0b93b403",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ecbb422_480cb90d",
        "filename": "libprocessgroup/task_profiles.h",
        "patchSetId": 1
      },
      "lineNbr": 145,
      "author": {
        "id": 1324603
      },
      "writtenOn": "2019-09-17T09:26:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "0d43bedd_0863a8e2",
      "revId": "bd5a9d3f4b4377ad4c4510a4b8af083d0b93b403",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c65b5295_222221a2",
        "filename": "libprocessgroup/task_profiles.h",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-09-12T15:07:08Z",
      "side": 1,
      "message": "You don\u0027t need this; just use profiles_.",
      "revId": "bd5a9d3f4b4377ad4c4510a4b8af083d0b93b403",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4aba5c73_3ad35308",
        "filename": "libprocessgroup/task_profiles.h",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1324603
      },
      "writtenOn": "2019-09-17T09:26:51Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c65b5295_222221a2",
      "revId": "bd5a9d3f4b4377ad4c4510a4b8af083d0b93b403",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}