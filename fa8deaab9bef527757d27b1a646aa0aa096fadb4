{
  "comments": [
    {
      "key": {
        "uuid": "fbc6c32f_3706da79",
        "filename": "libsync/sync.c",
        "patchSetId": 1
      },
      "lineNbr": 38,
      "author": {
        "id": 1015340
      },
      "writtenOn": "2016-08-16T16:40:05Z",
      "side": 1,
      "message": "Is the legacy WAIT ioctl actually needed?  The legacy fence implementation also had a poll() handler.",
      "revId": "fa8deaab9bef527757d27b1a646aa0aa096fadb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba2277b_e3ebb26f",
        "filename": "libsync/sync.c",
        "patchSetId": 1
      },
      "lineNbr": 47,
      "author": {
        "id": 1117033
      },
      "writtenOn": "2016-08-16T08:24:29Z",
      "side": 1,
      "message": "- Coding style : Tab \u003d\u003d\u003e space for android\n- no need of line 47. After if block anyways same variable gets returned",
      "revId": "fa8deaab9bef527757d27b1a646aa0aa096fadb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba2277b_83e8be74",
        "filename": "libsync/sync.c",
        "patchSetId": 1
      },
      "lineNbr": 104,
      "author": {
        "id": 1117033
      },
      "writtenOn": "2016-08-16T08:24:29Z",
      "side": 1,
      "message": "how about using calloc instead of malloc to do zero initialization",
      "revId": "fa8deaab9bef527757d27b1a646aa0aa096fadb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9ba2277b_a3e5ba9d",
        "filename": "libsync/sync.c",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 1117033
      },
      "writtenOn": "2016-08-16T08:24:29Z",
      "side": 1,
      "message": "indentation tab\u003d\u003espace",
      "revId": "fa8deaab9bef527757d27b1a646aa0aa096fadb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}