{
  "comments": [
    {
      "key": {
        "uuid": "2c27cd73_2f586e3f",
        "filename": "init/service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-29T17:30:27Z",
      "side": 1,
      "message": "Given the two comments in the header file, maybe even just have the logic to not retry in here,\n\nif (signal \u003d\u003d SIGTERM) {\n  // No reason to send sigterm more than once, etc etc\n  killProcessGroupOnce(uid_, pid_, signal);\n} else {\n  killProcessGroup(uid_, pid_, signal);\n}\n\n?",
      "revId": "8fd0f1c8d9726a66d562a769455cfb887cfd34dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "725c2796_8366ee7b",
        "filename": "init/service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 209,
      "author": {
        "id": 1010465
      },
      "writtenOn": "2017-03-29T18:46:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2c27cd73_2f586e3f",
      "revId": "8fd0f1c8d9726a66d562a769455cfb887cfd34dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f877a64f_db920c92",
        "filename": "init/service.h",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-29T17:30:27Z",
      "side": 1,
      "message": "Would we ever want retry \u003d true here?  The commit message states that there\u0027s no point in sending SIGTERM twice, so we can drop this parameter and have this always false, right?\n\nReboot is the only user of this that sets it as false with this CL as is.",
      "revId": "8fd0f1c8d9726a66d562a769455cfb887cfd34dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "486baae0_21a24964",
        "filename": "init/service.h",
        "patchSetId": 1
      },
      "lineNbr": 80,
      "author": {
        "id": 1010465
      },
      "writtenOn": "2017-03-29T18:46:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f877a64f_db920c92",
      "revId": "8fd0f1c8d9726a66d562a769455cfb887cfd34dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "eed01c23_10be7bde",
        "filename": "init/service.h",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-29T17:30:27Z",
      "side": 1,
      "message": "Similarly here, StopOrReset() sends SIGKILL, which we presumably do want to retry.  We don\u0027t have any callers setting this to false with this CL, so let\u0027s drop this change.",
      "revId": "8fd0f1c8d9726a66d562a769455cfb887cfd34dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b0c4293_1beafa22",
        "filename": "init/service.h",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1010465
      },
      "writtenOn": "2017-03-29T18:46:42Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "eed01c23_10be7bde",
      "revId": "8fd0f1c8d9726a66d562a769455cfb887cfd34dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9c21d52f_078db45c",
        "filename": "init/service.h",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-03-29T19:59:18Z",
      "side": 1,
      "message": "why would you retry SIGKILL? it can\u0027t be blocked. why would it work a second time?",
      "parentUuid": "eed01c23_10be7bde",
      "revId": "8fd0f1c8d9726a66d562a769455cfb887cfd34dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d454e0af_db70ca2f",
        "filename": "init/service.h",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2017-03-29T20:04:24Z",
      "side": 1,
      "message": "The original use of retry was to catch forks between finding the list of processes and sending the signals.",
      "parentUuid": "9c21d52f_078db45c",
      "revId": "8fd0f1c8d9726a66d562a769455cfb887cfd34dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "404f8d55_a7830599",
        "filename": "init/service.h",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1010465
      },
      "writtenOn": "2017-03-29T20:06:44Z",
      "side": 1,
      "message": "Would it be the same for SIGTERM? If process is not handling SIGTERM but if it is forking while SIGTERM is sent, should we retry?",
      "parentUuid": "d454e0af_db70ca2f",
      "revId": "8fd0f1c8d9726a66d562a769455cfb887cfd34dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a081e66_53c0befc",
        "filename": "init/service.h",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1010465
      },
      "writtenOn": "2017-03-29T20:08:30Z",
      "side": 1,
      "message": "Maybe does not matter. I do not see any other place in init where SIGTERM is used.",
      "parentUuid": "404f8d55_a7830599",
      "revId": "8fd0f1c8d9726a66d562a769455cfb887cfd34dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ac75fa5c_bb0f8c91",
        "filename": "init/service.h",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-29T20:30:50Z",
      "side": 1,
      "message": "\u003e The original use of retry was to catch forks between finding the list of processes and sending the signals\n\nSeems like we should leave the retry as is with SIGTERM to catch these forked processes then?\n\nOr perhaps we could do a more elaborate check instead of retrying?  Store a list of pids that we\u0027ve killed before and if they and only they are still running then we know our signals have been caught and there is nothing else we can do, so return then?",
      "parentUuid": "2a081e66_53c0befc",
      "revId": "8fd0f1c8d9726a66d562a769455cfb887cfd34dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9caeff87_9878cd4a",
        "filename": "init/service.h",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1010465
      },
      "writtenOn": "2017-03-29T20:49:52Z",
      "side": 1,
      "message": "I think no retry for SIGTERM is enough. Other part of init only need to do SIGKILL while only shutdown flow is giving SIGTERM first and then SIGKILL. For shutdown flow, there is no need to retry at all. Either add explicit call for once (or option like in this patch) or change SIGTERM to do once always. If we find use case to send SIGTERM in other usage, we can figure out the right way to handle it later. As we have only one concrete use case where try once is enough, building anything more complex can become useless.",
      "parentUuid": "ac75fa5c_bb0f8c91",
      "revId": "8fd0f1c8d9726a66d562a769455cfb887cfd34dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8819e8b8_2a891166",
        "filename": "init/service.h",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-03-29T20:57:53Z",
      "side": 1,
      "message": "Agreed.  I think these changes are good once the comments I had originally are taken care of.",
      "parentUuid": "9caeff87_9878cd4a",
      "revId": "8fd0f1c8d9726a66d562a769455cfb887cfd34dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}