{
  "comments": [
    {
      "key": {
        "uuid": "121e620d_73ab8318",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 2
      },
      "lineNbr": 1043,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-06-15T15:54:38Z",
      "side": 1,
      "message": "sure you don\u0027t want to add a `kSuccess \u003d 0` to avoid this?",
      "range": {
        "startLine": 1043,
        "startChar": 24,
        "endLine": 1043,
        "endChar": 44
      },
      "revId": "037a320e55cb5352eea3ff2d2b69358fe1261a66",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea1273fb_4d9cb248",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 2
      },
      "lineNbr": 1043,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2017-06-15T15:55:58Z",
      "side": 1,
      "message": "This isn\u0027t for kSuccess, this is for \"Unknown error code\". I can\u0027t avoid this, but I can avoid the \u003d\u003d 0 on line 1039. It was a toss up between ErrorCodes::kSuccess and that if statement. I don\u0027t have a strong preference.",
      "parentUuid": "121e620d_73ab8318",
      "range": {
        "startLine": 1043,
        "startChar": 24,
        "endLine": 1043,
        "endChar": 44
      },
      "revId": "037a320e55cb5352eea3ff2d2b69358fe1261a66",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4fca9b50_31afa5b1",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 2
      },
      "lineNbr": 1043,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-06-15T16:00:19Z",
      "side": 1,
      "message": "remove \"Unknown error code\" from the array and inline it here?",
      "parentUuid": "ea1273fb_4d9cb248",
      "range": {
        "startLine": 1043,
        "startChar": 24,
        "endLine": 1043,
        "endChar": 44
      },
      "revId": "037a320e55cb5352eea3ff2d2b69358fe1261a66",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8df70b8d_3ebeb606",
        "filename": "libziparchive/zip_archive_private.h",
        "patchSetId": 2
      },
      "lineNbr": 44,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-06-15T16:00:19Z",
      "side": 1,
      "message": "...because it\u0027s a bit tricky that if you add a new error, you have to add the string _before_ this.",
      "revId": "037a320e55cb5352eea3ff2d2b69358fe1261a66",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b749524b_f2737d65",
        "filename": "libziparchive/zip_archive_private.h",
        "patchSetId": 2
      },
      "lineNbr": 49,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-06-15T16:00:19Z",
      "side": 1,
      "message": "in fact, does it make more sense to remove min/max too, and just do the negation and check whether it\u0027s in bounds for the array? libbase has the arraysize() macro lying around.",
      "revId": "037a320e55cb5352eea3ff2d2b69358fe1261a66",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}