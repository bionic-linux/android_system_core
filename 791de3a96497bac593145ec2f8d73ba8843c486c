{
  "comments": [
    {
      "key": {
        "uuid": "e37b1ba0_90d56180",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1273909
      },
      "writtenOn": "2020-01-27T12:33:21Z",
      "side": 1,
      "message": "The location is /dev/net/tun also on Archlinux and on Fedora 32.\n\nThis is also the location used by ip (iproute 5.4.0).",
      "revId": "791de3a96497bac593145ec2f8d73ba8843c486c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0c5c032_a7629081",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2020-01-28T03:59:34Z",
      "side": 1,
      "message": "Right, the Android location is /dev/tun - and since this file is AFAICT visible to vpn apps it can\u0027t be removed for backwards compatibility reasons.\n\nThe standard Linux location is /dev/net/tun.\n\nWe have a few choices:\n\n(a) do nothing - ip tuntap continues to not work\n\n(b) patch iproute2 to use /dev/tun - we diverge from upstream\n\n(c1) [this patch] symlink /dev/net/tun --\u003e ../tun\n\n(c2) c1 with absolute path for symlink target\n\n(d) make both /dev/tun \u0026 /dev/net/tun devices\nThis creates two device nodes, with potentially different uid/gid/mode/selinux policy...\n\n(e1) move /dev/tun to /dev/net/tun and then make /dev/tun a symlink to \u0027net/tun\u0027\n\n(e2) e1 with absolute path for symlink target\n\n---\n\nIMHO (a) is broken and diverting from upstream in (b) is undesirable, and in general absolute paths for symlink targets are bad which rules out (c2) and (e2).\n\nHaving two device nodes leads to potentially different permissions on them, which again is undesirable and error-prone.\n\nThat leaves us with just (c1) or (e1).\n\nI\u0027ve chosen (c1) because:\n- I know how to implement it (it\u0027s not at all clear how to make the uevent system create /dev/net \u0026 /dev/net/tun instead of /dev/tun)\n- it\u0027s less likely to break things (/dev/tun doesn\u0027t change) since it just adds an empty dir and extra symlink\n- it still achieves the goal of making both paths work.",
      "parentUuid": "e37b1ba0_90d56180",
      "revId": "791de3a96497bac593145ec2f8d73ba8843c486c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa7a0332_dae655c8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2020-01-28T04:19:25Z",
      "side": 1,
      "message": "Do apps actually open /dev/tun themselves as part of regular Android API calls? If not, maybe we can just move the file without impacting apps?\n\nIf not, there\u0027s another option: switch all Android code to use /dev/net/tun with fallback to /dev/tun, keep /dev/tun around only for compatibility reasons, delete it on new devices, and then after a few years delete it from the code.\n\nIn any case, looks like we\u0027ll need sepolicy changes as well since there is explicit sepolicy for this file.\n\nDoes anyone know how we ended up using an invalid name, anyway? Is this the name that very old kernels used to use, and we never switched away from it?",
      "parentUuid": "a0c5c032_a7629081",
      "revId": "791de3a96497bac593145ec2f8d73ba8843c486c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b67d3d0d_ee7cb510",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2020-01-28T05:50:05Z",
      "side": 1,
      "message": "I think it\u0027s perfectly possible for a C/C++ native NDK based app to be opening it via raw syscalls.\n\nSee:\n  cts/tests/tests/net/src/android/net/cts/VpnServiceTest.java\n    File file \u003d new File(\"/dev/tun\");\n\nBut we also have references to /dev/tun in \n  system/netd/tests/binder_test.cpp [unused?? - will remove]\n  system/netd/tests/tun_interface.cpp\n  system/netd/server/ClatdController.cpp\n  kernel/tests/net/test/multinetwork_base.py [has fallback]\n  frameworks/base/services/core/jni/com_android_server_TestNetworkService.cpp\n\nI kind of doubt the migration effort is worth it.\n\nThis approach (of just adding a directory and symlink) doesn\u0027t require updating any selinux stuff either - since using /dev/net/tun just uses /dev/tun and it\u0027s permissions model.\n\nAnd, no I don\u0027t know what the history behind the wrong location is.",
      "parentUuid": "aa7a0332_dae655c8",
      "revId": "791de3a96497bac593145ec2f8d73ba8843c486c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "25c09960_05d3af64",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1273909
      },
      "writtenOn": "2020-01-28T07:25:59Z",
      "side": 1,
      "message": "The kernel sends \"uevent\" messages over netlink whenever a new device is hotplugged or discovered at boot time. In Linux distros, udevd (now renamed to systemd-udevd) catches these events and creates the device nodes based on the config in /lib/udev/rules.d and /etc/udev/rules.d.\n\nIn android, this daemon appears to have been merged into init, and it\u0027s also configuration-driven:\n https://cs.android.com/android/platform/superproject/+/master:system/core/init/ueventd.cpp;l\u003d291-292?ss\u003dandroid\u0026q\u003dsystem%2Fcore%2Finit%2Fueventd.cpp",
      "parentUuid": "aa7a0332_dae655c8",
      "revId": "791de3a96497bac593145ec2f8d73ba8843c486c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "820eec7e_154a1368",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1273909
      },
      "writtenOn": "2020-01-28T07:27:50Z",
      "side": 1,
      "message": "There, I found the line we need to change to go with maze\u0027s proposal (e1):\n  https://cs.android.com/android/platform/superproject/+/master:system/core/rootdir/ueventd.rc;l\u003d58?ss\u003dandroid",
      "parentUuid": "25c09960_05d3af64",
      "revId": "791de3a96497bac593145ec2f8d73ba8843c486c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b2e0b3e9_e0ae6b24",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2020-01-28T07:37:07Z",
      "side": 1,
      "message": "I\u0027ve known about that line all along.\n\nBut all it includes is the uid/gid/mode of /dev/tun.\n\nAdding a /dev/net/tun line doesn\u0027t work.",
      "parentUuid": "820eec7e_154a1368",
      "revId": "791de3a96497bac593145ec2f8d73ba8843c486c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1e90125_b04c4c68",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1273909
      },
      "writtenOn": "2020-01-29T02:39:27Z",
      "side": 1,
      "message": "\u003e But all it includes is the uid/gid/mode of /dev/tun.\n\nIt doesn\u0027t also *create* the device node?\nIf not, then where are the device nodes configured?\n\n\u003e Adding a /dev/net/tun line doesn\u0027t work.\n\nBecause the directory is missing? I\u0027m not familiar with the syntax of ueventd.rc, but a few lines above I see:\n\nsubsystem sound\n    devname uevent_devpath\n    dirname /dev/snd\n\nPerhaps the same could be done for /dev/net?",
      "parentUuid": "b2e0b3e9_e0ae6b24",
      "revId": "791de3a96497bac593145ec2f8d73ba8843c486c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c20db927_693bbcab",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2020-01-29T04:19:49Z",
      "side": 1,
      "message": "It doesn\u0027t seem to create the device node.\n\nMaybe.  I have no idea how this works.",
      "parentUuid": "d1e90125_b04c4c68",
      "revId": "791de3a96497bac593145ec2f8d73ba8843c486c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a49ad845_91df0a80",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2020-01-29T16:01:14Z",
      "side": 1,
      "message": "That line is just used to apply those permissions when the node is made.  All devices are created as /dev/\u003cbasename of the uevent DEVPATH\u003e unless there is a `subsystem` section that applies to the device, in which case that logic takes over.\n\nIt\u0027s all historical but since older apps and vendor processes (due to Treble) can depend on these paths, it won\u0027t be easily changeable.  I try to capture how it names devices it in the README.md for ueventd.\n\nhttps://cs.android.com/android/platform/superproject/+/master:system/core/init/README.ueventd.md\n\nWe could change this to try to create both the \u0027typical linux\u0027 paths and the \u0027Android\u0027 paths generically, but this tends not to be a big problem.  We\u0027d likely be stuck with both forever if we tried, since it would be difficult to limit apps to only open the new \u0027typical linux\u0027 paths, and even if we could limit them, we\u0027d have to support them backwards compatibly for years.  All-in-all, it never seemed worth it.",
      "parentUuid": "c20db927_693bbcab",
      "revId": "791de3a96497bac593145ec2f8d73ba8843c486c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "688a2856_326729a2",
        "filename": "rootdir/init.rc",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1273909
      },
      "writtenOn": "2020-01-29T03:27:18Z",
      "side": 1,
      "message": "What\u0027s symlink? How is it different from the usual ln -s?",
      "range": {
        "startLine": 36,
        "startChar": 4,
        "endLine": 36,
        "endChar": 11
      },
      "revId": "791de3a96497bac593145ec2f8d73ba8843c486c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "866737ff_c29979c0",
        "filename": "rootdir/init.rc",
        "patchSetId": 1
      },
      "lineNbr": 36,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2020-01-29T04:19:49Z",
      "side": 1,
      "message": "I assume it\u0027s the same.  It\u0027s what\u0027s used in this file (see further down).",
      "parentUuid": "688a2856_326729a2",
      "range": {
        "startLine": 36,
        "startChar": 4,
        "endLine": 36,
        "endChar": 11
      },
      "revId": "791de3a96497bac593145ec2f8d73ba8843c486c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}