{
  "comments": [
    {
      "key": {
        "uuid": "f1dbc13c_c8b952f9",
        "filename": "fastboot/Android.bp",
        "patchSetId": 13
      },
      "lineNbr": 2,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-09T19:33:15Z",
      "side": 1,
      "message": "why 2?",
      "range": {
        "startLine": 2,
        "startChar": 11,
        "endLine": 2,
        "endChar": 23
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2fe01939_5e7ea2fd",
        "filename": "fastboot/Android.bp",
        "patchSetId": 13
      },
      "lineNbr": 2,
      "author": {
        "id": 1336956
      },
      "writtenOn": "2018-07-09T20:03:36Z",
      "side": 1,
      "message": "Once the API is stable, I was planning to kill the original libfastboot. Then this one can be renamed to libfastboot.\n\nSince I haven\u0027t migrated fastboot_test yet to use the new library, I didn\u0027t want to break the build. Otherwise, I would have already done this.",
      "parentUuid": "f1dbc13c_c8b952f9",
      "range": {
        "startLine": 2,
        "startChar": 11,
        "endLine": 2,
        "endChar": 23
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3093bdd_828467ac",
        "filename": "fastboot/Android.bp",
        "patchSetId": 13
      },
      "lineNbr": 2,
      "author": {
        "id": 1156728
      },
      "writtenOn": "2018-07-10T05:35:50Z",
      "side": 1,
      "message": "Pablo, I cc\u0027ed you because of b/70804373 .. you might be interested in the outcome.\n\nElliott, after we come to basic agreement on this patchset, should Aaron migrate fastboot_test to the new API on a second patch, and rename this one to \"libfastboot\"?  Seems like this patch is big enough.",
      "parentUuid": "2fe01939_5e7ea2fd",
      "range": {
        "startLine": 2,
        "startChar": 11,
        "endLine": 2,
        "endChar": 23
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2423e64e_355702dd",
        "filename": "fastboot/Android.bp",
        "patchSetId": 13
      },
      "lineNbr": 2,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-10T16:13:14Z",
      "side": 1,
      "message": "yeah, i think that doing this in two stages makes sense. just wanted to check there was a plan.",
      "parentUuid": "d3093bdd_828467ac",
      "range": {
        "startLine": 2,
        "startChar": 11,
        "endLine": 2,
        "endChar": 23
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5e7c0364_7c40ea56",
        "filename": "fastboot/Android.bp",
        "patchSetId": 13
      },
      "lineNbr": 43,
      "author": {
        "id": 1156728
      },
      "writtenOn": "2018-07-10T05:35:50Z",
      "side": 1,
      "message": "needs mac too.. need help testing that?",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 43,
        "endChar": 14
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "94f65d0b_78f46891",
        "filename": "fastboot/Android.bp",
        "patchSetId": 13
      },
      "lineNbr": 55,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-09T19:33:15Z",
      "side": 1,
      "message": "exported headers should always be in their own directory. you don\u0027t want callers to be saying `#include \u003cutils.h\u003e`... everyone has a \"utils.h\". `#include \u003cfastboot/utils.h\u003e` makes that unambiguous.\n\nso create an include/fastboot/ and move the exported headers there (and leave the private ones here).",
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e68c06e7_9bf65137",
        "filename": "fastboot/Android.bp",
        "patchSetId": 13
      },
      "lineNbr": 55,
      "author": {
        "id": 1336956
      },
      "writtenOn": "2018-07-09T20:03:36Z",
      "side": 1,
      "message": "Yep, this is on my todo list. I haven\u0027t done it yet because it involves modifying the original Android.mk for fastboot to look for headers in the new include folder.",
      "parentUuid": "94f65d0b_78f46891",
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a5cf9d70_d2015518",
        "filename": "fastboot/Android.bp",
        "patchSetId": 13
      },
      "lineNbr": 55,
      "author": {
        "id": 1156728
      },
      "writtenOn": "2018-07-10T05:35:50Z",
      "side": 1,
      "message": "That should be OK on this patch",
      "parentUuid": "e68c06e7_9bf65137",
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3dcbaf36_b4250ded",
        "filename": "fastboot/Android.mk",
        "patchSetId": 13
      },
      "lineNbr": 58,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-09T19:33:15Z",
      "side": 1,
      "message": "tabs\n\n(where order isn\u0027t otherwise meaningful, lists should be sorted alphabetically)",
      "range": {
        "startLine": 58,
        "startChar": 0,
        "endLine": 58,
        "endChar": 2
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5d3abdb4_e0beeb69",
        "filename": "fastboot/engine.cpp",
        "patchSetId": 13
      },
      "lineNbr": 90,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-09T19:33:15Z",
      "side": 1,
      "message": "were you planning on having a follow-on patch to remove all this cruft and just use the new API directly?",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 90,
        "endChar": 0
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a548280c_e614e643",
        "filename": "fastboot/engine.cpp",
        "patchSetId": 13
      },
      "lineNbr": 90,
      "author": {
        "id": 1336956
      },
      "writtenOn": "2018-07-09T20:19:07Z",
      "side": 1,
      "message": "fb_init() would have to stay, unless I reworked engine.cpp and turned it into a class and did the work in the constructor.\n\nI don\u0027t consider the latter two cruft. Doing it this way avoids the need to pass around the fastboot instance across every single function that uses it. Look at fastboot.cpp before and note how nearly every method has a transport pointer argument; to me that is far more crufty.\nThis works because the fastboot tool should never need to have more than one fastboot instance at once.\n\nI would agree though that turning engine.cpp into a class would be far cleaner.",
      "parentUuid": "5d3abdb4_e0beeb69",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 90,
        "endChar": 0
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a1d56a2a_3e3aabc6",
        "filename": "fastboot/engine.cpp",
        "patchSetId": 13
      },
      "lineNbr": 90,
      "author": {
        "id": 1336956
      },
      "writtenOn": "2018-07-09T20:20:46Z",
      "side": 1,
      "message": "Also fb_get_error() and fb_getvar() follow the original function naming convention, as opposed to fb-\u003eError() and fb-\u003eGetVar(key, *value).",
      "parentUuid": "a548280c_e614e643",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 90,
        "endChar": 0
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "28eef664_7bce20c6",
        "filename": "fastboot/engine.cpp",
        "patchSetId": 13
      },
      "lineNbr": 90,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-09T20:32:55Z",
      "side": 1,
      "message": "that\u0027s a bug, not a feature. once upon a time this was all C, but we\u0027re not avoiding std::string because we used to use strcpy :-)",
      "parentUuid": "a1d56a2a_3e3aabc6",
      "range": {
        "startLine": 87,
        "startChar": 0,
        "endLine": 90,
        "endChar": 0
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b237c43_9ccd4d71",
        "filename": "fastboot/engine.cpp",
        "patchSetId": 13
      },
      "lineNbr": 324,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-09T19:33:15Z",
      "side": 1,
      "message": "why do we need to copy?",
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ae63ec71_d2dca4fd",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 13
      },
      "lineNbr": 1469,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-09T19:33:15Z",
      "side": 1,
      "message": "if you\u0027re going to be exporting all these types, they should probably be in a `namespace fb`.",
      "range": {
        "startLine": 1469,
        "startChar": 4,
        "endLine": 1469,
        "endChar": 13
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8192d6ca_dccbe61c",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 13
      },
      "lineNbr": 1469,
      "author": {
        "id": 1336956
      },
      "writtenOn": "2018-07-09T20:03:36Z",
      "side": 1,
      "message": "Ok, I can do that. Although the original library did not do this. I only added two classes: FastBootAPI, FastBootDriver. Everything else is from the original library, or nested inside the classes namespace.",
      "parentUuid": "ae63ec71_d2dca4fd",
      "range": {
        "startLine": 1469,
        "startChar": 4,
        "endLine": 1469,
        "endChar": 13
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eb7501d9_8440a3b9",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 13
      },
      "lineNbr": 1469,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-10T16:13:14Z",
      "side": 1,
      "message": "the original \"library\" was only a build convenience, not really API.",
      "parentUuid": "8192d6ca_dccbe61c",
      "range": {
        "startLine": 1469,
        "startChar": 4,
        "endLine": 1469,
        "endChar": 13
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cec9b09_d8d1c69e",
        "filename": "fastboot/fastboot_api.cpp",
        "patchSetId": 13
      },
      "lineNbr": 86,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-09T19:33:15Z",
      "side": 1,
      "message": "it doesn\u0027t really seem like there\u0027s a lot of value to this class? *especially* not if you\u0027re also exposing \"Driver\" to callers anyway.",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 86,
        "endChar": 0
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e187c5cd_1d239d23",
        "filename": "fastboot/fastboot_api.cpp",
        "patchSetId": 13
      },
      "lineNbr": 86,
      "author": {
        "id": 1336956
      },
      "writtenOn": "2018-07-09T20:03:36Z",
      "side": 1,
      "message": "The main purpose is to store the response and info messages from the device. The caller can then query them from the last transaction as needed.\n\nIt also performs the higher level fastboot transactions that are composed on many fastboot driver commands (Require() and getting a list of Partitions()).",
      "parentUuid": "8cec9b09_d8d1c69e",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 86,
        "endChar": 0
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c5377b19_42057de6",
        "filename": "fastboot/fastboot_api.cpp",
        "patchSetId": 13
      },
      "lineNbr": 86,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-09T20:32:55Z",
      "side": 1,
      "message": "why doesn\u0027t Driver do that? seems like you\u0027d never want to override the default implementation?",
      "parentUuid": "e187c5cd_1d239d23",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 86,
        "endChar": 0
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "76c06d93_6d849f22",
        "filename": "fastboot/fastboot_api.cpp",
        "patchSetId": 13
      },
      "lineNbr": 86,
      "author": {
        "id": 1336956
      },
      "writtenOn": "2018-07-09T21:19:53Z",
      "side": 1,
      "message": "The main reason for the split classes, is separating fastboot into the \"command level\" (the driver class) and the \"transaction level\" (API class).\n\nFor example. Executing a single transaction: \"fastboot flash partition\" at the fastboot command granularity is:\nSend: \"download:0x...\", Recv: info messages and a response \"DATA\" message\nSend: binary payload, Recv: info messages and a response \"OKAY\" message\nSend: \"flash:partition\", Recv: info messages and a response \"OKAY\" message\n\nNote: Download\u0027s and Upload\u0027s implementation should be moved to the API class.\n\n\nSomeone who only cares about fastboot issuing fastboot transactions (such as the fastboot tool) should not touch or be exposed to any methods in the driver instance. However, when testing a device\u0027s fastboot implementation, one is testing at the granularity of fastboot commands and hence needs access to the lower level \"driver\" methods. I believe these two \"Driver\" and API use cases are basically orthogonal.\n\n\nPerhaps if I get rid of the Driver() getter and move Download() and Upload() to the API class, you will be happier.",
      "parentUuid": "c5377b19_42057de6",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 86,
        "endChar": 0
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f2e10e3_39f0a447",
        "filename": "fastboot/fastboot_api.cpp",
        "patchSetId": 13
      },
      "lineNbr": 86,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-10T16:13:14Z",
      "side": 1,
      "message": "yeah, if the caller needs both \"API\" and \"Driver\" then \"API\" isn\u0027t independently useful and should just be rolled in to \"Driver\". but if \"API\" actually does let us hide \"Driver\", then, yeah, that\u0027s worthwhile.\n\nso looking at the existing \"[fb::]Transport\", it seems like \"Driver\" should be \"[fb::]Protocol\"? i\u0027m still struggling with \"API\" though. \"[fb::]Session\"? (\"transaction\" seems wrong because the existing \"Action\" is closer to a single transaction.)",
      "parentUuid": "76c06d93_6d849f22",
      "range": {
        "startLine": 83,
        "startChar": 0,
        "endLine": 86,
        "endChar": 0
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "003a488b_95a7a2be",
        "filename": "fastboot/fastboot_api.h",
        "patchSetId": 13
      },
      "lineNbr": 45,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-09T19:33:15Z",
      "side": 1,
      "message": "\"API\" is a weird name for this.",
      "range": {
        "startLine": 45,
        "startChar": 6,
        "endLine": 45,
        "endChar": 17
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5075147a_60ac7105",
        "filename": "fastboot/fastboot_api.h",
        "patchSetId": 13
      },
      "lineNbr": 45,
      "author": {
        "id": 1336956
      },
      "writtenOn": "2018-07-09T20:03:36Z",
      "side": 1,
      "message": "I have no problem changing it.\n\nJust tell me what you think an appropriate name is and I can find and replace.",
      "parentUuid": "003a488b_95a7a2be",
      "range": {
        "startLine": 45,
        "startChar": 6,
        "endLine": 45,
        "endChar": 17
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8cc1a44f_00abb3bd",
        "filename": "fastboot/fastboot_api.h",
        "patchSetId": 13
      },
      "lineNbr": 45,
      "author": {
        "id": 1156728
      },
      "writtenOn": "2018-07-10T05:35:50Z",
      "side": 1,
      "message": "I thought API sorta made sense :)\n\nMaybe FastbootCmds?  (Is Fastboot preferred over FastBoot?)",
      "parentUuid": "5075147a_60ac7105",
      "range": {
        "startLine": 45,
        "startChar": 6,
        "endLine": 45,
        "endChar": 17
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e8ce2092_633d4ccd",
        "filename": "fastboot/fastboot_api.h",
        "patchSetId": 13
      },
      "lineNbr": 48,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-09T19:33:15Z",
      "side": 1,
      "message": "no C-style casts.\n\nto do what you\u0027re trying to do here, just don\u0027t name the argument.",
      "range": {
        "startLine": 48,
        "startChar": 80,
        "endLine": 48,
        "endChar": 89
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c08e350_3801ef30",
        "filename": "fastboot/fastboot_api.h",
        "patchSetId": 13
      },
      "lineNbr": 48,
      "author": {
        "id": 1336956
      },
      "writtenOn": "2018-07-09T20:03:36Z",
      "side": 1,
      "message": "Yeah, I was just trying to suppress the unused warning. Did not know you could just leave the argument out.",
      "parentUuid": "e8ce2092_633d4ccd",
      "range": {
        "startLine": 48,
        "startChar": 80,
        "endLine": 48,
        "endChar": 89
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f1523230_6a24f51b",
        "filename": "fastboot/fastboot_api.h",
        "patchSetId": 13
      },
      "lineNbr": 54,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-09T19:33:15Z",
      "side": 1,
      "message": "https://google.github.io/styleguide/cppguide.html#Reference_Arguments",
      "range": {
        "startLine": 54,
        "startChar": 48,
        "endLine": 54,
        "endChar": 65
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e164be17_caac6f3e",
        "filename": "fastboot/fastboot_driver.cpp",
        "patchSetId": 13
      },
      "lineNbr": 164,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-10T16:13:14Z",
      "side": 1,
      "message": "these then don\u0027t fit your model -- since they\u0027re just wrappers around the actual implementation -- and should be in the other class.\n\nhow many callers do they have? i\u0027m tempted to say that we _shouldn\u0027t_ make it easy for callers to throw away the detailed response.",
      "range": {
        "startLine": 159,
        "startChar": 0,
        "endLine": 164,
        "endChar": 0
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "24723b32_2f1cbb6a",
        "filename": "fastboot/fastboot_driver.h",
        "patchSetId": 13
      },
      "lineNbr": 43,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-09T19:33:15Z",
      "side": 1,
      "message": "i\u0027m not sure i understand this name either.",
      "range": {
        "startLine": 43,
        "startChar": 14,
        "endLine": 43,
        "endChar": 20
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "84ff35e1_86278e06",
        "filename": "fastboot/fastboot_driver.h",
        "patchSetId": 13
      },
      "lineNbr": 43,
      "author": {
        "id": 1336956
      },
      "writtenOn": "2018-07-09T20:03:36Z",
      "side": 1,
      "message": "What name would you suggest? \n\nFrom wikipedia a driver is:\n\"a device driver is a computer program that operates or controls a particular type of device that is attached to a computer.\"\n\nThis is exactly what this class is doing.",
      "parentUuid": "24723b32_2f1cbb6a",
      "range": {
        "startLine": 43,
        "startChar": 14,
        "endLine": 43,
        "endChar": 20
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8e56feb2_8bfbdcce",
        "filename": "fastboot/fastboot_driver.h",
        "patchSetId": 13
      },
      "lineNbr": 43,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-09T20:32:55Z",
      "side": 1,
      "message": "i think i\u0027d just remove the API class and call this one FastBoot.",
      "parentUuid": "84ff35e1_86278e06",
      "range": {
        "startLine": 43,
        "startChar": 14,
        "endLine": 43,
        "endChar": 20
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9194c7f8_f718484b",
        "filename": "fastboot/fastboot_driver.h",
        "patchSetId": 13
      },
      "lineNbr": 47,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-09T19:33:15Z",
      "side": 1,
      "message": "normally i\u0027d say \"use chrono_literals\", but pirama\u0027s not quite there with libc++ for win32 yet :-(",
      "range": {
        "startLine": 47,
        "startChar": 45,
        "endLine": 47,
        "endChar": 58
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05bd39ab_12c3ffd3",
        "filename": "fastboot/fastboot_driver.h",
        "patchSetId": 13
      },
      "lineNbr": 47,
      "author": {
        "id": 1336956
      },
      "writtenOn": "2018-07-09T20:03:36Z",
      "side": 1,
      "message": "Windows is building with std\u003dc++11 right? I will look and see if there are any appropriate literals that are available.",
      "parentUuid": "9194c7f8_f718484b",
      "range": {
        "startLine": 47,
        "startChar": 45,
        "endLine": 47,
        "endChar": 58
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "511855d3_a37fd3b1",
        "filename": "fastboot/fastboot_driver.h",
        "patchSetId": 13
      },
      "lineNbr": 47,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-09T20:32:55Z",
      "side": 1,
      "message": "the _language_ yes, but not the _library_ yet, so this is at best a TODO. (pirama@ is working on getting us libc++ though.)",
      "parentUuid": "05bd39ab_12c3ffd3",
      "range": {
        "startLine": 47,
        "startChar": 45,
        "endLine": 47,
        "endChar": 58
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95b6abb1_5210d870",
        "filename": "fastboot/fastboot_driver.h",
        "patchSetId": 13
      },
      "lineNbr": 69,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-09T19:33:15Z",
      "side": 1,
      "message": "not obvious what the scope of this comment is.",
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a14361a8_15e9c527",
        "filename": "fastboot/fastboot_driver.h",
        "patchSetId": 13
      },
      "lineNbr": 94,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-09T19:33:15Z",
      "side": 1,
      "message": "so hide them and make the test class a `friend`?",
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6e3cada2_8d7772cc",
        "filename": "fastboot/fastboot_driver.h",
        "patchSetId": 13
      },
      "lineNbr": 94,
      "author": {
        "id": 1336956
      },
      "writtenOn": "2018-07-09T20:03:36Z",
      "side": 1,
      "message": "I was originally going to do this, but decided against it when I realized friend classes are not inherited. \n\nMy tester is composed of tests that all inherit from a FastBootTest ABC. All of these classes need access to these lower level commands. However, due to C++ semantics friend classes are not inherited, so I can not just declare FastBootTest as a friend. I would have to declare every single derived class which would be a mess and make it too closely coupled with the library.",
      "parentUuid": "a14361a8_15e9c527",
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9c46a3a1_64509fde",
        "filename": "fastboot/fastboot_driver.h",
        "patchSetId": 13
      },
      "lineNbr": 94,
      "author": {
        "id": 1336956
      },
      "writtenOn": "2018-07-09T20:07:52Z",
      "side": 1,
      "message": "By \"friend classes are not inherited\", I mean if A is a friend of B, derived classes of A do not inherit A\u0027s friendship.",
      "parentUuid": "6e3cada2_8d7772cc",
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "851a2914_d622a482",
        "filename": "fastboot/fastboot_driver.h",
        "patchSetId": 13
      },
      "lineNbr": 94,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-09T20:32:55Z",
      "side": 1,
      "message": "you can make them more visible in the fixture.",
      "parentUuid": "9c46a3a1_64509fde",
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6d832507_b78e37ef",
        "filename": "fastboot/usb.h",
        "patchSetId": 13
      },
      "lineNbr": 33,
      "author": {
        "id": 1156728
      },
      "writtenOn": "2018-07-10T05:35:50Z",
      "side": 1,
      "message": "What did the \"0\" timeout do?",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 33,
        "endChar": 36
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "78b92dda_b87bfa37",
        "filename": "fastboot/usb_linux.cpp",
        "patchSetId": 13
      },
      "lineNbr": 452,
      "author": {
        "id": 1156728
      },
      "writtenOn": "2018-07-10T05:35:50Z",
      "side": 1,
      "message": "Why did you make these changes about timeout and sleep delay?",
      "range": {
        "startLine": 451,
        "startChar": 0,
        "endLine": 452,
        "endChar": 0
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "043af3e5_a8079922",
        "filename": "fastboot/usb_linux.cpp",
        "patchSetId": 13
      },
      "lineNbr": 452,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-07-10T16:13:14Z",
      "side": 1,
      "message": "yeah, the USB changes seem like they should be a separate patch for jerryzhang and jmgao to review.",
      "parentUuid": "78b92dda_b87bfa37",
      "range": {
        "startLine": 451,
        "startChar": 0,
        "endLine": 452,
        "endChar": 0
      },
      "revId": "39bb6b390f234fb897b355f292153eac5746acba",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}