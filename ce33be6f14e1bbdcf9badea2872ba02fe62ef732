{
  "comments": [
    {
      "key": {
        "uuid": "bc586f85_b459cf56",
        "filename": "libsysprop/include/sysprop/sysprop.h",
        "patchSetId": 12
      },
      "lineNbr": 171,
      "author": {
        "id": 1335438
      },
      "writtenOn": "2018-06-29T08:21:26Z",
      "side": 1,
      "message": "Do we need to clarify the meaning of std::int32_t and std::string in the comment?\n\nWhat are the expected use cases? Does it allow multiple std::string names for a std::int32_t value? Do users want aliases like the boolean property?",
      "revId": "ce33be6f14e1bbdcf9badea2872ba02fe62ef732",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1937d5e_8ff8c19d",
        "filename": "libsysprop/sysprop.cpp",
        "patchSetId": 12
      },
      "lineNbr": 203,
      "author": {
        "id": 1335438
      },
      "writtenOn": "2018-06-29T08:21:26Z",
      "side": 1,
      "message": "Do you want to handle invalid input?\n\nFor example, if I pass \"information\", it returns positive infinity.",
      "revId": "ce33be6f14e1bbdcf9badea2872ba02fe62ef732",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68a30332_76a9a6e5",
        "filename": "libsysprop/sysprop.cpp",
        "patchSetId": 12
      },
      "lineNbr": 248,
      "author": {
        "id": 1335438
      },
      "writtenOn": "2018-06-29T08:21:26Z",
      "side": 1,
      "message": "Can we guard overflows? For example, passing \"123847234587\" could return something.\nstd::stol handles invalid input, but I am not sure if it is okay to use it.",
      "revId": "ce33be6f14e1bbdcf9badea2872ba02fe62ef732",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}