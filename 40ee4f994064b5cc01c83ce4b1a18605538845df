{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f9a0153d_dfb443f6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2021-07-02T00:20:15Z",
      "side": 1,
      "message": "An incremental OTA test on actual device would be good.\n\nThe problem with pre-submit tests are that none of these code path will be tested as it tests downgrade path.",
      "revId": "40ee4f994064b5cc01c83ce4b1a18605538845df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79b96fe0_fbabea6f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1045980
      },
      "writtenOn": "2021-07-02T03:29:25Z",
      "side": 1,
      "message": "Do we have any such tests now? If so, this should be covered by \u0027em, since it switches over the merge path.",
      "parentUuid": "f9a0153d_dfb443f6",
      "revId": "40ee4f994064b5cc01c83ce4b1a18605538845df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1f6cb18_266ac630",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2021-07-02T05:11:36Z",
      "side": 1,
      "message": "pre-submit tests have incremental OTA but they do downgrade tests which doesn\u0027t test the new code path. Although the unit test covers all the cases, but you will have to manually generate an incremental OTA package between two builds and test it out.",
      "parentUuid": "79b96fe0_fbabea6f",
      "revId": "40ee4f994064b5cc01c83ce4b1a18605538845df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f76adac_beb51517",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2021-07-02T13:25:15Z",
      "side": 1,
      "message": "We force VABC in presubmit, even if it\u0027s a downgrade.",
      "parentUuid": "f1f6cb18_266ac630",
      "revId": "40ee4f994064b5cc01c83ce4b1a18605538845df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "214c3504_e3869ef4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2021-07-02T00:20:15Z",
      "side": 1,
      "message": "Looks good. It will go ",
      "revId": "40ee4f994064b5cc01c83ce4b1a18605538845df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "124d8b5b_bc8f254c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2021-07-02T00:21:11Z",
      "side": 1,
      "message": "Typo: I meant patch looks good. Few questions inline..",
      "parentUuid": "214c3504_e3869ef4",
      "revId": "40ee4f994064b5cc01c83ce4b1a18605538845df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2f7e47e1_d7da0314",
        "filename": "fs_mgr/libsnapshot/cow_reader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 409,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2021-07-02T00:20:15Z",
      "side": 1,
      "message": "Thsi check is for backward compatibility right ?",
      "revId": "40ee4f994064b5cc01c83ce4b1a18605538845df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5f72ba3e_dfd497d4",
        "filename": "fs_mgr/libsnapshot/cow_reader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 409,
      "author": {
        "id": 1045980
      },
      "writtenOn": "2021-07-02T02:55:08Z",
      "side": 1,
      "message": "Yeah, if there isn\u0027t a Sequence Op, then we add all CowCopy/CowXor to the front.",
      "parentUuid": "2f7e47e1_d7da0314",
      "revId": "40ee4f994064b5cc01c83ce4b1a18605538845df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e76439f_a418ac90",
        "filename": "fs_mgr/libsnapshot/cow_reader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 411,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2021-07-02T00:20:15Z",
      "side": 1,
      "message": "What does this `else if` check do ? IIUC, this will be REPLACE OPS as they are not part of seq_ops_set ?",
      "revId": "40ee4f994064b5cc01c83ce4b1a18605538845df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d70d7ff_1517c2bf",
        "filename": "fs_mgr/libsnapshot/cow_reader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 411,
      "author": {
        "id": 1045980
      },
      "writtenOn": "2021-07-02T02:55:08Z",
      "side": 1,
      "message": "This adds ops that don\u0027t appear in the sequence op (Zero, Replace, and whatever else we think up) to a generic list, which we then sort by new block order. If we don\u0027t have a sequence op, then count will always be 0.",
      "parentUuid": "1e76439f_a418ac90",
      "revId": "40ee4f994064b5cc01c83ce4b1a18605538845df",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}