{
  "comments": [
    {
      "key": {
        "uuid": "a085232d_cce952d3",
        "filename": "debuggerd/libdebuggerd/tombstone.cpp",
        "patchSetId": 2
      },
      "lineNbr": 163,
      "author": {
        "id": 1581772
      },
      "writtenOn": "2020-03-24T15:43:52Z",
      "side": 1,
      "message": "It seems that passing a tagged address to unwindstack::Memory::Read() may be problematic. IIUC, the concrete implementation could be MemoryRemote::Read(), which in turn uses either process_vm_readv() or ptrace(PTRACE_PEEKTEXT). Either way, these are not covered by the tagged address ABI, because the address belongs to a different address space from the calling thread. In fact if my reading is correct, both syscalls will actual fail if passed a tagged pointer.",
      "range": {
        "startLine": 163,
        "startChar": 27,
        "endLine": 163,
        "endChar": 31
      },
      "revId": "b0d375c17ed3c9dd5e286191b1ec4a1f6a445684",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cce923dc_8a3861f0",
        "filename": "debuggerd/libdebuggerd/tombstone.cpp",
        "patchSetId": 2
      },
      "lineNbr": 163,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2020-03-24T16:02:39Z",
      "side": 1,
      "message": "Yeah, we might need to change MemoryRemote to mask the address, although in my experience it hasn\u0027t been necessary i.e. I\u0027ve seen tombstones containing memory surrounding tagged addresses (which may be a bug?)\n\nThis should be fine for now though, since this is in response to SIGILL and PC should always be untagged.",
      "parentUuid": "a085232d_cce952d3",
      "range": {
        "startLine": 163,
        "startChar": 27,
        "endLine": 163,
        "endChar": 31
      },
      "revId": "b0d375c17ed3c9dd5e286191b1ec4a1f6a445684",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd9ec491_05fa6843",
        "filename": "debuggerd/libdebuggerd/tombstone.cpp",
        "patchSetId": 2
      },
      "lineNbr": 163,
      "author": {
        "id": 1581772
      },
      "writtenOn": "2020-03-25T17:07:37Z",
      "side": 1,
      "message": "Oh yes indeed, I missed that this reads the instruction from the PC value, which is architecturally always untagged, so in any case this code is fine.\n\nI\u0027ve looked at process_vm_readv() more carefully, in fact by chance it looks like it does cope with tagged pointers (it eventually calls get_user_pages_remote(), which is fine). However ptrace(PTRACE_PEEKTEXT) definitely doesn\u0027t cope with tagged pointers, and since it is used as a fallback, it would make sense to mask the address in MemoryRemote.",
      "parentUuid": "cce923dc_8a3861f0",
      "range": {
        "startLine": 163,
        "startChar": 27,
        "endLine": 163,
        "endChar": 31
      },
      "revId": "b0d375c17ed3c9dd5e286191b1ec4a1f6a445684",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}