{
  "comments": [
    {
      "key": {
        "uuid": "f7de39d8_f9e70abb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2018-06-08T20:06:43Z",
      "side": 1,
      "message": "which test is the one that don\u0027t have pc relative encoding?",
      "range": {
        "startLine": 22,
        "startChar": 13,
        "endLine": 22,
        "endChar": 63
      },
      "revId": "928744f57ecba98010d6607729f84658bab86678",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e6e0e43f_6017a5e7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-06-08T22:18:07Z",
      "side": 1,
      "message": "I only added one offline test, the debug_frame_load_bias_arm one.\n\nI intentionally removed the arm exidx sections from the libbinder.so library and left only the debug_frame which has 0xb as the fde encoding.",
      "parentUuid": "f7de39d8_f9e70abb",
      "range": {
        "startLine": 22,
        "startChar": 13,
        "endLine": 22,
        "endChar": 63
      },
      "revId": "928744f57ecba98010d6607729f84658bab86678",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d1f872d6_cef1a612",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2018-06-11T18:50:15Z",
      "side": 1,
      "message": "I see. Better have a comment in the test?",
      "parentUuid": "e6e0e43f_6017a5e7",
      "range": {
        "startLine": 22,
        "startChar": 13,
        "endLine": 22,
        "endChar": 63
      },
      "revId": "928744f57ecba98010d6607729f84658bab86678",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b6f02b2_682301ee",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 22,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-06-11T19:26:54Z",
      "side": 1,
      "message": "I added a comment above the test indicating what it is.",
      "parentUuid": "d1f872d6_cef1a612",
      "range": {
        "startLine": 22,
        "startChar": 13,
        "endLine": 22,
        "endChar": 63
      },
      "revId": "928744f57ecba98010d6607729f84658bab86678",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ce766a5_35adb722",
        "filename": "libunwindstack/DwarfEhFrameWithHdr.cpp",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2018-06-08T20:06:43Z",
      "side": 1,
      "message": "It seems we are sure the table_encoding_ can\u0027t be DW_EH_PE_absptr, add a check in init?",
      "range": {
        "startLine": 113,
        "startChar": 31,
        "endLine": 113,
        "endChar": 32
      },
      "revId": "928744f57ecba98010d6607729f84658bab86678",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0981cba1_f731c94c",
        "filename": "libunwindstack/DwarfEhFrameWithHdr.cpp",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-06-08T22:18:07Z",
      "side": 1,
      "message": "I looked at the arm/x86/x86_64 non-zero load bias generated eh_frames and all of them require this add.\n\nThe table encodings:\n\narm: 0xb\nx86/x86_64: 0x3b\n\nTechnically, the first one is an absolute and the other two are not pc relative. The eh_frame header doesn\u0027t appear to ever include the load bias offset.",
      "parentUuid": "5ce766a5_35adb722",
      "range": {
        "startLine": 113,
        "startChar": 31,
        "endLine": 113,
        "endChar": 32
      },
      "revId": "928744f57ecba98010d6607729f84658bab86678",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6a817f54_c721d0ba",
        "filename": "libunwindstack/DwarfEhFrameWithHdr.cpp",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2018-06-11T18:50:15Z",
      "side": 1,
      "message": "I searched some libs on arm, they all have 0x3b table enc. which lib on arm did you find having 0xb table encoding?",
      "parentUuid": "0981cba1_f731c94c",
      "range": {
        "startLine": 113,
        "startChar": 31,
        "endLine": 113,
        "endChar": 32
      },
      "revId": "928744f57ecba98010d6607729f84658bab86678",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "02511b21_4597faae",
        "filename": "libunwindstack/DwarfEhFrameWithHdr.cpp",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-06-11T19:26:54Z",
      "side": 1,
      "message": "All of the non-zero load bias arm libraries that I\u0027ve found are all encoding the debug frame as 0xb.\n\nExamples:\n\nlibbinder.so\nlibc++.so\n\nAre you looking in the right place for the fde encoding? It\u0027s in the cie entry. You also have to look in the symbols/system/lib directory because the debug frame is usually stripped.\n\nAlso, the libbinder.so in the debug_frame_load_bias_arm has fde entries encoded as 0xb.",
      "parentUuid": "6a817f54_c721d0ba",
      "range": {
        "startLine": 113,
        "startChar": 31,
        "endLine": 113,
        "endChar": 32
      },
      "revId": "928744f57ecba98010d6607729f84658bab86678",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e575cb7_3553b449",
        "filename": "libunwindstack/DwarfEhFrameWithHdr.cpp",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2018-06-11T19:42:58Z",
      "side": 1,
      "message": "We are talking about .eh_frame_hdr here, right? And .eh_frame_hdr isn\u0027t stripped.",
      "parentUuid": "02511b21_4597faae",
      "range": {
        "startLine": 113,
        "startChar": 31,
        "endLine": 113,
        "endChar": 32
      },
      "revId": "928744f57ecba98010d6607729f84658bab86678",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5ff6fe2b_6aaf34d7",
        "filename": "libunwindstack/DwarfEhFrameWithHdr.cpp",
        "patchSetId": 2
      },
      "lineNbr": 113,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-06-12T01:53:33Z",
      "side": 1,
      "message": "Oops, I was talking about debug frame sections. I somehow got this confused with the DwarfSection code. It turns out that every encoding I see is always 0x3b for the entries in the header.\n\nI wound up changing the code a bit to what I think is a better interpretation of these encodings. I have added new tests for this but I don\u0027t have a real world example, if you have one, please let me know.",
      "parentUuid": "2e575cb7_3553b449",
      "range": {
        "startLine": 113,
        "startChar": 31,
        "endLine": 113,
        "endChar": 32
      },
      "revId": "928744f57ecba98010d6607729f84658bab86678",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}