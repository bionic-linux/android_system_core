{
  "comments": [
    {
      "key": {
        "uuid": "f18be02e_5dd6c949",
        "filename": "logd/LogBuffer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 375,
      "author": {
        "id": 1131829
      },
      "writtenOn": "2017-03-06T18:58:18Z",
      "side": 1,
      "message": "My C++ got rusty, is behavior of this defined when the list is empty?\nChecked with g++, it seems to remain the same iterator, which is fine, but I failed to find it in the standard.",
      "range": {
        "startLine": 375,
        "startChar": 4,
        "endLine": 375,
        "endChar": 9
      },
      "revId": "14a660c96827434764617c5792ca73c3920898af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c30ce414_db0c30ce",
        "filename": "logd/LogBuffer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 375,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2017-03-06T19:09:41Z",
      "side": 1,
      "message": "GREAT CATCH, change in checking from previous code, we did check if \u0027it\u0027 was _not_ begin() before deciding to decrement.",
      "parentUuid": "f18be02e_5dd6c949",
      "range": {
        "startLine": 375,
        "startChar": 4,
        "endLine": 375,
        "endChar": 9
      },
      "revId": "14a660c96827434764617c5792ca73c3920898af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59dc1f45_67207a15",
        "filename": "logd/LogBuffer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 395,
      "author": {
        "id": 1131829
      },
      "writtenOn": "2017-03-06T18:58:18Z",
      "side": 1,
      "message": "IIUC, sequence number reshuffling may change the element that is pointed to by this mEnd. Maybe it is fine, just to double check.",
      "range": {
        "startLine": 395,
        "startChar": 26,
        "endLine": 395,
        "endChar": 38
      },
      "revId": "14a660c96827434764617c5792ca73c3920898af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "044a2a60_5a018839",
        "filename": "logd/LogBuffer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 395,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2017-03-06T19:09:41Z",
      "side": 1,
      "message": "View this as a reader watermark that we are not allowed to pass. The tests below ensure that mEnd of the furthest reader is not shuffled.",
      "parentUuid": "59dc1f45_67207a15",
      "range": {
        "startLine": 395,
        "startChar": 26,
        "endLine": 395,
        "endChar": 38
      },
      "revId": "14a660c96827434764617c5792ca73c3920898af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "65a7bd30_c8789197",
        "filename": "logd/LogBuffer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 415,
      "author": {
        "id": 1131829
      },
      "writtenOn": "2017-03-06T18:58:18Z",
      "side": 1,
      "message": "Since we access mSequence anyway, maybe we can just use std::swap()?",
      "range": {
        "startLine": 412,
        "startChar": 16,
        "endLine": 415,
        "endChar": 39
      },
      "revId": "14a660c96827434764617c5792ca73c3920898af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c888b149_475d2ce0",
        "filename": "logd/LogBuffer.cpp",
        "patchSetId": 1
      },
      "lineNbr": 415,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2017-03-06T19:09:41Z",
      "side": 1,
      "message": "Good point!",
      "parentUuid": "65a7bd30_c8789197",
      "range": {
        "startLine": 412,
        "startChar": 16,
        "endLine": 415,
        "endChar": 39
      },
      "revId": "14a660c96827434764617c5792ca73c3920898af",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}