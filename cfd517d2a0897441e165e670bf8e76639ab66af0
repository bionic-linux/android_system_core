{
  "comments": [
    {
      "key": {
        "uuid": "f6241b9e_34b1ab6e",
        "filename": "base/logging.cpp",
        "patchSetId": 4
      },
      "lineNbr": 580,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-01-23T23:15:28Z",
      "side": 0,
      "message": "If one calls SetDefaultTag(\"\") then gDefaultTag gets set to nullptr so the printed tag becomes the progname again. Shouldn\u0027t the replacement code replicate that behaviour (and test it)?",
      "range": {
        "startLine": 579,
        "startChar": 0,
        "endLine": 580,
        "endChar": 51
      },
      "revId": "cfd517d2a0897441e165e670bf8e76639ab66af0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "defc59a2_a18cfbf2",
        "filename": "base/logging.cpp",
        "patchSetId": 4
      },
      "lineNbr": 580,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2020-01-23T23:43:27Z",
      "side": 0,
      "message": "Is that useful behavior?  I don\u0027t see any of the callers doing that; even the zygote call first checked nice_name.has_value() before calling SetThreadName().  Does it expect an empty string even though it has a value there?\n\nIt\u0027s strange that there wasn\u0027t a test for this previously if it is indeed useful.  I had wondered why there was this strange dance with pointers, but it seemed like a mistake more than an explicit feature to replicate.",
      "parentUuid": "f6241b9e_34b1ab6e",
      "range": {
        "startLine": 579,
        "startChar": 0,
        "endLine": 580,
        "endChar": 51
      },
      "revId": "cfd517d2a0897441e165e670bf8e76639ab66af0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c57409e4_db563032",
        "filename": "base/logging.cpp",
        "patchSetId": 4
      },
      "lineNbr": 580,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2020-01-23T23:59:48Z",
      "side": 0,
      "message": "It doesn\u0027t seem particularly useful to me, but all I\u0027m saying is that it\u0027s a difference.\n\nI\u0027ve no problem losing it if there are no uses. Can we assume all libbase users are in the AOSP/internal master branches? We don\u0027t need to consider apps that might be linking to it?\n\nAs for Zygote, I can\u0027t say offhand if it\u0027s using this, haven\u0027t investigated. But if it is then I suppose we can just as well fix it there.",
      "parentUuid": "defc59a2_a18cfbf2",
      "range": {
        "startLine": 579,
        "startChar": 0,
        "endLine": 580,
        "endChar": 51
      },
      "revId": "cfd517d2a0897441e165e670bf8e76639ab66af0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aadc7783_3255d4f0",
        "filename": "base/logging.cpp",
        "patchSetId": 4
      },
      "lineNbr": 580,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2020-01-24T00:14:13Z",
      "side": 0,
      "message": "I\u0027ve been generally assuming that.  Apps won\u0027t use the platform version of libbase so they won\u0027t be directly impacted by this change unless they recompile.\n\nI think it\u0027s esoteric enough behavior that we should drop it, especially since there wasn\u0027t an existing test.  I expect nearly every process other than zygote to set a default log tag at the beginning and use it throughout.  If they really need to reset it to getprogname() again in the future, then that can do that explicitly.",
      "parentUuid": "c57409e4_db563032",
      "range": {
        "startLine": 579,
        "startChar": 0,
        "endLine": 580,
        "endChar": 51
      },
      "revId": "cfd517d2a0897441e165e670bf8e76639ab66af0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}