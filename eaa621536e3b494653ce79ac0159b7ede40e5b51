{
  "comments": [
    {
      "key": {
        "uuid": "2e63abe2_d29b3002",
        "filename": "libprocessgroup/cgroup_map.cpp",
        "patchSetId": 17
      },
      "lineNbr": 46,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2019-01-30T23:20:50Z",
      "side": 1,
      "message": "It seems like vendors will also be reading this. We would have to stabilize the format of this file then (for when old vndk versions of the library try to access it). Is it desirable to freeze this? (@sundongahn/jiyong for guidance)",
      "range": {
        "startLine": 46,
        "startChar": 50,
        "endLine": 46,
        "endChar": 67
      },
      "revId": "eaa621536e3b494653ce79ac0159b7ede40e5b51",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f59b27be_4cfa95b0",
        "filename": "libprocessgroup/cgroup_map.cpp",
        "patchSetId": 17
      },
      "lineNbr": 46,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-01-31T08:34:37Z",
      "side": 1,
      "message": "In \"theory\", freezing is not required. If we in the future modify the format of the description file, we could update the snapshot of this library for the old VNDK version to understand the new format.\n\nHowever, since updating the vndk snapshot is not a trivial task, freezing the format (or at least keep it in a backward compatible way) is much more desirable.\n\nBy describing the schema of the file in XSD and adding it to a xsd_config module, the backward compatibility is guaranteed and you will get free XML parser. For more details and howtos please refer to go/xsdc-for-partners and go/xsdc-design-doc",
      "parentUuid": "2e63abe2_d29b3002",
      "range": {
        "startLine": 46,
        "startChar": 50,
        "endLine": 46,
        "endChar": 67
      },
      "revId": "eaa621536e3b494653ce79ac0159b7ede40e5b51",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f60d8f62_a3426d21",
        "filename": "libprocessgroup/cgroup_map.cpp",
        "patchSetId": 17
      },
      "lineNbr": 46,
      "author": {
        "id": 1119068
      },
      "writtenOn": "2019-01-31T09:32:06Z",
      "side": 1,
      "message": "The content of that file could change in the future, perhaps also its layout... thus a \"backward compatibility\" layer it\u0027s likely the best solution.\n\nOtherwise, since this is a new feature likely to be extended on the R development cycle, does it make sense to keep it not accessible to vendors at least for Q and then eventually open it up on the next cycle?",
      "parentUuid": "f59b27be_4cfa95b0",
      "range": {
        "startLine": 46,
        "startChar": 50,
        "endLine": 46,
        "endChar": 67
      },
      "revId": "eaa621536e3b494653ce79ac0159b7ede40e5b51",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d81a93f6_3431f31b",
        "filename": "libprocessgroup/cgroup_map.cpp",
        "patchSetId": 17
      },
      "lineNbr": 46,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-01-31T09:37:30Z",
      "side": 1,
      "message": "\u003e to keep it not accessible to vendors at least for Q \n\nThis also works. But \u0027how\u0027 deserves a question. Will you drop \"vendor_avaialble: true\" from this lib?",
      "parentUuid": "f60d8f62_a3426d21",
      "range": {
        "startLine": 46,
        "startChar": 50,
        "endLine": 46,
        "endChar": 67
      },
      "revId": "eaa621536e3b494653ce79ac0159b7ede40e5b51",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c7c10c0_883ff2b5",
        "filename": "libprocessgroup/cgroup_map.cpp",
        "patchSetId": 17
      },
      "lineNbr": 46,
      "author": {
        "id": 1119068
      },
      "writtenOn": "2019-01-31T10:56:01Z",
      "side": 1,
      "message": "Had a better look and it turns out this lib is in vendor since:\n\n   commit dad4749731b6 (\"Add libprocessgroup into VNDK\")\n\nbecause it provides the implementation of some APIs:\n\n  - set_cpuset_policy\n  - {set,get}_sched_policy\n\nwhich was originally provided by libcutils.so, a VNDK-SP library\nthat is accessible by SP-HALs.\n\nSince the APIs above are kind of legacy bits of an API which we need to maintain just for backward compatibility,\nI was wondering if it could not be a better solution to:\n\n  1. move back the above APIs in their original library libcutil.so,\n     and expose only libcutil.so to the VNDK\n\n  3. keep the new libprocessgroup not in VNDK,\n     so that we don\u0027t commit too early to a new API which can still evolve.\n\nThe new libcutil.so is now indeed a tiny wrapper around the new libprocessgroup which is less likely to break if we change libprocessgroup or its JSON files in the next cycle.\n\nLet\u0027s wait for @surenb to comment on this.",
      "parentUuid": "d81a93f6_3431f31b",
      "range": {
        "startLine": 46,
        "startChar": 50,
        "endLine": 46,
        "endChar": 67
      },
      "revId": "eaa621536e3b494653ce79ac0159b7ede40e5b51",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "813b857f_6dc40cb0",
        "filename": "libprocessgroup/cgroup_map.cpp",
        "patchSetId": 17
      },
      "lineNbr": 46,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-01-31T11:21:33Z",
      "side": 1,
      "message": "In that case, libprocessgroup should still be part of VNDK (to be exact it would be VNDK-private). \n\nIf CgroupMap::SetupCgroups() is not meant to be used by vendor (i.e. only the APIs moved from libcutils are for vendors) then you could hide source and header that is not for vendor under #ifndef __ANDROID_VNDK__ ~ #endif.",
      "parentUuid": "3c7c10c0_883ff2b5",
      "range": {
        "startLine": 46,
        "startChar": 50,
        "endLine": 46,
        "endChar": 67
      },
      "revId": "eaa621536e3b494653ce79ac0159b7ede40e5b51",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}