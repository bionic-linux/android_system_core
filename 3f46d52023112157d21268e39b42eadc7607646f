{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "49eb3499_339d938e",
        "filename": "/COMMIT_MSG",
        "patchSetId": 21
      },
      "lineNbr": 11,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2022-03-16T00:13:20Z",
      "side": 1,
      "message": "ignore error code is one thing, but I think we should also consider avoid the access syscall \n\nfor now vendor need override NormalIoPriority by removing the entry which doesn\u0027t exist for the I/O scheduler it is using, right?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 69
      },
      "revId": "3f46d52023112157d21268e39b42eadc7607646f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc84a627_2dc45371",
        "filename": "libprocessgroup/task_profiles.cpp",
        "patchSetId": 21
      },
      "lineNbr": 215,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2022-03-16T00:18:40Z",
      "side": 1,
      "message": "Wei\u0027s comment reminded that this would introduce an additional access syscall every time we execute this action. This might introduce additional overhead. I remember the early version had something like:\n```\nif (!WriteStringToFile(value_, path)) {\n    if (optional_ \u0026\u0026 errno \u003d\u003d ENOENT) {\n        return true;\n    }\n    PLOG(ERROR) \u003c\u003c \"Failed to write \u0027\" \u003c\u003c value_ \u003c\u003c \"\u0027 to \" \u003c\u003c path;\n    return false;\n}\n```\nbut there was some issue with some error being logged during the failure?",
      "range": {
        "startLine": 208,
        "startChar": 4,
        "endLine": 215,
        "endChar": 5
      },
      "revId": "3f46d52023112157d21268e39b42eadc7607646f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}