{
  "comments": [
    {
      "key": {
        "uuid": "b70fe5b0_798f135a",
        "filename": "liblog/log_is_loggable.c",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-03-10T02:10:17Z",
      "side": 1,
      "message": "we called it __LIBC_HIDDEN__ because we are libc. you might want to choose a different name.\n\n(better still, you should switch to -fvisibility\u003dhidden and explicitly *export* public functions. we eventually did that [and could actually remove all the __LIBC_HIDDEN__s at this point, and will probably do so at some point].)",
      "range": {
        "startLine": 259,
        "startChar": 0,
        "endLine": 259,
        "endChar": 15
      },
      "revId": "7a1cb677c15f51fbd422c6475dfd486f9497b0c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b70fe5b0_64c406b3",
        "filename": "liblog/log_is_loggable.c",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-03-10T15:28:23Z",
      "side": 1,
      "message": "\u003csigh\u003e and to export, one uses __LIBC_ABI_PUBLIC__ from \u003csys/cdefs.h\u003e.\n\nI will split this CL into two, the first will add explicit exports. What makes me sad and holds me back is that I see some history in sys/cdefs.h regarding \u0027binary compatibility for LP32\u0027 ... why was that introduced?",
      "parentUuid": "b70fe5b0_798f135a",
      "range": {
        "startLine": 259,
        "startChar": 0,
        "endLine": 259,
        "endChar": 15
      },
      "revId": "7a1cb677c15f51fbd422c6475dfd486f9497b0c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b70fe5b0_245f2eb6",
        "filename": "liblog/log_is_loggable.c",
        "patchSetId": 1
      },
      "lineNbr": 259,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-03-10T16:03:30Z",
      "side": 1,
      "message": "well, that\u0027s no-op private implementation cruft that we\u0027re also going to remove. (the right way to do things when you have a huge API surface like the C library is using linker maps, not annotations in header files.)",
      "parentUuid": "b70fe5b0_64c406b3",
      "range": {
        "startLine": 259,
        "startChar": 0,
        "endLine": 259,
        "endChar": 15
      },
      "revId": "7a1cb677c15f51fbd422c6475dfd486f9497b0c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b70fe5b0_f95f8319",
        "filename": "liblog/log_is_loggable.c",
        "patchSetId": 1
      },
      "lineNbr": 274,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-03-10T00:49:45Z",
      "side": 1,
      "message": "Unit test was manual, rebuild with this mispelled. We can not compose a gTest for this feature, and even if we could add a lever into this code to manipulate it for testing, we would require an intervening reboot to see the results.",
      "range": {
        "startLine": 274,
        "startChar": 39,
        "endLine": 274,
        "endChar": 52
      },
      "revId": "7a1cb677c15f51fbd422c6475dfd486f9497b0c7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}