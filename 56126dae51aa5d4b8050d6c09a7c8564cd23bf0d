{
  "comments": [
    {
      "key": {
        "uuid": "7bcf112d_bd195433",
        "filename": "libmeminfo/libdmabufinfo/tools/dmabuf_dump.cpp",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-06-27T15:48:37Z",
      "side": 1,
      "message": "for (auto\u0026 [pid, dmabufs] : pid_to_dmabufs)",
      "revId": "56126dae51aa5d4b8050d6c09a7c8564cd23bf0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bc995fe8_4c092dda",
        "filename": "libmeminfo/libdmabufinfo/tools/dmabuf_dump.cpp",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-06-28T02:07:08Z",
      "side": 1,
      "message": "Thank you!!!",
      "parentUuid": "7bcf112d_bd195433",
      "revId": "56126dae51aa5d4b8050d6c09a7c8564cd23bf0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "860ace6d_698441de",
        "filename": "libmeminfo/libdmabufinfo/tools/dmabuf_dump.cpp",
        "patchSetId": 1
      },
      "lineNbr": 153,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-06-28T06:09:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bc995fe8_4c092dda",
      "revId": "56126dae51aa5d4b8050d6c09a7c8564cd23bf0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0877a19a_71b884de",
        "filename": "libmeminfo/libdmabufinfo/tools/dmabuf_dump.cpp",
        "patchSetId": 1
      },
      "lineNbr": 201,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-06-27T14:55:20Z",
      "side": 1,
      "message": "(or, if you don\u0027t think it\u0027s too tricky, `int pid \u003d atoid(dent-\u003ed_name); if (pid \u003d\u003d 0) continue;` works and is cheaper. since 0 isn\u0027t a valid pid, the usual concerns about atoi don\u0027t apply. listed under \"weird tricks i became accustomed to from working on toybox\".)",
      "range": {
        "startLine": 197,
        "startChar": 8,
        "endLine": 201,
        "endChar": 9
      },
      "revId": "56126dae51aa5d4b8050d6c09a7c8564cd23bf0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "07bb6f25_824df472",
        "filename": "libmeminfo/libdmabufinfo/tools/dmabuf_dump.cpp",
        "patchSetId": 1
      },
      "lineNbr": 201,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-06-28T02:07:08Z",
      "side": 1,
      "message": "nice, will use that.\nWe _really_ should just have a \u0027for_each_pid(std::function\u003cbool(pid_t pid)\u003e callback) somewhere so everybody can use it. We have this boiler plate code everywhere in system/",
      "parentUuid": "0877a19a_71b884de",
      "range": {
        "startLine": 197,
        "startChar": 8,
        "endLine": 201,
        "endChar": 9
      },
      "revId": "56126dae51aa5d4b8050d6c09a7c8564cd23bf0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "80c5795d_d877a589",
        "filename": "libmeminfo/libdmabufinfo/tools/dmabuf_dump.cpp",
        "patchSetId": 1
      },
      "lineNbr": 201,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-06-28T06:09:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "07bb6f25_824df472",
      "range": {
        "startLine": 197,
        "startChar": 8,
        "endLine": 201,
        "endChar": 9
      },
      "revId": "56126dae51aa5d4b8050d6c09a7c8564cd23bf0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d98e94db_5c1a20bd",
        "filename": "libmeminfo/libdmabufinfo/tools/dmabuf_dump.cpp",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-06-27T14:55:20Z",
      "side": 1,
      "message": "either 0/1 or EXIT_SUCCESS/EXIT_FAILURE is fine by me, but mixing the two is weird :-)",
      "range": {
        "startLine": 226,
        "startChar": 22,
        "endLine": 226,
        "endChar": 23
      },
      "revId": "56126dae51aa5d4b8050d6c09a7c8564cd23bf0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "43b52bea_a3f254d8",
        "filename": "libmeminfo/libdmabufinfo/tools/dmabuf_dump.cpp",
        "patchSetId": 1
      },
      "lineNbr": 226,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-06-28T02:07:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d98e94db_5c1a20bd",
      "range": {
        "startLine": 226,
        "startChar": 22,
        "endLine": 226,
        "endChar": 23
      },
      "revId": "56126dae51aa5d4b8050d6c09a7c8564cd23bf0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ccc99b59_c195d51c",
        "filename": "libmeminfo/libdmabufinfo/tools/dmabuf_dump.cpp",
        "patchSetId": 1
      },
      "lineNbr": 227,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-06-27T14:55:20Z",
      "side": 1,
      "message": "as is sometimes but not always using `break` after a noreturn function.",
      "revId": "56126dae51aa5d4b8050d6c09a7c8564cd23bf0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e13f2ae9_d6cb32c3",
        "filename": "libmeminfo/libdmabufinfo/tools/dmabuf_dump.cpp",
        "patchSetId": 1
      },
      "lineNbr": 227,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-06-28T02:07:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ccc99b59_c195d51c",
      "revId": "56126dae51aa5d4b8050d6c09a7c8564cd23bf0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8c0e1012_70dd6523",
        "filename": "libmeminfo/libdmabufinfo/tools/dmabuf_dump.cpp",
        "patchSetId": 1
      },
      "lineNbr": 234,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-06-27T14:55:20Z",
      "side": 1,
      "message": "seems like this should be more restrictive or (more usefully?) a loop, so it\u0027s `[PID...]` rather than `[PID]`?",
      "revId": "56126dae51aa5d4b8050d6c09a7c8564cd23bf0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c0a59da3_ad8b2da9",
        "filename": "libmeminfo/libdmabufinfo/tools/dmabuf_dump.cpp",
        "patchSetId": 1
      },
      "lineNbr": 234,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-06-28T02:07:08Z",
      "side": 1,
      "message": "I guess, but for now just [PID] because the default behaviour is just to show all processes. There\u0027s no point in looking at multiple specific processes. The single PID is useful if you are debugging, verifying something. I guess, its the same reason as why \u0027showmap\u0027 doesn\u0027t have multiple PIDs.",
      "parentUuid": "8c0e1012_70dd6523",
      "revId": "56126dae51aa5d4b8050d6c09a7c8564cd23bf0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "730e4983_6742080b",
        "filename": "libmeminfo/libdmabufinfo/tools/dmabuf_dump.cpp",
        "patchSetId": 1
      },
      "lineNbr": 234,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-06-28T06:09:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c0a59da3_ad8b2da9",
      "revId": "56126dae51aa5d4b8050d6c09a7c8564cd23bf0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7fd9229c_c40aa924",
        "filename": "libmeminfo/libdmabufinfo/tools/dmabuf_dump.cpp",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-06-27T14:55:20Z",
      "side": 1,
      "message": "so `-a 123` is allowed, which seems a bit weird?\n\ni\u0027m not sure i get the addition of `-a` at all... why not just have `[PID...]` and say \"if you give me one or more pids, i\u0027ll show you them, but if you give me nothing, then i\u0027ll show you everything\"?",
      "revId": "56126dae51aa5d4b8050d6c09a7c8564cd23bf0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e9545b16_4ac90b10",
        "filename": "libmeminfo/libdmabufinfo/tools/dmabuf_dump.cpp",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-06-27T15:48:37Z",
      "side": 1,
      "message": "+1",
      "parentUuid": "7fd9229c_c40aa924",
      "revId": "56126dae51aa5d4b8050d6c09a7c8564cd23bf0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9d275bdc_7cf0b251",
        "filename": "libmeminfo/libdmabufinfo/tools/dmabuf_dump.cpp",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-06-28T02:07:08Z",
      "side": 1,
      "message": "The background of \u0027-a\u0027 is to just retain the old big-table output format that shows buffers and processes in a big table. That is more useful to me :).\nHowever, Pixel (minchan@) feels the default should be per-process stats in a loop. Obviously, he sees more bugreports than I do, so I take his word for it.\n\nI still think the -a view is valuable, so kept it around. Other than that, its exactly as you said - \"if you give me one or more pids, i\u0027ll show you them, but if you give me nothing, then i\u0027ll show you everything\"? (except for more than one pids part)\n\nThat being said, the \u0027-a 123\u0027 is meaning less, so I\u0027ll fix that and add to my test script.",
      "parentUuid": "e9545b16_4ac90b10",
      "revId": "56126dae51aa5d4b8050d6c09a7c8564cd23bf0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "48500dff_8bb8a4b2",
        "filename": "libmeminfo/libdmabufinfo/tools/dmabuf_dump.cpp",
        "patchSetId": 1
      },
      "lineNbr": 253,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-06-28T06:09:08Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9d275bdc_7cf0b251",
      "revId": "56126dae51aa5d4b8050d6c09a7c8564cd23bf0d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}