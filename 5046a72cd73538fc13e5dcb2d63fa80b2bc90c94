{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "797b9259_c17e4b8a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1135107
      },
      "writtenOn": "2023-10-24T18:58:30Z",
      "side": 1,
      "message": "LGTM conditional on two questions.",
      "revId": "5046a72cd73538fc13e5dcb2d63fa80b2bc90c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0fe51ef2_ce244c57",
        "filename": "libutils/binder/RefBase.cpp",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1135107
      },
      "writtenOn": "2023-10-24T18:58:30Z",
      "side": 1,
      "message": "Is it necessary to change from \u003cutils/CallStack.h\u003e to \"../../...\" here?",
      "revId": "5046a72cd73538fc13e5dcb2d63fa80b2bc90c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a59c60df_e2f3ce11",
        "filename": "libutils/binder/RefBase.cpp",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-10-24T23:32:24Z",
      "side": 1,
      "message": "Yes. We\u0027re not moving CallStack.h into libutils_binder (it is already split out into libutilscallstack). We can cut this dependency very easily though by setting CALLSTCK_ENABLED to 0 in your build.",
      "parentUuid": "0fe51ef2_ce244c57",
      "revId": "5046a72cd73538fc13e5dcb2d63fa80b2bc90c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f183aad6_c3abda8b",
        "filename": "libutils/binder/RefBase.cpp",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-10-25T00:42:41Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "a59c60df_e2f3ce11",
      "revId": "5046a72cd73538fc13e5dcb2d63fa80b2bc90c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2c543fb_39ffa129",
        "filename": "libutils/binder/RefBase.cpp",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-10-25T20:17:23Z",
      "side": 1,
      "message": "shouldn\u0027t it be off by default?\n\n(or should CALLSTACK_ENABLED be conditional on `__has_include()`?)",
      "parentUuid": "f183aad6_c3abda8b",
      "revId": "5046a72cd73538fc13e5dcb2d63fa80b2bc90c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1e6f6906_dd8d0d05",
        "filename": "libutils/binder/RefBase.cpp",
        "patchSetId": 2
      },
      "lineNbr": 66,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-10-25T22:05:22Z",
      "side": 1,
      "message": "I didn\u0027t want to add \u0027__has_include\u0027 because it could silently break. Callstacks are enabled by default for a couple of error paths.",
      "parentUuid": "a2c543fb_39ffa129",
      "revId": "5046a72cd73538fc13e5dcb2d63fa80b2bc90c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8c1f0f6_4bcd49cd",
        "filename": "libutils/binder/String8.cpp",
        "patchSetId": 2
      },
      "lineNbr": 432,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-10-25T20:17:23Z",
      "side": 1,
      "message": "(is not exporting them in the binder copy an option?)",
      "revId": "5046a72cd73538fc13e5dcb2d63fa80b2bc90c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cd4cd6b2_0027158d",
        "filename": "libutils/binder/String8.cpp",
        "patchSetId": 2
      },
      "lineNbr": 432,
      "author": {
        "id": 1135107
      },
      "writtenOn": "2023-10-25T20:20:07Z",
      "side": 1,
      "message": "These are already mostly removed and the remaining two are private - it\u0027s just the prebuilts still depending on them.",
      "parentUuid": "f8c1f0f6_4bcd49cd",
      "revId": "5046a72cd73538fc13e5dcb2d63fa80b2bc90c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cddd89d8_b7963af4",
        "filename": "libutils/binder/String8.cpp",
        "patchSetId": 2
      },
      "lineNbr": 432,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-10-25T20:21:18Z",
      "side": 1,
      "message": "even better!",
      "parentUuid": "cd4cd6b2_0027158d",
      "revId": "5046a72cd73538fc13e5dcb2d63fa80b2bc90c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b84ce2f_e20e9a3f",
        "filename": "libutils/include/utils/LightRefBase.h",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1135107
      },
      "writtenOn": "2023-10-24T18:58:30Z",
      "side": 1,
      "message": "Is this (and other) symlink necessary? Isn\u0027t it enough to export libutils_binder include?",
      "revId": "5046a72cd73538fc13e5dcb2d63fa80b2bc90c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "835a2adf_440e20a7",
        "filename": "libutils/include/utils/LightRefBase.h",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-10-24T23:32:24Z",
      "side": 1,
      "message": "This is due to globals.go including frameworks/native/include, which symlinks this folder. Though, maybe libutils is cleaned up here. I can try.",
      "parentUuid": "9b84ce2f_e20e9a3f",
      "revId": "5046a72cd73538fc13e5dcb2d63fa80b2bc90c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "0bd58060_8da70928",
        "filename": "libutils/include/utils/LightRefBase.h",
        "patchSetId": 2
      },
      "lineNbr": 1,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-10-25T00:42:41Z",
      "side": 1,
      "message": "I checked, and the symlinks are required, e.g.:\n\n```\nIn file included from system/logging/liblog/event_tag_map.cpp:36:\nsystem/core/include/utils/RWLock.h:27:10: fatal error: \u0027utils/Errors.h\u0027 file not found\n#include \u003cutils/Errors.h\u003e\n```\n\nWill clean up independently, as usual. I didn\u0027t look in detail",
      "parentUuid": "835a2adf_440e20a7",
      "revId": "5046a72cd73538fc13e5dcb2d63fa80b2bc90c94",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}