{
  "comments": [
    {
      "key": {
        "uuid": "fa6fafa9_4362f0c0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2016-12-16T20:27:00Z",
      "side": 1,
      "message": "debuggerd",
      "range": {
        "startLine": 7,
        "startChar": 23,
        "endLine": 7,
        "endChar": 32
      },
      "revId": "c7ed1685c5a615e68b0ae27f798055622a30fb97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa6fafa9_9dc70700",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 9,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-12-16T15:32:40Z",
      "side": 1,
      "message": "single",
      "range": {
        "startLine": 9,
        "startChar": 33,
        "endLine": 9,
        "endChar": 39
      },
      "revId": "c7ed1685c5a615e68b0ae27f798055622a30fb97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa6fafa9_bdccc324",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 11,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-12-16T15:32:40Z",
      "side": 1,
      "message": ",\u003cspace\u003e",
      "range": {
        "startLine": 11,
        "startChar": 15,
        "endLine": 11,
        "endChar": 16
      },
      "revId": "c7ed1685c5a615e68b0ae27f798055622a30fb97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa6fafa9_ddc17feb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 15,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-12-16T15:32:40Z",
      "side": 1,
      "message": ",\u003cspace\u003e",
      "range": {
        "startLine": 15,
        "startChar": 21,
        "endLine": 15,
        "endChar": 22
      },
      "revId": "c7ed1685c5a615e68b0ae27f798055622a30fb97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa6fafa9_fdc63b00",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 16,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-12-16T15:32:40Z",
      "side": 1,
      "message": "single",
      "range": {
        "startLine": 16,
        "startChar": 12,
        "endLine": 16,
        "endChar": 18
      },
      "revId": "c7ed1685c5a615e68b0ae27f798055622a30fb97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fa6fafa9_433bd08a",
        "filename": "debuggerd/tombstone.cpp",
        "patchSetId": 3
      },
      "lineNbr": 266,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2016-12-16T20:27:00Z",
      "side": 1,
      "message": "There should be a comment here describing why you are doing this.\n\nFor example, something like:\n\n// Only attempt to find function names in executable maps.\n// This avoids problems trying to open the file associated\n// with the map that can cause a deadlock if the file is\n// associated with a device and the driver is single-threaded.\n\nBy the way, is there any easy way that we could modify the open call to determine this? It might be better to modify the call in libbacktrace/libunwind to avoid even trying to open device files to completely avoid this problem.",
      "range": {
        "startLine": 266,
        "startChar": 6,
        "endLine": 266,
        "endChar": 32
      },
      "revId": "c7ed1685c5a615e68b0ae27f798055622a30fb97",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}