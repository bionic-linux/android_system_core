{
  "comments": [
    {
      "key": {
        "uuid": "c1d68be4_6c2bef24",
        "filename": "init/reboot.cpp",
        "patchSetId": 12
      },
      "lineNbr": 262,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-04-25T16:01:24Z",
      "side": 1,
      "message": "Unless you expect shutdown_timeout_timespec to carry its value between loops (and I don\u0027t think you do), you should move this next to line 268, where it\u0027s initialized.",
      "revId": "75b040e26795edddadc18011a1b0db28c1b39186",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4b4a6a6_2be7268a",
        "filename": "init/reboot.cpp",
        "patchSetId": 12
      },
      "lineNbr": 262,
      "author": {
        "id": 1483435
      },
      "writtenOn": "2019-04-25T20:55:05Z",
      "side": 1,
      "message": "Since I have plan to move following shutdown_timeout_timespec initialization out of while loop, I will keep shutdown_timeout_timespec at the beginning of the thread.\n\n262     timespec shutdown_timeout_timespec;\n263     unsigned int remaining_shutdown_time \u003d 0;\n264 \n265     // 30 seconds more than the timeout passed to the thread as there is a final Umount pass\n266     // after the timeout is reached.\n267     constexpr unsigned int shutdown_watchdog_timeout_default \u003d 30;\n268     auto shutdown_watchdog_timeout \u003d android::base::GetUintProperty(\n269                     \"ro.build.shutdown.watchdog.timeout\", shutdown_watchdog_timeout_default);\n270     shutdown_timeout_timespec.tv_sec +\u003d\n271                     shutdown_watchdog_timeout + shutdown_timeout.count() / 1000;\n272 \n\n\nThank you,\nJoseph.",
      "parentUuid": "c1d68be4_6c2bef24",
      "revId": "75b040e26795edddadc18011a1b0db28c1b39186",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6db28a3c_b82307a7",
        "filename": "init/reboot.cpp",
        "patchSetId": 12
      },
      "lineNbr": 266,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-04-25T16:01:24Z",
      "side": 1,
      "message": "TEMP_FAILURE_RETRY() around this?  It\u0027s possible to fail from EINTR.",
      "range": {
        "startLine": 266,
        "startChar": 8,
        "endLine": 266,
        "endChar": 16
      },
      "revId": "75b040e26795edddadc18011a1b0db28c1b39186",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "64ab2ef6_d661d7e2",
        "filename": "init/reboot.cpp",
        "patchSetId": 12
      },
      "lineNbr": 266,
      "author": {
        "id": 1483435
      },
      "writtenOn": "2019-04-25T20:55:05Z",
      "side": 1,
      "message": "Good idea ~\n\nI will add TEMP_FAILURE_RETRY() here ...\n\n266         if (TEMP_FAILURE_RETRY (sem_wait (reboot_semaphore)) \u003d\u003d -1)\n267         {\n268           LOG(ERROR) \u003c\u003c \"sem_wait failed and exit RebootMonitorThread()\";\n269           return;\n270         }\n\n\nThank you,\nJoseph.",
      "parentUuid": "6db28a3c_b82307a7",
      "range": {
        "startLine": 266,
        "startChar": 8,
        "endLine": 266,
        "endChar": 16
      },
      "revId": "75b040e26795edddadc18011a1b0db28c1b39186",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff25cebe_d83fb455",
        "filename": "init/reboot.cpp",
        "patchSetId": 12
      },
      "lineNbr": 273,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-04-25T16:01:24Z",
      "side": 1,
      "message": "I don\u0027t think this if statement is needed.  You effectively want the first pass of this loop to set up the timeout, then the second pass (which should be the only other pass) to use the remaining timeout, right?  \n\nIt\u0027s probably better to initialize remaining_shutdown_time at line 263, outside of the loop, with \"shutdown_watchdog_timeout + shutdown_timeout.count() / 1000;\".  Then once you\u0027re inside the loop, there\u0027s no if statement, just simply \"shutdown_timeout_timespec.tv_sec +\u003d remaining_shutdown_time;\" in both cases.",
      "revId": "75b040e26795edddadc18011a1b0db28c1b39186",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ca12e73_361b522d",
        "filename": "init/reboot.cpp",
        "patchSetId": 12
      },
      "lineNbr": 273,
      "author": {
        "id": 1483435
      },
      "writtenOn": "2019-04-25T20:55:05Z",
      "side": 1,
      "message": "Thanks your good idea, I will move shutdown_timeout_timespec initialization out of while loop.\n\nThank you,\nJoseph.",
      "parentUuid": "ff25cebe_d83fb455",
      "revId": "75b040e26795edddadc18011a1b0db28c1b39186",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fa16a29_101d468b",
        "filename": "init/reboot.cpp",
        "patchSetId": 12
      },
      "lineNbr": 438,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-04-25T16:01:24Z",
      "side": 1,
      "message": "This isn\u0027t C, you should move these next to where they\u0027re first used (~line 470 and ~line 477).",
      "revId": "75b040e26795edddadc18011a1b0db28c1b39186",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "54efcdce_dd1bbce0",
        "filename": "init/reboot.cpp",
        "patchSetId": 12
      },
      "lineNbr": 438,
      "author": {
        "id": 1483435
      },
      "writtenOn": "2019-04-25T20:55:05Z",
      "side": 1,
      "message": "Okay ~ I will try to move local variable allocation as close as possible to where we want to use it.\n\nThank you,\nJoseph.",
      "parentUuid": "1fa16a29_101d468b",
      "revId": "75b040e26795edddadc18011a1b0db28c1b39186",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fff310eb_bfc194f8",
        "filename": "init/reboot.cpp",
        "patchSetId": 12
      },
      "lineNbr": 626,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-04-25T16:01:24Z",
      "side": 1,
      "message": "Should be formatted like: reboot_monitor_run",
      "range": {
        "startLine": 626,
        "startChar": 4,
        "endLine": 626,
        "endChar": 16
      },
      "revId": "75b040e26795edddadc18011a1b0db28c1b39186",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "06cf849f_9e3e43b7",
        "filename": "init/reboot.cpp",
        "patchSetId": 12
      },
      "lineNbr": 626,
      "author": {
        "id": 1483435
      },
      "writtenOn": "2019-04-25T20:55:05Z",
      "side": 1,
      "message": "Sure ~ I agree to use consistent naming style like xxx_xxx_xxx (ex: reboot_monitor_run).\n\nThank you,\nJoseph.",
      "parentUuid": "fff310eb_bfc194f8",
      "range": {
        "startLine": 626,
        "startChar": 4,
        "endLine": 626,
        "endChar": 16
      },
      "revId": "75b040e26795edddadc18011a1b0db28c1b39186",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "539eee07_0830b3ad",
        "filename": "init/reboot.cpp",
        "patchSetId": 12
      },
      "lineNbr": 631,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2019-04-25T03:41:57Z",
      "side": 1,
      "message": "nit:\nadd a join of reboot_monitor_thread here before abort?",
      "range": {
        "startLine": 631,
        "startChar": 4,
        "endLine": 631,
        "endChar": 5
      },
      "revId": "75b040e26795edddadc18011a1b0db28c1b39186",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2907c318_0b20b517",
        "filename": "init/reboot.cpp",
        "patchSetId": 12
      },
      "lineNbr": 631,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2019-04-25T03:43:46Z",
      "side": 1,
      "message": "(clarify: RebootSystem(cmd, rebootTarget); should not return, so really a nit)",
      "parentUuid": "539eee07_0830b3ad",
      "range": {
        "startLine": 631,
        "startChar": 4,
        "endLine": 631,
        "endChar": 5
      },
      "revId": "75b040e26795edddadc18011a1b0db28c1b39186",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dc405a96_48059859",
        "filename": "init/reboot.cpp",
        "patchSetId": 12
      },
      "lineNbr": 631,
      "author": {
        "id": 1483435
      },
      "writtenOn": "2019-04-25T05:17:59Z",
      "side": 1,
      "message": "Yes~ We don\u0027t expect to return after RebootSystem() which will call svc and jump into kernel space.\n\nSince we already call detect the reboot monitor thread at the beginning of DoReboot().\nSo we maybe not able to join the thread again because it has became not joinable thread.\n\nWe call abort() here is to exit init due to abnormal return from kernel side.\n\nThank you,\nJoseph.",
      "parentUuid": "2907c318_0b20b517",
      "range": {
        "startLine": 631,
        "startChar": 4,
        "endLine": 631,
        "endChar": 5
      },
      "revId": "75b040e26795edddadc18011a1b0db28c1b39186",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}