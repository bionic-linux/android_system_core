{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "755c1c6b_94628b42",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 57,
      "author": {
        "id": 1962190
      },
      "writtenOn": "2022-12-09T18:50:56Z",
      "side": 1,
      "message": "Can these be `std::string_view`?",
      "range": {
        "startLine": 57,
        "startChar": 21,
        "endLine": 57,
        "endChar": 47
      },
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b1aaa26_9b11cb44",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 57,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-12-13T19:04:49Z",
      "side": 1,
      "message": "Does that work with `constexpr`?",
      "parentUuid": "755c1c6b_94628b42",
      "range": {
        "startLine": 57,
        "startChar": 21,
        "endLine": 57,
        "endChar": 47
      },
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a2eb452_5b894c3b",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 121,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-12-13T06:55:11Z",
      "side": 1,
      "message": "`std::mutex` might be preferable here.",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31c603b6_21059f82",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 121,
      "author": {
        "id": 1962190
      },
      "writtenOn": "2022-12-13T17:59:57Z",
      "side": 1,
      "message": "Why is that? I would have thought that it was better to use the Android-specific concurrency types like how google3 uses the concurrency types from `absl`. instead of `std`.",
      "parentUuid": "7a2eb452_5b894c3b",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db13c438_ee9d9ecf",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 121,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-12-13T19:04:49Z",
      "side": 1,
      "message": "In Android it\u0027s actually the opposite, a lot of the old types are getting deprecated. A lot of code predates C++11 and the `std` types were not available back then.\nFor `Mutex` specifically, see https://android.googlesource.com/platform/system/core/+/refs/heads/master/libutils/include/utils/Mutex.h#84, and for `Vector` check out https://android.googlesource.com/platform/system/core/+/refs/heads/master/libutils/include/utils/Vector.h#51.",
      "parentUuid": "31c603b6_21059f82",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd3a171a_45ba792e",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 122,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-12-13T06:55:11Z",
      "side": 1,
      "message": "`std::condition_variable`?",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10976933_5f38fd43",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 123,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-12-13T07:14:01Z",
      "side": 1,
      "message": "Minor nit: `std::queue` might be more efficient.",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1db72c4_543562dd",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 128,
      "author": {
        "id": 1962190
      },
      "writtenOn": "2022-12-09T18:50:56Z",
      "side": 1,
      "message": "Nit: Better to use `std::string_view` for these args too if we have it.",
      "range": {
        "startLine": 128,
        "startChar": 24,
        "endLine": 128,
        "endChar": 99
      },
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6c5d679_f162b799",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 204,
      "author": {
        "id": 1962190
      },
      "writtenOn": "2022-12-09T18:50:56Z",
      "side": 1,
      "message": "Nit: It\u0027s generally not a good idea to make data members const, even if they\u0027re never supposed to be modified, because it stops assignment operators from being generated and makes the type less \"normal\".\n\nNot that big of a deal here since this type is a test harness and we\u0027re not likely to _try_ to assign.",
      "range": {
        "startLine": 203,
        "startChar": 0,
        "endLine": 204,
        "endChar": 40
      },
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}