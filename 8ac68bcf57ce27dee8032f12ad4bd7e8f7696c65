{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a6cc1542_dab1e8b3",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-01-13T01:30:28Z",
      "side": 1,
      "message": "Should we maybe move this to `hardware/google/trusty`? It would be the first thing there, it\u0027s a start.",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fd219f8a_4acb725f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 8
      },
      "lineNbr": 0,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-03-17T20:55:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a6cc1542_dab1e8b3",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d169d02d_8f87b044",
        "filename": "trusty/stats/README.md",
        "patchSetId": 8
      },
      "lineNbr": 28,
      "author": {
        "id": 1962190
      },
      "writtenOn": "2023-01-05T19:26:38Z",
      "side": 1,
      "message": "This isn\u0027t displaying correctly in the preview. I think you might need:\n\n```\n    $ ./repo_pull.py pull \"hashtag:trusty-metrics-nw\" -g https://android-review.googlesource.com \\\n      -b $BRANCH_NAME\n```\n\nSame for the Trusty sync command.",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 15
      },
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5ac8e1d_c0ab8f9b",
        "filename": "trusty/stats/README.md",
        "patchSetId": 8
      },
      "lineNbr": 28,
      "author": {
        "id": 1962190
      },
      "writtenOn": "2023-01-31T18:00:45Z",
      "side": 1,
      "message": "Also, the path to `repo_pull.py` is `development/tools/repo_pull/repo_pull.py`.  Not sure if it\u0027s needed, but I\u0027ve been using `\"hashtag:trusty-metrics-nw status:open\"` as the predicate too.",
      "parentUuid": "d169d02d_8f87b044",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 15
      },
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "79f39a74_3e8128fd",
        "filename": "trusty/stats/README.md",
        "patchSetId": 8
      },
      "lineNbr": 28,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-02-03T06:46:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5ac8e1d_c0ab8f9b",
      "range": {
        "startLine": 28,
        "startChar": 0,
        "endLine": 28,
        "endChar": 15
      },
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e6d672d9_9cf36074",
        "filename": "trusty/stats/README.md",
        "patchSetId": 8
      },
      "lineNbr": 54,
      "author": {
        "id": 1962190
      },
      "writtenOn": "2023-01-05T19:32:12Z",
      "side": 1,
      "message": "Shouldn\u0027t need this anymore now that aosp/2319592 is merged?",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 54,
        "endChar": 14
      },
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8c4c8519_4ec37ffc",
        "filename": "trusty/stats/README.md",
        "patchSetId": 8
      },
      "lineNbr": 54,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-02-03T07:29:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e6d672d9_9cf36074",
      "range": {
        "startLine": 51,
        "startChar": 0,
        "endLine": 54,
        "endChar": 14
      },
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "755c1c6b_94628b42",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 57,
      "author": {
        "id": 1962190
      },
      "writtenOn": "2022-12-09T18:50:56Z",
      "side": 1,
      "message": "Can these be `std::string_view`?",
      "range": {
        "startLine": 57,
        "startChar": 21,
        "endLine": 57,
        "endChar": 47
      },
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b1aaa26_9b11cb44",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 57,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-12-13T19:04:49Z",
      "side": 1,
      "message": "Does that work with `constexpr`?",
      "parentUuid": "755c1c6b_94628b42",
      "range": {
        "startLine": 57,
        "startChar": 21,
        "endLine": 57,
        "endChar": 47
      },
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bf1470d6_90fec6ff",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 57,
      "author": {
        "id": 1962190
      },
      "writtenOn": "2022-12-15T19:38:09Z",
      "side": 1,
      "message": "Yep! See go/totw/140",
      "parentUuid": "9b1aaa26_9b11cb44",
      "range": {
        "startLine": 57,
        "startChar": 21,
        "endLine": 57,
        "endChar": 47
      },
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "74a082bc_9bd922c1",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 57,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-02-03T07:29:32Z",
      "side": 1,
      "message": "Since we need null-terminated strings in some places (mainly `tipc_connect`), we can\u0027t really use `std::string_view` here (see my other comment).",
      "parentUuid": "bf1470d6_90fec6ff",
      "range": {
        "startLine": 57,
        "startChar": 21,
        "endLine": 57,
        "endChar": 47
      },
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7a2eb452_5b894c3b",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 121,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-12-13T06:55:11Z",
      "side": 1,
      "message": "`std::mutex` might be preferable here.",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31c603b6_21059f82",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 121,
      "author": {
        "id": 1962190
      },
      "writtenOn": "2022-12-13T17:59:57Z",
      "side": 1,
      "message": "Why is that? I would have thought that it was better to use the Android-specific concurrency types like how google3 uses the concurrency types from `absl`. instead of `std`.",
      "parentUuid": "7a2eb452_5b894c3b",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "db13c438_ee9d9ecf",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 121,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-12-13T19:04:49Z",
      "side": 1,
      "message": "In Android it\u0027s actually the opposite, a lot of the old types are getting deprecated. A lot of code predates C++11 and the `std` types were not available back then.\nFor `Mutex` specifically, see https://android.googlesource.com/platform/system/core/+/refs/heads/master/libutils/include/utils/Mutex.h#84, and for `Vector` check out https://android.googlesource.com/platform/system/core/+/refs/heads/master/libutils/include/utils/Vector.h#51.",
      "parentUuid": "31c603b6_21059f82",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "aea330b5_e00989f1",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 121,
      "author": {
        "id": 1962190
      },
      "writtenOn": "2022-12-15T19:38:09Z",
      "side": 1,
      "message": "Ack, thanks for explaining!",
      "parentUuid": "db13c438_ee9d9ecf",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8bd105b1_0bc5c34a",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 121,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-02-03T07:29:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aea330b5_e00989f1",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd3a171a_45ba792e",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 122,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-12-13T06:55:11Z",
      "side": 1,
      "message": "`std::condition_variable`?",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2f22a7a0_a9fdf9cf",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 122,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-02-03T07:29:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bd3a171a_45ba792e",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "10976933_5f38fd43",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 123,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-12-13T07:14:01Z",
      "side": 1,
      "message": "Minor nit: `std::queue` might be more efficient.",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "50ccd092_0177d4cf",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 123,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-02-03T07:29:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "10976933_5f38fd43",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1db72c4_543562dd",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 128,
      "author": {
        "id": 1962190
      },
      "writtenOn": "2022-12-09T18:50:56Z",
      "side": 1,
      "message": "Nit: Better to use `std::string_view` for these args too if we have it.",
      "range": {
        "startLine": 128,
        "startChar": 24,
        "endLine": 128,
        "endChar": 99
      },
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a832a5b_80da07cd",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 128,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-02-03T07:29:32Z",
      "side": 1,
      "message": "We call `c_str()` on these strings in some places, and `std::string_view` does not have that. String views are not guaranteed to be null-terminated anyway.\n\nWe could use `std::string\u0026\u0026` and `std::move` to prevent some copies, though.",
      "parentUuid": "c1db72c4_543562dd",
      "range": {
        "startLine": 128,
        "startChar": 24,
        "endLine": 128,
        "endChar": 99
      },
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "51c31634_7510fba7",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 140,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-01-20T00:43:46Z",
      "side": 1,
      "message": "Nit: `auto session_initializer \u003d [](sp\u003cRpcSession\u003e\u0026 session) {` is simpler IMHO.",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e21da573_e51a6a47",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 140,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-02-03T07:29:32Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "51c31634_7510fba7",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "b6c5d679_f162b799",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 204,
      "author": {
        "id": 1962190
      },
      "writtenOn": "2022-12-09T18:50:56Z",
      "side": 1,
      "message": "Nit: It\u0027s generally not a good idea to make data members const, even if they\u0027re never supposed to be modified, because it stops assignment operators from being generated and makes the type less \"normal\".\n\nNot that big of a deal here since this type is a test harness and we\u0027re not likely to _try_ to assign.",
      "range": {
        "startLine": 203,
        "startChar": 0,
        "endLine": 204,
        "endChar": 40
      },
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3721c9fb_164b2c85",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 224,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-01-18T22:55:33Z",
      "side": 1,
      "message": "This is too low for the emulator, I get timeouts when I run the test.",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c954e508_88a82e09",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 224,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-02-01T05:39:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3721c9fb_164b2c85",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76194c8d_a6244457",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 267,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-01-18T22:55:33Z",
      "side": 1,
      "message": "Too low for qemu.",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5c8a77dc_8ad8d7eb",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 267,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-02-01T05:39:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "76194c8d_a6244457",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7dab4dbd_2edad38f",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 296,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-01-19T03:06:22Z",
      "side": 1,
      "message": "This equals `1` for me because there is one crashing app during boot and the error gets propagated all the way to the tests:\n```\nsecure os: trusty_app 64, storage-rust-test: brk:  start 0x14b408f9000 end 0x14b408fd000\nsecure os: trusty_app 64, storage-rust-test: entry 0x00016000\nsecure os: INFO - Provisioning allowed: 1\nsecure os: int on_ta_shutdown(struct trusty_app *):243: there is a metrics event still in progress or metrics TA is unavailable\n```\n\nMaybe use `ASSERT_LE(atomTrustyErrorCnt, 1)`?",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9704fdab_586a4453",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 296,
      "author": {
        "id": 1962190
      },
      "writtenOn": "2023-01-19T18:46:23Z",
      "side": 1,
      "message": "Wouldn\u0027t that mean problems in unrelated apps could still cause this test to start failing?",
      "parentUuid": "7dab4dbd_2edad38f",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "393205bb_d9408921",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 296,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-01-19T22:24:01Z",
      "side": 1,
      "message": "Definitely, so maybe we should just ignore `TrustyError` atoms.",
      "parentUuid": "9704fdab_586a4453",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "49c1eb99_e98ed3e6",
        "filename": "trusty/stats/stats_test.cpp",
        "patchSetId": 8
      },
      "lineNbr": 296,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2023-03-17T20:55:35Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "393205bb_d9408921",
      "revId": "8ac68bcf57ce27dee8032f12ad4bd7e8f7696c65",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}