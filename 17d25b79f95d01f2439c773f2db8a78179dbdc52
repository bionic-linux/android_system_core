{
  "comments": [
    {
      "key": {
        "uuid": "226ff899_811f631b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-01-28T18:14:35Z",
      "side": 1,
      "message": "verity",
      "range": {
        "startLine": 10,
        "startChar": 57,
        "endLine": 10,
        "endChar": 63
      },
      "revId": "17d25b79f95d01f2439c773f2db8a78179dbdc52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b34c956_59cfca4f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 10,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2019-01-29T14:34:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "226ff899_811f631b",
      "range": {
        "startLine": 10,
        "startChar": 57,
        "endLine": 10,
        "endChar": 63
      },
      "revId": "17d25b79f95d01f2439c773f2db8a78179dbdc52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "38d4ff6e_57d79294",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1106,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-01-28T18:14:35Z",
      "side": 1,
      "message": "When you rebase this on top of the change that rewrites ParseFsMgrFlags(), we can probably drop this flag entirely and just check current_entry.avb_key.empty() instead.  I\u0027m planning to do the same thing with a lot of the other flags that are only used to set strings too.  It seems the flags were all just a relic of the way parse_flags() worked.",
      "revId": "17d25b79f95d01f2439c773f2db8a78179dbdc52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "030fbc31_1df7e7c6",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1106,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2019-01-29T03:15:26Z",
      "side": 1,
      "message": "Sure, happy to rebase it and use avb_key.empty() instead.",
      "parentUuid": "38d4ff6e_57d79294",
      "revId": "17d25b79f95d01f2439c773f2db8a78179dbdc52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6b5c0b1_c23217c3",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1106,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2019-01-29T14:34:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "030fbc31_1df7e7c6",
      "revId": "17d25b79f95d01f2439c773f2db8a78179dbdc52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bb8141bf_3074d5e8",
        "filename": "fs_mgr/libfs_avb/avb_util.cpp",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-01-28T18:14:35Z",
      "side": 1,
      "message": "make_unique() would throw, not return nullptr, so the check isn\u0027t needed.\n\nI\u0027m curious why you\u0027re using that format for the previous line too instead of auto hashtree_desc \u003d std::make_unique...",
      "revId": "17d25b79f95d01f2439c773f2db8a78179dbdc52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2e5d4842_de668aa1",
        "filename": "fs_mgr/libfs_avb/avb_util.cpp",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2019-01-29T03:15:26Z",
      "side": 1,
      "message": "no special reason for auto(make_unique()), I will use auto .. \u003d make_unique() instead.",
      "parentUuid": "bb8141bf_3074d5e8",
      "revId": "17d25b79f95d01f2439c773f2db8a78179dbdc52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8b3ab01e_603d4311",
        "filename": "fs_mgr/libfs_avb/avb_util.cpp",
        "patchSetId": 4
      },
      "lineNbr": 174,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2019-01-29T14:34:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2e5d4842_de668aa1",
      "revId": "17d25b79f95d01f2439c773f2db8a78179dbdc52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3617a96_73be7472",
        "filename": "fs_mgr/libfs_avb/include/fs_avb/fs_avb.h",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-01-28T18:14:35Z",
      "side": 1,
      "message": "set_path() or set_vbmeta_path() ?",
      "range": {
        "startLine": 88,
        "startChar": 9,
        "endLine": 88,
        "endChar": 16
      },
      "revId": "17d25b79f95d01f2439c773f2db8a78179dbdc52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63efa061_c48e0245",
        "filename": "fs_mgr/libfs_avb/include/fs_avb/fs_avb.h",
        "patchSetId": 4
      },
      "lineNbr": 88,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2019-01-29T14:34:31Z",
      "side": 1,
      "message": "ok, lets do set_vbmeta_path().",
      "parentUuid": "e3617a96_73be7472",
      "range": {
        "startLine": 88,
        "startChar": 9,
        "endLine": 88,
        "endChar": 16
      },
      "revId": "17d25b79f95d01f2439c773f2db8a78179dbdc52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a7cda94c_6e7ef4af",
        "filename": "fs_mgr/libfs_avb/include/fs_avb/fs_avb.h",
        "patchSetId": 4
      },
      "lineNbr": 92,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-01-28T18:14:35Z",
      "side": 1,
      "message": "vbmeta_path ?  Or name the variable itself just path?",
      "range": {
        "startLine": 92,
        "startChar": 23,
        "endLine": 92,
        "endChar": 27
      },
      "revId": "17d25b79f95d01f2439c773f2db8a78179dbdc52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f118f8bc_d96884c5",
        "filename": "fs_mgr/libfs_avb/include/fs_avb/fs_avb.h",
        "patchSetId": 4
      },
      "lineNbr": 92,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2019-01-29T14:34:31Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "a7cda94c_6e7ef4af",
      "range": {
        "startLine": 92,
        "startChar": 23,
        "endLine": 92,
        "endChar": 27
      },
      "revId": "17d25b79f95d01f2439c773f2db8a78179dbdc52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3b63eff7_f03212fc",
        "filename": "fs_mgr/libfs_avb/tests/avb_util_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-01-28T18:14:35Z",
      "side": 1,
      "message": "big endian?  Is that what AVB actually uses internally?",
      "revId": "17d25b79f95d01f2439c773f2db8a78179dbdc52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d6dca9a4_7226eacc",
        "filename": "fs_mgr/libfs_avb/tests/avb_util_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 83,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2019-01-29T03:15:26Z",
      "side": 1,
      "message": "Yup, AVB use BE internally.\n\nhttps://android.googlesource.com/platform/external/avb/+/master/libavb/avb_vbmeta_image.c#274",
      "parentUuid": "3b63eff7_f03212fc",
      "revId": "17d25b79f95d01f2439c773f2db8a78179dbdc52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}