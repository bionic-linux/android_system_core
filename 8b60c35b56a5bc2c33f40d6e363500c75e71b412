{
  "comments": [
    {
      "key": {
        "uuid": "6cf54c8d_b75890de",
        "filename": "libunwindstack/Elf.cpp",
        "patchSetId": 2
      },
      "lineNbr": 334,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2018-02-16T22:41:47Z",
      "side": 1,
      "message": "if info-\u003eoffset !\u003d 0 \u0026\u0026 info-\u003eelf_offset !\u003d 0, why we want to use it to represent the whole elf file? Why not just use map\u003cinfo-\u003ename + : + info-\u003eoffset, pair\u003celf, info-\u003eelf_offset\u003e?",
      "range": {
        "startLine": 334,
        "startChar": 59,
        "endLine": 334,
        "endChar": 60
      },
      "revId": "8b60c35b56a5bc2c33f40d6e363500c75e71b412",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4c56c3e2_674a387b",
        "filename": "libunwindstack/Elf.cpp",
        "patchSetId": 2
      },
      "lineNbr": 334,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-02-16T22:52:51Z",
      "side": 1,
      "message": "This takes care of the situation where you have an odex file that has multiple mmap\u0027d maps from the elf.\n\nDoing this means that if you see these two maps:\n\nboot.odex:1000\nboot.odex:2000\n\nThey will both use the same elf object. Otherwise, you would wind up with two different objects for the same elf file because there is no way for them to know that the whole elf object already exists.\n\nIn this case, there would three cache entries (boot.odex, boot.odex:1000, and boot.odex:2000).\n\nCacheAfterCreatememory is designed to handle this case by looking for the root object cached in the elf only if elf_offset !\u003d0.",
      "parentUuid": "6cf54c8d_b75890de",
      "range": {
        "startLine": 334,
        "startChar": 59,
        "endLine": 334,
        "endChar": 60
      },
      "revId": "8b60c35b56a5bc2c33f40d6e363500c75e71b412",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b64b56e_b687e48d",
        "filename": "libunwindstack/Elf.cpp",
        "patchSetId": 2
      },
      "lineNbr": 334,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2018-02-16T22:53:23Z",
      "side": 1,
      "message": "I updated the comment to try and reflect this.",
      "parentUuid": "4c56c3e2_674a387b",
      "range": {
        "startLine": 334,
        "startChar": 59,
        "endLine": 334,
        "endChar": 60
      },
      "revId": "8b60c35b56a5bc2c33f40d6e363500c75e71b412",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29d3f1ad_dbb36963",
        "filename": "libunwindstack/Elf.cpp",
        "patchSetId": 2
      },
      "lineNbr": 334,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2018-02-16T23:15:02Z",
      "side": 1,
      "message": "I see, thanks!",
      "parentUuid": "7b64b56e_b687e48d",
      "range": {
        "startLine": 334,
        "startChar": 59,
        "endLine": 334,
        "endChar": 60
      },
      "revId": "8b60c35b56a5bc2c33f40d6e363500c75e71b412",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}