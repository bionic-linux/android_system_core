{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "c87c272f_1eba9e90",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-08-22T21:11:09Z",
      "side": 1,
      "message": "I\u0027m thinking we should add an \u0027-f\u0027 flag to the \u0027copy\u0027 builtin to force this to be a hard error, wdyt?",
      "revId": "7f41279d77b57cd5dbed7e5bf85f7853414b622d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "dea3c1b7_2cff09b4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2024-08-22T21:20:18Z",
      "side": 1,
      "message": "In the past, enh and/or ccross have pushed back on having flags for init builtins such as \"copy\", instead preferring to introduce a new builtin (eg \"copyOrDie\") or some other mechanism. I\u0027m not sure if their opinion has changed on this. \n\nIt would be nice to have a mechanism to indicate that a line in init.rc cannot fail. I\u0027m not sure what the right solution would be.",
      "parentUuid": "c87c272f_1eba9e90",
      "revId": "7f41279d77b57cd5dbed7e5bf85f7853414b622d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "192bc048_469a2979",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2024-08-22T21:22:14Z",
      "side": 1,
      "message": "either way!\n\nhey - how much data is this having to read btw? it\u0027s not going to slow boot?",
      "parentUuid": "dea3c1b7_2cff09b4",
      "revId": "7f41279d77b57cd5dbed7e5bf85f7853414b622d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cea4acf9_30f7e67d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2024-08-22T21:29:41Z",
      "side": 1,
      "message": "The virtual file /sys/fs/selinux/policy on my test device is approximately 1M in size. Both source and target are virtual kernel files so there\u0027s no filesystem related delays. I can\u0027t see any boot delay at all.",
      "parentUuid": "192bc048_469a2979",
      "revId": "7f41279d77b57cd5dbed7e5bf85f7853414b622d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}