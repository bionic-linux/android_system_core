{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "81f9eeaa_b9d6399d",
        "filename": "fs_mgr/tests/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-09-06T15:34:51Z",
      "side": 1,
      "message": "this is terrible...",
      "revId": "e45efc4f4b4d53d03dc00d17deb2374b04a4c7d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5585dfec_e4d00592",
        "filename": "fs_mgr/tests/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2022-09-06T16:39:37Z",
      "side": 1,
      "message": "Why is this terrible? I get that it requires a rename everywhere, but IMO it\u0027s preferable to just do the rename than intrude more complexity by making the on-disk name different from the module name. If it was actually difficult to rename everything I see the point, but for most cases it\u0027s been rather straightforward.\n\nThis is also the way it should\u0027ve been done by default. Naming binaries by the name of the script doesn\u0027t really make sense, because you could easily add another source file to the binary later.\n\nWe\u0027ve already done this successfully in cls like aosp/2203416, aosp/2202568, and aosp/2202605.",
      "parentUuid": "81f9eeaa_b9d6399d",
      "revId": "e45efc4f4b4d53d03dc00d17deb2374b04a4c7d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14c95655_03777d06",
        "filename": "fs_mgr/tests/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-09-06T16:58:43Z",
      "side": 1,
      "message": "no, i mean \"as a user, having to make up two names for every \u0027prebuilt\u0027 is a PITA\".\n\nlike i said, though, i don\u0027t expect bazel to fix this, so i\u0027ll +2 \"-prebuilt\" or whatever. but not the \"-lib\" i\u0027ve seen people try to use which is just plain wrong, nor _removing_ suffixes which is confusing and error prone.\n\n(i don\u0027t _like_ prebuilt but at least it\u0027s always technically correct :-( )",
      "parentUuid": "5585dfec_e4d00592",
      "revId": "e45efc4f4b4d53d03dc00d17deb2374b04a4c7d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ed2ad214_1cf363ec",
        "filename": "fs_mgr/tests/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2022-09-06T17:04:05Z",
      "side": 1,
      "message": "I can agree with adding _prebuilt to native code prebuilts. But this one isn\u0027t a prebuilt, it\u0027s a built-from-source module. Yes, the \"building\" process is currently just copying, but if you were to add another source file, or even rewrite this binary in another language like python, then you\u0027d want a filename-agnostic module name.\n\nYou may argue that it doesn\u0027t have multiple source files right now, so there\u0027s no reason for that. But I think it\u0027s best to be consistent across the build system, and not have any file extensions in module names, except maybe with true prebuilts.",
      "parentUuid": "14c95655_03777d06",
      "revId": "e45efc4f4b4d53d03dc00d17deb2374b04a4c7d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "148c5be4_d8408092",
        "filename": "fs_mgr/tests/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-09-06T17:09:43Z",
      "side": 1,
      "message": "i think _especially_ for shell scripts, i\u0027d -2 any attempt to grow them --- at that point it\u0027s really time to be thinking about alternatives!\n\n(the python one is a bit weird --- i don\u0027t really use python myself, but i thought folks only tended to use .py when they weren\u0027t doing the whole \"embedded_launcher\" thing?)",
      "parentUuid": "ed2ad214_1cf363ec",
      "revId": "e45efc4f4b4d53d03dc00d17deb2374b04a4c7d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55c56083_da29a4cd",
        "filename": "fs_mgr/tests/Android.bp",
        "patchSetId": 1
      },
      "lineNbr": 56,
      "author": {
        "id": 1535516
      },
      "writtenOn": "2022-09-06T17:15:38Z",
      "side": 1,
      "message": "For python, there are 5 files (11 modules) where the filename ends in .py, and we\u0027ll have to change them to fix this bazel issue:\n\nhttps://source.corp.google.com/search?q\u003dp:%5Eandroid-internal$%20f:Android.bp%20name:%5C%20%5C%22.*%5C.py%5C%22\n\nThere are 178 files where the module name _doesn\u0027t_ end in .py. So not including the filename is already the vastly favored opinion. Which makes sense because many modules contain more than 1 python file, or include python libraries.\n\nhttps://source.corp.google.com/search?q\u003dp:%5Eandroid-internal$%20pcre:yes%20f:Android.bp%20(%3Fm:%5Epython.*%7B%5Cn.*name:%5C%20%5C%22.*%5B%5E.%5D%5B%5Ep%5D%5B%5Ey%5D%5C%22)",
      "parentUuid": "148c5be4_d8408092",
      "revId": "e45efc4f4b4d53d03dc00d17deb2374b04a4c7d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "22180eaa_a7501e44",
        "filename": "rootdir/init.rc",
        "patchSetId": 1
      },
      "lineNbr": 1205,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-09-06T15:34:51Z",
      "side": 1,
      "message": "...and causes these kinds of problems.\n\ni think the \"less awful\" way to do this is to ensure we keep the same on-disk names and just have some kind of common suffix for the module names (like \"-module-name\")?\n\n(at least for the prebuilts, \"-prebuilt\" makes some sense. these ones are harder though. i really wish bazel wasn\u0027t broken like this.)",
      "revId": "e45efc4f4b4d53d03dc00d17deb2374b04a4c7d2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}