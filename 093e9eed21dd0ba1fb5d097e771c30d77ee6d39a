{
  "comments": [
    {
      "key": {
        "uuid": "dddbac74_63e02f20",
        "filename": "fs_mgr/libsnapshot/snapshot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1308,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2020-02-24T20:56:31Z",
      "side": 1,
      "message": "Why do we call RemoveAllSnapshots if some snapshots are in-use? That is, shouldn\u0027t update_engine check the flashing status and only call RemoveAllSnapshots if no snapshots are in use?",
      "revId": "093e9eed21dd0ba1fb5d097e771c30d77ee6d39a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "41e82453_7b9608ef",
        "filename": "fs_mgr/libsnapshot/snapshot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1308,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-02-24T22:55:15Z",
      "side": 1,
      "message": "code in /system/update_engine currently has no knowledge of flashing status. This is called from ProcessUpdateState. For example, if ProcessUpdateState detected flashing, then it\u0027ll call RemoveAllSnapshots, but note that (for example)\n\n- source slot (boot_indicator) \u003d\u003d _a\n- system_b, vendor_b etc. are mapped, but as dm-linear targets\n- /system is mounted on top of dm-linear system_b\n- snapshots for system_b, vendor_b still exists\n\nIn this case, should_unmap is false but should_delete is true. There are no snapshots in use, but system_b should not be unmapped because we are using the dm-linear device now.",
      "parentUuid": "dddbac74_63e02f20",
      "revId": "093e9eed21dd0ba1fb5d097e771c30d77ee6d39a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7af03ffc_1f83007a",
        "filename": "fs_mgr/libsnapshot/snapshot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1308,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2020-02-25T16:22:59Z",
      "side": 1,
      "message": "Should it, though? If we\u0027re invoking update_engine to detect whether to cancel an update, should we also invoke it to detect flashing over an update?",
      "parentUuid": "41e82453_7b9608ef",
      "revId": "093e9eed21dd0ba1fb5d097e771c30d77ee6d39a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e36a773f_e52dc524",
        "filename": "fs_mgr/libsnapshot/snapshot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1308,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-02-25T17:49:52Z",
      "side": 1,
      "message": "This is the code invoked from update_engine. update_engine(_sideload) and init are the only client for libsnapshot now. init only maps partitions. snapshotctl only dumps stuff.\n\nI think it is easier if we let update_engine to detect flashing over an update. We do want to clean up update_engine markers in such cases.",
      "parentUuid": "7af03ffc_1f83007a",
      "revId": "093e9eed21dd0ba1fb5d097e771c30d77ee6d39a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0f7b8078_62138cc6",
        "filename": "fs_mgr/libsnapshot/snapshot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1360,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2020-02-24T20:56:31Z",
      "side": 1,
      "message": "nit: \"ShouldUnmapOrDeleteSnapshot\"",
      "revId": "093e9eed21dd0ba1fb5d097e771c30d77ee6d39a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5805e32a_dc2deebd",
        "filename": "fs_mgr/libsnapshot/snapshot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1368,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2020-02-24T20:56:31Z",
      "side": 1,
      "message": "nit: extra newline? Or actually, is should_unmap needed here? (it looks to be always false)",
      "revId": "093e9eed21dd0ba1fb5d097e771c30d77ee6d39a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aea0a074_1594f945",
        "filename": "fs_mgr/libsnapshot/snapshot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1368,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2020-02-24T22:50:33Z",
      "side": 1,
      "message": "Right. Let me put the current_slot !\u003d Target check in the client to make this clearer",
      "parentUuid": "5805e32a_dc2deebd",
      "revId": "093e9eed21dd0ba1fb5d097e771c30d77ee6d39a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}