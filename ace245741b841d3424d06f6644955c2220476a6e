{
  "comments": [
    {
      "key": {
        "uuid": "5753ad31_22178f32",
        "filename": "libziparchive/ziptool.cpp",
        "patchSetId": 10
      },
      "lineNbr": 200,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-04-03T00:50:15Z",
      "side": 1,
      "message": "yeah, one day i\u0027ll have to implement ExtractToFd :-)",
      "revId": "ace245741b841d3424d06f6644955c2220476a6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "238f01ab_e6ceb32e",
        "filename": "libziparchive/ziptool.cpp",
        "patchSetId": 10
      },
      "lineNbr": 371,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-04-03T00:50:15Z",
      "side": 1,
      "message": "this is why L369 said std::string --- so you don\u0027t pay for this twice.",
      "revId": "ace245741b841d3424d06f6644955c2220476a6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38e52282_bdd2f2da",
        "filename": "libziparchive/ziptool.cpp",
        "patchSetId": 10
      },
      "lineNbr": 371,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2020-04-03T06:22:04Z",
      "side": 1,
      "message": "Yeah, though I didn\u0027t implement the Next() that takes a std::string*; maybe I can create a intermediate variable from the string_view?",
      "parentUuid": "238f01ab_e6ceb32e",
      "revId": "ace245741b841d3424d06f6644955c2220476a6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f026ac69_2a7bd132",
        "filename": "libziparchive/ziptool.cpp",
        "patchSetId": 10
      },
      "lineNbr": 371,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-04-03T18:07:07Z",
      "side": 1,
      "message": "why not? it\u0027s only a couple of extra lines. (iirc it was about 50/50 between users who did and didn\u0027t want a std::string, so it was worth having both overloads. unfortunately it\u0027s hard to grep for an overload, but unless things have changed, we\u0027ll end up coming back to add the std::string overload anyway when we start switching callers over.)",
      "parentUuid": "38e52282_bdd2f2da",
      "revId": "ace245741b841d3424d06f6644955c2220476a6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "248ccbcd_3a45bcad",
        "filename": "libziparchive/ziptool.cpp",
        "patchSetId": 10
      },
      "lineNbr": 371,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2020-04-03T19:59:20Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f026ac69_2a7bd132",
      "revId": "ace245741b841d3424d06f6644955c2220476a6e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}