{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "292aba3b_861d7e2d",
        "filename": "libutils/include/utils/Compat.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-03-15T18:40:45Z",
      "side": 1,
      "message": "this matches what we\u0027ve done in bionic, so that sgtm...\n\n...but that makes me wonder who actually needs this? macOS and Windows don\u0027t have EINTR, right? should this just _move_ into trusty, if they\u0027re the only ones that need this?\n\n(at the very least we should fix the unhelpful \"alas\" comment above to be specific about when/where this is a problem!)",
      "revId": "271638111ef15e8b0ea328cefd54697aed518e27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "01feb06f_138a714d",
        "filename": "libutils/include/utils/Compat.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-03-15T20:41:12Z",
      "side": 1,
      "message": "Technically this isn\u0027t needed on Trusty either, it has different error codes. This is completely Linux-specific, so alternatively it could be defined to something else on other OSes?",
      "parentUuid": "292aba3b_861d7e2d",
      "revId": "271638111ef15e8b0ea328cefd54697aed518e27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86cfa0d1_e02c07cf",
        "filename": "libutils/include/utils/Compat.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-03-15T21:10:29Z",
      "side": 1,
      "message": "changing this to \u0027int _rc\u0027 worked for a full build for me. I wonder, why does it need to be typeof/__typeof__? Do any syscalls return a 64-bit value that would be incorrectly truncated and cause a collision with -1 on L86?",
      "range": {
        "startLine": 83,
        "startChar": 8,
        "endLine": 83,
        "endChar": 24
      },
      "revId": "271638111ef15e8b0ea328cefd54697aed518e27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "470f0f92_8f9e5b4b",
        "filename": "libutils/include/utils/Compat.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1809582
      },
      "writtenOn": "2022-03-15T22:52:20Z",
      "side": 1,
      "message": "write and read return a ssize_t, lseek64 returns an off64_t. Yeah if we used int, it would be truncated.",
      "parentUuid": "86cfa0d1_e02c07cf",
      "range": {
        "startLine": 83,
        "startChar": 8,
        "endLine": 83,
        "endChar": 24
      },
      "revId": "271638111ef15e8b0ea328cefd54697aed518e27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1c50f18c_01492598",
        "filename": "libutils/include/utils/Compat.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-03-15T22:57:08Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "470f0f92_8f9e5b4b",
      "range": {
        "startLine": 83,
        "startChar": 8,
        "endLine": 83,
        "endChar": 24
      },
      "revId": "271638111ef15e8b0ea328cefd54697aed518e27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "611ad96f_f887c103",
        "filename": "libutils/include/utils/Compat.h",
        "patchSetId": 1
      },
      "lineNbr": 83,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-03-15T22:57:41Z",
      "side": 1,
      "message": "We would still want to use TEMP_FAILURE_RETRY on code that runs on both Linux and macOS, right?",
      "parentUuid": "01feb06f_138a714d",
      "revId": "271638111ef15e8b0ea328cefd54697aed518e27",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}