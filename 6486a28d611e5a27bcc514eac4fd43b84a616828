{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "eba963ed_574455a8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-11-09T03:49:13Z",
      "side": 1,
      "message": "This looks to fix the race, though I think something important is missing in the retrospective, and leading up to this re-landing: how can we improve testing? If there\u0027s another regression in this code it\u0027ll lead to more lab issues and another revert, and it\u0027s pretty tricky code to get right.",
      "revId": "6486a28d611e5a27bcc514eac4fd43b84a616828",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bde5306d_bb8662bd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2022-11-09T18:11:30Z",
      "side": 1,
      "message": "The best way to prevent lab issues is to modify the test setups in the lab. Test setups should not require manual intervention to recover from a software failure. Hardware that supports automatic recovery from boot failures already exist, namely the Pixel development boards. The physical buttons on these boards support rebooting the board at any time, booting into the bootloader and also ROM recovery. A connector could be added to these boards to make it easy to control these recovery facilities from another system.\n\nTesting of the platform code can be improved by adding support for mocking the interaction with the Linux kernel (system calls, ioctls, netlink, procfs, sysfs and cgroups). Once that infrastructure is in place it will become possible to write unit tests that simulate failures of any interaction with the operating system. Building that infrastructure is something that I consider as out of scope for this CL.",
      "parentUuid": "eba963ed_574455a8",
      "revId": "6486a28d611e5a27bcc514eac4fd43b84a616828",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e3145704_8fe5a31e",
        "filename": "init/service.cpp",
        "patchSetId": 2
      },
      "lineNbr": 560,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-11-09T03:49:13Z",
      "side": 1,
      "message": "In case there is ever divergence here, I think this check should be a helper function (like ShouldCallSetSid) and the same helper check should get called in SetProcessAttributesAndCaps.",
      "revId": "6486a28d611e5a27bcc514eac4fd43b84a616828",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "7214ae48_77a54c07",
        "filename": "init/service.cpp",
        "patchSetId": 2
      },
      "lineNbr": 560,
      "author": {
        "id": 1869780
      },
      "writtenOn": "2022-11-09T19:08:15Z",
      "side": 1,
      "message": "A new function \u0027RequiresConsole()\u0027 has been introduced.",
      "parentUuid": "e3145704_8fe5a31e",
      "revId": "6486a28d611e5a27bcc514eac4fd43b84a616828",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}