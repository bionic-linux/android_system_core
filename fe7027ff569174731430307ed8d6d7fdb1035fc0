{
  "comments": [
    {
      "key": {
        "uuid": "548b02a3_26a89799",
        "filename": "liblog/log_is_loggable.c",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-01-30T00:46:57Z",
      "side": 1,
      "message": "need something to deal with truncation of tag to PROP_NAME_MAX, I\u0027d like to see strncmp instead min(tag + 1, sizeof(last_tag - 1))",
      "range": {
        "startLine": 154,
        "startChar": 23,
        "endLine": 154,
        "endChar": 53
      },
      "revId": "fe7027ff569174731430307ed8d6d7fdb1035fc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "548b02a3_86b7abf3",
        "filename": "liblog/log_is_loggable.c",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-01-30T00:46:57Z",
      "side": 1,
      "message": "Something like this to deal with truncation:\n\nstrncmp(last_tag + 1, tag + 1, min(strlen(tag),sizeof(tag) - 1))-1)",
      "range": {
        "startLine": 154,
        "startChar": 23,
        "endLine": 154,
        "endChar": 52
      },
      "revId": "fe7027ff569174731430307ed8d6d7fdb1035fc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "349a0eef_23a6c9dd",
        "filename": "liblog/log_is_loggable.c",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-01-30T00:52:35Z",
      "side": 1,
      "message": "Since it is a single static buffer I could just make it longer than we expect a tag to usefully be.",
      "parentUuid": "548b02a3_26a89799",
      "range": {
        "startLine": 154,
        "startChar": 23,
        "endLine": 154,
        "endChar": 53
      },
      "revId": "fe7027ff569174731430307ed8d6d7fdb1035fc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9462dabe_2635087e",
        "filename": "liblog/log_is_loggable.c",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-02-01T16:57:26Z",
      "side": 1,
      "message": "As it stands, it is already there then :-) however tags can get very very long in our uncontrolled Android environment and we still need a strncmp here to allow the truncated value from applications that do not show tag-length restraint to match to keep the churn down. I am sure I saw a tag that was \u003e32 characters in length in our own logging ...",
      "parentUuid": "349a0eef_23a6c9dd",
      "range": {
        "startLine": 154,
        "startChar": 23,
        "endLine": 154,
        "endChar": 53
      },
      "revId": "fe7027ff569174731430307ed8d6d7fdb1035fc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9124acf4_0d20952a",
        "filename": "liblog/log_is_loggable.c",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-02-02T20:39:31Z",
      "side": 1,
      "message": "strncmp(last_tag + 1, tag + 1, min(strlen(tag),sizeof(last_tag) - 1))-1) will change the behavior, it will match any tag that is a prefix of last_tag.  I think it needs:\n\n  strncmp(last_tag + 1, tag + 1, sizeof(last_tag) - 2)\n\nThe -2 is to drop the first character (from last_tag + 1), and to drop the trailing null from last_tag.ï¿¼",
      "parentUuid": "9462dabe_2635087e",
      "range": {
        "startLine": 154,
        "startChar": 23,
        "endLine": 154,
        "endChar": 53
      },
      "revId": "fe7027ff569174731430307ed8d6d7fdb1035fc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "71c9f878_595d07fb",
        "filename": "liblog/log_is_loggable.c",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-02-02T21:00:56Z",
      "side": 1,
      "message": "Agreed\n\n(I must admit I had one of Sasha special before the first-round review :-) )",
      "parentUuid": "9124acf4_0d20952a",
      "range": {
        "startLine": 154,
        "startChar": 23,
        "endLine": 154,
        "endChar": 53
      },
      "revId": "fe7027ff569174731430307ed8d6d7fdb1035fc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5116b490_34e83e63",
        "filename": "liblog/log_is_loggable.c",
        "patchSetId": 1
      },
      "lineNbr": 154,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-02-03T02:27:07Z",
      "side": 1,
      "message": "I switch to strncpy below so last_tag is not always null terminated, and sizeof(last_tag) - 1 here",
      "parentUuid": "71c9f878_595d07fb",
      "range": {
        "startLine": 154,
        "startChar": 23,
        "endLine": 154,
        "endChar": 53
      },
      "revId": "fe7027ff569174731430307ed8d6d7fdb1035fc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b486fe94_4f2cd96b",
        "filename": "liblog/log_is_loggable.c",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-01-30T00:46:57Z",
      "side": 1,
      "message": "no man strlcpy, merde, does this make sure the last location is null terminated or not? would make a difference to above request to deal with truncation here with strncmp above ...",
      "range": {
        "startLine": 164,
        "startChar": 16,
        "endLine": 164,
        "endChar": 57
      },
      "revId": "fe7027ff569174731430307ed8d6d7fdb1035fc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9489faaa_2e887794",
        "filename": "liblog/log_is_loggable.c",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-01-30T00:52:35Z",
      "side": 1,
      "message": "strlcpy is bsd, https://www.freebsd.org/cgi/man.cgi?query\u003dstrlcpy\u0026sektion\u003d3\nit guarantees null termination",
      "parentUuid": "b486fe94_4f2cd96b",
      "range": {
        "startLine": 164,
        "startChar": 16,
        "endLine": 164,
        "endChar": 57
      },
      "revId": "fe7027ff569174731430307ed8d6d7fdb1035fc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9489faaa_d9ca73c8",
        "filename": "liblog/log_is_loggable.c",
        "patchSetId": 1
      },
      "lineNbr": 164,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-02-01T16:57:26Z",
      "side": 1,
      "message": "Thanks, replying to reviews with a phone can get combersome. strlcpy is perfect.",
      "parentUuid": "9489faaa_2e887794",
      "range": {
        "startLine": 164,
        "startChar": 16,
        "endLine": 164,
        "endChar": 57
      },
      "revId": "fe7027ff569174731430307ed8d6d7fdb1035fc0",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}