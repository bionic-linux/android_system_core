{
  "comments": [
    {
      "key": {
        "uuid": "2fab02f7_a48a3147",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2017-01-31T02:26:45Z",
      "side": 1,
      "message": "It\u0027s a static constant, so there storage has to live somewhere (i.e. that\u0027s what you added in the .cpp file). Can you give me an example of what you tried/expected otherwise?",
      "revId": "b90550444d1c8528f08fa7e97190e199b5fcc173",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f64795ec_cdc3b5e0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1015340
      },
      "writtenOn": "2017-01-31T22:53:51Z",
      "side": 1,
      "message": "If you write\n\nclass foo {\n   static const int bar \u003d [n];\n};\n\n\nthen g++ lets you refer to foo::bar *without* defining it, as long as you don\u0027t try to compute \u0026foo::bar.  Turns out this isn\u0027t standard behavior (see http://www.open-std.org/jtc1/sc22/wg21/docs/cwg_defects.html#454 where it was discussed as a defect).",
      "revId": "b90550444d1c8528f08fa7e97190e199b5fcc173",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}