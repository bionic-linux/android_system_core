{
  "comments": [
    {
      "key": {
        "uuid": "2c3ec0e7_e7344eee",
        "filename": "trusty/keymaster/set_attestation_key/set_attestation_key.cpp",
        "patchSetId": 3
      },
      "lineNbr": 156,
      "author": {
        "id": 1133857
      },
      "writtenOn": "2020-09-10T16:32:38Z",
      "side": 1,
      "message": "OPENSSL_free(key_name);\nOPENSSL_free(key_header);\nOPENSSL_free(key);\n?",
      "revId": "da4e6dd51d489f1f30beca80727ccf02edae1f29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ebf10b34_efb74fc8",
        "filename": "trusty/keymaster/set_attestation_key/set_attestation_key.cpp",
        "patchSetId": 3
      },
      "lineNbr": 160,
      "author": {
        "id": 1133857
      },
      "writtenOn": "2020-09-10T16:32:38Z",
      "side": 1,
      "message": "Not sure if it\u0027s worth it, but maybe explicitly do OPENSSL_cleanse(key) here and other places in the memory that read the PrivateKey?",
      "revId": "da4e6dd51d489f1f30beca80727ccf02edae1f29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fa144498_37e4d663",
        "filename": "trusty/keymaster/set_attestation_key/set_attestation_key.cpp",
        "patchSetId": 3
      },
      "lineNbr": 196,
      "author": {
        "id": 1347934
      },
      "writtenOn": "2020-09-10T06:41:30Z",
      "side": 1,
      "message": "free(key) before return?",
      "range": {
        "startLine": 196,
        "startChar": 0,
        "endLine": 196,
        "endChar": 18
      },
      "revId": "da4e6dd51d489f1f30beca80727ccf02edae1f29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "14be6366_c1a5f117",
        "filename": "trusty/keymaster/set_attestation_key/set_attestation_key.cpp",
        "patchSetId": 3
      },
      "lineNbr": 250,
      "author": {
        "id": 1347934
      },
      "writtenOn": "2020-09-10T06:41:30Z",
      "side": 1,
      "message": "How about moving this printf after the error message?\nUsers might not be interested in the return value if it\u0027s succeed.",
      "range": {
        "startLine": 250,
        "startChar": 75,
        "endLine": 250,
        "endChar": 78
      },
      "revId": "da4e6dd51d489f1f30beca80727ccf02edae1f29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0771e0dd_1c1b6177",
        "filename": "trusty/keymaster/set_attestation_key/set_attestation_key.cpp",
        "patchSetId": 3
      },
      "lineNbr": 261,
      "author": {
        "id": 1133857
      },
      "writtenOn": "2020-09-10T16:32:38Z",
      "side": 1,
      "message": "nit: move this newline down before while()",
      "revId": "da4e6dd51d489f1f30beca80727ccf02edae1f29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3928ec77_4a6945e0",
        "filename": "trusty/keymaster/set_attestation_key/set_attestation_key.cpp",
        "patchSetId": 3
      },
      "lineNbr": 273,
      "author": {
        "id": 1133857
      },
      "writtenOn": "2020-09-10T16:32:38Z",
      "side": 1,
      "message": "Check for returned algorithm in case of malformed XML?",
      "revId": "da4e6dd51d489f1f30beca80727ccf02edae1f29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46250071_35cbc8a6",
        "filename": "trusty/keymaster/set_attestation_key/set_attestation_key.cpp",
        "patchSetId": 3
      },
      "lineNbr": 275,
      "author": {
        "id": 1133857
      },
      "writtenOn": "2020-09-10T16:32:38Z",
      "side": 1,
      "message": "Check for !algorithm?",
      "revId": "da4e6dd51d489f1f30beca80727ccf02edae1f29",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}