{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "943ee5bc_72d5e5af",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-06-05T23:01:00Z",
      "side": 1,
      "message": "this seems like a risky breaking change?\n\n+jiyong",
      "revId": "3ca9d2c4b8c76761a33f38bd59c1aadf2d8613b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "049b0174_5ba14e4d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2023-06-07T00:31:06Z",
      "side": 1,
      "message": "Isn\u0027t this a breaking change to the clients of this function who (intentionally or unintentionally) have depended on the current behavior?",
      "revId": "3ca9d2c4b8c76761a33f38bd59c1aadf2d8613b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "13a5452d_bc3c7aec",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2023-06-07T00:32:03Z",
      "side": 1,
      "message": "I didn\u0027t see this message. Yes, as I commented above, this is a breaking change.",
      "parentUuid": "943ee5bc_72d5e5af",
      "revId": "3ca9d2c4b8c76761a33f38bd59c1aadf2d8613b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "42e9facb_e8889d1d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1958315
      },
      "writtenOn": "2023-06-07T07:12:25Z",
      "side": 1,
      "message": "What do you suggest to land this change in this case? Should we consider merge [PS3](https://r.android.com/c/2615469/3) instead to minimize the impact?",
      "parentUuid": "049b0174_5ba14e4d",
      "revId": "3ca9d2c4b8c76761a33f38bd59c1aadf2d8613b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59155978_7298f7ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2023-06-07T07:25:41Z",
      "side": 1,
      "message": "PS3 is also a breaking change.\n\nI actually don\u0027t understand how this change got started. Whether to CLOEXEC or not is the decision that client shall made. Doing it in the library sounds like an opinionated API design.",
      "parentUuid": "42e9facb_e8889d1d",
      "revId": "3ca9d2c4b8c76761a33f38bd59c1aadf2d8613b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "08a652ff_54c185ac",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1958315
      },
      "writtenOn": "2023-06-07T08:39:34Z",
      "side": 1,
      "message": "Here is the context:\n\nWhile working on removing the dependence of init from the current RPC binder API (b/275729094), it was necessary for both callers to set CLOEXEC to the obtained socket file descriptor. So we decided to move this flag set to a higher level [1][2].\n\n[1] https://googleplex-android-review.git.corp.google.com/c/platform/packages/modules/Virtualization/+/23492659/comment/65af71e6_0ccd5874/\n[2] https://android-review.git.corp.google.com/c/platform/system/librustutils/+/2615173/comments/be9a43b9_10a95159",
      "parentUuid": "59155978_7298f7ba",
      "revId": "3ca9d2c4b8c76761a33f38bd59c1aadf2d8613b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f22ad746_bca353c5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1060831
      },
      "writtenOn": "2023-06-07T08:40:35Z",
      "side": 1,
      "message": "CLOEXEC should be the default, but sadly isn\u0027t. (See also immutability etc.)\n\nThe only reason this fd doesn\u0027t have CLOEXEC set is that the process receives it via inheritance when it is exec\u0027d.\n\nIn Rust, functions that give access to fds always set CLOEXEC for that reason. So the Rust version should definitely set CLOEXEC.\n\nSo I\u0027m strongly in favor of aosp/2615173.\n\nI would support this CL if we were creating this function from scratch. Since it exists and has lots of users, there is a risk of backward compatibility.\n\n\u003e Whether to CLOEXEC or not is the decision that client shall made. \n\nWe don\u0027t give the client that option, and we know that initially is is not CLOEXEC, and it probably should be if this client is going to use the handle (and not immediately re-exec).\n\n\u003e Doing it in the library sounds like an opinionated API design.\n\nThe opinion is right though :-)",
      "parentUuid": "59155978_7298f7ba",
      "revId": "3ca9d2c4b8c76761a33f38bd59c1aadf2d8613b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "455b67b1_9ae9b753",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2023-06-07T10:07:01Z",
      "side": 1,
      "message": "I know that CLOEXEC is a good practice, but as we all know, this is a breaking change. The only compatible change I can think of is creating another variant of this function which does CLOEXEC, and perhaps deprecate/dis (not delete) the existing one. Does it fulfill your motivation?",
      "parentUuid": "f22ad746_bca353c5",
      "revId": "3ca9d2c4b8c76761a33f38bd59c1aadf2d8613b1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}