{
  "comments": [
    {
      "key": {
        "uuid": "4ec61432_6809df80",
        "filename": "libcrypto_utils/Android.mk",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-04-04T20:47:12Z",
      "side": 1,
      "message": "you didn\u0027t need this for the host shared library?",
      "revId": "8ebb55ae07c14a38caea61b34435338822c86015",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8e3accf4_e0960276",
        "filename": "libcrypto_utils/Android.mk",
        "patchSetId": 1
      },
      "lineNbr": 48,
      "author": {
        "id": 1080683
      },
      "writtenOn": "2016-04-04T21:01:28Z",
      "side": 1,
      "message": "This copies what libcrypto is doing. It has the LOCAL_MODULE_HOST_OS only for the static library (I think it\u0027s present for building adb). If I add the same line for the host shared library, I\u0027ll run into trouble since there is no suitable libcrypto available.",
      "parentUuid": "4ec61432_6809df80",
      "revId": "8ebb55ae07c14a38caea61b34435338822c86015",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ec61432_08d13b17",
        "filename": "libcrypto_utils/include/crypto_utils/byte_order.h",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-04-04T20:47:12Z",
      "side": 1,
      "message": "(android is little-endian, so feel free to just remove any of this.)",
      "revId": "8ebb55ae07c14a38caea61b34435338822c86015",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e3d98ed_3f85a737",
        "filename": "libcrypto_utils/include/crypto_utils/byte_order.h",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1080683
      },
      "writtenOn": "2016-04-04T21:01:28Z",
      "side": 1,
      "message": "Well, this gets built as part of adb, and adb theoretically runs on Linux hosts which might use big-endian byte order. I guess we just don\u0027t support this, at least I wouldn\u0027t feel confident adb works on big-endian Linux hosts?\n\nAnyhow, I figured I\u0027d rather not add to the problem, and I think it\u0027s nice to have the swap macros at the right points in the code if only for documentation purposes.",
      "parentUuid": "4ec61432_08d13b17",
      "revId": "8ebb55ae07c14a38caea61b34435338822c86015",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ec61432_68031f34",
        "filename": "libcrypto_utils/include/crypto_utils/byte_order.h",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-04-04T21:04:39Z",
      "side": 1,
      "message": "we removed all the big-endian host code too several releases ago. because we have no big-endian hosts or targets, it\u0027s just untested code.",
      "parentUuid": "6e3d98ed_3f85a737",
      "revId": "8ebb55ae07c14a38caea61b34435338822c86015",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2eaac053_05693283",
        "filename": "libcrypto_utils/include/crypto_utils/byte_order.h",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1080683
      },
      "writtenOn": "2016-04-04T21:11:38Z",
      "side": 1,
      "message": "Hm, keeping untested code doesn\u0027t make much sense indeed. However I still need some conversion to meet BoringSSL\u0027s expectation of binary-encoded numbers being big endian. I could just drop all the macros for specific cases and use crypto_utils_bswap32 in the places where I need to convert? That may still look/weird incorrect to people reading the code. Will think some more about this.",
      "parentUuid": "4ec61432_68031f34",
      "revId": "8ebb55ae07c14a38caea61b34435338822c86015",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4ec61432_886c4bd6",
        "filename": "libcrypto_utils/include/crypto_utils/byte_order.h",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-04-04T21:16:26Z",
      "side": 1,
      "message": "use the betoh(16|32|64) macros? then it\u0027s the c library\u0027s problem. (though i guess i\u0027m not sure that mac/windows have these macros.)",
      "parentUuid": "2eaac053_05693283",
      "revId": "8ebb55ae07c14a38caea61b34435338822c86015",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6e3d98ed_bf789700",
        "filename": "libcrypto_utils/include/crypto_utils/byte_order.h",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1080683
      },
      "writtenOn": "2016-04-04T21:23:58Z",
      "side": 1,
      "message": "Windows doesn\u0027t. That\u0027s actually the reason for this file\u0027s existence :)\n\nI could alternatively use ntohl/htonl (which conveniently convert to big endian byte order). The resulting code will still not work on big-endian hosts, but we already established that this moot.",
      "parentUuid": "4ec61432_886c4bd6",
      "revId": "8ebb55ae07c14a38caea61b34435338822c86015",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}