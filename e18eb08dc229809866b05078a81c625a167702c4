{
  "comments": [
    {
      "key": {
        "uuid": "NpFhI5a4",
        "filename": "init/devices.c",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 1005480
      },
      "writtenOn": "2013-01-04T04:14:37Z",
      "side": 1,
      "message": "add_property() calloc\u0027s a struct prop_node.\nThe property is part of the prop_node and should not be freed.\nLucky that -\u003eproperty is at the start of struct prop_node.\n\nfree(\u0026(node_to_item(node, struct prop_node, plist))",
      "revId": "e18eb08dc229809866b05078a81c625a167702c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Ns7LFfl0",
        "filename": "init/devices.c",
        "patchSetId": 3
      },
      "lineNbr": 120,
      "author": {
        "id": 1006720
      },
      "writtenOn": "2013-01-04T22:39:34Z",
      "side": 1,
      "message": "SNAFU. was in patchset 2.",
      "parentUuid": "NpFhI5a4",
      "revId": "e18eb08dc229809866b05078a81c625a167702c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "NpJMt7q4",
        "filename": "init/ueventd.c",
        "patchSetId": 3
      },
      "lineNbr": 102,
      "author": {
        "id": 1005480
      },
      "writtenOn": "2013-01-04T04:14:37Z",
      "side": 1,
      "message": "This should probably go in something similar to handle_pending_properties()\n\nand only be called if revents has POLLIN set.",
      "revId": "e18eb08dc229809866b05078a81c625a167702c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Ns9LdokA",
        "filename": "init/ueventd.c",
        "patchSetId": 3
      },
      "lineNbr": 102,
      "author": {
        "id": 1006720
      },
      "writtenOn": "2013-01-04T22:39:34Z",
      "side": 1,
      "message": "okay but I hate to continue depending on a subsequent uevent to attempt setting properties. It would be nicer better cleaner if init could signal ueventd (via an fd in the ufd array) that the property system is all the way up (accepting __system_property_set()). Perhaps use a finite timeout so there would be no possibility of orphaned property sets from uevents.",
      "parentUuid": "NpJMt7q4",
      "revId": "e18eb08dc229809866b05078a81c625a167702c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "NpPMkcsg",
        "filename": "init/ueventd.c",
        "patchSetId": 3
      },
      "lineNbr": 108,
      "author": {
        "id": 1005480
      },
      "writtenOn": "2013-01-04T04:14:37Z",
      "side": 1,
      "message": "extra scope is not needed",
      "revId": "e18eb08dc229809866b05078a81c625a167702c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "NpBMqPpI",
        "filename": "init/ueventd.c",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 1005480
      },
      "writtenOn": "2013-01-04T04:14:37Z",
      "side": 1,
      "message": "When would prop set fail and then later succeed?\n\nIf never, then remove the prop_node in all cases.",
      "revId": "e18eb08dc229809866b05078a81c625a167702c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "Ns9JoQrQ",
        "filename": "init/ueventd.c",
        "patchSetId": 3
      },
      "lineNbr": 114,
      "author": {
        "id": 1006720
      },
      "writtenOn": "2013-01-04T22:39:34Z",
      "side": 1,
      "message": "Because early uevents are processed before the init process has created the property socket. That\u0027s the reason this queue, \"properties\" (renamed \"properties_to_set\" in the next patch set), is necessary.",
      "parentUuid": "NpBMqPpI",
      "revId": "e18eb08dc229809866b05078a81c625a167702c4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}