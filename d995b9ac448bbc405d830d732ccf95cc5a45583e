{
  "comments": [
    {
      "key": {
        "uuid": "154a3299_9bb20bdb",
        "filename": "logcat/logcat.cpp",
        "patchSetId": 2
      },
      "lineNbr": 87,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2014-10-28T19:27:50Z",
      "side": 1,
      "message": "KISS? drops need for math and floating point.\n\n    int maxRotationCountDigits \u003d snprintf(NULL, 0, \"%d\", g_maxRotatedLogs);",
      "range": {
        "startLine": 85,
        "startChar": 0,
        "endLine": 87,
        "endChar": 84
      },
      "revId": "d995b9ac448bbc405d830d732ccf95cc5a45583e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5bfba8a_d866990f",
        "filename": "logcat/tests/logcat_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 561,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2014-10-28T19:27:50Z",
      "side": 1,
      "message": "These exit without cleaning up the fp. This is particularly serious in that the pclose is necessary to immediately clean up zombies and pipes. Consider stuttering the comparison tests, used EXPECT macros to propagate the error report(s), and another final check to perform a clean exit to hit pclose below.",
      "range": {
        "startLine": 559,
        "startChar": 0,
        "endLine": 561,
        "endChar": 41
      },
      "revId": "d995b9ac448bbc405d830d732ccf95cc5a45583e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d5bfba8a_f8635dfc",
        "filename": "logcat/tests/logcat_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 572,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2014-10-28T19:27:50Z",
      "side": 1,
      "message": "ditto, fp is not cleanly closed.",
      "range": {
        "startLine": 572,
        "startChar": 11,
        "endLine": 572,
        "endChar": 19
      },
      "revId": "d995b9ac448bbc405d830d732ccf95cc5a45583e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}