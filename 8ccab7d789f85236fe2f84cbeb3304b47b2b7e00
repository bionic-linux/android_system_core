{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "fac1d5e0_ac0bd2b7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 7
      },
      "lineNbr": 0,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2021-04-06T17:14:24Z",
      "side": 1,
      "message": "Thanks!",
      "revId": "8ccab7d789f85236fe2f84cbeb3304b47b2b7e00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "865040c5_265af7b7",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 7
      },
      "lineNbr": 651,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2021-04-06T17:13:21Z",
      "side": 1,
      "message": "size_kb \u003c\u003d 0?",
      "range": {
        "startLine": 651,
        "startChar": 8,
        "endLine": 651,
        "endChar": 16
      },
      "revId": "8ccab7d789f85236fe2f84cbeb3304b47b2b7e00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "87a5d9a1_a2d375d3",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 7
      },
      "lineNbr": 651,
      "author": {
        "id": 1176763
      },
      "writtenOn": "2021-04-06T17:36:16Z",
      "side": 1,
      "message": "Added a condition to give 0~16MB, and initial value to -1.",
      "parentUuid": "865040c5_265af7b7",
      "range": {
        "startLine": 651,
        "startChar": 8,
        "endLine": 651,
        "endChar": 16
      },
      "revId": "8ccab7d789f85236fe2f84cbeb3304b47b2b7e00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "190f5abc_a23177e2",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 7
      },
      "lineNbr": 673,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2021-04-06T17:13:21Z",
      "side": 1,
      "message": "base::StringPrintf ?",
      "range": {
        "startLine": 673,
        "startChar": 36,
        "endLine": 673,
        "endChar": 82
      },
      "revId": "8ccab7d789f85236fe2f84cbeb3304b47b2b7e00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7827b12_20ca7ec7",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 7
      },
      "lineNbr": 673,
      "author": {
        "id": 1176763
      },
      "writtenOn": "2021-04-06T17:36:16Z",
      "side": 1,
      "message": "What is the benefit of StringPrintf?",
      "parentUuid": "190f5abc_a23177e2",
      "range": {
        "startLine": 673,
        "startChar": 36,
        "endLine": 673,
        "endChar": 82
      },
      "revId": "8ccab7d789f85236fe2f84cbeb3304b47b2b7e00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6711ff3f_60128666",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 7
      },
      "lineNbr": 673,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2021-04-06T21:26:54Z",
      "side": 1,
      "message": "chains of calls to operator+() wind up making (and wasting) temporaries, and cause needless copies of your data.\n\nhttps://g3doc.corp.google.com/devtools/library_club/g3doc/totw/18.md?cl\u003dhead",
      "parentUuid": "b7827b12_20ca7ec7",
      "range": {
        "startLine": 673,
        "startChar": 36,
        "endLine": 673,
        "endChar": 82
      },
      "revId": "8ccab7d789f85236fe2f84cbeb3304b47b2b7e00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "34f10a72_d55e099e",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 7
      },
      "lineNbr": 673,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2021-04-06T22:22:43Z",
      "side": 1,
      "message": "I\u0027m okay with this either way since this code is not a hot path.",
      "parentUuid": "6711ff3f_60128666",
      "range": {
        "startLine": 673,
        "startChar": 36,
        "endLine": 673,
        "endChar": 82
      },
      "revId": "8ccab7d789f85236fe2f84cbeb3304b47b2b7e00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f8b5c5fc_871eb202",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 7
      },
      "lineNbr": 713,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2021-04-06T17:13:21Z",
      "side": 1,
      "message": "looks like entry.readahead_size_kb \u003d\u003d 0 is used to ignore the setting, so why not just do it from caller side for readability? \n\n if (entry.readahead_size_kb) {\n    SetReadAheadSize(blk_device, entry.readahead_size_kb);\n }",
      "range": {
        "startLine": 713,
        "startChar": 4,
        "endLine": 713,
        "endChar": 58
      },
      "revId": "8ccab7d789f85236fe2f84cbeb3304b47b2b7e00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "462129de_c1090f01",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 7
      },
      "lineNbr": 713,
      "author": {
        "id": 1176763
      },
      "writtenOn": "2021-04-06T17:36:16Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f8b5c5fc_871eb202",
      "range": {
        "startLine": 713,
        "startChar": 4,
        "endLine": 713,
        "endChar": 58
      },
      "revId": "8ccab7d789f85236fe2f84cbeb3304b47b2b7e00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f9aff14e_701ed1cc",
        "filename": "fs_mgr/fs_mgr_fstab.cpp",
        "patchSetId": 7
      },
      "lineNbr": 258,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2021-04-06T17:13:21Z",
      "side": 1,
      "message": "pass min and max? e.g. min\u003d1, max\u003d4096?\n\nhttps://source.corp.google.com/android/system/libbase/include/android-base/parseint.h;l\u003d98?q\u003dParseInt\u0026sq\u003dpackage:%5Eandroid$\u0026start\u003d1",
      "range": {
        "startLine": 258,
        "startChar": 26,
        "endLine": 258,
        "endChar": 56
      },
      "revId": "8ccab7d789f85236fe2f84cbeb3304b47b2b7e00",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}