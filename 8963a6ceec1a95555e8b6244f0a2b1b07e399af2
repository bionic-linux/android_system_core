{
  "comments": [
    {
      "key": {
        "uuid": "bc81454e_52ef7499",
        "filename": "init/init.c",
        "patchSetId": 3
      },
      "lineNbr": 854,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2014-03-20T16:31:35Z",
      "side": 1,
      "message": "Might want to retain the fallback to /property_contexts if the selabel_open() fails on the /data/security/current/property_contexts so that we always have something loaded.",
      "revId": "8963a6ceec1a95555e8b6244f0a2b1b07e399af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1c2df129_58fea184",
        "filename": "init/init.c",
        "patchSetId": 3
      },
      "lineNbr": 854,
      "author": {
        "id": 1013157
      },
      "writtenOn": "2014-03-20T17:40:39Z",
      "side": 1,
      "message": "What is the proper way to deal with a complete set of policy files that exists under /data/security/current with matching selinux_version file yet the selabel_open fails for some reason on the override property_contexts file? We would have sepolicy, file_contexts using the override yet the property context using the base. That seems error prone. Is this where a reboot into a recovery mode would happen?\n\nAre we sure we don\u0027t want to tuck this inside libselinux? It would make handling certain issues much easier across all policy files.",
      "parentUuid": "bc81454e_52ef7499",
      "revId": "8963a6ceec1a95555e8b6244f0a2b1b07e399af2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}