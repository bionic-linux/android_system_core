{
  "comments": [
    {
      "key": {
        "uuid": "ad2d1b7c_b995a9db",
        "filename": "rootdir/etc/ld.config.txt",
        "patchSetId": 1
      },
      "lineNbr": 594,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-05-13T18:26:49Z",
      "side": 1,
      "message": "In a way it\u0027d make sense to add the links here too, as this is supposed to be a less restricted variant of the \"system\" config. Otoh one can argue that it shouldn\u0027t go here until proven necessary. Can there be tests that need ICU?",
      "revId": "dbfb16b3b070f25c00106af4fe2ef41e8caa401c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1effa74c_aeb9429a",
        "filename": "rootdir/etc/ld.config.txt",
        "patchSetId": 1
      },
      "lineNbr": 594,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-05-13T18:39:27Z",
      "side": 1,
      "message": "There\u0027s also the matter of consistency and clean failure modes: It\u0027s overall simpler to keep all these \"keep in sync\" sections in sync. If we happen to get a platform library that grows a dependency on libicuuc, it would only fail in this config or in the vendor one, which wouldn\u0027t be properly tested for.\n\nHence I think it\u0027s better to add the kludge here and to the \"vendor\" config section as well.",
      "parentUuid": "ad2d1b7c_b995a9db",
      "revId": "dbfb16b3b070f25c00106af4fe2ef41e8caa401c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcdc2de0_7998d05c",
        "filename": "rootdir/etc/ld.config.txt",
        "patchSetId": 1
      },
      "lineNbr": 594,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2019-05-14T07:59:18Z",
      "side": 1,
      "message": "Oh, yes. I can add the libs here in \"unrestricted\". For vendor/, I don\u0027t really want to expose libicuuc to any vendor binary. \n\nFor test, there is already a test, CtsJniTestCases, to require libicuuc in app. I can add another  CTS to make sure libicuuc can be dlopen-ed after fork and exec.",
      "parentUuid": "1effa74c_aeb9429a",
      "revId": "dbfb16b3b070f25c00106af4fe2ef41e8caa401c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}