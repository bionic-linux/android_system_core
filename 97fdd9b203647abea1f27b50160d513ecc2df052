{
  "comments": [
    {
      "key": {
        "uuid": "0192ef11_d49f58b8",
        "filename": "rootdir/init.rc",
        "patchSetId": 2
      },
      "lineNbr": 325,
      "author": {
        "id": 1103203
      },
      "writtenOn": "2019-08-29T15:37:20Z",
      "side": 1,
      "message": "Narayan, am I understanding correctly that exec will generally assume that the binary will return 0 in case of success, or nonzero in case of error?\n\nIf so, then I\u0027ll need to change \n\nhttp://r.android.com/c/platform/external/conscrypt/+/1107433/2/apex/selftest/boringssl_self_test.cpp\n\nbecause of the current draft, it returns nonzero in case of success, zero in case of failure.",
      "range": {
        "startLine": 325,
        "startChar": 0,
        "endLine": 325,
        "endChar": 62
      },
      "revId": "97fdd9b203647abea1f27b50160d513ecc2df052",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9403e896_223bd5a0",
        "filename": "rootdir/init.rc",
        "patchSetId": 2
      },
      "lineNbr": 325,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2019-08-29T15:43:54Z",
      "side": 1,
      "message": "Yes, but does init\u0027s \"exec\" command care about the return value ?",
      "parentUuid": "0192ef11_d49f58b8",
      "range": {
        "startLine": 325,
        "startChar": 0,
        "endLine": 325,
        "endChar": 62
      },
      "revId": "97fdd9b203647abea1f27b50160d513ecc2df052",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b455884b_0fbb3d81",
        "filename": "rootdir/init.rc",
        "patchSetId": 2
      },
      "lineNbr": 325,
      "author": {
        "id": 1103203
      },
      "writtenOn": "2019-08-29T15:55:26Z",
      "side": 1,
      "message": "\u003e init\u0027s \"exec\" command care about the return value ?\n\nSeems like it doesn\u0027t, because it happily carries on if the exec\u0027d command returns 1.\n\nIs it possible to do anything here that reboots into bootloader if the exec\u0027d command abort()s or returns anything other than 0? That\u0027s the behavior that I\u0027d like to have. I can make boringssl_self_test.cpp call\n\nandroid_reboot(ANDROID_RB_RESTART2, 0, \"bootloader,boringssl-self-check-failed\");\n\nor similar, but then boringssl_self_test.cpp would gain a bunch of depdendencies again that I think might be cleaner to keep out of there because that binary is in a separate SELinux security domain.\n\nRight now, \n - the binary returns 1 in case of success, 0 in case of a bug where libcrypto isn\u0027t the FIPS version, and abort()s in case of failure.\n - init.rc\u0027s exec ignores the return value.\n\nWhat I\u0027d like:\n - in case of abort() or a non-zero return value, the device should reboot into bootloader\n   - this happens if the self test fails or libcrypto is not in FIPS mode\n - in case of zero return value (self test ran and succeeded), we should carry on.",
      "parentUuid": "9403e896_223bd5a0",
      "range": {
        "startLine": 325,
        "startChar": 0,
        "endLine": 325,
        "endChar": 62
      },
      "revId": "97fdd9b203647abea1f27b50160d513ecc2df052",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fcfb464d_7ecb2f42",
        "filename": "rootdir/init.rc",
        "patchSetId": 2
      },
      "lineNbr": 325,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2019-08-29T15:57:59Z",
      "side": 1,
      "message": "That\u0027s a question for tomcherry@",
      "parentUuid": "b455884b_0fbb3d81",
      "range": {
        "startLine": 325,
        "startChar": 0,
        "endLine": 325,
        "endChar": 62
      },
      "revId": "97fdd9b203647abea1f27b50160d513ecc2df052",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "006e13e8_d1211bf1",
        "filename": "rootdir/init.rc",
        "patchSetId": 2
      },
      "lineNbr": 326,
      "author": {
        "id": 1103203
      },
      "writtenOn": "2019-08-29T17:03:47Z",
      "side": 1,
      "message": "Narayan/Tom: Can you think of any reason why the following might be happening:\n\n* It turns out that the *64 binary here successfully writes the marker file but the *32 one does not.\n* This is the case regardless of the order in which they are started here (initially I thought that maybe it was a race condition if apexd.status\u003dready was signalled slightly too early).\n* If I run the 32bit binary manually (as root), then it writes the missing marker file\n* running \"file boringssl_self_test*\" confirms that they are 32bit vs. 64bit binaries, respectively\n* based on logcat, both processes are run successfully:\n\nstarting service \u0027exec 15 (/apex/com.android.conscrypt/bin/boringssl_self_test64)\u0027...\nSVC_EXEC service \u0027exec 15 (/apex/com.android.conscrypt/bin/boringssl_self_test64)\u0027 pid 916 (uid 0 gid 0+0 context default) started; waiting...\nService \u0027exec 15 (/apex/com.android.conscrypt/bin/boringssl_self_test64)\u0027 (pid 916) exited with status 0 waiting took 0.019000 seconds\nstarting service \u0027exec 16 (/apex/com.android.conscrypt/bin/boringssl_self_test32)\u0027...\nSVC_EXEC service \u0027exec 16 (/apex/com.android.conscrypt/bin/boringssl_self_test32)\u0027 pid 917 (uid 0 gid 0+0 context default) started; waiting...\nService \u0027exec 16 (/apex/com.android.conscrypt/bin/boringssl_self_test32)\u0027 (pid 917) exited with status 0 waiting took 0.017000 seconds",
      "range": {
        "startLine": 326,
        "startChar": 0,
        "endLine": 326,
        "endChar": 62
      },
      "revId": "97fdd9b203647abea1f27b50160d513ecc2df052",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ce24e24_a9fc0084",
        "filename": "rootdir/init.rc",
        "patchSetId": 2
      },
      "lineNbr": 326,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-08-29T17:27:48Z",
      "side": 1,
      "message": "Are you seeing any selinux audits?  My first guess would be that that\u0027s the issue.  Especially since it\u0027ll run in a different selinux domain when run by shell vs through init.",
      "parentUuid": "006e13e8_d1211bf1",
      "range": {
        "startLine": 326,
        "startChar": 0,
        "endLine": 326,
        "endChar": 62
      },
      "revId": "97fdd9b203647abea1f27b50160d513ecc2df052",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cc6eb292_8557a2af",
        "filename": "rootdir/init.rc",
        "patchSetId": 2
      },
      "lineNbr": 326,
      "author": {
        "id": 1103203
      },
      "writtenOn": "2019-08-29T23:04:11Z",
      "side": 1,
      "message": "Turn out that neither of these two invocations succeeds in creating the file (the file creation timestamp is \u003e 1 minute after the \"starting service\" logs from init).\n\nSo it must just be that the 64bit one is later created by some other part of the boot process loading 64bit libcrypto.\n\nYes I was seeing some selinux denials that didn\u0027t make much sense to me: https://paste.googleplex.com/4506585776783360\n\nI think the avc_* denials are probably for unrelated files (e.g. perhaps the netd dependency accesses some devices when it\u0027s loaded?) since they don\u0027t refer to the boringssl_self_test_marker label which I\u0027ve set up for the marker files that the binary should be looking for \u0026 creating.\n\nI don\u0027t understand the lines:\n\n08-29 23:49:36.057   918   918 W boringssl_self_: type\u003d1400 audit(0.0:127): avc: denied { search } for name\u003d\"selftest\" dev\u003d\"tmpfs\" ino\u003d15321 scontext\u003du:r:boringssl_self_test:s0 tcontext\u003du:object_r:boringssl_self_test_marker:s0 tclass\u003ddir permissive\u003d0\n08-29 23:49:36.071   918   918 W boringssl_self_: type\u003d1400 audit(0.0:128): avc: denied { search } for name\u003d\"selftest\" dev\u003d\"tmpfs\" ino\u003d15321 scontext\u003du:r:boringssl_self_test:s0 tcontext\u003du:object_r:boringssl_self_test_marker:s0 tclass\u003ddir permissive\u003d0\n\n\nthough because why would boringssl_self_test \"search\" the boringssl_self_test_marker directory? As you can see in\n\nhttps://android-review.googlesource.com/c/platform/external/boringssl/+/1107413/7/src/crypto/fipsmodule/self_check/self_check.c#257\n\nthe code calls\n   access(flag_path, F_OK)\nwhere flag_path is the full path to the marker file. Why would that result in a \"search\" access to the tclass\u003ddir?\n\nboringssl_self_test contains the line:\n\n   allow boringssl_self_test boringssl_self_test_marker:file rw_file_perms;\n\nIs that line not correct or not enough? Note that in the latest patchset, the label boringssl_self_test_marker refers to both the\n\n/dev/boringssl/selftest\n\ndirectory and also the marker files that are created inside it. Any idea what I\u0027m doing wrong?",
      "parentUuid": "1ce24e24_a9fc0084",
      "range": {
        "startLine": 326,
        "startChar": 0,
        "endLine": 326,
        "endChar": 62
      },
      "revId": "97fdd9b203647abea1f27b50160d513ecc2df052",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}