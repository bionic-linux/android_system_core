{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2d624cbf_5f41ba4a",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/cow_compress.h",
        "patchSetId": 8
      },
      "lineNbr": 38,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-08-09T00:10:14Z",
      "side": 1,
      "message": "Please fix this ERROR reported by Common Typos: Common typo found: \"compatability\" -- should it be \"compatibility\"?\n\nAnalyzer Description: Linter for catching common typos motivated by go/todo-fail and go/lol-codesearch. Shared with google3 common typos library go/common-typos.\nOwner: ayeaye-team@google.com\n\nCommon typo found: \"compatability\" -- should it be \"compatibility\"?\nNote: a line containing \"common_typos_disable\" or \"common_typos_enable\" will turn off or on (respectively) the linter for subsequent lines in the file. Alternatively include the token \"NOTYPO\" within a line to skip typo linting that line or include \u0027No-Typo-Check: \u003creason\u003e\u0027in the commit message.",
      "range": {
        "startLine": 38,
        "startChar": 21,
        "endLine": 38,
        "endChar": 34
      },
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17e9322f_8de9c643",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/cow_compress.h",
        "patchSetId": 8
      },
      "lineNbr": 39,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-08-09T00:10:14Z",
      "side": 1,
      "message": "what is this method for? What does this method return?",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 39,
        "endChar": 37
      },
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "955f323b_452ec2fc",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/cow_compress.h",
        "patchSetId": 8
      },
      "lineNbr": 41,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2023-08-09T15:45:10Z",
      "side": 1,
      "message": "nit: SetCompressionLevel (or, for trivial getters/setters, set_compression_level is ok too)",
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9f2729f_d61f912f",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/cow_writer.h",
        "patchSetId": 8
      },
      "lineNbr": 112,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-08-09T00:10:14Z",
      "side": 1,
      "message": "do not pass reference to unique_ptr, pass a copy of unique_ptr instead.",
      "range": {
        "startLine": 112,
        "startChar": 19,
        "endLine": 112,
        "endChar": 48
      },
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86730c41_780840ac",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/cow_writer.h",
        "patchSetId": 8
      },
      "lineNbr": 112,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2023-08-09T15:45:10Z",
      "side": 1,
      "message": "You can also do \"\u0026\u0026\" since that will force an std:move at the caller. A bare reference is more dangerous since the compiler won\u0027t force the std::move.",
      "parentUuid": "b9f2729f_d61f912f",
      "range": {
        "startLine": 112,
        "startChar": 19,
        "endLine": 112,
        "endChar": 48
      },
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e728b9ae_2d7b448f",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/cow_compress.cpp",
        "patchSetId": 8
      },
      "lineNbr": 57,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2023-08-09T15:45:10Z",
      "side": 1,
      "message": "Use the new CowCompression struct here instead? The only reason FromString exists on the decompress version is for tests.",
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "532a0ce6_147e4fd3",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/writer_v2.cpp",
        "patchSetId": 8
      },
      "lineNbr": 417,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2023-08-09T15:45:10Z",
      "side": 1,
      "message": "Maybe we could stick this in WriterV2 so it\u0027s only created once?\n\n(I\u0027d even argue it should go into WriterBase, along with compression_, since we\u0027ll want to share the new compression logic with upcoming WriterV3).",
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}