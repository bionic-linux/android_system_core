{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "2d624cbf_5f41ba4a",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/cow_compress.h",
        "patchSetId": 8
      },
      "lineNbr": 38,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-08-09T00:10:14Z",
      "side": 1,
      "message": "Please fix this ERROR reported by Common Typos: Common typo found: \"compatability\" -- should it be \"compatibility\"?\n\nAnalyzer Description: Linter for catching common typos motivated by go/todo-fail and go/lol-codesearch. Shared with google3 common typos library go/common-typos.\nOwner: ayeaye-team@google.com\n\nCommon typo found: \"compatability\" -- should it be \"compatibility\"?\nNote: a line containing \"common_typos_disable\" or \"common_typos_enable\" will turn off or on (respectively) the linter for subsequent lines in the file. Alternatively include the token \"NOTYPO\" within a line to skip typo linting that line or include \u0027No-Typo-Check: \u003creason\u003e\u0027in the commit message.",
      "range": {
        "startLine": 38,
        "startChar": 21,
        "endLine": 38,
        "endChar": 34
      },
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5858fab4_fdd110be",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/cow_compress.h",
        "patchSetId": 8
      },
      "lineNbr": 38,
      "author": {
        "id": 1964171
      },
      "writtenOn": "2023-08-09T17:22:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2d624cbf_5f41ba4a",
      "range": {
        "startLine": 38,
        "startChar": 21,
        "endLine": 38,
        "endChar": 34
      },
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "17e9322f_8de9c643",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/cow_compress.h",
        "patchSetId": 8
      },
      "lineNbr": 39,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-08-09T00:10:14Z",
      "side": 1,
      "message": "what is this method for? What does this method return?",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 39,
        "endChar": 37
      },
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "337a9c32_f2c34a90",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/cow_compress.h",
        "patchSetId": 8
      },
      "lineNbr": 39,
      "author": {
        "id": 1964171
      },
      "writtenOn": "2023-08-09T17:22:26Z",
      "side": 1,
      "message": "Had this here when I was trying to take out compression_ variable (which contains Compression Algorithm as an enum) and just keep a Compressor object, but isn\u0027t needed now.",
      "parentUuid": "17e9322f_8de9c643",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 39,
        "endChar": 37
      },
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2775cc25_560c1409",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/cow_compress.h",
        "patchSetId": 8
      },
      "lineNbr": 39,
      "author": {
        "id": 1964171
      },
      "writtenOn": "2023-08-09T21:03:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "337a9c32_f2c34a90",
      "range": {
        "startLine": 39,
        "startChar": 0,
        "endLine": 39,
        "endChar": 37
      },
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "955f323b_452ec2fc",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/cow_compress.h",
        "patchSetId": 8
      },
      "lineNbr": 41,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2023-08-09T15:45:10Z",
      "side": 1,
      "message": "nit: SetCompressionLevel (or, for trivial getters/setters, set_compression_level is ok too)",
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e9bea37d_c91f947d",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/cow_compress.h",
        "patchSetId": 8
      },
      "lineNbr": 41,
      "author": {
        "id": 1964171
      },
      "writtenOn": "2023-08-09T17:03:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "955f323b_452ec2fc",
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b9f2729f_d61f912f",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/cow_writer.h",
        "patchSetId": 8
      },
      "lineNbr": 112,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-08-09T00:10:14Z",
      "side": 1,
      "message": "do not pass reference to unique_ptr, pass a copy of unique_ptr instead.",
      "range": {
        "startLine": 112,
        "startChar": 19,
        "endLine": 112,
        "endChar": 48
      },
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "86730c41_780840ac",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/cow_writer.h",
        "patchSetId": 8
      },
      "lineNbr": 112,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2023-08-09T15:45:10Z",
      "side": 1,
      "message": "You can also do \"\u0026\u0026\" since that will force an std:move at the caller. A bare reference is more dangerous since the compiler won\u0027t force the std::move.",
      "parentUuid": "b9f2729f_d61f912f",
      "range": {
        "startLine": 112,
        "startChar": 19,
        "endLine": 112,
        "endChar": 48
      },
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "f5c174e6_4e8424ac",
        "filename": "fs_mgr/libsnapshot/include/libsnapshot/cow_writer.h",
        "patchSetId": 8
      },
      "lineNbr": 112,
      "author": {
        "id": 1964171
      },
      "writtenOn": "2023-08-09T17:22:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "86730c41_780840ac",
      "range": {
        "startLine": 112,
        "startChar": 19,
        "endLine": 112,
        "endChar": 48
      },
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e728b9ae_2d7b448f",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/cow_compress.cpp",
        "patchSetId": 8
      },
      "lineNbr": 57,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2023-08-09T15:45:10Z",
      "side": 1,
      "message": "Use the new CowCompression struct here instead? The only reason FromString exists on the decompress version is for tests.",
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "776c4ad6_071ad310",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/cow_compress.cpp",
        "patchSetId": 8
      },
      "lineNbr": 57,
      "author": {
        "id": 1964171
      },
      "writtenOn": "2023-08-09T17:22:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e728b9ae_2d7b448f",
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "532a0ce6_147e4fd3",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/writer_v2.cpp",
        "patchSetId": 8
      },
      "lineNbr": 417,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2023-08-09T15:45:10Z",
      "side": 1,
      "message": "Maybe we could stick this in WriterV2 so it\u0027s only created once?\n\n(I\u0027d even argue it should go into WriterBase, along with compression_, since we\u0027ll want to share the new compression logic with upcoming WriterV3).",
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d9e3c024_a1487457",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/writer_v2.cpp",
        "patchSetId": 8
      },
      "lineNbr": 417,
      "author": {
        "id": 1964171
      },
      "writtenOn": "2023-08-09T17:22:26Z",
      "side": 1,
      "message": "each CompressWorker needs its\u0027s own compressor (since that\u0027s where we are going to store the context logic for zstd). One context per thread. That was my though process for creating compressor here, and transferring ownership to the CompressWorker.",
      "parentUuid": "532a0ce6_147e4fd3",
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7192bbed_21542281",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/writer_v2.cpp",
        "patchSetId": 8
      },
      "lineNbr": 417,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2023-08-09T17:24:33Z",
      "side": 1,
      "message": "right, but this case is the single-threaded, one-block-at-a-time version, so it could share one compressor for the lifetime of the writer. (that\u0027d let you share the zstd context too)",
      "parentUuid": "d9e3c024_a1487457",
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "309daf95_928fe34e",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/writer_v2.cpp",
        "patchSetId": 8
      },
      "lineNbr": 417,
      "author": {
        "id": 1964171
      },
      "writtenOn": "2023-08-09T20:43:50Z",
      "side": 1,
      "message": "oh gotcha I see, is this the same case for line 343 writer_v2.cpp, where num_threads \u003c\u003d 1 (could reuse the same compressor?)",
      "parentUuid": "7192bbed_21542281",
      "revId": "88bbf8fa4bf7353433d48619595b3024c37bd888",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}