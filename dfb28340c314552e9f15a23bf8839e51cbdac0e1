{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "f511f856_02a32b5b",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-02-08T20:41:15Z",
      "side": 1,
      "message": "is there any way we can test the behavior or simulate this? Seems like this would have caused a number of bugs",
      "range": {
        "startLine": 12,
        "startChar": 17,
        "endLine": 12,
        "endChar": 25
      },
      "revId": "dfb28340c314552e9f15a23bf8839e51cbdac0e1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c9521278_c6a8f7b3",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-02-08T20:57:12Z",
      "side": 1,
      "message": "i\u0027m more concerned that *fixing* this can introduce issues... this is legacy code, but it\u0027s used transitively in all kinds of places. i definitely think this is too late for T, but maybe we can try for U?\n\n(std::mutex already does the right thing, and is the better answer for new code.)",
      "parentUuid": "f511f856_02a32b5b",
      "range": {
        "startLine": 12,
        "startChar": 17,
        "endLine": 12,
        "endChar": 25
      },
      "revId": "dfb28340c314552e9f15a23bf8839e51cbdac0e1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a2e6cb0f_bd4247ec",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1880185
      },
      "writtenOn": "2022-04-21T18:02:39Z",
      "side": 1,
      "message": "@enh  Is now the right timing for U ?",
      "parentUuid": "c9521278_c6a8f7b3",
      "range": {
        "startLine": 12,
        "startChar": 17,
        "endLine": 12,
        "endChar": 25
      },
      "revId": "dfb28340c314552e9f15a23bf8839e51cbdac0e1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e2118e5_f7207dd5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-04-21T18:10:09Z",
      "side": 1,
      "message": "tomorrow will be (at least in the sense of \"it won\u0027t auto-merge into T\" --- you shouldn\u0027t assume that there will be significant testing of U any time soon though).\n\nlike smoreland i worry about how we\u0027d even know what code is affected. especially because you don\u0027t actually have a linked bug, where someone with existing code is asking for this fix. (and like i said, new code should probably be using std::mutex anyway.)",
      "parentUuid": "a2e6cb0f_bd4247ec",
      "range": {
        "startLine": 12,
        "startChar": 17,
        "endLine": 12,
        "endChar": 25
      },
      "revId": "dfb28340c314552e9f15a23bf8839e51cbdac0e1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6675b6fb_4c9bb1a5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1880185
      },
      "writtenOn": "2022-04-21T21:15:08Z",
      "side": 1,
      "message": "There are codes still using \u003cutils/Mutex.h\u003e, e.g.audioflinger.\nI create a bug b/230015765 with a test program to show the timeout will not works when system clock race condition hit.",
      "parentUuid": "9e2118e5_f7207dd5",
      "range": {
        "startLine": 12,
        "startChar": 17,
        "endLine": 12,
        "endChar": 25
      },
      "revId": "dfb28340c314552e9f15a23bf8839e51cbdac0e1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9e1c9ddd_62a42d2f",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 12,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-04-21T21:19:30Z",
      "side": 1,
      "message": "yeah, we understand the problem in theory (and fixed it for std::mutex), but my point is that -- afaict -- you\u0027ve not hit this in _practice_. are you writing new code?",
      "parentUuid": "6675b6fb_4c9bb1a5",
      "range": {
        "startLine": 12,
        "startChar": 17,
        "endLine": 12,
        "endChar": 25
      },
      "revId": "dfb28340c314552e9f15a23bf8839e51cbdac0e1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "27ed9d5d_a9f158a8",
        "filename": "libutils/include/utils/Mutex.h",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2022-02-08T20:41:15Z",
      "side": 1,
      "message": "which APEX needs the old API? could we remove it? Or, could we only use the monotonic_np API? (want to check if we can always have the same behavior)",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 205,
        "endChar": 63
      },
      "revId": "dfb28340c314552e9f15a23bf8839e51cbdac0e1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "45e3f360_db72b59e",
        "filename": "libutils/include/utils/Mutex.h",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 1880185
      },
      "writtenOn": "2022-02-08T21:03:43Z",
      "side": 1,
      "message": "we can remove the android_api check. i added that so that i can build old aosp api29 code",
      "parentUuid": "27ed9d5d_a9f158a8",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 205,
        "endChar": 63
      },
      "revId": "dfb28340c314552e9f15a23bf8839e51cbdac0e1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "11394994_68b6be50",
        "filename": "libutils/include/utils/Mutex.h",
        "patchSetId": 1
      },
      "lineNbr": 205,
      "author": {
        "id": 1880185
      },
      "writtenOn": "2022-04-21T18:02:39Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "45e3f360_db72b59e",
      "range": {
        "startLine": 205,
        "startChar": 0,
        "endLine": 205,
        "endChar": 63
      },
      "revId": "dfb28340c314552e9f15a23bf8839e51cbdac0e1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}