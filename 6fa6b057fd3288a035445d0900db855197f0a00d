{
  "comments": [
    {
      "key": {
        "uuid": "3ff1cc50_7449d046",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1004277
      },
      "writtenOn": "2014-05-16T01:05:03Z",
      "side": 1,
      "message": "Why do you want it to not block suspend?  Do you need suspend to occur while healthd is processing some power_supply event?  Wakelocks are normally held while processing these.  Any uevent needs to hold a wakelock for at least a short time in order to ensure userspace can see the event and process if needed.",
      "range": {
        "startLine": 10,
        "startChar": 32,
        "endLine": 10,
        "endChar": 60
      },
      "revId": "6fa6b057fd3288a035445d0900db855197f0a00d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "dffef0bb_2bc13d62",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 10,
      "author": {
        "id": 1015334
      },
      "writtenOn": "2014-05-30T10:39:04Z",
      "side": 1,
      "message": "In Intel specific platform, during suspend cpu goes offline and sends uevent. If EPOLLWAKEUP is enabled, wakelock prevents the suspend and the resume flow kicks-in.\n\nFor all power_supply related uevents, these originate with an interrupt, and there\u0027s enough time for the userspace to process before the next suspend.",
      "parentUuid": "3ff1cc50_7449d046",
      "range": {
        "startLine": 10,
        "startChar": 32,
        "endLine": 10,
        "endChar": 60
      },
      "revId": "6fa6b057fd3288a035445d0900db855197f0a00d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}