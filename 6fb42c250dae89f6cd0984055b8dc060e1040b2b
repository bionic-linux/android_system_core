{
  "comments": [
    {
      "key": {
        "uuid": "3e69c4a2_1f176b0c",
        "filename": "include/backtrace/Backtrace.h",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-25T19:13:27Z",
      "side": 1,
      "message": "i still feel like there\u0027s way too much in this public header file. surely we don\u0027t need anything more than \"struct BacktraceImpl\" here?",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ea7bc23_d4b7b2c6",
        "filename": "include/backtrace/Backtrace.h",
        "patchSetId": 2
      },
      "lineNbr": 26,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-29T00:57:07Z",
      "side": 1,
      "message": "I moved the entire BacktraceImpl class definition to internal header files.",
      "parentUuid": "3e69c4a2_1f176b0c",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe62ccbe_fd59df37",
        "filename": "include/backtrace/Backtrace.h",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-25T19:13:27Z",
      "side": 1,
      "message": "can we rename this to \"function\" (both in the comment and the code)? \"Proc\" makes me think process, \"procedure\" just seems odd.",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ea7bc23_34cd5654",
        "filename": "include/backtrace/Backtrace.h",
        "patchSetId": 2
      },
      "lineNbr": 52,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-29T00:57:07Z",
      "side": 1,
      "message": "Done, it\u0027s GetFunctionName now.",
      "parentUuid": "fe62ccbe_fd59df37",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe62ccbe_3d4c3776",
        "filename": "include/backtrace/Backtrace.h",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-25T19:13:27Z",
      "side": 1,
      "message": "you renamed the parameter but not the comment.",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ed67883_b327aa94",
        "filename": "include/backtrace/Backtrace.h",
        "patchSetId": 2
      },
      "lineNbr": 53,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-29T00:57:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "fe62ccbe_3d4c3776",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e5ec0fd_9ecb7d6c",
        "filename": "include/backtrace/Backtrace.h",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-25T19:13:27Z",
      "side": 1,
      "message": "i wouldn\u0027t free a std::string if i were you :-)",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ed08087_2e42336e",
        "filename": "include/backtrace/Backtrace.h",
        "patchSetId": 2
      },
      "lineNbr": 54,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-29T00:57:07Z",
      "side": 1,
      "message": "Fixed up the comment now.",
      "parentUuid": "1e5ec0fd_9ecb7d6c",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe62ccbe_bd5f671c",
        "filename": "include/backtrace/Backtrace.h",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-25T19:13:27Z",
      "side": 1,
      "message": "better word than \"Info\" for something that\u0027s a const char*? what exactly is this?",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ea7bc23_94e6cace",
        "filename": "include/backtrace/Backtrace.h",
        "patchSetId": 2
      },
      "lineNbr": 61,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-29T00:57:07Z",
      "side": 1,
      "message": "Yes, this should be GetMapName because that\u0027s really what it\u0027s doing.",
      "parentUuid": "fe62ccbe_bd5f671c",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe62ccbe_7d46af57",
        "filename": "include/backtrace/Backtrace.h",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-25T19:13:27Z",
      "side": 1,
      "message": "does this need to be public?",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ed67883_f33122ce",
        "filename": "include/backtrace/Backtrace.h",
        "patchSetId": 2
      },
      "lineNbr": 67,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-29T00:57:07Z",
      "side": 1,
      "message": "I think so. For example, debuggerd uses this feature to dump parts of the stack of the crashing process.",
      "parentUuid": "fe62ccbe_7d46af57",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e69c4a2_3f626fb1",
        "filename": "include/backtrace/Backtrace.h",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-25T19:13:27Z",
      "side": 1,
      "message": "(the funny thing is, a factory method like this is the kind of thing i _would_ put in Backtrace as Backtrace::Create().)",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ea7bc23_b4e146bb",
        "filename": "include/backtrace/Backtrace.h",
        "patchSetId": 2
      },
      "lineNbr": 107,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-29T00:57:07Z",
      "side": 1,
      "message": "Sounds good to me.",
      "parentUuid": "3e69c4a2_3f626fb1",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e5ec0fd_be2cc177",
        "filename": "libbacktrace/Backtrace.cpp",
        "patchSetId": 2
      },
      "lineNbr": 123,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-25T19:13:27Z",
      "side": 1,
      "message": "you can just \"return buf;\"",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ed08087_0e280fa6",
        "filename": "libbacktrace/Backtrace.cpp",
        "patchSetId": 2
      },
      "lineNbr": 123,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-29T00:57:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e5ec0fd_be2cc177",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fe62ccbe_1d1db379",
        "filename": "libbacktrace/Backtrace.cpp",
        "patchSetId": 2
      },
      "lineNbr": 145,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-25T19:13:27Z",
      "side": 1,
      "message": "this is the only tricky one :-)",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ed08087_b1dfa285",
        "filename": "libbacktrace/Backtrace.cpp",
        "patchSetId": 2
      },
      "lineNbr": 145,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-29T00:57:07Z",
      "side": 1,
      "message": "I redid this slightly so that each of the impl classes don\u0027t have to demangle themselves and removed this function and put the same code in Backtrace::GetFunctionName.",
      "parentUuid": "fe62ccbe_1d1db379",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e69c4a2_ff08f7f6",
        "filename": "libbacktrace/Backtrace.cpp",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-25T19:13:27Z",
      "side": 1,
      "message": "again, return \"\"; will work fine.",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5ed67883_f34ac22d",
        "filename": "libbacktrace/Backtrace.cpp",
        "patchSetId": 2
      },
      "lineNbr": 149,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-29T00:57:07Z",
      "side": 1,
      "message": "See above, but all places where I returned std::string() I changed to return \"\";",
      "parentUuid": "3e69c4a2_ff08f7f6",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e5ec0fd_fe3639c3",
        "filename": "libbacktrace/BacktraceThread.cpp",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-25T19:13:27Z",
      "side": 1,
      "message": "static?",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ed08087_91e41e59",
        "filename": "libbacktrace/BacktraceThread.cpp",
        "patchSetId": 2
      },
      "lineNbr": 33,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-29T00:57:07Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "1e5ec0fd_fe3639c3",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "3e69c4a2_5ff803a4",
        "filename": "libbacktrace/BacktraceThread.cpp",
        "patchSetId": 2
      },
      "lineNbr": 210,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-25T19:13:27Z",
      "side": 1,
      "message": "why aren\u0027t we using oldact? don\u0027t we need to put things back how they were?",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7ea7bc23_b40ae6a6",
        "filename": "libbacktrace/BacktraceThread.cpp",
        "patchSetId": 2
      },
      "lineNbr": 210,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-29T00:57:07Z",
      "side": 1,
      "message": "Yikes, this was a bad bug. I fixed this and added some checking that the old action was reset after doing a trace.",
      "parentUuid": "3e69c4a2_5ff803a4",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1e5ec0fd_5e5f25e8",
        "filename": "libbacktrace/BacktraceThread.h",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2013-10-25T19:13:27Z",
      "side": 1,
      "message": "(if you\u0027re going for google3 style, there\u0027s no trailing underscore for public fields.)",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ed08087_f1e91a2f",
        "filename": "libbacktrace/BacktraceThread.h",
        "patchSetId": 2
      },
      "lineNbr": 48,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2013-10-29T00:57:07Z",
      "side": 1,
      "message": "I don\u0027t see anything in the C++ style guide about not having the trailing underscores for member variables if they are public. The guide says all class members have to have a trailing underscore. But if you\u0027d prefer without, let me know since this is our own style.\n\nI do know the python guide says public variable should avoid underscores though.",
      "parentUuid": "1e5ec0fd_5e5f25e8",
      "revId": "6fb42c250dae89f6cd0984055b8dc060e1040b2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}