{
  "comments": [
    {
      "key": {
        "uuid": "3728c187_63d2e65a",
        "filename": "libnativeloader/native_loader_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-07-12T16:08:28Z",
      "side": 1,
      "message": "Please add a TODO somewhere about testing the anonymous namespace (cf. http://b/130388701#comment22).",
      "revId": "462457446269df96b7b6c3b5df6378bf6aa51a1a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "162d4bde_36a8bd58",
        "filename": "libnativeloader/native_loader_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 68,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-07-12T16:08:28Z",
      "side": 1,
      "message": "Maybe something like JniObject_getParent is more clear and avoids possible confusion with GetParentClassLoader in library_namespaces.cpp.",
      "range": {
        "startLine": 68,
        "startChar": 22,
        "endLine": 68,
        "endChar": 42
      },
      "revId": "462457446269df96b7b6c3b5df6378bf6aa51a1a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7a96a234_2b82607f",
        "filename": "libnativeloader/native_loader_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 219,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-07-12T16:08:28Z",
      "side": 1,
      "message": "Is it possible to preserve constness here and for FindClass, CallObjectMethodV, and GetMethodID?",
      "range": {
        "startLine": 219,
        "startChar": 56,
        "endLine": 219,
        "endChar": 63
      },
      "revId": "462457446269df96b7b6c3b5df6378bf6aa51a1a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3a379a2e_b192c825",
        "filename": "libnativeloader/native_loader_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 265,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-07-12T16:08:28Z",
      "side": 1,
      "message": "nullptr",
      "range": {
        "startLine": 265,
        "startChar": 21,
        "endLine": 265,
        "endChar": 22
      },
      "revId": "462457446269df96b7b6c3b5df6378bf6aa51a1a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b9d53b19_b6e16546",
        "filename": "libnativeloader/native_loader_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 269,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-07-12T16:08:28Z",
      "side": 1,
      "message": "Nit: SetExpectations",
      "range": {
        "startLine": 269,
        "startChar": 7,
        "endLine": 269,
        "endChar": 21
      },
      "revId": "462457446269df96b7b6c3b5df6378bf6aa51a1a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1028c188_78b1bedd",
        "filename": "libnativeloader/native_loader_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 272,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-07-12T16:08:28Z",
      "side": 1,
      "message": "Why?",
      "range": {
        "startLine": 272,
        "startChar": 0,
        "endLine": 272,
        "endChar": 17
      },
      "revId": "462457446269df96b7b6c3b5df6378bf6aa51a1a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f328f2d1_d98e3c66",
        "filename": "libnativeloader/native_loader_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 288,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-07-12T16:08:28Z",
      "side": 1,
      "message": "std::unique_ptr\u003cJNIEnv\u003e",
      "range": {
        "startLine": 288,
        "startChar": 2,
        "endLine": 288,
        "endChar": 9
      },
      "revId": "462457446269df96b7b6c3b5df6378bf6aa51a1a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc3461ef_b6f5abf3",
        "filename": "libnativeloader/native_loader_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 319,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-07-12T16:08:28Z",
      "side": 1,
      "message": "We ought not have different expectations due to this in the end, right? What about making the C wrappers call the same methods in the mock, passing the bridged flag as an extra bool that\u0027s matched in the EXPECT_CALLs here?",
      "range": {
        "startLine": 319,
        "startChar": 0,
        "endLine": 319,
        "endChar": 19
      },
      "revId": "462457446269df96b7b6c3b5df6378bf6aa51a1a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "72fe478e_04a75426",
        "filename": "libnativeloader/native_loader_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 368,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-07-12T16:08:28Z",
      "side": 1,
      "message": "Please swap. http://yaqs/6683916684754944",
      "range": {
        "startLine": 368,
        "startChar": 14,
        "endLine": 368,
        "endChar": 26
      },
      "revId": "462457446269df96b7b6c3b5df6378bf6aa51a1a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd61cd82_bd455f1a",
        "filename": "libnativeloader/native_loader_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 382,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-07-12T16:08:28Z",
      "side": 1,
      "message": "It\u0027s a bit confusing with the object variables below that affect the operation of SetExpectation and RunTest, but I can see why you went for it in the absence of named parameters. Still, it\u0027s worth commenting before which call they must be set, and maybe also consider moving up the variables in front of the respective function.",
      "revId": "462457446269df96b7b6c3b5df6378bf6aa51a1a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "08907bb7_ba1f091e",
        "filename": "libnativeloader/native_loader_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 504,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-07-12T16:08:28Z",
      "side": 1,
      "message": "Is this the only use case when we\u0027ll get more than one classloader in the same app process? If there are other common/known cases it\u0027d be fantastic to have tests for them too, in particular the case that caused agampe\u0027s cryptic fix in http://r.android.com/952524.",
      "range": {
        "startLine": 502,
        "startChar": 0,
        "endLine": 504,
        "endChar": 23
      },
      "revId": "462457446269df96b7b6c3b5df6378bf6aa51a1a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2c3d54fb_621aefa1",
        "filename": "libnativeloader/native_loader_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 525,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-07-12T16:08:28Z",
      "side": 1,
      "message": "Typo: \"success\" (Or delete the comment altogether as it doesn\u0027t add much.)",
      "range": {
        "startLine": 525,
        "startChar": 5,
        "endLine": 525,
        "endChar": 11
      },
      "revId": "462457446269df96b7b6c3b5df6378bf6aa51a1a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "221fcbde_54a388ad",
        "filename": "libnativeloader/native_loader_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 526,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-07-12T16:08:28Z",
      "side": 1,
      "message": "Swap here too.",
      "range": {
        "startLine": 526,
        "startChar": 12,
        "endLine": 526,
        "endChar": 24
      },
      "revId": "462457446269df96b7b6c3b5df6378bf6aa51a1a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}