{
  "comments": [
    {
      "key": {
        "uuid": "59d23ce8_2902f3c6",
        "filename": "debuggerd/test/dump_maps_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-06-03T01:06:49Z",
      "side": 1,
      "message": "TODO: rewrite the tombstone.cpp code to be more testable?",
      "revId": "222b483fe882138c2b597085bdefaf538e7ef7fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "395ca863_9f1f9be8",
        "filename": "debuggerd/test/dump_maps_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 34,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-06-03T17:25:19Z",
      "side": 1,
      "message": "Yes, I\u0027ve got a bug to do that. I know what to do, I just need some time to clean things up.\n\nDo you want a TODO in the code?",
      "parentUuid": "59d23ce8_2902f3c6",
      "revId": "222b483fe882138c2b597085bdefaf538e7ef7fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59d23ce8_490657d3",
        "filename": "debuggerd/test/dump_maps_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 244,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-06-03T01:06:49Z",
      "side": 1,
      "message": "is it intentional that /system/lib/fake.so is indented one column further than (load base 0x2000)?",
      "revId": "222b483fe882138c2b597085bdefaf538e7ef7fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "395ca863_bf76df4e",
        "filename": "debuggerd/test/dump_maps_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 244,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-06-03T17:25:19Z",
      "side": 1,
      "message": "I noticed this and debated whether I should fix it.\n\nI\u0027ll fix it.",
      "parentUuid": "59d23ce8_490657d3",
      "revId": "222b483fe882138c2b597085bdefaf538e7ef7fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b97b38ac_4dd174c4",
        "filename": "debuggerd/test/elf_fake.h",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-06-03T01:06:49Z",
      "side": 1,
      "message": "const\u0026?",
      "revId": "222b483fe882138c2b597085bdefaf538e7ef7fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59595c72_e06396b9",
        "filename": "debuggerd/test/elf_fake.h",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-06-03T17:25:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b97b38ac_4dd174c4",
      "revId": "222b483fe882138c2b597085bdefaf538e7ef7fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39d588cf_d43dfc9b",
        "filename": "debuggerd/test/log_fake.cpp",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-06-03T01:06:49Z",
      "side": 1,
      "message": "i wonder if we should move all this into liblog at some point?",
      "revId": "222b483fe882138c2b597085bdefaf538e7ef7fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "395ca863_3fabefe4",
        "filename": "debuggerd/test/log_fake.cpp",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-06-03T17:25:19Z",
      "side": 1,
      "message": "It would be nice to have some way to mock out this code. It might be useful to add external/gmock to the manifest and use that to add mocking code.",
      "parentUuid": "39d588cf_d43dfc9b",
      "revId": "222b483fe882138c2b597085bdefaf538e7ef7fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39d588cf_14db84e6",
        "filename": "debuggerd/test/property_fake.cpp",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-06-03T01:06:49Z",
      "side": 1,
      "message": "no locking needed?",
      "revId": "222b483fe882138c2b597085bdefaf538e7ef7fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "395ca863_5f88636f",
        "filename": "debuggerd/test/property_fake.cpp",
        "patchSetId": 3
      },
      "lineNbr": 27,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-06-03T17:25:19Z",
      "side": 1,
      "message": "Yes, this is not thread safe, but I\u0027m not really using this yet. I debated whether I should do anything, or leave this empty, and I decided to implement this at least for a single thread.",
      "parentUuid": "39d588cf_14db84e6",
      "revId": "222b483fe882138c2b597085bdefaf538e7ef7fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "39d588cf_d4e41ca6",
        "filename": "debuggerd/test/ptrace_fake.h",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-06-03T01:06:49Z",
      "side": 1,
      "message": "const?",
      "revId": "222b483fe882138c2b597085bdefaf538e7ef7fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7948e0a0_81c1fe75",
        "filename": "debuggerd/test/ptrace_fake.h",
        "patchSetId": 3
      },
      "lineNbr": 22,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-06-03T17:25:19Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "39d588cf_d4e41ca6",
      "revId": "222b483fe882138c2b597085bdefaf538e7ef7fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "59d23ce8_89c0bfbf",
        "filename": "include/backtrace/BacktraceMap.h",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-06-03T01:06:49Z",
      "side": 1,
      "message": "ah, the future...",
      "revId": "222b483fe882138c2b597085bdefaf538e7ef7fc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}