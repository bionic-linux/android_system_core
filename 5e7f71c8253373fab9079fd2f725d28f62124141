{
  "comments": [
    {
      "key": {
        "uuid": "de80670b_1bbd14ef",
        "filename": "libbacktrace/UnwindStack.cpp",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-07-27T18:18:45Z",
      "side": 1,
      "message": "why is this a do loop?",
      "revId": "5e7f71c8253373fab9079fd2f725d28f62124141",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1fb05773_32adb328",
        "filename": "libbacktrace/UnwindStack.cpp",
        "patchSetId": 4
      },
      "lineNbr": 76,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-07-27T19:42:01Z",
      "side": 1,
      "message": "Mostly because the code I copied from originally was a do loop. I changed it to a while loop since the do loop is not strictly necessary.",
      "parentUuid": "de80670b_1bbd14ef",
      "revId": "5e7f71c8253373fab9079fd2f725d28f62124141",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2196dac_77ad1f8e",
        "filename": "libbacktrace/UnwindStack.cpp",
        "patchSetId": 4
      },
      "lineNbr": 206,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-07-27T18:18:45Z",
      "side": 1,
      "message": "or call __assert2 directly so we get the abort message in debuggerd?",
      "range": {
        "startLine": 204,
        "startChar": 4,
        "endLine": 206,
        "endChar": 12
      },
      "revId": "5e7f71c8253373fab9079fd2f725d28f62124141",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "687be1b8_54521080",
        "filename": "libbacktrace/UnwindStack.cpp",
        "patchSetId": 4
      },
      "lineNbr": 206,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-07-27T19:42:01Z",
      "side": 1,
      "message": "Done, but only if __ANDROID__ is defined.",
      "parentUuid": "e2196dac_77ad1f8e",
      "range": {
        "startLine": 204,
        "startChar": 4,
        "endLine": 206,
        "endChar": 12
      },
      "revId": "5e7f71c8253373fab9079fd2f725d28f62124141",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1d99797_37e7b83d",
        "filename": "libunwindstack/include/unwindstack/MapInfo.h",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-07-27T18:18:45Z",
      "side": 1,
      "message": "can you use the clang nullability declarations on return types?",
      "revId": "5e7f71c8253373fab9079fd2f725d28f62124141",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c53dacda_676c7f80",
        "filename": "libunwindstack/include/unwindstack/MapInfo.h",
        "patchSetId": 4
      },
      "lineNbr": 44,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-07-27T19:42:01Z",
      "side": 1,
      "message": "Tried it, but it causes some secondary compilation issues that are not easily fixed.",
      "parentUuid": "e1d99797_37e7b83d",
      "revId": "5e7f71c8253373fab9079fd2f725d28f62124141",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}