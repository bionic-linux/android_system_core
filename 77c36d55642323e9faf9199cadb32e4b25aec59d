{
  "comments": [
    {
      "key": {
        "uuid": "da52dc1a_855eb3ae",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1562,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-10-10T16:19:59Z",
      "side": 1,
      "message": "Do we even need this part of the check?  Is there ever a case where we\u0027ll have a mount point specified as \u0027/\u0027 but not be system as root?  Would it ever be invalid to assume that \u0027/\u0027 as a mount point means system?  Seems that we can just drop this entirely and keep the rest of the code in the overlayfs file.",
      "range": {
        "startLine": 1562,
        "startChar": 12,
        "endLine": 1562,
        "endChar": 27
      },
      "revId": "77c36d55642323e9faf9199cadb32e4b25aec59d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f7d5c61f_88f819a1",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 4
      },
      "lineNbr": 1562,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-10-10T19:23:26Z",
      "side": 1,
      "message": "I do worry about pivot root, where \u0027/\u0027 is something else (ramdisk), but basically yes. However, the check for system_root_image is in multiple places (including recovery) where ramdisk is \u0027/\u0027. \n\nI do not have the bravery to drop this system_root check ;-/ but I assure you I tried it (very early on in my investigation) and everything seemed to work.",
      "parentUuid": "da52dc1a_855eb3ae",
      "range": {
        "startLine": 1562,
        "startChar": 12,
        "endLine": 1562,
        "endChar": 27
      },
      "revId": "77c36d55642323e9faf9199cadb32e4b25aec59d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}