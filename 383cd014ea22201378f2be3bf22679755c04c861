{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "d28abbbc_ceed4d2c",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2020-10-23T03:34:48Z",
      "side": 1,
      "message": "Should this go into android::base? I\u0027d be a bit surprised if adbd is the only one that wants to wait on multiple properties at the same time, but I can\u0027t think of a good way to grep for this...",
      "revId": "383cd014ea22201378f2be3bf22679755c04c861",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6ad97562_54222cd5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-10-26T20:39:27Z",
      "side": 1,
      "message": "+smoreland as someone who might have seen other potential users. but if neither tomcherry nor smoreland have seen potential users, i\u0027d assume that you\u0027re actually unique!",
      "parentUuid": "d28abbbc_ceed4d2c",
      "revId": "383cd014ea22201378f2be3bf22679755c04c861",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3437247c_2df0a99b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-10-26T20:49:26Z",
      "side": 1,
      "message": "The biggest thing that comes to mind is that if we are willing to trade threads for it, this could replace all users of report_sysprop_change... this is such a better API.\n\nCould WaitForProperty be replaced to be implemented with this API? (not sure if it makes sense)",
      "parentUuid": "6ad97562_54222cd5",
      "revId": "383cd014ea22201378f2be3bf22679755c04c861",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8a4e3968_78b6c6c7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2020-10-27T04:50:33Z",
      "side": 1,
      "message": "Not as is, since this continues waiting on a thread forever, but I\u0027m generalizing the interface to make it more useful in other situations (exposing Run instead of Start, adding RunOnce to not keep spinning forever, adding wait timeouts, etc.).",
      "parentUuid": "3437247c_2df0a99b",
      "revId": "383cd014ea22201378f2be3bf22679755c04c861",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "eeb8b39b_b9501233",
        "filename": "adb/daemon/property_monitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2020-10-23T15:46:11Z",
      "side": 1,
      "message": "It\u0027d be good to document this in the header.  I wouldn\u0027t have assumed this behavior to be the case.",
      "revId": "383cd014ea22201378f2be3bf22679755c04c861",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "241ef4c5_a15ba9f3",
        "filename": "adb/daemon/property_monitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-10-26T20:39:27Z",
      "side": 1,
      "message": "yeah, that\u0027s surprising to me too. would it make more sense for the API to take the string-\u003efunction mapping as a constructor argument?\n\nor just add the missing lock?",
      "parentUuid": "eeb8b39b_b9501233",
      "revId": "383cd014ea22201378f2be3bf22679755c04c861",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1c41d7e8_4382e11a",
        "filename": "adb/daemon/property_monitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 93,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2020-10-27T04:50:33Z",
      "side": 1,
      "message": "Taking it as an argument is pretty ugly with lambdas.\n\nIt seems hard to provide the behavior of \"this callback is called on the PropertyMonitor thread once with the property\u0027s initial value\" when the thread is started: we\u0027d have to send a signal to break the thread out of its futex wait.",
      "parentUuid": "241ef4c5_a15ba9f3",
      "revId": "383cd014ea22201378f2be3bf22679755c04c861",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e2a13256_dff15384",
        "filename": "adb/daemon/property_monitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-10-26T20:49:26Z",
      "side": 1,
      "message": "nit: prefer \u0027Start\u0027 to never end, and for caller to donate thread, so that it can give an existing thread to this as necessary?",
      "range": {
        "startLine": 106,
        "startChar": 4,
        "endLine": 106,
        "endChar": 24
      },
      "revId": "383cd014ea22201378f2be3bf22679755c04c861",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "efaa35db_3354b817",
        "filename": "adb/daemon/property_monitor.cpp",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2020-10-27T04:50:33Z",
      "side": 1,
      "message": "SGTM.",
      "parentUuid": "e2a13256_dff15384",
      "range": {
        "startLine": 106,
        "startChar": 4,
        "endLine": 106,
        "endChar": 24
      },
      "revId": "383cd014ea22201378f2be3bf22679755c04c861",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d87b4127_1b836823",
        "filename": "adb/daemon/property_monitor.h",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-10-26T20:49:26Z",
      "side": 1,
      "message": "not std::optional\u003cstd::string\u003e?",
      "range": {
        "startLine": 49,
        "startChar": 7,
        "endLine": 49,
        "endChar": 24
      },
      "revId": "383cd014ea22201378f2be3bf22679755c04c861",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4f8b61e9_65eb77e5",
        "filename": "adb/daemon/property_monitor.h",
        "patchSetId": 1
      },
      "lineNbr": 49,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2020-10-27T04:50:33Z",
      "side": 1,
      "message": "I chose not to use std::optional because AIUI, there\u0027s no way to make a property unset again after setting it once, so code should be handling an empty string identically to an unset property.",
      "parentUuid": "d87b4127_1b836823",
      "range": {
        "startLine": 49,
        "startChar": 7,
        "endLine": 49,
        "endChar": 24
      },
      "revId": "383cd014ea22201378f2be3bf22679755c04c861",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}