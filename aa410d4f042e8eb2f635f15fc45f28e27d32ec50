{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "7b054af2_7f1ad931",
        "filename": "init/first_stage_console.cpp",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-02-14T16:04:29Z",
      "side": 1,
      "message": "why don\u0027t we just use system(3)?",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 74
      },
      "revId": "aa410d4f042e8eb2f635f15fc45f28e27d32ec50",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3d8ba4d2_0e8deaab",
        "filename": "init/first_stage_console.cpp",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1882526
      },
      "writtenOn": "2024-02-16T15:25:28Z",
      "side": 1,
      "message": "That would use `sh` (see [`bionic/libc/bionic/system.cpp`](https://cs.android.com/android/platform/superproject/main/+/main:bionic/libc/bionic/system.cpp;l\u003d59;drc\u003db6b7e2ee2e6db849dc8509ce1c97e66dbb143635)), is it guaranteed to always resolve to `/system/bin/sh`?\n\nBTW, which one are you recommending among\n```\nsystem(\"/system/bin/sh /first_stage.sh\");\nsystem(\". /first_stage.sh\");\nsystem(\"/first_stage.sh\");\n```\nand\n```\nsystem(\"sh\");\nsystem(\"/system/bin/sh\");\nsystem(\"$SHELL\"); // ???\n```\n?",
      "parentUuid": "7b054af2_7f1ad931",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 74
      },
      "revId": "aa410d4f042e8eb2f635f15fc45f28e27d32ec50",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25ea5045_74bce32c",
        "filename": "init/first_stage_console.cpp",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2024-02-16T15:43:33Z",
      "side": 1,
      "message": "system() will use the appropriate shell, yes.\n\ni think the real question here is \"do you really support multiple arguments?\". if you do, doing the exec() manually like this is probably better than constructing a string and having to think about quoting. (alternatively, posix_spawn() would be the modern alternative to system() that avoids that.)\n\n(what we _really_ need is the C++ equivalent of java\u0027s ProcessBuilder/Process in libbase, but every time someone tries, it gets bikeshedded to death :-( )",
      "parentUuid": "3d8ba4d2_0e8deaab",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 74
      },
      "revId": "aa410d4f042e8eb2f635f15fc45f28e27d32ec50",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2e4f8843_559488d9",
        "filename": "init/first_stage_console.cpp",
        "patchSetId": 1
      },
      "lineNbr": 69,
      "author": {
        "id": 1882526
      },
      "writtenOn": "2024-02-20T16:25:34Z",
      "side": 1,
      "message": "\u003e i think the real question here is \"do you really support multiple arguments?\"\n\nAgreed, and the answer is \"no\". I\u0027ve reworked this CL to use `posix_spawn()` but see the other thread about propagating `exec` errors.",
      "parentUuid": "25ea5045_74bce32c",
      "range": {
        "startLine": 69,
        "startChar": 0,
        "endLine": 69,
        "endChar": 74
      },
      "revId": "aa410d4f042e8eb2f635f15fc45f28e27d32ec50",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3963601f_47f268af",
        "filename": "init/first_stage_console.cpp",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-02-14T16:04:29Z",
      "side": 1,
      "message": "nit: no need to construct a string for this. just `constexpr char shell[]`?",
      "range": {
        "startLine": 70,
        "startChar": 4,
        "endLine": 70,
        "endChar": 22
      },
      "revId": "aa410d4f042e8eb2f635f15fc45f28e27d32ec50",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "61531ad5_70cebdbe",
        "filename": "init/first_stage_console.cpp",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1882526
      },
      "writtenOn": "2024-02-16T15:25:28Z",
      "side": 1,
      "message": "Nice, modern C++!",
      "parentUuid": "3963601f_47f268af",
      "range": {
        "startLine": 70,
        "startChar": 4,
        "endLine": 70,
        "endChar": 22
      },
      "revId": "aa410d4f042e8eb2f635f15fc45f28e27d32ec50",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}