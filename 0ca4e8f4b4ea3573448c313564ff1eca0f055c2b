{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "10b86853_4ad0573e",
        "filename": "libvndksupport/libvndksupport.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2023-11-30T16:25:54Z",
      "side": 0,
      "message": "I don\u0027t think you can remove it from these stubs just yet, it needs to go through a round of being deprecated first unless you can guarantee no vendor is using it.",
      "range": {
        "startLine": 3,
        "startChar": 34,
        "endLine": 3,
        "endChar": 51
      },
      "revId": "0ca4e8f4b4ea3573448c313564ff1eca0f055c2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f2cab8bb_8a163387",
        "filename": "libvndksupport/libvndksupport.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2023-12-01T00:15:03Z",
      "side": 0,
      "message": "We are deprecating this only for newer chipsets which will be built from the next releases; old chipsets will be built from old branches and therefore they won\u0027t be impacted.",
      "parentUuid": "10b86853_4ad0573e",
      "range": {
        "startLine": 3,
        "startChar": 34,
        "endLine": 3,
        "endChar": 51
      },
      "revId": "0ca4e8f4b4ea3573448c313564ff1eca0f055c2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6285ff52_f514a757",
        "filename": "libvndksupport/libvndksupport.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2023-12-01T17:38:39Z",
      "side": 0,
      "message": "\u003e old chipsets will be built from old branches\n\nOnly if it\u0027s a frozen vendor partition setup which isn\u0027t what all chipsets do, old or otherwise, and isn\u0027t what LLNDK requires in general regardless (and definitely isn\u0027t applicable to systemapi either which is what this was also marked as being)\n\nSo I don\u0027t think this can be removed from the stubs yet.",
      "parentUuid": "f2cab8bb_8a163387",
      "range": {
        "startLine": 3,
        "startChar": 34,
        "endLine": 3,
        "endChar": 51
      },
      "revId": "0ca4e8f4b4ea3573448c313564ff1eca0f055c2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00c77cb3_1a5bcd5b",
        "filename": "libvndksupport/libvndksupport.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2023-12-05T08:29:40Z",
      "side": 0,
      "message": "old chipsets that are upgrading to newer Android may experience a build error due to this (if they have been using this api), but that\u0027s outside of our guarantee. the situation is the same as other vendor-available libraries; we don\u0027t guarantee source-level stability across different releases.",
      "parentUuid": "6285ff52_f514a757",
      "range": {
        "startLine": 3,
        "startChar": 34,
        "endLine": 3,
        "endChar": 51
      },
      "revId": "0ca4e8f4b4ea3573448c313564ff1eca0f055c2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6e0b1dc0_6718d1fa",
        "filename": "libvndksupport/libvndksupport.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2023-12-05T15:04:19Z",
      "side": 0,
      "message": "That may be treble\u0027s policy but that\u0027s not the policy of LLNDK \u0026 systemapi, see: go/android-ndk-api-guidelines#api-longevity",
      "parentUuid": "00c77cb3_1a5bcd5b",
      "range": {
        "startLine": 3,
        "startChar": 34,
        "endLine": 3,
        "endChar": 51
      },
      "revId": "0ca4e8f4b4ea3573448c313564ff1eca0f055c2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8992e35_277f6f9f",
        "filename": "libvndksupport/libvndksupport.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2023-12-07T04:13:53Z",
      "side": 0,
      "message": "I think Dan wrote cl/515445352 on behalf of our team, at least on the LLNDK part. I\u0027d like to suggest to focus on actuality rather than what\u0027s written which may be incomplete or wrong (in which case we need to amend).\n\nDoes the removal of this from the txt file break existing vendor partitions? No, because we keep the symbol in the *.so file itself.\n\nDoes this break new vendor partitions? Yes, if they are using this symbol (which TBH is very unlikely) but anyway that\u0027s not we have guaranteed.\n\nWhat about dropping it from systemapi? We (Google) are good because we fixed it. Partners are good as well because they can\u0027t have updatable APEXes.",
      "parentUuid": "6e0b1dc0_6718d1fa",
      "range": {
        "startLine": 3,
        "startChar": 34,
        "endLine": 3,
        "endChar": 51
      },
      "revId": "0ca4e8f4b4ea3573448c313564ff1eca0f055c2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4d7a20ee_806faf45",
        "filename": "libvndksupport/libvndksupport.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2023-12-07T15:11:40Z",
      "side": 0,
      "message": "The policy change needs to happen first, but what you are saying does not match what my understanding of what LLNDK represents or what has been communicated previously.",
      "parentUuid": "a8992e35_277f6f9f",
      "range": {
        "startLine": 3,
        "startChar": 34,
        "endLine": 3,
        "endChar": 51
      },
      "revId": "0ca4e8f4b4ea3573448c313564ff1eca0f055c2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "99e8013d_4fcf21c6",
        "filename": "libvndksupport/libvndksupport.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-12-07T18:48:58Z",
      "side": 0,
      "message": "Btw - I think Jiyong is right on the technical details. However, in order to make this change, we are really relying on b/136506169. We should have a way in version script to say \"llndk deprecated\" or similar. Also, Jiyong should be defining the policy for LL-NDK - there really shouldn\u0027t be a policy other than the one Jiyong/me/a few others are setting - e.g. what I have documented in http://go/system-vendor-boundary, not the NDK council docs. That being said, yeah, these should be aligned, but it would have been good to be consulted. It\u0027s not the first time this blurb has obstructed things. Jiyong, want to submit a doc update so we can get these on the same page?\n\nAnyway, after this change is made, we no longer have documentation in this file that this API used to be LLNDK. I think we should have a way to document this.\n\nHow about:\n- we could keep \u0027# llndk systemapi\u0027 here (it won\u0027t hurt anything)\n- focus on removing use of this API\n- mark deprecated now\n- cleanup process/add a way to note \u0027llndk deprecated\u0027 in vendorscript later\n\nI don\u0027t think it would block anything?",
      "parentUuid": "4d7a20ee_806faf45",
      "range": {
        "startLine": 3,
        "startChar": 34,
        "endLine": 3,
        "endChar": 51
      },
      "revId": "0ca4e8f4b4ea3573448c313564ff1eca0f055c2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0f89d83a_777c40b7",
        "filename": "libvndksupport/libvndksupport.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2023-12-07T19:08:22Z",
      "side": 0,
      "message": "\u003e Also, Jiyong should be defining the policy for LL-NDK - there really shouldn\u0027t be a policy other than the one Jiyong/me/a few others are setting - e.g. what I have documented in http://go/system-vendor-boundary, not the NDK council docs.\n\nI skimmed through go/system-vendor-boundary and it seems mostly aligned with what\u0027s in the NDK council docs. But if the NDK docs are incorrect do please propose the updated wording so we know what policy is needed to be enforced.\n\n_that said_ this is also removing it from #systemapi which isn\u0027t treble-owned policy, and we (NDK API council) defaulted to following the policy from API council ( go/android-api-types#systemapi which specifies 4 years)",
      "parentUuid": "99e8013d_4fcf21c6",
      "range": {
        "startLine": 3,
        "startChar": 34,
        "endLine": 3,
        "endChar": 51
      },
      "revId": "0ca4e8f4b4ea3573448c313564ff1eca0f055c2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f1820a62_d934d8ff",
        "filename": "libvndksupport/libvndksupport.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2023-12-07T19:10:19Z",
      "side": 0,
      "message": "\u003e we could keep \u0027# llndk systemapi\u0027 here (it won\u0027t hurt anything)\n\nYeah this is imo the only problem with this CL, that\u0027d be equivalent to jumping straight past deprecation and to build breaking which is a lot more aggressive than is typical. If we keep that here then LGTM",
      "parentUuid": "0f89d83a_777c40b7",
      "range": {
        "startLine": 3,
        "startChar": 34,
        "endLine": 3,
        "endChar": 51
      },
      "revId": "0ca4e8f4b4ea3573448c313564ff1eca0f055c2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e68f1b6_174beda6",
        "filename": "libvndksupport/libvndksupport.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1043845
      },
      "writtenOn": "2023-12-07T20:14:08Z",
      "side": 0,
      "message": "Sorry, I\u0027m usually better about CCing people on doc reviews, but I guess I forgot that time.",
      "parentUuid": "f1820a62_d934d8ff",
      "range": {
        "startLine": 3,
        "startChar": 34,
        "endLine": 3,
        "endChar": 51
      },
      "revId": "0ca4e8f4b4ea3573448c313564ff1eca0f055c2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1d8dfdec_0238c8d3",
        "filename": "libvndksupport/libvndksupport.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2023-12-08T06:40:32Z",
      "side": 0,
      "message": "\u003e We should have a way in version script to say \"llndk deprecated\" or similar.\n\nWe say that via header using the `__attribute__((deprecated)` annotation, not the version script.\n\n\u003e Jiyong, want to submit a doc update so we can get these on the same page?\n\nYes I will.\n\n\u003e we could keep \u0027# llndk systemapi\u0027 here (it won\u0027t hurt anything)\n\nI\u0027d like to drop the line. Dropping the line doesn\u0027t hurt anything either.\n\n\u003e focus on removing use of this API\n\nYes, and dropping it from the txt file is for that.\n\n\u003e mark deprecated now\n\nAlready done. See the change in the header.",
      "parentUuid": "5e68f1b6_174beda6",
      "range": {
        "startLine": 3,
        "startChar": 34,
        "endLine": 3,
        "endChar": 51
      },
      "revId": "0ca4e8f4b4ea3573448c313564ff1eca0f055c2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7182264b_bc3383c8",
        "filename": "libvndksupport/libvndksupport.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2023-12-08T06:40:32Z",
      "side": 0,
      "message": "@kiyoungkim could you drop only this part?",
      "range": {
        "startLine": 3,
        "startChar": 36,
        "endLine": 3,
        "endChar": 41
      },
      "revId": "0ca4e8f4b4ea3573448c313564ff1eca0f055c2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a700c78a_8a4d2547",
        "filename": "libvndksupport/libvndksupport.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2023-12-08T06:50:23Z",
      "side": 0,
      "message": "Done",
      "parentUuid": "7182264b_bc3383c8",
      "range": {
        "startLine": 3,
        "startChar": 36,
        "endLine": 3,
        "endChar": 41
      },
      "revId": "0ca4e8f4b4ea3573448c313564ff1eca0f055c2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5e1d36b3_5a58e2f9",
        "filename": "libvndksupport/libvndksupport.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2023-12-08T17:09:23Z",
      "side": 0,
      "message": "\u003e I\u0027d like to drop the line. Dropping the line doesn\u0027t hurt anything either.\n\nDropping the line indicates an intention to break the ABI. It\u0027s only thanks to a different bug that it ends up having no impact, but it\u0027s communicating the wrong intention and the wrong reality.\n\nI think you can remove the function from the header long before you can remove the export from the map file, even. It cannot be removed from the map file until we\u0027re ready to break the ABI, which is definitely not now.\n\nAlso no annotation doesn\u0027t mean not available, it defaults to NDK availability most commonly which is _definitely_ not what you want here. See: https://android.googlesource.com/platform/build/soong/+/refs/heads/main/docs/map_files.md#introduced\n\nspecifically:\n\u003e Symbol names for which no other rule applies will implicitly be introduced in first_version.",
      "parentUuid": "1d8dfdec_0238c8d3",
      "range": {
        "startLine": 3,
        "startChar": 34,
        "endLine": 3,
        "endChar": 51
      },
      "revId": "0ca4e8f4b4ea3573448c313564ff1eca0f055c2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2ee216b8_424bd9d6",
        "filename": "libvndksupport/libvndksupport.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2023-12-11T07:07:17Z",
      "side": 0,
      "message": "The line is not dropped. Only the llndk annotation is dropped. See the latest patchset.\n\n\u003e it defaults to NDK availability\n\nThat\u0027s correct in the context of the map file. But this library as a whole is not part of NDK. This library is not accessible to the NDK clients either at build time or at run time.",
      "parentUuid": "5e1d36b3_5a58e2f9",
      "range": {
        "startLine": 3,
        "startChar": 34,
        "endLine": 3,
        "endChar": 51
      },
      "revId": "0ca4e8f4b4ea3573448c313564ff1eca0f055c2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59cff812_b1e20f10",
        "filename": "libvndksupport/libvndksupport.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2023-12-15T16:05:15Z",
      "side": 0,
      "message": "I still don\u0027t like removing the llndk here. Why are you wanting to do that? As mentioned it signifies an intention to be an ABI breakage, which per earlier comments is not actually a goal. So why are you trying to remove it anyway?",
      "parentUuid": "2ee216b8_424bd9d6",
      "range": {
        "startLine": 3,
        "startChar": 34,
        "endLine": 3,
        "endChar": 51
      },
      "revId": "0ca4e8f4b4ea3573448c313564ff1eca0f055c2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "260c8791_8210f6fe",
        "filename": "libvndksupport/libvndksupport.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2023-12-21T18:01:24Z",
      "side": 0,
      "message": "http://r.android.com/2886673 + b/317293882",
      "parentUuid": "59cff812_b1e20f10",
      "range": {
        "startLine": 3,
        "startChar": 34,
        "endLine": 3,
        "endChar": 51
      },
      "revId": "0ca4e8f4b4ea3573448c313564ff1eca0f055c2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bbe15062_71bc9f2c",
        "filename": "libvndksupport/libvndksupport.map.txt",
        "patchSetId": 2
      },
      "lineNbr": 3,
      "author": {
        "id": 1010103
      },
      "writtenOn": "2023-12-21T18:45:31Z",
      "side": 0,
      "message": "can we flatten these two CLs?",
      "parentUuid": "260c8791_8210f6fe",
      "range": {
        "startLine": 3,
        "startChar": 34,
        "endLine": 3,
        "endChar": 51
      },
      "revId": "0ca4e8f4b4ea3573448c313564ff1eca0f055c2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}