{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "0e4cb563_1aecfacc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2024-03-19T23:46:58Z",
      "side": 1,
      "message": "Proposals for how to fix this once and for all?\n\nSo we don\u0027t have to play games with codenames?",
      "revId": "bd706e7b8fb328aafcad0423782349d9938763c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9d61c48e_793c15f2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-05-20T02:15:05Z",
      "side": 1,
      "message": "ping?",
      "revId": "bd706e7b8fb328aafcad0423782349d9938763c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "06487932_239fcf30",
        "filename": "init/apex_init_util.cpp",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-03-20T00:01:53Z",
      "side": 1,
      "message": "This is no-op right?\n\nAlso, this code implies that SDK number is always increased by one. This may not be true in the future, and I don\u0027t want to hardcode that here.\n\nCould you let us know what the motivation of this change is?",
      "range": {
        "startLine": 111,
        "startChar": 4,
        "endLine": 111,
        "endChar": 21
      },
      "revId": "bd706e7b8fb328aafcad0423782349d9938763c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f533ab4_e990b799",
        "filename": "init/apex_init_util.cpp",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2024-03-20T16:11:27Z",
      "side": 1,
      "message": "Yes, I\u0027m just pointing out there is a bug here.\n\ngoog/main -next- has sdk \u003d\u003d 34 but is V and thus *should* but doesn\u0027t honour .35rc files.\n\nI was hoping one of the more learned reviewers would be able to provide a suggestion for how to actually fix this...\n\nI\u0027m running into a problem where I want to make .34rc vs .35rc slightly different, but then the .35rc doesn\u0027t trigger, and more annoyingly doesn\u0027t match IsAtLeastV() logic elsewhere...\n\nAFAICT, sdk *is* always increased by 1, but even if we don\u0027t want to do ++sk, we could just do sdk \u003d 1000 or sdk \u003d 10000.\n\nThe problem is I don\u0027t know what \u0027false\u0027 should be.",
      "parentUuid": "06487932_239fcf30",
      "range": {
        "startLine": 111,
        "startChar": 4,
        "endLine": 111,
        "endChar": 21
      },
      "revId": "bd706e7b8fb328aafcad0423782349d9938763c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "31d70ae5_515d78f8",
        "filename": "init/apex_init_util.cpp",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2024-03-20T16:31:18Z",
      "side": 1,
      "message": "(as for the +1, I think it actually *would* always be the correct thing to do, because while we don\u0027t know if W will be 36, the *next* sdk version is always 1 higher than the previous one)",
      "parentUuid": "1f533ab4_e990b799",
      "range": {
        "startLine": 111,
        "startChar": 4,
        "endLine": 111,
        "endChar": 21
      },
      "revId": "bd706e7b8fb328aafcad0423782349d9938763c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0a38ca6_f744dd15",
        "filename": "init/apex_init_util.cpp",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-03-21T01:46:17Z",
      "side": 1,
      "message": "ro.build.version.sdk is evil. It\u0027s not useful for platform developers. It\u0027s mostly for app developers. It\u0027s a shame that we use codename for the future releases and version number for released ones. \n\nAnyway, to be precise, the derivation of the variable `sdk` should be as follows.\n\n```\nif $(ro.build.version.codename) \u003d\u003d REL {\n  sdk \u003d $(ro.build.version.sdk)\n} else {\n  sdk \u003d codename_to_version($(ro.build.version.codename))\n}\n\nfunc codename_to_version(codename) {\n   switch codename {\n      match \"VanillaIceCream\": 35\n      ...\n   }\n}\n```",
      "parentUuid": "31d70ae5_515d78f8",
      "range": {
        "startLine": 111,
        "startChar": 4,
        "endLine": 111,
        "endChar": 21
      },
      "revId": "bd706e7b8fb328aafcad0423782349d9938763c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d176753f_a13392b8",
        "filename": "init/apex_init_util.cpp",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2024-05-20T02:15:05Z",
      "side": 1,
      "message": "Ping?",
      "parentUuid": "f0a38ca6_f744dd15",
      "range": {
        "startLine": 111,
        "startChar": 4,
        "endLine": 111,
        "endChar": 21
      },
      "revId": "bd706e7b8fb328aafcad0423782349d9938763c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5ce63ec_fe345249",
        "filename": "init/apex_init_util.cpp",
        "patchSetId": 1
      },
      "lineNbr": 111,
      "author": {
        "id": 1003247
      },
      "writtenOn": "2024-05-20T09:05:42Z",
      "side": 1,
      "message": "Yes, the problem this patch is pointing to is still very much a problem...\n\n(and becoming a bit of a blocking one for me, as I currently have no way to actually build a releasable version of M-2024-08 mainline tethering apex)\n\nBut... I don\u0027t feel hard coding codenames in here is the right solution... it\u0027ll be *another* spot that will need to be fixed *all* the time...\n\nFurthermore with trunk stable and quarterly releases, \u0027code names\u0027 are even worse than before...\n\nI don\u0027t know *when* W will release (is it a quarter after V? a year? 2 quarters?).\nI don\u0027t know what the SDK version for it will be (will it be 36? 39? 37? 202509?).\nI don\u0027t know what the code name for W will be (WeddingCake? [google query for treats starting with W and picking a \u0027nicer\u0027 one...]).\n\nI think what should happen is, every quarter, within ~24 hours after we branch the next quarterly release, we should bump some constant in aosp/main by 1, that this logic checks.  Perhaps \u0027ro.build.version.mainline_init_rc_level\u0027 or something...\nif we want to somehow match this with sdk levels, it could be sdk_level * 10 + quarter, or something like that, or we use a date/timestamp (perhaps 2409 for V meaning 2024-09 release or 2406 for V meaning 2024-06 branch date, or just use submit date or whatever).",
      "parentUuid": "d176753f_a13392b8",
      "range": {
        "startLine": 111,
        "startChar": 4,
        "endLine": 111,
        "endChar": 21
      },
      "revId": "bd706e7b8fb328aafcad0423782349d9938763c2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}