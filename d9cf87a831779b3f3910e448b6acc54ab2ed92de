{
  "comments": [
    {
      "key": {
        "uuid": "313f5885_bc41db00",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 2
      },
      "lineNbr": 485,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-06-04T04:58:05Z",
      "side": 1,
      "message": "is there something that gmock #defines so we could try to \"just work\" for either case?\n\neven if not we should probably have \"GMOCK\" in this name, to make the intended use clear. (but then why not just use -Wno-user-defined-warnings?)",
      "revId": "d9cf87a831779b3f3910e448b6acc54ab2ed92de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f5dd9958_6a768d2d",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 2
      },
      "lineNbr": 485,
      "author": {
        "id": 1418133
      },
      "writtenOn": "2019-06-04T05:23:18Z",
      "side": 1,
      "message": "GMOCK would be too narrow an option. A source change would be required for each new library that doesn\u0027t need or want to workaround this Android-ism (as Tom put it).\n\nDisabling -Wno-user-defined-warnings is to broad an option. Users of GMOCK or otherwise have a reason to disable this are being disallowed the use of all -Wuser-defined-warnings.",
      "parentUuid": "313f5885_bc41db00",
      "revId": "d9cf87a831779b3f3910e448b6acc54ab2ed92de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfe32e0c_0d39daeb",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 2
      },
      "lineNbr": 485,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-06-04T05:25:38Z",
      "side": 1,
      "message": "\u003e A source change would be required for each new library ...\n\nthat will be something to worry about if/when the number goes above 1...",
      "parentUuid": "f5dd9958_6a768d2d",
      "revId": "d9cf87a831779b3f3910e448b6acc54ab2ed92de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c61155d_a508c9f1",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 2
      },
      "lineNbr": 485,
      "author": {
        "id": 1418133
      },
      "writtenOn": "2019-06-04T05:38:32Z",
      "side": 1,
      "message": "This seams quite unreasonable. What\u0027s the perceived risk of not micro managing those that require an opt-out?\n\nHere\u0027s gmock.h, if you insist:\nhttps://android.googlesource.com/platform/external/googletest/+/refs/heads/master/googlemock/include/gmock/gmock.h",
      "parentUuid": "cfe32e0c_0d39daeb",
      "revId": "d9cf87a831779b3f3910e448b6acc54ab2ed92de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2b263086_146d1862",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 2
      },
      "lineNbr": 485,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-06-04T05:40:24Z",
      "side": 1,
      "message": "copy \u0026 paste voodoo basically.",
      "parentUuid": "3c61155d_a508c9f1",
      "revId": "d9cf87a831779b3f3910e448b6acc54ab2ed92de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0b52c68_53927286",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 2
      },
      "lineNbr": 485,
      "author": {
        "id": 1418133
      },
      "writtenOn": "2019-06-04T05:42:10Z",
      "side": 1,
      "message": "Disabling all user warning carries more risk in this regard.",
      "parentUuid": "2b263086_146d1862",
      "revId": "d9cf87a831779b3f3910e448b6acc54ab2ed92de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "92d00ce7_5404d62b",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 2
      },
      "lineNbr": 485,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-06-04T05:43:17Z",
      "side": 1,
      "message": "indeed. that\u0027s why i\u0027d rather detect \"ah, you\u0027re using gmock...\"",
      "parentUuid": "e0b52c68_53927286",
      "revId": "d9cf87a831779b3f3910e448b6acc54ab2ed92de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "32987c5d_6797b291",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 2
      },
      "lineNbr": 485,
      "author": {
        "id": 1418133
      },
      "writtenOn": "2019-06-04T05:49:58Z",
      "side": 1,
      "message": "That explanation doesn\u0027t quite track... If the option is GMOCK or disable user-define warnings, you\u0027re still promoting disabling of user-defined warning in all other cases.\n\nYou have assume I\u0027m the rare case, reporting the fallacy of the current options, where as others have opted to and will continue to opt to just disable user-defined warnings.",
      "parentUuid": "92d00ce7_5404d62b",
      "revId": "d9cf87a831779b3f3910e448b6acc54ab2ed92de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1b6bc0f8_677e2521",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 2
      },
      "lineNbr": 485,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-06-04T05:51:55Z",
      "side": 1,
      "message": "cs/ shows me one example of that, and they\u0027re also a gmock user.",
      "parentUuid": "32987c5d_6797b291",
      "revId": "d9cf87a831779b3f3910e448b6acc54ab2ed92de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75fbeb6b_1a74fb12",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 2
      },
      "lineNbr": 485,
      "author": {
        "id": 1418133
      },
      "writtenOn": "2019-06-04T06:00:28Z",
      "side": 1,
      "message": "Your codesearch-fu must be greater than mine... I got multiple hits, but can\u0027t quantify the number influenced by logging.h.\n\nDid you find an acceptable check you\u0027d prefer here based on gmock.h?",
      "parentUuid": "1b6bc0f8_677e2521",
      "revId": "d9cf87a831779b3f3910e448b6acc54ab2ed92de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3cf5001c_a63d9e19",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 2
      },
      "lineNbr": 485,
      "author": {
        "id": 1096946
      },
      "writtenOn": "2019-06-04T19:50:42Z",
      "side": 1,
      "message": "Yeah, the all-or-nothing nature of -Wno-user-defined-warnings is really icky, and something I\u0027ve been meaning to get fixed for a while.\n\nThe hope is that we\u0027d end up with a way to tag diagnose_if ops, so the below would become\ndiagnose_if(true, \"Unexpected logging of string pointer\", \"warning\", \"ostream-string-ptr\"))\n\nSo if users wanted to opt out of specifically that, they can add a cflag like\n\n-Wno-user-defined-warnings\u003dostream-string-ptr\n\nI don\u0027t have a strong opinion on how to work around the lack of that today. -Wno-user-defined-warnings would disable like 3 of our FORTIFY checks (openat/open having useless flags, and memset with probably-flipped args), but all of the ones that catch trivial UB should turn into errors regardless, so *shrug*.",
      "parentUuid": "75fbeb6b_1a74fb12",
      "revId": "d9cf87a831779b3f3910e448b6acc54ab2ed92de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "038e0938_c155b85e",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 2
      },
      "lineNbr": 485,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-06-04T20:12:09Z",
      "side": 1,
      "message": "so the one existing instance i found that\u0027s using the flag is https://cs.corp.google.com/android/system/libvintf/test/vintf_object_tests.cpp?type\u003dcs\u0026sq\u003dpackage:%5Eandroid$\u0026g\u003d0 and they annoyingly #include gmock _after_ \u003candroid-base/logging.h\u003e even though their other libbase #includes are in the place i\u0027d expect, after \u003cgmock.h\u003e.\n\nwould your code have \"just worked\" if we\u0027d used the gmock.h include guard directly? if so, that seems like the most helpful thing we can do. (and i\u0027m happy to send the patch to clean up the existing polluter to take advantage of that.) if not, i think that\u0027s an argument for just calling this something like DISABLE_OSTREAM_STRING_POINTER_WARNING_FOR_GMOCK instead --- at least then it\u0027s clear what this voodoo is for, and when you\u0027d want to use it.\n\n(and hopefully some day gbiv@ will improve our tools for us :-) )",
      "parentUuid": "3cf5001c_a63d9e19",
      "revId": "d9cf87a831779b3f3910e448b6acc54ab2ed92de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cd107c1b_aaa6a7b6",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 2
      },
      "lineNbr": 485,
      "author": {
        "id": 1418133
      },
      "writtenOn": "2019-06-05T01:18:20Z",
      "side": 1,
      "message": "We\u0027d be in the same boat. Our formatter enforces header ordering. :-)",
      "parentUuid": "038e0938_c155b85e",
      "revId": "d9cf87a831779b3f3910e448b6acc54ab2ed92de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b1c2140f_8659a885",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 2
      },
      "lineNbr": 485,
      "author": {
        "id": 1418133
      },
      "writtenOn": "2019-06-06T09:17:53Z",
      "side": 1,
      "message": "I\u0027m still failing to understand the rationale here...\n\nWhat downside does the propose solution carry compared to gbiv@\u0027s intended/desired behavior of -Wno-user-defined-warnings\u003dostream-string-ptr? This provides the same result today. Furthermore, OSTREAM_STRING_POINTER_USAGE_ALLOW is significantly more searchable than -Wno-user-defined-warnings for the purpose applying future improvements if desired, if made.\n\nDISABLE_OSTREAM_STRING_POINTER_WARNING_FOR_GMOCK carries not less risk with regards to the copy-paste concern raised as the rationale for preferring GMOCK detection. It also dismisses the fact that -Wno-user-defined-warnings is still left as the de facto catch-all, which everyone has acknowledged as unsuitable.",
      "parentUuid": "cd107c1b_aaa6a7b6",
      "revId": "d9cf87a831779b3f3910e448b6acc54ab2ed92de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4626dc6f_8a034a58",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 2
      },
      "lineNbr": 485,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2019-06-06T09:37:02Z",
      "side": 1,
      "message": "I think enh\u0027s preferred naming for this is better, as many folks would see FOR_GMOCK and think that this is probably not the way they should solve their problem. FWIW, the actual suggestion is in the comment on line 482 right above this code. If you want to print a string pointer, you should cast it to a void pointer first instead. That shows the intent to actual print the pointer value, rather than this being a mistake that prevents people from logging what they actually intended (thus lengthening their debug cycle and/or preventing them from getting meaningful bug data for sporadic issues).",
      "parentUuid": "b1c2140f_8659a885",
      "revId": "d9cf87a831779b3f3910e448b6acc54ab2ed92de",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}