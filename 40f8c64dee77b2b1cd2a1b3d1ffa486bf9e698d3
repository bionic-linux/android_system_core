{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "1d3d60f8_71d161ad",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 5
      },
      "lineNbr": 0,
      "author": {
        "id": 1006497
      },
      "writtenOn": "2021-08-25T18:30:52Z",
      "side": 1,
      "message": "LGTM other than outstanding comments.",
      "revId": "40f8c64dee77b2b1cd2a1b3d1ffa486bf9e698d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4a8c4786_d8d938b7",
        "filename": "libutils/Looper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-08-25T18:14:00Z",
      "side": 1,
      "message": "is 0 a good idea, since that\u0027s also the \"uninitialized\" value?",
      "range": {
        "startLine": 25,
        "startChar": 39,
        "endLine": 25,
        "endChar": 40
      },
      "revId": "40f8c64dee77b2b1cd2a1b3d1ffa486bf9e698d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "dc5cba96_d15c5656",
        "filename": "libutils/Looper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 25,
      "author": {
        "id": 1407716
      },
      "writtenOn": "2021-09-01T12:19:49Z",
      "side": 1,
      "message": "I\u0027m not sure that it matters because I\u0027m initializing the mNextRequestSeq to this + 1 in the constructor... but changed it to 1 anyway.",
      "parentUuid": "4a8c4786_d8d938b7",
      "range": {
        "startLine": 25,
        "startChar": 39,
        "endLine": 25,
        "endChar": 40
      },
      "revId": "40f8c64dee77b2b1cd2a1b3d1ffa486bf9e698d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f8fc960_b4b35481",
        "filename": "libutils/Looper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 157,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-08-25T17:23:52Z",
      "side": 1,
      "message": "btw, I\u0027m waiting on Elliott to review since I\u0027m not very familiar with the Looper code. However, b/197635089 is another crash that was recently reported here. We\u0027ll likely make the changes to this log to increase debugability once this change is reviewed, but I am wondering, do you think this change could fix that issue? If it is related at all, would you consider extending the logs here to print all relevant information?",
      "range": {
        "startLine": 156,
        "startChar": 0,
        "endLine": 157,
        "endChar": 41
      },
      "revId": "40f8c64dee77b2b1cd2a1b3d1ffa486bf9e698d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14d6214b_a57c5921",
        "filename": "libutils/Looper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 157,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-08-25T18:14:00Z",
      "side": 1,
      "message": "the bad news here is that i was deferring to you because i don\u0027t know what looper is and assumed it was some binder thing you\u0027d know about...\n\ni think once this CL is in, whether he likes it or not, prabirmsp becomes the new owner of Looper --- just making a change of this complexity suggests he\u0027s spent more time on this code than anyone else in the last 5+ years :-)",
      "parentUuid": "1f8fc960_b4b35481",
      "range": {
        "startLine": 156,
        "startChar": 0,
        "endLine": 157,
        "endChar": 41
      },
      "revId": "40f8c64dee77b2b1cd2a1b3d1ffa486bf9e698d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bd763b4e_5335f3dc",
        "filename": "libutils/Looper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 157,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-08-25T18:25:08Z",
      "side": 1,
      "message": "Well, I know at least it is an epoll wrapper :) - okay - let me look in detail.",
      "parentUuid": "14d6214b_a57c5921",
      "range": {
        "startLine": 156,
        "startChar": 0,
        "endLine": 157,
        "endChar": 41
      },
      "revId": "40f8c64dee77b2b1cd2a1b3d1ffa486bf9e698d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "919bef50_508416af",
        "filename": "libutils/Looper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 157,
      "author": {
        "id": 1006497
      },
      "writtenOn": "2021-08-25T18:30:38Z",
      "side": 1,
      "message": "Given jeffbrown@ was the previous owner, it coming back to my team probably makes sense ðŸ˜‚. I\u0027ve been thinking about giving it a more modern C++ + Linux update anyways.",
      "parentUuid": "14d6214b_a57c5921",
      "range": {
        "startLine": 156,
        "startChar": 0,
        "endLine": 157,
        "endChar": 41
      },
      "revId": "40f8c64dee77b2b1cd2a1b3d1ffa486bf9e698d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f00405e8_f4bf062d",
        "filename": "libutils/Looper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 157,
      "author": {
        "id": 1407716
      },
      "writtenOn": "2021-09-01T14:53:39Z",
      "side": 1,
      "message": "Let me look at b/197635089 separately when I get some time.",
      "parentUuid": "919bef50_508416af",
      "range": {
        "startLine": 156,
        "startChar": 0,
        "endLine": 157,
        "endChar": 41
      },
      "revId": "40f8c64dee77b2b1cd2a1b3d1ffa486bf9e698d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d81df156_f357b8f3",
        "filename": "libutils/Looper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 526,
      "author": {
        "id": 1006497
      },
      "writtenOn": "2021-08-25T18:30:38Z",
      "side": 1,
      "message": "nit: should this be something like removeSequenceNumberLocked or removeRequestLocked?\n\nI think having removeFd and removeFdLocked take different arguments is rather surprising, especially since I\u0027m not sure that the compiler would actually prevent a transformation like:\n\n    removeFd(fd);\n\nto:\n\n   AutoMutex _l(mLock);\n   // Perform some operations on things protected by mLock\n   removeFdLocked(fd);\n\nWhich looks totally natural but is actually completely wrong.",
      "range": {
        "startLine": 526,
        "startChar": 12,
        "endLine": 526,
        "endChar": 26
      },
      "revId": "40f8c64dee77b2b1cd2a1b3d1ffa486bf9e698d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b23cb05_b6996b95",
        "filename": "libutils/Looper.cpp",
        "patchSetId": 5
      },
      "lineNbr": 526,
      "author": {
        "id": 1407716
      },
      "writtenOn": "2021-09-01T12:19:49Z",
      "side": 1,
      "message": "Yup, the way it\u0027s named looks quite silly in hindsight! Done",
      "parentUuid": "d81df156_f357b8f3",
      "range": {
        "startLine": 526,
        "startChar": 12,
        "endLine": 526,
        "endChar": 26
      },
      "revId": "40f8c64dee77b2b1cd2a1b3d1ffa486bf9e698d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2c3a778_82561e54",
        "filename": "libutils/include/utils/Looper.h",
        "patchSetId": 5
      },
      "lineNbr": 425,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-08-25T18:25:08Z",
      "side": 1,
      "message": "nit: typedef in C++ doesn\u0027t add any type safety from the compiler, only something we have to keep in mind if we\u0027re working on this. If the code isn\u0027t clear enough with \u0027uint64_t\u0027 directly (which I\u0027d recommend), then would you consider:\n\n    struct SequenceNumber { uint64_t value; }\n\ninstead of the alias?",
      "range": {
        "startLine": 425,
        "startChar": 0,
        "endLine": 425,
        "endChar": 34
      },
      "revId": "40f8c64dee77b2b1cd2a1b3d1ffa486bf9e698d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e75a7c80_6d1b81db",
        "filename": "libutils/include/utils/Looper.h",
        "patchSetId": 5
      },
      "lineNbr": 425,
      "author": {
        "id": 1407716
      },
      "writtenOn": "2021-09-01T12:19:49Z",
      "side": 1,
      "message": "Yeah, it\u0027s true that there\u0027s no additional type safety, but i\u0027m just using it here for readability. In particular, when declaring types, something like\n  std::unordered_map\u003cSequenceNumber, Request\u003e \n  \nreduces the need for a comment compared to \n  std::unordered_map\u003cuint64 /* seq */, Request\u003e\n  \nIt also seems helpful to me in places like function headers. I\u0027ll keep it as-is for now unless there are other disadvantages.",
      "parentUuid": "d2c3a778_82561e54",
      "range": {
        "startLine": 425,
        "startChar": 0,
        "endLine": 425,
        "endChar": 34
      },
      "revId": "40f8c64dee77b2b1cd2a1b3d1ffa486bf9e698d3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}