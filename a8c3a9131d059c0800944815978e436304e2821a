{
  "comments": [
    {
      "key": {
        "uuid": "300b1fab_676c1200",
        "filename": "base/include/android-base/properties.h",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2016-09-22T00:00:19Z",
      "side": 1,
      "message": "Given the recent __ANDROID__ vs __BIONIC__ cleanups, this error doesn\u0027t match the ifdef. It seems like we\u0027ll want at least a stub system properties implementation for host bionic?",
      "range": {
        "startLine": 21,
        "startChar": 12,
        "endLine": 21,
        "endChar": 18
      },
      "revId": "a8c3a9131d059c0800944815978e436304e2821a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "300b1fab_471b4e8a",
        "filename": "base/include/android-base/properties.h",
        "patchSetId": 1
      },
      "lineNbr": 21,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-09-22T00:11:26Z",
      "side": 1,
      "message": "duh, meant to say __BIONIC__. going to be a hard habit to get out of ...",
      "parentUuid": "300b1fab_676c1200",
      "range": {
        "startLine": 21,
        "startChar": 12,
        "endLine": 21,
        "endChar": 18
      },
      "revId": "a8c3a9131d059c0800944815978e436304e2821a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "300b1fab_47690eee",
        "filename": "base/properties.cpp",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2016-09-22T00:00:19Z",
      "side": 1,
      "message": "But we don\u0027t pass that on to the caller?\n\nProperties with an empty value can exist, right? If so, should this return a bool instead, denoting whether a property was found?",
      "revId": "a8c3a9131d059c0800944815978e436304e2821a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "300b1fab_a70c4a4e",
        "filename": "base/properties.cpp",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-09-22T00:11:26Z",
      "side": 1,
      "message": "as you can see, i was a bit confused on that point myself. yes, they can. but the existing APIs (other than doing what you see here) don\u0027t let you tell the difference. i\u0027m not sure whether that difference is useful: setting a default seems to be the actual usual intent.\n\ni think just replacing this comment with something like \"if unset, leave `value` so it can serve as a default\" is fine.",
      "parentUuid": "300b1fab_47690eee",
      "revId": "a8c3a9131d059c0800944815978e436304e2821a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "300b1fab_276dfac1",
        "filename": "base/properties.cpp",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2016-09-22T00:30:03Z",
      "side": 1,
      "message": "The following seems a bit surprising, though:\n\n    SetProperty(\"foo\", \"\");\n    std::string bar \u003d \"bar\";\n    GetProperty(\"foo\", \u0026bar);\n\nAlso, the comment should probably go in the header.",
      "parentUuid": "300b1fab_a70c4a4e",
      "revId": "a8c3a9131d059c0800944815978e436304e2821a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "300b1fab_c7a73ebf",
        "filename": "base/properties.cpp",
        "patchSetId": 1
      },
      "lineNbr": 27,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-09-22T01:38:25Z",
      "side": 1,
      "message": "what seems surprising? it\u0027s perhaps not how i\u0027d have designed system properties myself, but then i think i\u0027d have done just about *everything* differently. but this seems consistent with how they\u0027ve always worked to me.\n\nif we find a caller who\u0027d use the bool we can always change later. but i don\u0027t think anyone\u0027s ever needed it yet. (not least because you can\u0027t delete a property. so \u0027empty\u0027 is a fairly usual state.)",
      "parentUuid": "300b1fab_276dfac1",
      "revId": "a8c3a9131d059c0800944815978e436304e2821a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}