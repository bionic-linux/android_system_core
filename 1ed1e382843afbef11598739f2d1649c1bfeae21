{
  "comments": [
    {
      "key": {
        "uuid": "AAAHs3//+4U\u003d",
        "filename": "rootdir/etc/init.goldfish.rc",
        "patchSetId": 11
      },
      "lineNbr": 8,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2012-07-23T21:10:22Z",
      "side": 1,
      "message": "maybe this should be called in_emulator instead of qemu",
      "revId": "1ed1e382843afbef11598739f2d1649c1bfeae21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAHsH///04\u003d",
        "filename": "rootdir/etc/init.goldfish.rc",
        "patchSetId": 11
      },
      "lineNbr": 8,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2012-07-24T11:31:20Z",
      "side": 1,
      "message": "We could do that, but it would require making the same change over in external/sepolicy where the boolean is defined.  Up to you.",
      "parentUuid": "AAAHs3//+4U\u003d",
      "revId": "1ed1e382843afbef11598739f2d1649c1bfeae21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAHtH//+B4\u003d",
        "filename": "rootdir/etc/init.goldfish.rc",
        "patchSetId": 11
      },
      "lineNbr": 8,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2012-07-24T20:13:43Z",
      "side": 1,
      "message": "Are there places in the framework that reference this boolean? Or is it only ever referenced in goldfish specific stuff?",
      "parentUuid": "AAAHsH///04\u003d",
      "revId": "1ed1e382843afbef11598739f2d1649c1bfeae21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAHyX///+g\u003d",
        "filename": "rootdir/etc/init.goldfish.rc",
        "patchSetId": 11
      },
      "lineNbr": 8,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2012-07-25T12:10:25Z",
      "side": 1,
      "message": "It is only explicitly referenced in this file and in external/sepolicy, not in the frameworks. The SELinux java interfaces allow system apps to get the full list of booleans, which is used by the SEAndroidManager app, but it doesn\u0027t make any hardcoded references to any specific booleans.",
      "parentUuid": "AAAHtH//+B4\u003d",
      "revId": "1ed1e382843afbef11598739f2d1649c1bfeae21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAHtH//+mE\u003d",
        "filename": "rootdir/init.rc",
        "patchSetId": 11
      },
      "lineNbr": 115,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2012-07-23T21:10:22Z",
      "side": 1,
      "message": "why are somethings doing a restorecon and some aren\u0027t? Maybe we should be doing a context restore on all the things we chown? Can chown be modified to do a context restore or would that be odd? I\u0027m just trying to minimize the errors when others change their rc files and arbitrarily sprinkle the files with restorecons until things work.",
      "revId": "1ed1e382843afbef11598739f2d1649c1bfeae21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAHtH//+kk\u003d",
        "filename": "rootdir/init.rc",
        "patchSetId": 11
      },
      "lineNbr": 115,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2012-07-23T21:32:08Z",
      "side": 1,
      "message": "scratch that, making chown do it would be sucky and ugly.\n\nIs there a way we can just do a \"restorecon_all\" at the end of the init process (before remounting root ro, and then after setting up /data) to just restore the context of everything?",
      "parentUuid": "AAAHtH//+mE\u003d",
      "revId": "1ed1e382843afbef11598739f2d1649c1bfeae21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAHsH///00\u003d",
        "filename": "rootdir/init.rc",
        "patchSetId": 11
      },
      "lineNbr": 115,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2012-07-24T11:31:20Z",
      "side": 1,
      "message": "Most of the directories are created with the right context during build (the already merged mkyaffs2image and make_ext4fs changes) or by init when it creates the directory (pending change If6af6c4887).  So we only need restorecon calls now for a few cases.  /dev and /dev/socket are created by init before policy is first loaded, so we have to restorecon them afterward.  /cache needs to be initially labeled after filesystem creation there, so we do it here much the same way as chown/chmod is applied.  /data generally shouldn\u0027t be required as the initially flashed image will be labeled already but is done here just in case it was reset, again similar to the chown/chmod situation.  Not sure what a restorecon_all would do or where it would obtain its list of directories to apply; we don\u0027t really need or want to restorecon the entire directory tree on each boot and that would be slow.",
      "parentUuid": "AAAHtH//+kk\u003d",
      "revId": "1ed1e382843afbef11598739f2d1649c1bfeae21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAHsH///0s\u003d",
        "filename": "rootdir/init.rc",
        "patchSetId": 11
      },
      "lineNbr": 115,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2012-07-24T12:10:36Z",
      "side": 1,
      "message": "One other observation: the restorecon calls need to happen as early as possible so that any files subsequently created in those directories will be labeled correctly.  So the restorecon /dev /dev/socket has to happen before ueventd starts, and the restorecon /cache and /data should occur before anything else gets created in them.",
      "parentUuid": "AAAHsH///00\u003d",
      "revId": "1ed1e382843afbef11598739f2d1649c1bfeae21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAHtH//+Bk\u003d",
        "filename": "rootdir/init.rc",
        "patchSetId": 11
      },
      "lineNbr": 115,
      "author": {
        "id": 1000413
      },
      "writtenOn": "2012-07-24T20:13:43Z",
      "side": 1,
      "message": "i see, ok.\n\nMy questions come out of the concern that it is not exactly clear while looking through these files when a restorecon is appropriate and when it isn\u0027t. I\u0027m worried, as mentioned previously, that people will not understand when and where to use it so they will either use it everywhere, nowhere, or randomly. I\u0027m trying to figure out how to make it be pretty fool-proof. Perhaps a block comment at the top of the file? Maybe something at the end of boot can walk /, /dev/, etc to make sure  things are sane and print errors if not (one-time service?) Shrug. \n\nNote that I was only referring to the ramdisk files (though elsewhere, Matt F tells me that it is done through genfscon?). I expect the emmc/disk based filesystems to already have the correct labels (outside the /data stuff you mentioned).",
      "parentUuid": "AAAHsH///0s\u003d",
      "revId": "1ed1e382843afbef11598739f2d1649c1bfeae21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAHyX///+c\u003d",
        "filename": "rootdir/init.rc",
        "patchSetId": 11
      },
      "lineNbr": 115,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2012-07-25T12:10:25Z",
      "side": 1,
      "message": "The restorecon /dev and restorecon /dev/socket could be taken to init code (to the tail of selinux_load_policy) if that is preferred, maybe rolled up into the other change for labeling directories.  Has to be done after policy load and before /dev nodes start to get created by ueventd.\n\nThe restorecon of /cache, /cache/recovery, and /data closely follows the existing model for fixing up ownerships and permissions for those directories in case they were reset or (in the /cache/recovery case) created with odd permissions by the recovery system.  So I think those restorecon calls are reasonable to retain here and shouldn\u0027t confuse people.  And that\u0027s all that would be left - three restorecon calls, each closely associated with an existing chown/chmod sequence, and only for resettable partitions.\n\nrootfs doesn\u0027t get per-file labels anyway as they aren\u0027t stored in the initrd, so restorecon doesn\u0027t make much sense there.\n\nThen in the board-specific init.rc files, restorecon gets used for the factory partition as it is typically not labeled, at least presently, although that will hopefully change when devices ship with SE Android enabled.",
      "parentUuid": "AAAHtH//+Bk\u003d",
      "revId": "1ed1e382843afbef11598739f2d1649c1bfeae21",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}