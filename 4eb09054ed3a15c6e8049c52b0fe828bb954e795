{
  "comments": [
    {
      "key": {
        "uuid": "5186a27e_34d773e7",
        "filename": "logd/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2017-09-06T18:16:09Z",
      "side": 1,
      "message": "wasn\u0027t AID_SYSTEM originally dropped here? I\u0027d prefer logd not have system uid.",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 147,
        "endChar": 64
      },
      "revId": "4eb09054ed3a15c6e8049c52b0fe828bb954e795",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ca9a5e89_b56dc311",
        "filename": "logd/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2017-09-06T18:21:41Z",
      "side": 1,
      "message": "The purpose of this CL: Having one thread with AID_SYSTEM is arguably just as secure as having all threads with AID_SYSTEM.\n\nOf course, in my mind, anything that reduces the exposure of the threads that communicate with the outside world is better than one remaining thread that only communicates with the inside world via a semaphore...",
      "parentUuid": "5186a27e_34d773e7",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 147,
        "endChar": 64
      },
      "revId": "4eb09054ed3a15c6e8049c52b0fe828bb954e795",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "faa7a215_03a4034a",
        "filename": "logd/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 147,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2017-09-06T18:24:41Z",
      "side": 1,
      "message": "Ah, thanks.\n\nNo, I agree with the intent of this change. The thread boundary is not a security boundary.",
      "parentUuid": "ca9a5e89_b56dc311",
      "range": {
        "startLine": 147,
        "startChar": 0,
        "endLine": 147,
        "endChar": 64
      },
      "revId": "4eb09054ed3a15c6e8049c52b0fe828bb954e795",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "03d7406c_9e65674a",
        "filename": "logd/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 270,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-09-06T17:54:40Z",
      "side": 1,
      "message": "why isn\u0027t this \"root\"?",
      "revId": "4eb09054ed3a15c6e8049c52b0fe828bb954e795",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a8ba36e5_9035167a",
        "filename": "logd/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 270,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-09-06T18:03:23Z",
      "side": 1,
      "message": "It seems that the intention here is to return the name only for packages.  The caller checks this first and if this returns nullptr, it then checks getpwnam(), etc.  The naming is not clear in this case, I agree.\n\nI have a question myself - what is the android:: namespace in the context of liblogd?  liblogd isn\u0027t actually used by anything other than logd, right, so none of these APIs are public?  In that case it may make sense to remove this from main.cpp and move it next to LogStatistics::uidToName() ?",
      "parentUuid": "03d7406c_9e65674a",
      "revId": "4eb09054ed3a15c6e8049c52b0fe828bb954e795",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd83095d_9b8f540a",
        "filename": "logd/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 270,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-09-06T18:23:49Z",
      "side": 1,
      "message": "should probably be checking against the minimum app uid then, rather than just special-casing 0?",
      "parentUuid": "a8ba36e5_9035167a",
      "revId": "4eb09054ed3a15c6e8049c52b0fe828bb954e795",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "28e8ee5d_0320c00e",
        "filename": "logd/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 281,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2017-09-06T18:12:21Z",
      "side": 1,
      "message": "Please confirm packagelist_parse is itself thread safe.",
      "range": {
        "startLine": 280,
        "startChar": 0,
        "endLine": 281,
        "endChar": 52
      },
      "revId": "4eb09054ed3a15c6e8049c52b0fe828bb954e795",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4012f678_6e3a1f9a",
        "filename": "logd/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 433,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-09-06T17:54:40Z",
      "side": 1,
      "message": "can\u0027t fail",
      "revId": "4eb09054ed3a15c6e8049c52b0fe828bb954e795",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ae16382_50b5f0d3",
        "filename": "logd/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 433,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2017-09-06T18:03:23Z",
      "side": 1,
      "message": "I\u0027m going to delete all of this code in the next CL anyway, so I figured I\u0027d just leave it for now.",
      "parentUuid": "4012f678_6e3a1f9a",
      "revId": "4eb09054ed3a15c6e8049c52b0fe828bb954e795",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "142d3d81_da072a88",
        "filename": "logd/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 433,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2017-09-06T18:12:21Z",
      "side": 1,
      "message": "The reason I checked:\n\nERRORS\n       POSIX.1-2001  documents  an  ENOMEM  error  for pthread_attr_init(); on\n       Linux these functions always succeed  (but  portable  and  future-proof\n       applications should nevertheless handle a possible error return).",
      "parentUuid": "1ae16382_50b5f0d3",
      "revId": "4eb09054ed3a15c6e8049c52b0fe828bb954e795",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "114f1aa4_8d804cbf",
        "filename": "logd/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 434,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-09-06T17:54:40Z",
      "side": 1,
      "message": "no need for `struct` and `\u003d {}` rather than memset?",
      "revId": "4eb09054ed3a15c6e8049c52b0fe828bb954e795",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4fd66d33_63875338",
        "filename": "logd/main.cpp",
        "patchSetId": 1
      },
      "lineNbr": 439,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-09-06T17:54:40Z",
      "side": 1,
      "message": "pthread_attr_setdetachstate can\u0027t fail any more than the previous two unchecked calls can.",
      "revId": "4eb09054ed3a15c6e8049c52b0fe828bb954e795",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}