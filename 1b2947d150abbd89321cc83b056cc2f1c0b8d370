{
  "comments": [
    {
      "key": {
        "uuid": "564f40d2_5659e5f0",
        "filename": "init/service_parser.cpp",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2019-07-15T21:40:17Z",
      "side": 1,
      "message": "is there a reason not to do the check here?",
      "revId": "1b2947d150abbd89321cc83b056cc2f1c0b8d370",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8383d124_31854bc7",
        "filename": "init/service_parser.cpp",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 1455782
      },
      "writtenOn": "2019-07-15T22:12:05Z",
      "side": 1,
      "message": "Doing the check in the Parse* functions (here, and for ParseInterface) didn\u0027t work when I added checking the inheritance hierarchy because inheritance hierarchy relies on checking if you included a given interface in *any* line, not just the current line.\n\nThat\u0027s why I originally moved it down to EndSection() which in effect had a view of all lines in the section.",
      "parentUuid": "564f40d2_5659e5f0",
      "revId": "1b2947d150abbd89321cc83b056cc2f1c0b8d370",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d485cc2_861cb4c6",
        "filename": "init/service_parser.cpp",
        "patchSetId": 2
      },
      "lineNbr": 229,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2019-07-15T22:41:19Z",
      "side": 1,
      "message": "Ah, I see. I didn\u0027t look at the below code closely enough. We don\u0027t necessarily want to require the entire inheritance hierarchy here (someone might technically want to restart @1.1 servers but not @1.0 servers. I suspect this would be more common for vendor extensions).",
      "parentUuid": "8383d124_31854bc7",
      "revId": "1b2947d150abbd89321cc83b056cc2f1c0b8d370",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "57481e22_ad99d2d1",
        "filename": "init/service_parser.cpp",
        "patchSetId": 2
      },
      "lineNbr": 561,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2019-07-15T21:40:17Z",
      "side": 1,
      "message": "use FqInstance?",
      "range": {
        "startLine": 559,
        "startChar": 12,
        "endLine": 561,
        "endChar": 13
      },
      "revId": "1b2947d150abbd89321cc83b056cc2f1c0b8d370",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39b5567c_e7f0b105",
        "filename": "init/service_parser.cpp",
        "patchSetId": 2
      },
      "lineNbr": 561,
      "author": {
        "id": 1455782
      },
      "writtenOn": "2019-07-15T22:12:05Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "57481e22_ad99d2d1",
      "range": {
        "startLine": 559,
        "startChar": 12,
        "endLine": 561,
        "endChar": 13
      },
      "revId": "1b2947d150abbd89321cc83b056cc2f1c0b8d370",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}