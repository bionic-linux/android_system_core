{
  "comments": [
    {
      "key": {
        "uuid": "ee86cdd4_528a74a1",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 106,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-09-30T01:30:26Z",
      "side": 1,
      "message": "type*\n\nfeel free to use more std::string too as you rewrite stuff too.",
      "revId": "58a78b5dbf3855bc7270e29a5f992c437ce18f81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15197672_f9e6ef1a",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 114,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-09-30T01:30:26Z",
      "side": 1,
      "message": "just asprintf this, or return a std::string.\n\n(no sprintf in new code.)",
      "revId": "58a78b5dbf3855bc7270e29a5f992c437ce18f81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4e4c398b_fd9356d5",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 118,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-09-30T01:30:26Z",
      "side": 1,
      "message": "nullptr",
      "revId": "58a78b5dbf3855bc7270e29a5f992c437ce18f81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e5fa128_121dfe6d",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 124,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-09-30T01:30:26Z",
      "side": 1,
      "message": "same.",
      "revId": "58a78b5dbf3855bc7270e29a5f992c437ce18f81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0e5fa128_72c1da1c",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 962,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-09-30T01:30:26Z",
      "side": 1,
      "message": "use android::base::ReadFileToString in new code. (and minimize scope. the old guys might have been reprobate C programmers, but we\u0027re not :-) )",
      "revId": "58a78b5dbf3855bc7270e29a5f992c437ce18f81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ee86cdd4_d26524a8",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1139,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-09-30T01:30:26Z",
      "side": 1,
      "message": "always use braces",
      "revId": "58a78b5dbf3855bc7270e29a5f992c437ce18f81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e2e2591_06994268",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1155,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-09-30T01:30:26Z",
      "side": 1,
      "message": "remind me why we\u0027re not just using shell scripts for provisioning again? are we just going to reinvent that wheel slowly and incompletely?\n\nwe could always add a \"provision\" function to envsetup.sh if all we need is a consistent name for the shell script. (or put a provision.py on the path.)",
      "revId": "58a78b5dbf3855bc7270e29a5f992c437ce18f81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "55704e4f_0d455180",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1155,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2015-09-30T16:32:15Z",
      "side": 1,
      "message": "I\u0027m not so sure adding \"fastboot provision\" is akin to writing our own shell-script interpreter :-). FWIW, I don\u0027t like shell/python scripts for this as it gives way too much room for error / hacks and they\u0027re harder to read and it\u0027s harder to ensure that they work across Linux, OS X and Windows. It\u0027s also much easier to just inspect the ${ANDROID_PRODUCT_OUT}/provisioning-commands file for debugging.\n\nSo if it\u0027s OK with you, I would prefer to continue down this path. Thoughts?",
      "parentUuid": "2e2e2591_06994268",
      "revId": "58a78b5dbf3855bc7270e29a5f992c437ce18f81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75439281_64ab1e74",
        "filename": "fastboot/fastboot.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1155,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-09-30T20:08:50Z",
      "side": 1,
      "message": "does Brillo support platform development on Windows? Android doesn\u0027t.\n\notherwise, i\u0027m starting to think this is a mistake. we\u0027re doing command execution, but only in a very limited form. we\u0027re doing environment variable substitution, but badly. it feels like the best we can hope for is to achieve parity with the shell --- but we already have perfectly good shells.\n\nyour example provisioning script looks identical as a shell script except that each line starts with \"fastboot \".\n\nthe \"too much room for hacks\" is probably a good thing --- sooner or later there\u0027s going to be some custom bullshit an OEM needs you to do, and then you either hack that in to fastboot or have a separate shell script you need to run in addition to \"fastboot provision\". this is why Android\u0027s init is such an awful mess. they wanted it to be \"minimal\" but bad things happen when you collide with reality. especially in areas where OEMs are involved. the recovery image links in an arbitrary OEM-provided .so to solve the equivalent problem there. yeah, the shell\u0027s not lovely, but the alternatives all tend to be worse...\n\ni think \"Windows\" is really the only strong counter-argument, and even there that just makes me think \"python\" rather than \"shell\". (although for the level of complexity you\u0027re talking about, a .bat file is probably sufficient anyway.)",
      "parentUuid": "55704e4f_0d455180",
      "revId": "58a78b5dbf3855bc7270e29a5f992c437ce18f81",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}