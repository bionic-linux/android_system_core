{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "cc9a07ad_d1f0efc6",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-01-20T03:41:11Z",
      "side": 1,
      "message": "Shouldn\u0027t this be done via an HAL in general? Why is this done directly from system server? I might be wrong since I don\u0027t have enough context here. Sharing a background story would be appreciated.",
      "range": {
        "startLine": 7,
        "startChar": 44,
        "endLine": 7,
        "endChar": 55
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "60a04240_d2204239",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1133258
      },
      "writtenOn": "2021-01-20T03:57:03Z",
      "side": 1,
      "message": "Hi Jiyong,  Input frameworks doesn\u0027t have a HAL interface, it directly works with stable kernel interface.  EventHub is the component in input frameworks read/write kernel interface for reading the input events from kernel. \nMichael, can you please explain more of the design detail for how input frameworks interface with kernel?  Thanks!",
      "parentUuid": "cc9a07ad_d1f0efc6",
      "range": {
        "startLine": 7,
        "startChar": 44,
        "endLine": 7,
        "endChar": 55
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8fa8c123_b3dc1d00",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-01-20T04:02:06Z",
      "side": 1,
      "message": "Thanks for the info. If the kernel interface is stable, then I worry much less. I know that the input events (/dev/input) has been since the beginning of Android, but I don\u0027t know if the same holds for the LED interface. How stable is the LED interface? Is it guaranteed to exist (and behave correctly) in older (3-4 years old) kernels? Otherwise the new platform might not work on old BSPs, which breaks the Treble requirement.",
      "parentUuid": "60a04240_d2204239",
      "range": {
        "startLine": 7,
        "startChar": 44,
        "endLine": 7,
        "endChar": 55
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f7779ee0_c67fab82",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1133258
      },
      "writtenOn": "2021-01-20T04:17:10Z",
      "side": 1,
      "message": "The led device class and sysfs interface has been in kernel for a long time, \nhttps://www.kernel.org/doc/Documentation/leds/leds-class.txt#:~:text\u003dLEDs%20appear%20in%20%2Fsys%2Fclass,for%20non%2Dzero%20brightness%20settings.\nhttps://www.kernel.org/doc/html/latest/leds/leds-class-multicolor.html\nAnd the kernel interface stays unchanged for quite a few releases.\nSandeep/Michael could probably provide more info and future kernel plan to support it.",
      "parentUuid": "8fa8c123_b3dc1d00",
      "range": {
        "startLine": 7,
        "startChar": 44,
        "endLine": 7,
        "endChar": 55
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ec43e726_66da2a07",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-01-20T04:40:17Z",
      "side": 1,
      "message": "The links show \"/sys/class/leds/\", but this change is about \"/sys/devices/virtual/misc/uhid/*/leds/*\". Is this also part of the standard interface?\n\nI don\u0027t see the path on my blueline for example.",
      "parentUuid": "f7779ee0_c67fab82",
      "range": {
        "startLine": 7,
        "startChar": 44,
        "endLine": 7,
        "endChar": 55
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "14fe8472_bc32e16a",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1133258
      },
      "writtenOn": "2021-01-20T04:47:05Z",
      "side": 1,
      "message": "\"/sys/devices/virtual/misc/uhid/*/leds/*\" will be used by UHID input device, and a symbol link will be created under /sys/class/leds..",
      "parentUuid": "ec43e726_66da2a07",
      "range": {
        "startLine": 7,
        "startChar": 44,
        "endLine": 7,
        "endChar": 55
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "beca1d59_dac703ad",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-01-20T04:52:57Z",
      "side": 1,
      "message": "Then why don\u0027t we use /sys/class/leds... here? Sorry that I keep asking questions.",
      "parentUuid": "14fe8472_bc32e16a",
      "range": {
        "startLine": 7,
        "startChar": 44,
        "endLine": 7,
        "endChar": 55
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5fbd159_6ee19ef0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1133258
      },
      "writtenOn": "2021-01-20T04:57:51Z",
      "side": 1,
      "message": "That\u0027s a good question,  in first patch we did this, however under /sys/class/leds there are nodes created for system lights leds, and linked to here.  If we add a rule of /*/leds that would change all the led interface nodes including system lights to be owned by system.",
      "parentUuid": "beca1d59_dac703ad",
      "range": {
        "startLine": 7,
        "startChar": 44,
        "endLine": 7,
        "endChar": 55
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ff620cb4_ed38aea5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-01-20T05:06:14Z",
      "side": 1,
      "message": "Oh I see. So you want to capture a certain type of LEDs, like the ones from peripheral devices, but not all LEDs. \n\nGoing back to the original topic of Treble compliance. Does this new feature work with older (ex: P, Q, or R) kernels? If so, I feel fine.",
      "parentUuid": "b5fbd159_6ee19ef0",
      "range": {
        "startLine": 7,
        "startChar": 44,
        "endLine": 7,
        "endChar": 55
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59d533f2_562fa119",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1133258
      },
      "writtenOn": "2021-01-20T05:21:22Z",
      "side": 1,
      "message": "On older devices like P/Q/R the kernel path for UHID sysfs led class path should be same.\nThe input kernel driver for creating the node is vendor specific, and only particular input hardware will create the nodes when connected.\nThe uevent rule should only apply when the the driver detect the input hardware and mount the sysfs node, so with older kernel even if vendor kernel driver doesn\u0027t create the sysfs node the feature will just not be supported, but should not cause other issues.",
      "parentUuid": "ff620cb4_ed38aea5",
      "range": {
        "startLine": 7,
        "startChar": 44,
        "endLine": 7,
        "endChar": 55
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "9d49b037_87a39545",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-01-20T05:26:51Z",
      "side": 1,
      "message": "Thanks for the answers and also thanks for bearing with me. LGTM then.",
      "parentUuid": "59d533f2_562fa119",
      "range": {
        "startLine": 7,
        "startChar": 44,
        "endLine": 7,
        "endChar": 55
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd26b7f5_d89309bb",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 7,
      "author": {
        "id": 1133258
      },
      "writtenOn": "2021-01-20T05:36:26Z",
      "side": 1,
      "message": "Thanks Jiyong!",
      "parentUuid": "9d49b037_87a39545",
      "range": {
        "startLine": 7,
        "startChar": 44,
        "endLine": 7,
        "endChar": 55
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8b55de29_ac0a7d74",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1133258
      },
      "writtenOn": "2021-01-19T18:18:42Z",
      "side": 1,
      "message": "+Bowgo and Jiyong from Treble team as well.\nGrouped this CL together with the other one providing file permission to system server, for uhid sysfs node to system server.",
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd8f9e8d_cd29a4ee",
        "filename": "rootdir/ueventd.rc",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2021-01-20T21:15:25Z",
      "side": 1,
      "message": "Are these generic paths or something that is device / hardware specific?\nIf they are indeed device specific, then system_server probably shouldn\u0027t be reading /writing from them directly.\nIf they appear on all devices, can you point me to what kernel option / configuration enables that?\n\nWe need to make sure those are part of GKI and are a defined stable interface.\n\ncc: adelva, tkjos",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 79,
        "endChar": 39
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3ae7e3e3_8123aed8",
        "filename": "rootdir/ueventd.rc",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1293738
      },
      "writtenOn": "2021-01-20T23:44:09Z",
      "side": 1,
      "message": "I think uhid (USB HID) leds is OK to expose. This is a standardized interface.",
      "parentUuid": "bd8f9e8d_cd29a4ee",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 79,
        "endChar": 39
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0b37ab02_9c05dc88",
        "filename": "rootdir/ueventd.rc",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1133258
      },
      "writtenOn": "2021-01-21T00:31:28Z",
      "side": 1,
      "message": "Hi Sandeep, the sysfs led class is not specific to device or vendor, the kernel config for LED class is:\nconfig LEDS_CLASS\n\ttristate \"LED Class Support\"\n\thelp\n\t  This option enables the led sysfs class in /sys/class/leds.  You\u0027ll\n\t  need this to do anything useful with LEDs.  If unsure, say N.",
      "parentUuid": "3ae7e3e3_8123aed8",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 79,
        "endChar": 39
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c9e3ec3_cdd56a00",
        "filename": "rootdir/ueventd.rc",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1133258
      },
      "writtenOn": "2021-01-21T00:34:27Z",
      "side": 1,
      "message": "Sandeep, can you review another CL for SElinux change? \nhttps://android-review.googlesource.com/c/platform/system/sepolicy/+/1507623",
      "parentUuid": "0b37ab02_9c05dc88",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 79,
        "endChar": 39
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1bbc367f_34807a17",
        "filename": "rootdir/ueventd.rc",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-01-22T01:35:26Z",
      "side": 1,
      "message": "I\u0027m not really convinced by this:\n- devices might use any mechanism for lights, and so, this will break if a device wants this functionality but doesn\u0027t implement this interface (it\u0027s not ideal, but devices do this kind of thing for other lights types)\n- if a device already uses these lights as part of their lights HAL, then we will have conflicting writers, between the lights HAL and the system server\n\nDo we have a way to guarantee these things?",
      "parentUuid": "0c9e3ec3_cdd56a00",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 79,
        "endChar": 39
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a91111cd_efad2a9c",
        "filename": "rootdir/ueventd.rc",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1133258
      },
      "writtenOn": "2021-01-22T02:42:46Z",
      "side": 1,
      "message": "Hi Steven, \n1) The feature will be provided for devices with kernel sysfs class led support and vendor kernel driver for input controllers that do have lights. The kernel sysfs class led support is a kernel config option(LEDS_CLASS), and an input device driver will create the sysfs class node interface.\nBy giving system_server the access to these sysfs nodes, the feature will work on devices with the kernel option and kernel input/hid driver support.  We do use CTS tests to enforce the kernel options and the input device drivers. \n2) Currently these lights node will be created with owner of root, with this CL the file owner will be system but root will be still able to access it. But above all, the light HAL should never touch the HID device sysfs light, as the light HAL only defines a number of lights supported (https://android.googlesource.com/platform/hardware/interfaces/+/master/light/2.0/types.hal) but not include input device lights, so we shouldn\u0027t have conflict for managing these lights.",
      "parentUuid": "1bbc367f_34807a17",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 79,
        "endChar": 39
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c5552671_163551fa",
        "filename": "rootdir/ueventd.rc",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-01-22T18:11:44Z",
      "side": 1,
      "message": "\u003e the light HAL should never touch the HID device sysfs light, as the light HAL only defines a number of lights supported \n\nThe lights HAL defines logical lights, but are we sure that a HID device should never be in the KEYBOARD category? Of course, with the neverallow rule in place, this seems great, since it should encourage people to use the linux kernel interfaces. If there ever is a request to extend that neverallow rule, then it should also be an opportunity to remove the need for a HAL.",
      "parentUuid": "a91111cd_efad2a9c",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 79,
        "endChar": 39
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b4251e63_92f3f600",
        "filename": "rootdir/ueventd.rc",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1133258
      },
      "writtenOn": "2021-01-23T03:46:26Z",
      "side": 1,
      "message": "I just check a few vendor light HAL implementations, it seems none of them are accessing sysfs path /sys/devices/virtual/misc/uhid.  \nThey had static mappings of LED type and the /sys/class/led/ file name. Like this one:\nhttps://source.corp.google.com/aosp-android10/device/google/wahoo/liblight/lights.c?q\u003dlight_device_t\u0026start\u003d21\nThe uhid input device will also create a symbol link under /sys/class/led/, but as the file is dynamically created, and the name is {connection type}:{vendor id}:{product id}:{version id}:{color}, the light HAL will not able to create a static mapping and always assume the file is present.\nI can\u0027t find any vendor HAL implements HAL light type of KEYBOARD. The system lights of a keyboard, like CAPS_LOCK, NUMS_LOCK, PRT_SCRN, these LEDs are controlled by input interface node from evdev, and these lights are already controlled by inputflinger.",
      "parentUuid": "c5552671_163551fa",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 79,
        "endChar": 39
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c3ff18db_5fe59749",
        "filename": "rootdir/ueventd.rc",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1133258
      },
      "writtenOn": "2021-01-23T17:07:55Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "b4251e63_92f3f600",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 79,
        "endChar": 39
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "d3a37682_ab0d0e69",
        "filename": "rootdir/ueventd.rc",
        "patchSetId": 3
      },
      "lineNbr": 79,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2021-01-25T11:09:43Z",
      "side": 1,
      "message": "\u003e I just check a few vendor light HAL implementations, it seems none of them are accessing sysfs path /sys/devices/virtual/misc/uhid.  \n\nYour neverallow rule in selinux policy will guarantee that only system_server can access these files. That will prevent future conflicts from being created, and force any existing users to get in touch with you. If that happens, you\u0027ll have to rethink your approach.",
      "parentUuid": "c3ff18db_5fe59749",
      "range": {
        "startLine": 79,
        "startChar": 0,
        "endLine": 79,
        "endChar": 39
      },
      "revId": "f41e3349224380b4ee3715b0a7fdacc750f48956",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}