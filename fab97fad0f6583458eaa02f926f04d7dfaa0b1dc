{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "00c4f275_1f5c4268",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2023-03-09T18:49:37Z",
      "side": 1,
      "message": "Please let me know if this is an acceptable change of the format. The idea is that parsers that match for \"backtrace:\" will still match, only ones that match for \"backtrace:\\n\" don\u0027t. Chris seems to think it\u0027s fine, but please confirm here again.\n\nAlternatively we could add a new line somewhere to that effect, that would be safer for parser purposes, but less neat.",
      "revId": "fab97fad0f6583458eaa02f926f04d7dfaa0b1dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f0e80a78_d15f9b24",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-09T19:12:13Z",
      "side": 1,
      "message": "i don\u0027t usually do any testing beyond \"what does cs/ say?\" but it seems like there\u0027s a problematic use in the first few cs/ matches? https://source.corp.google.com/android/platform_testing/libraries/sts-common-util/host-side/src/com/android/sts/common/util/TombstoneParser.java;l\u003d149?q\u003d%5C%22backtrace%5C:%20case:yes\u0026sq\u003dpackage:%5Eandroid$%20-file:prebuilts%2Fvndk%2F%20-file:prebuilts%2Fruntime%2F stitches \"backtrace:\" and \"\\n\" (in possibly the most expensive way ever!) and looks like it would break?",
      "revId": "fab97fad0f6583458eaa02f926f04d7dfaa0b1dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bdfd0cd0_31fd670f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2023-03-09T20:23:52Z",
      "side": 1,
      "message": "Oh, sorry. Probably better to just add a new line for this. Either of you have any preference on what that should read?",
      "parentUuid": "f0e80a78_d15f9b24",
      "revId": "fab97fad0f6583458eaa02f926f04d7dfaa0b1dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0628be79_d8781288",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-09T21:24:55Z",
      "side": 1,
      "message": "individual frames are numbered already, right, so it\u0027s only the highest-numbered frames that could be missing. and they\u0027re usually just the _start_thread type stuff ... do they even matter? (i suspect i haven\u0027t understood the actual problem you\u0027re trying so solve :-) )",
      "parentUuid": "bdfd0cd0_31fd670f",
      "revId": "fab97fad0f6583458eaa02f926f04d7dfaa0b1dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e930a960_d3fc1cb2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2023-03-09T21:29:38Z",
      "side": 1,
      "message": "Attached bug explains more, but tl;dr: Sometimes, everything of value is missing from the backtraces from HWASan reports, and they are only HWASan-internal frames. In general, unless we hardcode some assumptions about what the lowest frames should be (either main, or start_thread, or whatever), it\u0027s not easy for automation to know whether something is missing or not.",
      "parentUuid": "0628be79_d8781288",
      "revId": "fab97fad0f6583458eaa02f926f04d7dfaa0b1dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd2cc626_27452b75",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-09T21:57:33Z",
      "side": 1,
      "message": "a bogus \"frame\" at the end might be the most compatible way to do it? something like this:\n```\n01-24 13:56:37.383  wifi  4877  4877 F DEBUG   :     #15 0x723ba967f0  (/apex/com.android.runtime/lib64/bionic/libc.so+0x5a7f0) (BuildId: e3082097a3e55f43706610b2702a1a3b)\n01-24 13:56:37.383  wifi  4877  4877 F DEBUG   :     #16 0x0000000000  (end-of-stack) (BuildId: 00000000000000000000000000000000)\n```\notherwise you\u0027re likely to confuse parsers\u0027 existing \"am i at the end?\" logic?",
      "parentUuid": "00c4f275_1f5c4268",
      "revId": "fab97fad0f6583458eaa02f926f04d7dfaa0b1dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d7a7620e_a7c6d493",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2023-03-09T21:59:36Z",
      "side": 1,
      "message": "Interesting. Though that might mess up symbolizers a bit.\n\nWe can add the new line above the backtrace, e.g.\n\n```\nbacktrace-length: 3\nbacktrace:\n\n#0 ...\n#1 ...\n#2 ...\n```\n\nit\u0027s ugly but should hopefully parse gracefully?",
      "parentUuid": "fd2cc626_27452b75",
      "revId": "fab97fad0f6583458eaa02f926f04d7dfaa0b1dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c00448f4_1dd51e5e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2023-03-09T22:02:20Z",
      "side": 1,
      "message": "yeah, putting the extra bit _before_ the `backtrace:\\n` line seems the suggestion least likely to cause trouble so far, unless cferris has a better one?\n\n(i\u0027m assuming you already had the \"why are you parsing logcat? why aren\u0027t you just looking at the protobufs? or even the _text_ tombstones?! _anything_ but logcat!!!\" conversation?)",
      "parentUuid": "d7a7620e_a7c6d493",
      "revId": "fab97fad0f6583458eaa02f926f04d7dfaa0b1dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "414d94dd_5ee04321",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2023-03-10T03:13:10Z",
      "side": 1,
      "message": "Yeah, I don\u0027t like the bogus line since that will be confusing.\n\nMaybe instead of:\n\n  backtrace: (XX FRAMES)\n\nYou could do:\n\n  XX Total Frames\n  backtrace:\n\nThat looks okay to me and I don\u0027t think it will trip any parsers.",
      "parentUuid": "c00448f4_1dd51e5e",
      "revId": "fab97fad0f6583458eaa02f926f04d7dfaa0b1dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "45d48d54_14361243",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2023-04-10T20:45:34Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "414d94dd_5ee04321",
      "revId": "fab97fad0f6583458eaa02f926f04d7dfaa0b1dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e100a917_615d9f47",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2023-04-10T20:45:34Z",
      "side": 1,
      "message": "Acknowledged",
      "parentUuid": "e930a960_d3fc1cb2",
      "revId": "fab97fad0f6583458eaa02f926f04d7dfaa0b1dc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}