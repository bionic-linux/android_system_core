{
  "comments": [
    {
      "key": {
        "uuid": "44141a88_cd104117",
        "filename": "fs_mgr/fs_mgr_slotselect.c",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1045980
      },
      "writtenOn": "2015-09-03T20:46:11Z",
      "side": 1,
      "message": "Is it possible to use get_bootloader_message instead?",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 70,
        "endChar": 1
      },
      "revId": "0e5566d6db1e3946248b3b89e5421a80566184d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "647bdead_fb8b67a0",
        "filename": "fs_mgr/fs_mgr_slotselect.c",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2015-09-03T21:33:49Z",
      "side": 1,
      "message": "According to bootable/recovery/Android.mk, get_bootloader_message() seems to be in librecovery which statically links libfs_mgr. It would also necessitate passing a Volume object so we\u0027d need to figure out the block device name anyway...",
      "parentUuid": "44141a88_cd104117",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 70,
        "endChar": 1
      },
      "revId": "0e5566d6db1e3946248b3b89e5421a80566184d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24472669_0c997bb5",
        "filename": "fs_mgr/fs_mgr_slotselect.c",
        "patchSetId": 1
      },
      "lineNbr": 70,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2015-09-03T21:34:56Z",
      "side": 1,
      "message": "(Actually, scratch the part about having to find a Volume object. It does that itself, sorry.)",
      "parentUuid": "647bdead_fb8b67a0",
      "range": {
        "startLine": 35,
        "startChar": 0,
        "endLine": 70,
        "endChar": 1
      },
      "revId": "0e5566d6db1e3946248b3b89e5421a80566184d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6492fe15_3fbf7a99",
        "filename": "fs_mgr/fs_mgr_slotselect.c",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1045980
      },
      "writtenOn": "2015-09-03T20:46:11Z",
      "side": 1,
      "message": "No need to keep these around forever. I\u0027d either pass in a buffer to use, or allocate one here.",
      "range": {
        "startLine": 74,
        "startChar": 4,
        "endLine": 75,
        "endChar": 31
      },
      "revId": "0e5566d6db1e3946248b3b89e5421a80566184d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24472669_6c9a2faf",
        "filename": "fs_mgr/fs_mgr_slotselect.c",
        "patchSetId": 1
      },
      "lineNbr": 75,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2015-09-03T21:33:49Z",
      "side": 1,
      "message": "Fair enough. Will fix.",
      "parentUuid": "6492fe15_3fbf7a99",
      "range": {
        "startLine": 74,
        "startChar": 4,
        "endLine": 75,
        "endChar": 31
      },
      "revId": "0e5566d6db1e3946248b3b89e5421a80566184d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0484e2ca_d343e8db",
        "filename": "fs_mgr/fs_mgr_slotselect.c",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1045980
      },
      "writtenOn": "2015-09-03T20:46:11Z",
      "side": 1,
      "message": "I don\u0027t think we actually disallow an empty suffix, so long as it\u0027s different than the other suffix. I\u0027d suggest having NULL as the default, but that doesn\u0027t actually work with the current implementation of property_get. I think __system_property_find will get you that information, but I\u0027ll look into if that\u0027s what we want to do here.",
      "range": {
        "startLine": 84,
        "startChar": 4,
        "endLine": 84,
        "endChar": 29
      },
      "revId": "0e5566d6db1e3946248b3b89e5421a80566184d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6492fe15_3fd3fa97",
        "filename": "fs_mgr/fs_mgr_slotselect.c",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-09-03T20:51:19Z",
      "side": 1,
      "message": "i think we should just disallow the empty suffix. that\u0027s bound to cause confusion in other places too.",
      "parentUuid": "0484e2ca_d343e8db",
      "range": {
        "startLine": 84,
        "startChar": 4,
        "endLine": 84,
        "endChar": 29
      },
      "revId": "0e5566d6db1e3946248b3b89e5421a80566184d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a490760a_88dbfb57",
        "filename": "fs_mgr/fs_mgr_slotselect.c",
        "patchSetId": 1
      },
      "lineNbr": 84,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2015-09-03T21:33:49Z",
      "side": 1,
      "message": "I\u0027m assuming what Daniel is asking for is the ability to pass\n\n someoption\u003dfoo androidboot.slot_suffix\u003d someotheroption\u003dbar\n\non the kernel cmdline and have this choose the empty suffix. This is as opposed to the case where the androidboot.slot_suffix is not on the cmdline at all and we then look in misc or fall back to \u0027_a\u0027.\n\nI\u0027m sure we can do it and I don\u0027t mind adding the code, but I\u0027m too scratching my head to think of when this would be useful. Debugging, perhaps?",
      "parentUuid": "6492fe15_3fd3fa97",
      "range": {
        "startLine": 84,
        "startChar": 4,
        "endLine": 84,
        "endChar": 29
      },
      "revId": "0e5566d6db1e3946248b3b89e5421a80566184d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0484e2ca_b3e50450",
        "filename": "fs_mgr/fs_mgr_slotselect.c",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1045980
      },
      "writtenOn": "2015-09-03T20:46:11Z",
      "side": 1,
      "message": "This mallocs a string that we never free.",
      "range": {
        "startLine": 109,
        "startChar": 13,
        "endLine": 109,
        "endChar": 26
      },
      "revId": "0e5566d6db1e3946248b3b89e5421a80566184d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "44333af5_062cae75",
        "filename": "fs_mgr/fs_mgr_slotselect.c",
        "patchSetId": 1
      },
      "lineNbr": 109,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2015-09-03T21:33:49Z",
      "side": 1,
      "message": "Will fix.",
      "parentUuid": "0484e2ca_b3e50450",
      "range": {
        "startLine": 109,
        "startChar": 13,
        "endLine": 109,
        "endChar": 26
      },
      "revId": "0e5566d6db1e3946248b3b89e5421a80566184d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "644d9e85_823d2baa",
        "filename": "fs_mgr/fs_mgr_slotselect.c",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 1045980
      },
      "writtenOn": "2015-09-03T20:46:11Z",
      "side": 1,
      "message": "This error should be reported back. This should not be void",
      "range": {
        "startLine": 127,
        "startChar": 20,
        "endLine": 127,
        "endChar": 64
      },
      "revId": "0e5566d6db1e3946248b3b89e5421a80566184d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "647bdead_9b9833f8",
        "filename": "fs_mgr/fs_mgr_slotselect.c",
        "patchSetId": 1
      },
      "lineNbr": 127,
      "author": {
        "id": 1076971
      },
      "writtenOn": "2015-09-03T21:33:49Z",
      "side": 1,
      "message": "Wilco. I\u0027ll make the caller log the error.",
      "parentUuid": "644d9e85_823d2baa",
      "range": {
        "startLine": 127,
        "startChar": 20,
        "endLine": 127,
        "endChar": 64
      },
      "revId": "0e5566d6db1e3946248b3b89e5421a80566184d6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}