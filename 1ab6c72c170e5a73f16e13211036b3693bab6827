{
  "comments": [
    {
      "key": {
        "uuid": "8cdb726c_8f89f6fa",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 4
      },
      "lineNbr": 988,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-12-11T14:48:32Z",
      "side": 1,
      "message": "nit: Not sure will it worthy to create a reference here, so we can avoid the (*fstab)[i].*\n\ne.g., \nFstabEntry\u0026 current_entry \u003d (*fstab)[i]; \nFstabEntry\u0026 attempted_entry \u003d (*fstab)[attempted_idx]; \nFstabEntry\u0026 top_entry \u003d (*fstab)[top_idx]; \n\nBut this can probably be done in a separate CL if desired, can keep current conversion minimum.",
      "range": {
        "startLine": 988,
        "startChar": 12,
        "endLine": 988,
        "endChar": 24
      },
      "revId": "1ab6c72c170e5a73f16e13211036b3693bab6827",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6b91222b_1ce251e1",
        "filename": "init/first_stage_mount.cpp",
        "patchSetId": 4
      },
      "lineNbr": 133,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2018-12-11T14:48:32Z",
      "side": 1,
      "message": "nit: might consider adding a comment /* uevent_socket_rcvbuf_size */ or add a const kUeventSocketBufSize for it.\n\nAs this is not introduced in this CL, we can probably do this later.",
      "range": {
        "startLine": 133,
        "startChar": 78,
        "endLine": 133,
        "endChar": 94
      },
      "revId": "1ab6c72c170e5a73f16e13211036b3693bab6827",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}