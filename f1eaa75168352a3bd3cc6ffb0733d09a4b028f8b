{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "98997e52_54ac85eb",
        "filename": "rootdir/init.rc",
        "patchSetId": 1
      },
      "lineNbr": 1007,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2024-11-11T18:01:51Z",
      "side": 1,
      "message": "Are these being moved later?",
      "range": {
        "startLine": 998,
        "startChar": 0,
        "endLine": 1007,
        "endChar": 18
      },
      "revId": "f1eaa75168352a3bd3cc6ffb0733d09a4b028f8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "beab5b86_8f9ba8d8",
        "filename": "rootdir/init.rc",
        "patchSetId": 1
      },
      "lineNbr": 1007,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2024-11-11T19:32:14Z",
      "side": 1,
      "message": "These are tricky to move. I\u0027m still contemplating strategies to do that. They are tricky because:\n\n(1) we want the mainline init to happen right after perform_apex_config, before any mainline process can start. Note that in the rootdir init.rc there is `derive_sdk` right after mainline init. We definitely want aconfigd mainline init to happen before that.\n\n(2) We also want the socket service to start after both aconfigd platform init (already moved to aconfigd.rc) and aconfigd mainline init. This we can probably achieve by having socket service process triggered by a sys prop change that is made by aconfigd mainline init. \n\nJust want to find a good strategy to do (1) before working on (2).\n\nAny suggestions?\n\nBest!",
      "parentUuid": "98997e52_54ac85eb",
      "range": {
        "startLine": 998,
        "startChar": 0,
        "endLine": 1007,
        "endChar": 18
      },
      "revId": "f1eaa75168352a3bd3cc6ffb0733d09a4b028f8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "482bf241_02779392",
        "filename": "rootdir/init.rc",
        "patchSetId": 1
      },
      "lineNbr": 1007,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2024-11-11T19:34:57Z",
      "side": 1,
      "message": "Yeah, it sounds like a sys prop is the way to go.\n\nFor #1, I\"m a bit confused as to what you mean. You want a mainline module to start before mainline processes are allowed to start?",
      "parentUuid": "beab5b86_8f9ba8d8",
      "range": {
        "startLine": 998,
        "startChar": 0,
        "endLine": 1007,
        "endChar": 18
      },
      "revId": "f1eaa75168352a3bd3cc6ffb0733d09a4b028f8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d2cea877_52d78cc3",
        "filename": "rootdir/init.rc",
        "patchSetId": 1
      },
      "lineNbr": 1007,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2024-11-11T19:59:52Z",
      "side": 1,
      "message": "Yes, we want aconfigd process for config infra mainline module be the first process to start among all mainline module processes. The reason is that aconfigd really should be thought of as a form mainline module preparation (get the flags that these process need ready).",
      "parentUuid": "482bf241_02779392",
      "range": {
        "startLine": 998,
        "startChar": 0,
        "endLine": 1007,
        "endChar": 18
      },
      "revId": "f1eaa75168352a3bd3cc6ffb0733d09a4b028f8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "76bc6981_fa2393e2",
        "filename": "rootdir/init.rc",
        "patchSetId": 1
      },
      "lineNbr": 1007,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2024-11-11T20:04:04Z",
      "side": 1,
      "message": "Do you have a way to guarantee that other mainline modules cannot start before your module is ready?",
      "parentUuid": "d2cea877_52d78cc3",
      "range": {
        "startLine": 998,
        "startChar": 0,
        "endLine": 1007,
        "endChar": 18
      },
      "revId": "f1eaa75168352a3bd3cc6ffb0733d09a4b028f8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b0e3706_48850a3b",
        "filename": "rootdir/init.rc",
        "patchSetId": 1
      },
      "lineNbr": 1007,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2024-11-11T20:06:25Z",
      "side": 1,
      "message": "the `exec_start` we use to start `aconfigd-mainline-init` and `system_aconfigd_mainline_init` is blocking until it returns. That is how we ensure no other process can start before this is done.",
      "parentUuid": "76bc6981_fa2393e2",
      "range": {
        "startLine": 998,
        "startChar": 0,
        "endLine": 1007,
        "endChar": 18
      },
      "revId": "f1eaa75168352a3bd3cc6ffb0733d09a4b028f8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bd68ab18_d7dcfeaf",
        "filename": "rootdir/init.rc",
        "patchSetId": 1
      },
      "lineNbr": 1007,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2024-11-12T10:15:34Z",
      "side": 1,
      "message": "What prevents other Mainline modules from being exec\u0027ed before yours? Couldn\u0027t someone add an exec_start above yours in this file? What prevents that? It sounds to me like you\u0027re relying on your change not being invalided by another change, but nothing actually prevents that from happening.",
      "parentUuid": "9b0e3706_48850a3b",
      "range": {
        "startLine": 998,
        "startChar": 0,
        "endLine": 1007,
        "endChar": 18
      },
      "revId": "f1eaa75168352a3bd3cc6ffb0733d09a4b028f8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9241655b_264c54e1",
        "filename": "rootdir/init.rc",
        "patchSetId": 1
      },
      "lineNbr": 1007,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2024-11-12T14:26:47Z",
      "side": 1,
      "message": "A good point. I think the consequence of some process from mainline starts before aconfigd would be that the processes would not get the actual flag values. This can be discovered at run time. But it is not ideal. Prior to aconfigd, derive_sdk wants to be the very first process. I wonder how they ensure that. We do negotiated with sdk extension team to get that spot. \n\nDo you have any recommended ways to ensure that?",
      "parentUuid": "bd68ab18_d7dcfeaf",
      "range": {
        "startLine": 998,
        "startChar": 0,
        "endLine": 1007,
        "endChar": 18
      },
      "revId": "f1eaa75168352a3bd3cc6ffb0733d09a4b028f8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "85b45bd9_37b4754b",
        "filename": "rootdir/init.rc",
        "patchSetId": 1
      },
      "lineNbr": 1007,
      "author": {
        "id": 1882770
      },
      "writtenOn": "2024-11-25T17:26:57Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9241655b_264c54e1",
      "range": {
        "startLine": 998,
        "startChar": 0,
        "endLine": 1007,
        "endChar": 18
      },
      "revId": "f1eaa75168352a3bd3cc6ffb0733d09a4b028f8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}