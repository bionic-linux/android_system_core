{
  "comments": [
    {
      "key": {
        "uuid": "df523a50_13bc7a88",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 9
      },
      "lineNbr": 188,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-03-14T01:08:38Z",
      "side": 1,
      "message": "can you just `return new CdEntryMapZip64;` and have the compiler write the rest?",
      "revId": "d7043aa9a559d3f56b737c394a9039556215a671",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7267589b_3e887c75",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 9
      },
      "lineNbr": 188,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2020-03-16T05:18:32Z",
      "side": 1,
      "message": "It seems to give a compile error as the constructor of unique_ptr is explicit.",
      "parentUuid": "df523a50_13bc7a88",
      "revId": "d7043aa9a559d3f56b737c394a9039556215a671",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "096a4364_bd116371",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 9
      },
      "lineNbr": 188,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-03-16T21:32:46Z",
      "side": 1,
      "message": "ah, i guess that\u0027s what std::make_unique is for...\n\n`return std::make_unique\u003cCdEntryMapZip64\u003e();`",
      "parentUuid": "7267589b_3e887c75",
      "revId": "d7043aa9a559d3f56b737c394a9039556215a671",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b3c9318c_76636f73",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 9
      },
      "lineNbr": 188,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2020-03-16T22:47:40Z",
      "side": 1,
      "message": "Yeah, but I internationally make the constructor of CdEntryMapZip64 private since it\u0027s intended to be called directly. Maybe I can loose the restriction to use make_unique?",
      "parentUuid": "096a4364_bd116371",
      "revId": "d7043aa9a559d3f56b737c394a9039556215a671",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "229e4563_5c792514",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 9
      },
      "lineNbr": 194,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-03-14T01:08:38Z",
      "side": 1,
      "message": "i think this is actually the `if (!success)` case for the insert below, isn\u0027t it? i think like most STL stuff, on allocation failure you\u0027ll just be std::terminated (via throwing an exception in code with exceptions turned off).",
      "revId": "d7043aa9a559d3f56b737c394a9039556215a671",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "397de6ba_aa08e11b",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 9
      },
      "lineNbr": 194,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2020-03-16T05:18:32Z",
      "side": 1,
      "message": "Right. I simply added it in pair with the hashtable implementation. Maybe we can keep this specific case?",
      "parentUuid": "229e4563_5c792514",
      "revId": "d7043aa9a559d3f56b737c394a9039556215a671",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2cdd1e0a_95aa583e",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 9
      },
      "lineNbr": 194,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-03-16T21:32:46Z",
      "side": 1,
      "message": "i don\u0027t understand. CdEntryMapZip32::AddToMap just does one lookup and either inserts or returns an error. why do we want two lookups here? i think this function should just be\n\n```\n{\n  const auto [it, added] \u003d\n      entry_table_.insert({name, name.data() - reinterpret_cast\u003cconst char*\u003e(start)});\n  if (!added) {\n    ALOGW(\"Zip: Found duplicate entry %.*s\", static_cast\u003cint\u003e(name.size()), name.data());\n    return kDuplicateEntry;\n  }\n  return 0;\n}\n```\n\nif you did return kAllocationFailed from the second lookup here, that would be incorrect --- it would actually mean that the map had been modified between the first and second lookups :-)\n\nan actual allocation failure will cause an abort.",
      "parentUuid": "397de6ba_aa08e11b",
      "revId": "d7043aa9a559d3f56b737c394a9039556215a671",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c4d070cb_710b7031",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 9
      },
      "lineNbr": 194,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2020-03-16T22:47:40Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2cdd1e0a_95aa583e",
      "revId": "d7043aa9a559d3f56b737c394a9039556215a671",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a149da4_1d1936fb",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 9
      },
      "lineNbr": 206,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-03-14T01:08:38Z",
      "side": 1,
      "message": "it feels like a bad sign that i\u0027ve already forgotten what these are. should we have a struct with named fields or add some typedefs?",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 206,
        "endChar": 28
      },
      "revId": "d7043aa9a559d3f56b737c394a9039556215a671",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c01d0602_bab69159",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 9
      },
      "lineNbr": 206,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2020-03-16T05:18:32Z",
      "side": 1,
      "message": "I changed the int32_t in CdEntryMap to the ZipErrorCode. Though I haven\u0027t cleaned up the return value of existing functions.",
      "parentUuid": "4a149da4_1d1936fb",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 206,
        "endChar": 28
      },
      "revId": "d7043aa9a559d3f56b737c394a9039556215a671",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "346772d7_27ba628b",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 9
      },
      "lineNbr": 206,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-03-16T21:32:46Z",
      "side": 1,
      "message": "yeah, it\u0027ll be hard to find them all. we can fix the rest as we spot them.",
      "parentUuid": "c01d0602_bab69159",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 206,
        "endChar": 28
      },
      "revId": "d7043aa9a559d3f56b737c394a9039556215a671",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7ae07e41_dff6bcd6",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 9
      },
      "lineNbr": 206,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2020-03-16T22:47:40Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "346772d7_27ba628b",
      "range": {
        "startLine": 206,
        "startChar": 0,
        "endLine": 206,
        "endChar": 28
      },
      "revId": "d7043aa9a559d3f56b737c394a9039556215a671",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d3b33fa1_8158532f",
        "filename": "libziparchive/zip_archive_private.h",
        "patchSetId": 9
      },
      "lineNbr": 254,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2020-03-14T01:08:38Z",
      "side": 1,
      "message": "this seems like a weird API...\n\nshould we just change the tests to test CdEntryMapInterface (and its two implementations) directly, rather than _through_ ZipArchive? doing testing through ZipArchive was the only option when the central directory wasn\u0027t represented in its own right, but it\u0027s probably just a historical accident now you\u0027ve cleaned up the implementation and broken it into pieces?",
      "range": {
        "startLine": 254,
        "startChar": 15,
        "endLine": 254,
        "endChar": 33
      },
      "revId": "d7043aa9a559d3f56b737c394a9039556215a671",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b4bd1fba_251481a0",
        "filename": "libziparchive/zip_archive_private.h",
        "patchSetId": 9
      },
      "lineNbr": 254,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2020-03-16T05:18:32Z",
      "side": 1,
      "message": "Removed the API. I added unit tests for CdEntryMap instead.",
      "parentUuid": "d3b33fa1_8158532f",
      "range": {
        "startLine": 254,
        "startChar": 15,
        "endLine": 254,
        "endChar": 33
      },
      "revId": "d7043aa9a559d3f56b737c394a9039556215a671",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}