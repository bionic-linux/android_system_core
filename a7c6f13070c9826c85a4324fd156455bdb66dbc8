{
  "comments": [
    {
      "key": {
        "uuid": "ff32061b_aab33322",
        "filename": "adb/commandline.cpp",
        "patchSetId": 1
      },
      "lineNbr": 460,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2015-10-12T23:00:36Z",
      "side": 1,
      "message": "This may be a dumb question, but why isn\u0027t this just:\n\nif (args-\u003eprotocol) {\n  // This method would send some protocol msg to cause adbd\n  // to do close(fd) so that the subprocess would get read() \u003d\u003d 0\n  args-\u003eprotocol-\u003eClose(...);\n} else {\n  // close the socket, so the other side will see recv() \u003d\u003d 0\n  adb_close(args-\u003ewrite_fd);\n}",
      "range": {
        "startLine": 457,
        "startChar": 12,
        "endLine": 460,
        "endChar": 13
      },
      "revId": "a7c6f13070c9826c85a4324fd156455bdb66dbc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1f30ba11_4b2eedc8",
        "filename": "adb/commandline.cpp",
        "patchSetId": 1
      },
      "lineNbr": 570,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2015-10-12T23:00:36Z",
      "side": 1,
      "message": "Couldn\u0027t stdin_read_thread() still be using `fd` (aka args-\u003ewrite_fd) concurrently? Is it safe to close it here without synchronization?",
      "range": {
        "startLine": 570,
        "startChar": 8,
        "endLine": 570,
        "endChar": 21
      },
      "revId": "a7c6f13070c9826c85a4324fd156455bdb66dbc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff32061b_27abdec7",
        "filename": "adb/shell_service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 511,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2015-10-12T23:00:36Z",
      "side": 1,
      "message": "Just a reminder to test this error case. I found that (on Windows at least), shutdown() returned an error when the socket was no longer connected, which somewhat surprised me.",
      "range": {
        "startLine": 511,
        "startChar": 24,
        "endLine": 511,
        "endChar": 70
      },
      "revId": "a7c6f13070c9826c85a4324fd156455bdb66dbc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ff32061b_c7b9521e",
        "filename": "adb/sysdeps.h",
        "patchSetId": 1
      },
      "lineNbr": 491,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2015-10-12T23:00:36Z",
      "side": 1,
      "message": "Thanks, I\u0027ve been thinking of adding this too. This is what should have been there originally in the first place.",
      "range": {
        "startLine": 491,
        "startChar": 23,
        "endLine": 491,
        "endChar": 58
      },
      "revId": "a7c6f13070c9826c85a4324fd156455bdb66dbc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bfb7aeb4_6794b213",
        "filename": "adb/sysdeps_win32.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3275,
      "author": {
        "id": 1078119
      },
      "writtenOn": "2015-10-12T17:14:19Z",
      "side": 1,
      "message": "(Spencer maybe you\u0027ll have some insight here? My Windows programming is weak)\n\nDoes this seem like a reasonable value? I couldn\u0027t find much information on why this happens but it seems to be the same issue as this: http://sourceforge.net/p/sevenzip/bugs/645/.",
      "range": {
        "startLine": 3273,
        "startChar": 0,
        "endLine": 3275,
        "endChar": 13
      },
      "revId": "a7c6f13070c9826c85a4324fd156455bdb66dbc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df39c202_c9e4c904",
        "filename": "adb/sysdeps_win32.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3275,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2015-10-12T23:00:36Z",
      "side": 1,
      "message": "Let me look into this further and get back to you.",
      "parentUuid": "bfb7aeb4_6794b213",
      "range": {
        "startLine": 3273,
        "startChar": 0,
        "endLine": 3275,
        "endChar": 13
      },
      "revId": "a7c6f13070c9826c85a4324fd156455bdb66dbc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "df39c202_34266886",
        "filename": "adb/sysdeps_win32.cpp",
        "patchSetId": 1
      },
      "lineNbr": 3275,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2015-10-13T02:10:22Z",
      "side": 1,
      "message": "Ok, here\u0027s what I\u0027ve learned: On Windows 7, reading from a console uses the LPC subsystem of Windows which happens to use a 64k \"heap\" which is chopped up for IO operations. In practice, 31366 bytes seems to be the max allowed size. 16384 would probably be fine to use, but I don\u0027t see any point: a conservative 4096 is fine since a larger value doesn\u0027t buy us anything since this is just console IO.\n\nWindows 10 doesn\u0027t seem to have this issue since they rewrote the console stuff. I didn\u0027t try Vista or Win8 and I think for simplification purposes it is fine to use the same size on all Windows versions.\n\nI do have one suggestion to make: instead of if (fd \u003d\u003d STDIN..., how about something like:\n\n// Check if this is a console. This may also catch devices like NUL, but\n// that is ok as we just want to avoid pipes and files which don\u0027t need\n// size limiting. This isatty() test is very simple and quick\n// and doesn\u0027t call the OS.\nif (isatty(fd)) {\n  // On older versions of Windows (definitely 7, definitely not 10),\n  // ReadConsole() with a size \u003e\u003d 31367 fails, so limit the read size.\n  if (len \u003e 4096) {\n    len \u003d 4096;\n  }\n}\n\nThe idea is to use the original size for pipes \u0026 files and only do this weirdness for consoles (and corner cases that isatty() gets wrong, but that aren\u0027t important).\n\nPlease feel free to edit my suggestion as you like (i.e. you don\u0027t need to use my exact text, you can combine, edit, etc.). Thanks.\n\nP.S. I don\u0027t envy your test matrix. :)",
      "parentUuid": "df39c202_c9e4c904",
      "range": {
        "startLine": 3273,
        "startChar": 0,
        "endLine": 3275,
        "endChar": 13
      },
      "revId": "a7c6f13070c9826c85a4324fd156455bdb66dbc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}