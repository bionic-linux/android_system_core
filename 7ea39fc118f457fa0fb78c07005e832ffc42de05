{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "0063f684_6a804af0",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1863406
      },
      "writtenOn": "2023-04-17T06:40:42Z",
      "side": 1,
      "message": "Hello, Maintainers\n\nCould you please review this patch?\n\nI suggested it to `libavb` with a different patch.\nBut it looks better to use `dup2`\n\nIf you want to see the history, please refer this link [aosp/2493379](https://android-review.googlesource.com/c/platform/external/avb/+/2493379)",
      "revId": "7ea39fc118f457fa0fb78c07005e832ffc42de05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f803ed7b_2b31c764",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2023-04-17T08:41:11Z",
      "side": 1,
      "message": "Thanks for the context. \n\nBy the way, I think there\u0027s a reason for redirecting stdio/stdout/stderr to /dev/null for most of the time while the first stage init is running. See https://cs.android.com/android/platform/superproject/+/master:system/core/init/util.cpp;drc\u003dec18f508f9934fc9548fff6b0532452200defdbe;l\u003d700\n\nSo I believe that init (and its dependencies like libavb as well) should distinguish logging and sending something to stdout.\n\nI wish libavb provides a mechanism to configure (either statically as a build-time flag or dynamically by calling an api, which I personally prefer) to select the log target. It could default to stderr, but could be set to /dev/kmsg, or something else.",
      "parentUuid": "0063f684_6a804af0",
      "revId": "7ea39fc118f457fa0fb78c07005e832ffc42de05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7d86118_8ca98d57",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1863406
      },
      "writtenOn": "2023-04-17T09:44:40Z",
      "side": 1,
      "message": "Thanks for review about it.\n\nI understand that you think it\u0027s good to handle it in libavb. (use build-time flag or something else)\n\nWhen i read a link you send, I\u0027m not sure exactly which part you\u0027re considering. I\u0027d appreciate it if you could explain a little more.",
      "parentUuid": "f803ed7b_2b31c764",
      "revId": "7ea39fc118f457fa0fb78c07005e832ffc42de05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c910f9e0_6ae0e99e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2023-04-17T12:41:57Z",
      "side": 1,
      "message": "Sorry. Nevermind. I thought this change may break the first stage console, but it\u0027s not. \n\nBy the way, my argument remains the same. I feel uncomfortable with init being dependent on the implementation detail of libavb where logs are always sent to stderr.",
      "parentUuid": "b7d86118_8ca98d57",
      "revId": "7ea39fc118f457fa0fb78c07005e832ffc42de05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "78af3297_26f4c36d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1882526
      },
      "writtenOn": "2023-04-17T14:13:38Z",
      "side": 1,
      "message": "\u003e I wish libavb provides a mechanism to configure (either statically as a build-time flag or dynamically by calling an api, which I personally prefer) to select the log target.\n\n+1, defaulting to `stderr` and introducing `avb_set_log_file()` behind a build flag for the POSIX reference implementation would be cleaner. IMO, the static option would be less invasive (no API change) but also less robust as, unlike `stderr`, the file might need to be `open`-ed first.\n\nAlternatively, `init_first_stage` could implement this through its own `avb_sysdeps.h` (including `avb_print{,f,v}()`) when statically linking against `libavb`.",
      "parentUuid": "c910f9e0_6ae0e99e",
      "revId": "7ea39fc118f457fa0fb78c07005e832ffc42de05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "3e973658_20b27348",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1863406
      },
      "writtenOn": "2023-04-18T00:32:49Z",
      "side": 1,
      "message": "@jiyong@google.com\nThank you for more explain. I agreed with your opinion that looks better without dependence `libavb` and `init`\n\n\n@ptosi@google.com\n\u003e defaulting to stderr and introducing avb_set_log_file() behind a build flag for the POSIX reference implementation would be cleaner.\n\nYes, I think so. I thought build-time flag and make it a function in the first patch I made. [patch link](https://android-review.googlesource.com/c/platform/external/avb/+/2493379/1/libavb/avb_sysdeps_posix.c)\n\nCurrently, there is lots of patch you submitted, so need a patch that fits it.\nHow about this? or Do you have a good idea?",
      "parentUuid": "78af3297_26f4c36d",
      "revId": "7ea39fc118f457fa0fb78c07005e832ffc42de05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d26900e7_98788398",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2023-04-18T01:31:13Z",
      "side": 1,
      "message": "The patch you shared doesn\u0027t seem to be using any conditions. Below is what I expected.\n\nOption 1 (static config):\n```\nFILE* get_log_file() {\n#ifdef USE_KMSG_AS_LOG_TARGET\n    static FILE* fp \u003d NULL;\n    if (fp \u003d\u003d NULL) {\n        fp \u003d fopen(\"/dev/kmsg\", \"a\");\n        if (fp \u003d\u003d NULL) {\n           // do some error reporting\n           fp \u003d stderr; //fall back to stderr\n        }        \n    }\n    return fp;\n#else\n    return stderr; // the default\n#endif\n}\n\nvoid avb_printv(const char* message, ...) {\n    ...\n    fprintf(get_log_file(), \"%s\", ...);\n    ...\n}\n```\n\nOption 2 (dynamic config)\n```\nstatic FILE* log_file \u003d stderr; // the default\n\nvoid avb_set_log_file(FILE* log_file) {\n    log_file \u003d log_file; // do we need to be thread-safe??\n}\n\nvoid avb_printv(const char* message, ...) {\n    ...\n    fprintf(log_file, \"%s\", ...);\n    ...\n}\n```",
      "parentUuid": "3e973658_20b27348",
      "revId": "7ea39fc118f457fa0fb78c07005e832ffc42de05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a5b511a0_9cc0c939",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1863406
      },
      "writtenOn": "2023-04-18T02:50:48Z",
      "side": 1,
      "message": "Oh, I will plan to add it in the patch I created before(I sent).\nIt\u0027s correct that there are no conditions in what I sent.\n\nThank you for suggest about patch. I was thinking like Option #1.\nI\u0027ll try to change it at the libavb\u0027s latest version.",
      "parentUuid": "d26900e7_98788398",
      "revId": "7ea39fc118f457fa0fb78c07005e832ffc42de05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}