{
  "comments": [
    {
      "key": {
        "uuid": "ee8dd509_44fdca80",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2019-03-01T15:48:16Z",
      "side": 1,
      "message": "Is it a lib in system or in the CTS app?",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 17
      },
      "revId": "9f254c4e8b3cbaf5ed9c323235fac9987511fbe9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d8fd263b_96b66502",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-03-01T16:33:16Z",
      "side": 1,
      "message": "It\u0027s a frameworks script that launches a java binary through app_process[1]. Given its location I\u0027d assume it\u0027s not just for the CTS test, but I don\u0027t know. Should it bypass the normal class loader somehow? Note that the dependency is a NEEDED entry on libnativehelper.so, so it fails already when the classloader does dlopen(\"libhidcommand_jni.so\").\n\n+svv, you have done some submits in that directory, can you enlighten us what this binary does outside the CTS?\n\n[1] http://cs/aosp-master/frameworks/base/cmds/hid/hid",
      "parentUuid": "ee8dd509_44fdca80",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 17
      },
      "revId": "9f254c4e8b3cbaf5ed9c323235fac9987511fbe9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0a4ccbc_47b3e19c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1149384
      },
      "writtenOn": "2019-03-01T16:56:17Z",
      "side": 1,
      "message": "The command does the following:\n1. Register a virtual HID device via /dev/uhid\n2. Inject some events into the device\n3. Remove the device\n\nThe device created in such a way is indistinguishable from a physical device actually plugged in.\n\nThis command is used for testing. For CTS test, it is about emulating a specific device (for example, Sony DualShock 4) and ensuring that appropriate events are received in the app.\n\nBut the command can also be used via adb shell. This is useful for local testing. For example, if you want to quickly simulate some mouse action on the phone, you can just create the proper commands file, place it on the device, and execute them with this hid command.\n\nLet me know if you\u0027d like more details.",
      "parentUuid": "d8fd263b_96b66502",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 17
      },
      "revId": "9f254c4e8b3cbaf5ed9c323235fac9987511fbe9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0d9b2ca_3fe42039",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 9,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-03-01T18:38:41Z",
      "side": 1,
      "message": "Thank you. Then I think this is better solved by bypassing the classloader access check specifically for the hid command. Sending out http://r.android.com/915962.",
      "parentUuid": "e0a4ccbc_47b3e19c",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 9,
        "endChar": 17
      },
      "revId": "9f254c4e8b3cbaf5ed9c323235fac9987511fbe9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e918aa5_11d4702e",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-03-01T14:29:14Z",
      "side": 1,
      "message": "I\u0027m basically syncing this list with [1]. The exceptions are:\n\n- libart.so and libartd.so is in ld.config.txt: Not sure these are necessary any more. I\u0027m trying to remove them in http://r.android.com/916834.\n\n- libicuuc.so is here but not in ld.config.txt. Victor, is that intentional, and if so why?\n\n[1] http://cs/aosp-master/system/core/rootdir/etc/ld.config.txt?l\u003d130-135\u0026rcl\u003db530537d463eb1497b144b35722788c0b90dc62b",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 107,
        "endChar": 73
      },
      "revId": "9f254c4e8b3cbaf5ed9c323235fac9987511fbe9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "45d56632_670552d4",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 1047684
      },
      "writtenOn": "2019-03-01T15:13:01Z",
      "side": 1,
      "message": "Yes, I think it\u0027s intentional. b/120786417. http://go/stable-icu4c-interface-mainline\n\nFor this release, frameworks can link libandroidicu.so only, not libicuuc.so, and so we have a controlled C API surface in libandroidicu.so\nApp can link libicuuc.so and libicui18n, but not libandroidicu.so. So app can keep using full set libicuuc.so and libicui18n.\n\nI think this list contains only libs in both system/core/rootdir/etc/public.libraries.android.txt and Runtime APEX. Do we want to expose these libs to apps?",
      "parentUuid": "2e918aa5_11d4702e",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 107,
        "endChar": 73
      },
      "revId": "9f254c4e8b3cbaf5ed9c323235fac9987511fbe9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ab2ca7a1_993d14c9",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-03-01T16:33:16Z",
      "side": 1,
      "message": "\u003e App can link libicuuc.so and libicui18n, but not libandroidicu.so.\n\nWould it be harmful if apps were to link to libandroidicu?\n\n\u003e So app can keep using full set libicuuc.so and libicui18n.\n\nIsn\u0027t that a compat measure that we want to move away from?\n\n\u003e I think this list contains only libs in both system/core/rootdir/etc/public.libraries.android.txt and Runtime APEX. Do we want to expose these libs to apps?\n\nI see. So if we were to unify this list with the namespace links list we\u0027d need to intersect it with the public.libraries.*.txt lists. In the current state, wouldn\u0027t it be good to have an assertion that this list is a subset of that one?\n\nAnyway, I take it that extending this list might not be the way to go. Let\u0027s discuss in the other comment thread if the client should change instead.",
      "parentUuid": "45d56632_670552d4",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 107,
        "endChar": 73
      },
      "revId": "9f254c4e8b3cbaf5ed9c323235fac9987511fbe9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0bcea356_2640a34c",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 1
      },
      "lineNbr": 107,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-03-01T18:38:41Z",
      "side": 1,
      "message": "Given Victor\u0027s feedback I\u0027m abandoning this CL. I still think there\u0027s a point to be made about copying this linker namespace config from ld.config.txt rather than hardcoding it here, and/or implementing the assertion discussed above, but I won\u0027t pursue that now.",
      "parentUuid": "ab2ca7a1_993d14c9",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 107,
        "endChar": 73
      },
      "revId": "9f254c4e8b3cbaf5ed9c323235fac9987511fbe9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8f439f65_ee0c4aac",
        "filename": "libnativeloader/native_loader.cpp",
        "patchSetId": 1
      },
      "lineNbr": 108,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-03-01T14:29:14Z",
      "side": 1,
      "message": "On a wider note, this linker config in the compiled code isn\u0027t ideal. Not for this CL, but would it work to have the base config for classloader-namespace in ld.config.txt and then copy it here?",
      "range": {
        "startLine": 108,
        "startChar": 0,
        "endLine": 108,
        "endChar": 2
      },
      "revId": "9f254c4e8b3cbaf5ed9c323235fac9987511fbe9",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}