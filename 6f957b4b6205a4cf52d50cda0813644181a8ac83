{
  "comments": [
    {
      "key": {
        "uuid": "5ac62eef_2364d0f3",
        "filename": "init/builtins.cpp",
        "patchSetId": 2
      },
      "lineNbr": 644,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-05-08T18:27:06Z",
      "side": 1,
      "message": "I still really hate this pattern.  It frankly feels wrong to me.  The point of this loop is to find a single service and act on it.  Your default case is \u0027not the service\u0027 and to continue and the exceptional case is \u0027the service\u0027 and to act on it.  You should have your conditional for the exceptional case and let the fall through be the default cause.",
      "range": {
        "startLine": 642,
        "startChar": 0,
        "endLine": 644,
        "endChar": 9
      },
      "revId": "6f957b4b6205a4cf52d50cda0813644181a8ac83",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1154bf0a_1d666764",
        "filename": "init/builtins.cpp",
        "patchSetId": 2
      },
      "lineNbr": 644,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-05-08T19:09:27Z",
      "side": 1,
      "message": "This is the same case as is used in HandleControlMessage, but I do agree it looks a bit silly. I\u0027ll refactor this and there to use a new method in ServiceList which returns a service based on interface name",
      "parentUuid": "5ac62eef_2364d0f3",
      "range": {
        "startLine": 642,
        "startChar": 0,
        "endLine": 644,
        "endChar": 9
      },
      "revId": "6f957b4b6205a4cf52d50cda0813644181a8ac83",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5381f309_3f045d84",
        "filename": "init/builtins.cpp",
        "patchSetId": 2
      },
      "lineNbr": 644,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-05-08T20:39:50Z",
      "side": 1,
      "message": "I know; I was against it there and my opinion is unchanged.  You don\u0027t even need a new function in ServiceList; ServiceList exposes begin() and end(), so you can use std::find_if() directly with it.  Probably the best option.",
      "parentUuid": "1154bf0a_1d666764",
      "range": {
        "startLine": 642,
        "startChar": 0,
        "endLine": 644,
        "endChar": 9
      },
      "revId": "6f957b4b6205a4cf52d50cda0813644181a8ac83",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38f5a110_3e33d347",
        "filename": "init/builtins.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1093,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-05-08T20:39:50Z",
      "side": 1,
      "message": "restart comes before start alphabetically",
      "range": {
        "startLine": 1091,
        "startChar": 8,
        "endLine": 1093,
        "endChar": 83
      },
      "revId": "6f957b4b6205a4cf52d50cda0813644181a8ac83",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d5b2e03c_1e3c914b",
        "filename": "init/builtins.cpp",
        "patchSetId": 2
      },
      "lineNbr": 1093,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2018-05-08T20:41:46Z",
      "side": 1,
      "message": "good catch, realized I also need to move the functions above into the correct order as well",
      "parentUuid": "38f5a110_3e33d347",
      "range": {
        "startLine": 1091,
        "startChar": 8,
        "endLine": 1093,
        "endChar": 83
      },
      "revId": "6f957b4b6205a4cf52d50cda0813644181a8ac83",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}