{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "60d6cc56_7c177818",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2022-03-09T19:03:29Z",
      "side": 1,
      "message": "My only concern is that with this we have diverging symbolization paths for tombstones vs logcat.",
      "revId": "7d5037eb3d2fc98f2cbbd00ba730527eda2c5fb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "bcbfa44e_dc49fe12",
        "filename": "debuggerd/libdebuggerd/tombstone_symbolize.cpp",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1005967
      },
      "writtenOn": "2022-03-09T19:03:29Z",
      "side": 1,
      "message": "Do you see this used outside of a lunch environment? llvm-symbolized in ubuntu is usually named \"llvm-symbolizer-\u003cversion\u003e\", and in the NDK context the tool would need to do something special to find the binary, too.",
      "revId": "7d5037eb3d2fc98f2cbbd00ba730527eda2c5fb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e450199c_281a9065",
        "filename": "debuggerd/libdebuggerd/tombstone_symbolize.cpp",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2022-03-09T19:29:58Z",
      "side": 1,
      "message": "Yes, the goal is that app developers would be able to use this with symbol servers. I imagine this will require some enhancements to find llvm-symbolizer in the NDK. For now I\u0027m manually adding it to $PATH. It wouldn\u0027t necessarily work to use a distro\u0027s copy of llvm-symbolizer because it may not support symbol servers (either because it isn\u0027t new enough or wasn\u0027t linked with libcurl).\n\nOf course the other route would be to link against the symbolizer library in the LLVM prebuilts. It doesn\u0027t look like we have any other platform binaries that link against those prebuilts so this may require some work on the build files. +srhines who may have opinions on this.",
      "parentUuid": "bcbfa44e_dc49fe12",
      "revId": "7d5037eb3d2fc98f2cbbd00ba730527eda2c5fb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1f180916_d4e71b22",
        "filename": "debuggerd/libdebuggerd/tombstone_symbolize.cpp",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2022-03-09T20:21:42Z",
      "side": 1,
      "message": "We currently don\u0027t have anything in the platform linking against LLVM libraries like that. In fact, we don\u0027t provide device versions of any non-runtime libraries at all. I think I\u0027d prefer that we not start doing so for just this feature, especially since it is only needed for debugging, and thus less helpful for regular users (while increasing device image sizes and complexity).",
      "parentUuid": "e450199c_281a9065",
      "revId": "7d5037eb3d2fc98f2cbbd00ba730527eda2c5fb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b60de8a_6402cd62",
        "filename": "debuggerd/libdebuggerd/tombstone_symbolize.cpp",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1067098
      },
      "writtenOn": "2022-03-09T20:53:20Z",
      "side": 1,
      "message": "Stephen, the goal would be to link against LLVM libraries only on the host, not on the device. I see that we\u0027re already building a prebuilt library for the host (e.g. prebuilts/clang/host/linux-x86/clang-r445002/lib64/libLLVM-14git.so), so I was imagining that we might be able to link against that.",
      "parentUuid": "1f180916_d4e71b22",
      "revId": "7d5037eb3d2fc98f2cbbd00ba730527eda2c5fb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca94b986_c309ee0f",
        "filename": "debuggerd/libdebuggerd/tombstone_symbolize.cpp",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2022-03-10T01:54:41Z",
      "side": 1,
      "message": "Oh I missed that aspect, because I assumed that debuggerd was running on the device too. In that case, it should be possible to build a host-based tool similar to what already exists in https://android-build.googleplex.com/builds/branches/aosp-clang-tools/grid?. https://cs.android.com/search?q\u003dllvm-build-host-tools-defaults\u0026ss\u003dandroid%2Fplatform%2Fsuperproject is the relevant search for how those components are linking against a specific prebuilt LLVM. We don\u0027t allow direct linking against libLLVM.so* in the platform itself today.",
      "parentUuid": "4b60de8a_6402cd62",
      "revId": "7d5037eb3d2fc98f2cbbd00ba730527eda2c5fb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f23438c2_aa0aa692",
        "filename": "debuggerd/libdebuggerd/tombstone_symbolize.cpp",
        "patchSetId": 3
      },
      "lineNbr": 73,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-03-10T02:01:36Z",
      "side": 1,
      "message": "\u003e Do you see this used outside of a lunch environment? llvm-symbolized in ubuntu is usually named \"llvm-symbolizer-\u003cversion\u003e\", and in the NDK context the tool would need to do something special to find the binary, too.\n\n+danalbert for (a) the NDK view but also (b) whether there\u0027s someone we should talk to in Studio (because i think they have some kind of symbolization stuff in Studio, though i only [think i] know that because i\u0027ve heard users complain about it?).",
      "parentUuid": "ca94b986_c309ee0f",
      "revId": "7d5037eb3d2fc98f2cbbd00ba730527eda2c5fb4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}