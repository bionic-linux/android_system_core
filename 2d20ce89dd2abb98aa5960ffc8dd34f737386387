{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "a114e80e_8e58dc57",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-12-13T23:48:49Z",
      "side": 1,
      "message": "i _think_ we have presubmit tests to check this, but we\u0027ll need to make sure one way or another that this doesn\u0027t break stuff like media processes --- splice() is a system call that\u0027s probably _not_ allowed by their seccomp filters?",
      "revId": "2d20ce89dd2abb98aa5960ffc8dd34f737386387",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "867e12ed_24f6201f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-12-13T23:50:22Z",
      "side": 1,
      "message": "(if it doesn\u0027t work, you should just need to edit system/core/debuggerd/seccomp_policy/crash_dump.policy.def and rerun the generate.sh in that directory. assuming no-one\u0027s been guilty of any copy \u0026 paste!)",
      "parentUuid": "a114e80e_8e58dc57",
      "revId": "2d20ce89dd2abb98aa5960ffc8dd34f737386387",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cfc8e4d6_42904665",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-12-14T17:10:25Z",
      "side": 1,
      "message": "(cferris: see my earlier comment about splice vs the media seccomp policies. seems like presubmit passed though?)",
      "revId": "2d20ce89dd2abb98aa5960ffc8dd34f737386387",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "26ffbb3c_cc98ba84",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-12-14T17:36:25Z",
      "side": 1,
      "message": "Good point. I think the splice change is pretty minor, so if it is risky, I\u0027m happy to just drop it. I think the other change is safe w.r.t. seccomp/selinux. Let me know what you think.",
      "parentUuid": "867e12ed_24f6201f",
      "revId": "2d20ce89dd2abb98aa5960ffc8dd34f737386387",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "c1920cd9_da10fc2d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-12-14T18:20:11Z",
      "side": 1,
      "message": "no, don\u0027t get me wrong --- i like the splice change; it seems like a clever way to . i",
      "parentUuid": "26ffbb3c_cc98ba84",
      "revId": "2d20ce89dd2abb98aa5960ffc8dd34f737386387",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "da2dd9ea_68eda388",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-12-14T18:20:11Z",
      "side": 1,
      "message": "no, don\u0027t get me wrong --- i like the splice change; it seems like a clever way to reduce overhead and (more importantly to me) remove some code.\n\ni just don\u0027t want to break things in the last working week of the year and leave others to pick up the pieces :-) (especially because there are known danger areas here, like the media code.)\n\neven if cferris does come back and confirm that we test that in presubmit, i\u0027d _still_ say \"let\u0027s submit this in january\" :-)",
      "parentUuid": "26ffbb3c_cc98ba84",
      "revId": "2d20ce89dd2abb98aa5960ffc8dd34f737386387",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef79b99f_b17c8393",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2022-12-14T20:22:22Z",
      "side": 1,
      "message": "We do have tests that should catch a new syscall if it\u0027s not allowed. However, it can be a bit tricky. I am testing this just in case but I think this modified code path might not be reached if we detect that the process is special.",
      "parentUuid": "26ffbb3c_cc98ba84",
      "revId": "2d20ce89dd2abb98aa5960ffc8dd34f737386387",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ff5fa06_dbdbb584",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2022-12-14T23:32:33Z",
      "side": 1,
      "message": "This is odd, but this change seems to cause the test debuggerd_client.race to run forever. I ran it on my wembley and on a cheetah.\n\nIs there some way to verify that the debuggerd unit tests are actually running? Although, maybe it passes on cuttlefish.",
      "parentUuid": "ef79b99f_b17c8393",
      "revId": "2d20ce89dd2abb98aa5960ffc8dd34f737386387",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fd208984_c4eb3ae1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-12-15T02:19:08Z",
      "side": 1,
      "message": "i don\u0027t have a 64-bit cuttlefish right now, but, yeah, it passes on 32-bit x86 cuttlefish:\n```\n[----------] 2 tests from debuggerd_client\n[ RUN      ] debuggerd_client.race\n[       OK ] debuggerd_client.race (1555 ms)\n[ RUN      ] debuggerd_client.no_timeout\n[       OK ] debuggerd_client.no_timeout (28 ms)\n[----------] 2 tests from debuggerd_client (1583 ms total)\n```",
      "parentUuid": "7ff5fa06_dbdbb584",
      "revId": "2d20ce89dd2abb98aa5960ffc8dd34f737386387",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "307cdac4_7c6db9a7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-12-15T19:24:37Z",
      "side": 1,
      "message": "I was able to reproduce on my oriole yesterday, but now I can\u0027t today...\n\nI added SPLICE_F_NONBLOCK to the splice flags and it returned EAGAIN instead of blocking forever, so it seems like the test\u0027s output pipe got full. That ought to be an issue for the old implementation too though, so I\u0027m not sure what\u0027s up. (to implement the timeout properly, we should really be polling the output fd for writability)\n\nI\u0027m going to try tweaking the setup half of the test to be less racy. Maybe it usually doesn\u0027t manage to start all the threads and if it does start all of them, then the output is too big for the pipe. If that is true, then I should be able to get the old implementation to fail as well.",
      "parentUuid": "fd208984_c4eb3ae1",
      "revId": "2d20ce89dd2abb98aa5960ffc8dd34f737386387",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "1a810d4a_ba6b2e47",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-12-16T00:33:33Z",
      "side": 1,
      "message": "Well, I can\u0027t get it to repro anymore, so it is difficult to solve the mystery. I wonder if there is some race that can occur which makes the dump text significantly larger (and thus the pipe gets full, so the test gets stuck).\n\nIn https://r.android.com/2359686, I\u0027m making the test setup more reliable. I ran the test with `--iterations 100` on my oriole and didn\u0027t see any failures.\n\nLet me know if it still fails for you.",
      "parentUuid": "307cdac4_7c6db9a7",
      "revId": "2d20ce89dd2abb98aa5960ffc8dd34f737386387",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7ce3964b_6c2b9bae",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-12-16T00:37:07Z",
      "side": 1,
      "message": "I spoke too soon :) After removing a debug log statement, I can repro again",
      "parentUuid": "1a810d4a_ba6b2e47",
      "revId": "2d20ce89dd2abb98aa5960ffc8dd34f737386387",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "946ccefa_b9fd7e8b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1944400
      },
      "writtenOn": "2022-12-16T01:05:36Z",
      "side": 1,
      "message": "I think I know what\u0027s going on. The failure goes away if the pipe size is increased (e.g. to 32 MB).\n\nPipes are internally a list of pages. If you splice from a pipe to another pipe, then linux doesn\u0027t copy the bytes, it just moves a page from one pipe to the other. debuggerd is making many small writes to the output FD. After a small write to the pipe, we\u0027ve got a barely populated page in the first pipe, then before much else gets written, the splice kicks in and moves the page over. Nothing compacts the pages in a pipe, so the second pipe ends up full of nearly empty pages. A pipe\u0027s fullness is determined by the number of pages, not the bytes inside the page, so we fill up the second pipe much more easily.\n\nIt is probably reasonable to conclude that this change is too dangerous then. What do you all think?\n\nWhether or not we drop the slice change, it is probably worth tweaking some of the surrounding code that causes this to happen.\n\n  * Buffering the writes from debuggerd would probably be a performance win. \n  \n  * Instead of a big pipe that requires us to tweak the size as conditions change, the test could use an anonymous file (which can just grow as needed) or spin up a thread to read from the pipe concurrently to the dump (which is what any real scenario should be doing)",
      "parentUuid": "7ce3964b_6c2b9bae",
      "revId": "2d20ce89dd2abb98aa5960ffc8dd34f737386387",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "350cf562_99bbeecc",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-12-16T16:19:04Z",
      "side": 1,
      "message": "\u003e It is probably reasonable to conclude that this change is too dangerous then. What do you all think?\n\nyeah, your argument is convincing to me. might be worth a code comment explaining why splice() won\u0027t work though, since this was not obvious :-)",
      "parentUuid": "946ccefa_b9fd7e8b",
      "revId": "2d20ce89dd2abb98aa5960ffc8dd34f737386387",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3f5c7ee6_4e1becb8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2023-05-19T20:16:24Z",
      "side": 1,
      "message": "splice is gone, so no this isn\u0027t a problem any more.",
      "parentUuid": "cfc8e4d6_42904665",
      "revId": "2d20ce89dd2abb98aa5960ffc8dd34f737386387",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "a2f7a150_0c4a9db1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2023-05-19T20:16:24Z",
      "side": 1,
      "message": "Removed the splic and added a long comment about why not to use it.",
      "parentUuid": "350cf562_99bbeecc",
      "revId": "2d20ce89dd2abb98aa5960ffc8dd34f737386387",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}