{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "3b1b1727_d259bba1",
        "filename": "libstats/socket_lazy/libstatssocket_lazy.cpp",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2024-02-01T23:01:04Z",
      "side": 1,
      "message": "Oh, using libstatssocket_lazy when libstatssocket is not available causes crash!\n\nHow can we check availability before calling lazy APIs? Can we add an extra helper to check?",
      "range": {
        "startLine": 92,
        "startChar": 4,
        "endLine": 92,
        "endChar": 23
      },
      "revId": "374c43e9b7cc2c2a2e26a3ba088679f03f680437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b35e852_072fc18a",
        "filename": "libstats/socket_lazy/libstatssocket_lazy.cpp",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2024-02-01T23:01:36Z",
      "side": 1,
      "message": "The question here is for the owners ;-)",
      "parentUuid": "3b1b1727_d259bba1",
      "range": {
        "startLine": 92,
        "startChar": 4,
        "endLine": 92,
        "endChar": 23
      },
      "revId": "374c43e9b7cc2c2a2e26a3ba088679f03f680437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0c4322c1_fdf168ed",
        "filename": "libstats/socket_lazy/libstatssocket_lazy.cpp",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1286922
      },
      "writtenOn": "2024-02-02T07:50:13Z",
      "side": 1,
      "message": "This library exists to get around the mainline bootstrap namespace problem where libraries (libstatssocket) that are shipped from apexes cannot be linked by bootstrap processes. As long as the call comes from a process started from the regular namespace, it should work. It will fail if it comes from a bootstrap process. I\u0027ve communicated this to Kenn as well.\n\nIf you would like to add a helper to check availability, feel free to send a cl and I can review.",
      "parentUuid": "9b35e852_072fc18a",
      "range": {
        "startLine": 92,
        "startChar": 4,
        "endLine": 92,
        "endChar": 23
      },
      "revId": "374c43e9b7cc2c2a2e26a3ba088679f03f680437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6f2efa40_25663d79",
        "filename": "libstats/socket_lazy/libstatssocket_lazy.cpp",
        "patchSetId": 1
      },
      "lineNbr": 92,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2024-02-02T13:52:52Z",
      "side": 1,
      "message": "\u003e If you would like to add a helper to check availability, feel free to send a cl and I can review.\n\nSure, I\u0027d love to. What would be the right condition for availability check? As a simple test, I thought about calling `LoadLibstatssocket` and check if the returned handle is non-null. But I think `libstatssocket` also needs to talk to the daemon via socket. Then I think we might need to check the socket? `libstatssocket` looks having buffer internally. Does it handle waiting until the daemon is available?",
      "parentUuid": "0c4322c1_fdf168ed",
      "range": {
        "startLine": 92,
        "startChar": 4,
        "endLine": 92,
        "endChar": 23
      },
      "revId": "374c43e9b7cc2c2a2e26a3ba088679f03f680437",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}