{
  "comments": [
    {
      "key": {
        "uuid": "0eaf7e30_903de198",
        "filename": "fs_mgr/libdm/dm_test.cpp",
        "patchSetId": 9
      },
      "lineNbr": 111,
      "author": {
        "id": 1096713
      },
      "writtenOn": "2018-06-27T13:38:42Z",
      "side": 1,
      "message": "Did this method intend to also have:\n\n  dm_ \u003d other.dm_;\n\nIt looks like our move constructor sets this field, and it seems like we leak other.dm_ otherwise here, although admittedly this is just a drive-by and I don\u0027t fully understand this code.",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 111,
        "endChar": 5
      },
      "revId": "2d3e79f5d5f04274e5415a30417b1f05ac65ab1d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75438b5e_81751e72",
        "filename": "fs_mgr/libdm/dm_test.cpp",
        "patchSetId": 9
      },
      "lineNbr": 111,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2018-06-27T19:54:38Z",
      "side": 1,
      "message": "Hrm, not sure what you mean. This is a reference, can\u0027t be rebound, and won\u0027t leak. It also points to a singleton so no reason to change it.",
      "parentUuid": "0eaf7e30_903de198",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 111,
        "endChar": 5
      },
      "revId": "2d3e79f5d5f04274e5415a30417b1f05ac65ab1d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8f113f9_ae83085f",
        "filename": "fs_mgr/libdm/dm_test.cpp",
        "patchSetId": 9
      },
      "lineNbr": 111,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-06-28T18:48:38Z",
      "side": 1,
      "message": "A) other dm_ does not leak, it gets closed in the rval (per-se), the leak is that it is orphaned, abandoned, dropped on the floor and cleaned up ;-}\nB) assignment move constructor should have the same operations as the move constructor (see line 62), and notably dm_(other.dm_) is not happening here.",
      "parentUuid": "75438b5e_81751e72",
      "range": {
        "startLine": 106,
        "startChar": 0,
        "endLine": 111,
        "endChar": 5
      },
      "revId": "2d3e79f5d5f04274e5415a30417b1f05ac65ab1d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "39bb0838_a1fd975f",
        "filename": "fs_mgr/libdm/dm_test.cpp",
        "patchSetId": 9
      },
      "lineNbr": 111,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-06-28T18:48:38Z",
      "side": 1,
      "message": "Double check, I thought all constructors, move or assignment, are to be in the constructor grouping?",
      "range": {
        "startLine": 103,
        "startChar": 0,
        "endLine": 111,
        "endChar": 5
      },
      "revId": "2d3e79f5d5f04274e5415a30417b1f05ac65ab1d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}