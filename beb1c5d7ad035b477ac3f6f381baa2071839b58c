{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "41bd7633_8daf04ba",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1146974
      },
      "writtenOn": "2024-02-26T00:47:52Z",
      "side": 1,
      "message": "Thanks to Jooyung\u0027s suggestion, I added __INTRODUCED_IN_LLNDK macros in libvendorsupport llndk.\nHowever, exporting the llndk head files is not that simple. (ag/26343048)",
      "revId": "beb1c5d7ad035b477ac3f6f381baa2071839b58c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cd9938be_2fbeca1b",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2024-02-26T01:34:18Z",
      "side": 1,
      "message": "It looks like *every* LLNDK library should export this new headerlib regardless of it\u0027s being built as vendor module or not. Even for remote clients (I mean transitively depending on any LLNDK libraries). Since libc is LLNDK, we need to fix *all* cc_library modules. Is my understanding correct? Or can we make it a default behavior of the build system?",
      "parentUuid": "41bd7633_8daf04ba",
      "revId": "beb1c5d7ad035b477ac3f6f381baa2071839b58c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "2fe41ddd_2c3229b5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 3
      },
      "lineNbr": 0,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2024-02-26T01:45:05Z",
      "side": 1,
      "message": "Had an offline chat with Justin.\n\nWe can add this header lib to libc and make libc export the header lib (both in core and vendor variants).",
      "parentUuid": "cd9938be_2fbeca1b",
      "revId": "beb1c5d7ad035b477ac3f6f381baa2071839b58c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4b6614de_56d220d6",
        "filename": "libvendorsupport/include/vendorsupport/llndk.h",
        "patchSetId": 3
      },
      "lineNbr": 29,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2024-02-26T09:47:06Z",
      "side": 1,
      "message": "I thought we can still have vendor available NDK symbols (which makes it LLNDK) that are guarded by __INTRODUCED_IN() ?\n\nClass 1: NDK (which is also LLNDK) symbols introduced with SDK version bump, use __INTRODUCED_IN(SDK_LEVEL)\n\nClass 2: LLNDK symbols introduced in Q2 (April), use __INTRODUCED_IN_LLNDK(YYYY04)",
      "revId": "beb1c5d7ad035b477ac3f6f381baa2071839b58c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc409878_9090649a",
        "filename": "libvendorsupport/include/vendorsupport/llndk.h",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2024-02-26T01:49:00Z",
      "side": 1,
      "message": "nit: it would be more helpful to provide how to handle this error.\n- check ro.board.api_level?\n- guard the call with \u003csome snippet\u003e\n- etc.",
      "range": {
        "startLine": 35,
        "startChar": 37,
        "endLine": 35,
        "endChar": 87
      },
      "revId": "beb1c5d7ad035b477ac3f6f381baa2071839b58c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "5cbccaf1_cd9a58d3",
        "filename": "libvendorsupport/include/vendorsupport/llndk.h",
        "patchSetId": 3
      },
      "lineNbr": 35,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2024-02-26T09:47:06Z",
      "side": 1,
      "message": "nit2: API (all caps for consistent style)\n```suggestion\n                                     \" that is newer than the current vendor API level\"))) \\\n```",
      "range": {
        "startLine": 35,
        "startChar": 77,
        "endLine": 35,
        "endChar": 80
      },
      "revId": "beb1c5d7ad035b477ac3f6f381baa2071839b58c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}