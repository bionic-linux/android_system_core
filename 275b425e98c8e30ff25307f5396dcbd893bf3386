{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "bee23f4f_eb7e82ad",
        "filename": "init/persistent_properties.cpp",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-08-25T09:27:17Z",
      "side": 1,
      "message": "should we just ignore properties not starting with \"persist.\", or unlink() the file on error like L177?",
      "revId": "275b425e98c8e30ff25307f5396dcbd893bf3386",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d26f9ab0_9e754246",
        "filename": "init/persistent_properties.cpp",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-08-25T10:48:44Z",
      "side": 1,
      "message": "Yeah, I think it\u0027s better to continue with logging.",
      "parentUuid": "bee23f4f_eb7e82ad",
      "revId": "275b425e98c8e30ff25307f5396dcbd893bf3386",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "faf189f5_211e8c2a",
        "filename": "init/persistent_properties.cpp",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-08-25T13:45:56Z",
      "side": 1,
      "message": "SG. If we log any error and continue, but not error out, then after the properties got write back, the illegal properties would be dropped.",
      "parentUuid": "d26f9ab0_9e754246",
      "revId": "275b425e98c8e30ff25307f5396dcbd893bf3386",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "12275996_9c0327bf",
        "filename": "init/persistent_properties.cpp",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1060907
      },
      "writtenOn": "2022-08-25T16:15:54Z",
      "side": 1,
      "message": "I think we should unlink - we filter when writing to this file, so if a non-persist property is in there something has gone badly wrong, we should treat this the same way we treat a parse error.",
      "parentUuid": "faf189f5_211e8c2a",
      "revId": "275b425e98c8e30ff25307f5396dcbd893bf3386",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "fc6ad5e5_7f9f11ec",
        "filename": "init/persistent_properties.cpp",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-08-25T23:27:39Z",
      "side": 1,
      "message": "\u003e  if a non-persist property is in there something has gone badly wrong\n\nYeah, that implies someone manually edited it on purpose. But isn\u0027t it too harsh? This means that one can prevent all persistent props being loaded by adding a single non-persistent prop to the file.",
      "parentUuid": "12275996_9c0327bf",
      "revId": "275b425e98c8e30ff25307f5396dcbd893bf3386",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "59e0efdc_bf07515d",
        "filename": "init/persistent_properties.cpp",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1060907
      },
      "writtenOn": "2022-08-26T00:22:44Z",
      "side": 1,
      "message": "Is there a process that has the power to do that, but doesn\u0027t have the power to delete the properties file or delete or empty all of its contents?",
      "parentUuid": "fc6ad5e5_7f9f11ec",
      "revId": "275b425e98c8e30ff25307f5396dcbd893bf3386",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "663ffafb_07df18c7",
        "filename": "init/persistent_properties.cpp",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2022-08-26T01:49:37Z",
      "side": 1,
      "message": "No. If one could add a non persist prop to the file, they are mostly likely to have the ability to delete persist props in the file. In that sense, my suggestion doesn\u0027t many anything safer. I admit that.\n\nHowever, I think that a parser in general should be flexible so that a single error in the input shouldn\u0027t invalidate the entire input. If the parser could successfully parse the \"other\" part of the input, I think we would want to accept that.\n\nNevertheless, I think I don\u0027t have a strong opinion here. I feel fine as long as we do NOT accept non-persist props from this file, which is what this CL does.",
      "parentUuid": "59e0efdc_bf07515d",
      "revId": "275b425e98c8e30ff25307f5396dcbd893bf3386",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "58133cd3_08260627",
        "filename": "init/persistent_properties.cpp",
        "patchSetId": 1
      },
      "lineNbr": 168,
      "author": {
        "id": 1291338
      },
      "writtenOn": "2022-08-29T01:33:53Z",
      "side": 1,
      "message": "It\u0027s quite likely that containing properties other than \"persist.\" means the file is invalid. I don\u0027t think we can get something from partially accepting the file.",
      "parentUuid": "663ffafb_07df18c7",
      "revId": "275b425e98c8e30ff25307f5396dcbd893bf3386",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}