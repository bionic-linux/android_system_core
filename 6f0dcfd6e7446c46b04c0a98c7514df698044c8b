{
  "comments": [
    {
      "key": {
        "uuid": "af54a448_03ea321e",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2019-10-08T19:49:37Z",
      "side": 1,
      "message": "Do you need to take the metadata sectors into account as well?\n\nOr alternatively, you can assume that all blocks have been changed.",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 74,
        "endChar": 47
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3e2dc08a_7011b90a",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2019-10-08T20:04:32Z",
      "side": 1,
      "message": "(by that I mean, just assume there is one operation that modifies all blocks, and let the logic below handles this case)",
      "parentUuid": "af54a448_03ea321e",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 74,
        "endChar": 47
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7d2500cd_497b2b47",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 74,
      "author": {
        "id": 1409599
      },
      "writtenOn": "2019-10-14T20:15:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "3e2dc08a_7011b90a",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 74,
        "endChar": 47
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d1ddf20b_eb1de270",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2019-10-08T19:49:37Z",
      "side": 1,
      "message": "nit: DmSnapCowSizeCalculator (since COW is an acronym)\n\nAlso, maybe put it in its own source file?",
      "range": {
        "startLine": 88,
        "startChar": 6,
        "endLine": 88,
        "endChar": 29
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "49694f7a_d2ebd0f7",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 88,
      "author": {
        "id": 1409599
      },
      "writtenOn": "2019-10-14T20:15:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d1ddf20b_eb1de270",
      "range": {
        "startLine": 88,
        "startChar": 6,
        "endLine": 88,
        "endChar": 29
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "14b21c81_7591ad78",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2019-10-08T20:03:13Z",
      "side": 1,
      "message": "The convention is WriteByte for functions. (same for WriteSector / WriteChunk, but getters should have the style cow_size_bytes, so don\u0027t change those)",
      "range": {
        "startLine": 95,
        "startChar": 9,
        "endLine": 95,
        "endChar": 19
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e448aa3c_3bc324d3",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 95,
      "author": {
        "id": 1409599
      },
      "writtenOn": "2019-10-14T20:15:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "14b21c81_7591ad78",
      "range": {
        "startLine": 95,
        "startChar": 9,
        "endLine": 95,
        "endChar": 19
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c9bc3fa1_70b127f2",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2019-10-08T20:03:13Z",
      "side": 1,
      "message": "This counts by (4K) chunks, so there may be ~1 million of chunks written in some extreme cases (e.g. we have a big 4GiB of system partition and all blocks are written) (unless I do the math incorrectly.)\n\nWould it be more space / time efficient to represent it some other way? e.g. bit maps where each bit represents a chunk (takes 1MiB of space in this case), or range sets: \nhttps://android.googlesource.com/platform/bootable/recovery/+/refs/heads/master/otautil/include/otautil/rangeset.h",
      "range": {
        "startLine": 121,
        "startChar": 0,
        "endLine": 121,
        "endChar": 43
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "781e6e7d_af044326",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 121,
      "author": {
        "id": 1409599
      },
      "writtenOn": "2019-10-14T20:15:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c9bc3fa1_70b127f2",
      "range": {
        "startLine": 121,
        "startChar": 0,
        "endLine": 121,
        "endChar": 43
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "6d80db12_0de735d8",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2019-10-08T19:49:37Z",
      "side": 1,
      "message": "no blocks are written",
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f64132a4_cafcebdc",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 132,
      "author": {
        "id": 1409599
      },
      "writtenOn": "2019-10-14T20:15:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "6d80db12_0de735d8",
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "52822990_c1cc32a6",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2019-10-08T19:49:37Z",
      "side": 1,
      "message": "delete (snapshot_size have different meanings now; will be handled in CL:1132036)\n\nRight now, just assume snapshot_size \u003d\u003d base device_size and everything is written through the snapshot.",
      "range": {
        "startLine": 134,
        "startChar": 0,
        "endLine": 135,
        "endChar": 65
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f52e5b8a_9efeaaf2",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 135,
      "author": {
        "id": 1409599
      },
      "writtenOn": "2019-10-14T20:15:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "52822990_c1cc32a6",
      "range": {
        "startLine": 134,
        "startChar": 0,
        "endLine": 135,
        "endChar": 65
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "17df548f_eb87a816",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 138,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2019-10-08T19:49:37Z",
      "side": 1,
      "message": "same here; just use start_block() + num_blocks() directly.",
      "range": {
        "startLine": 137,
        "startChar": 0,
        "endLine": 138,
        "endChar": 86
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "602f4096_824a11ba",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 138,
      "author": {
        "id": 1409599
      },
      "writtenOn": "2019-10-14T20:15:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "17df548f_eb87a816",
      "range": {
        "startLine": 137,
        "startChar": 0,
        "endLine": 138,
        "endChar": 86
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aaf0cc04_614d400b",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2019-10-08T19:49:37Z",
      "side": 1,
      "message": "Right now, you can assume all regions are written through the snapshot. Let\u0027s handle this in CL:1132036 instead.",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 173,
        "endChar": 67
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9cf3c4f2_de66afa7",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 1409599
      },
      "writtenOn": "2019-10-14T20:15:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "aaf0cc04_614d400b",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 173,
        "endChar": 67
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "91cd9291_cb1920ff",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 1409599
      },
      "writtenOn": "2019-10-15T12:25:12Z",
      "side": 1,
      "message": "So PartitionCowCreator is no more taking care of free regions, right?\nLet\u0027s synchronize to submit these changes ~together.",
      "parentUuid": "9cf3c4f2_de66afa7",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 173,
        "endChar": 67
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c8fb5094_7ffca738",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2019-10-15T22:37:56Z",
      "side": 1,
      "message": "Right. I am okay if you submit your changes alone. You can delete this big section of text if you want.\n\nAlso, leave the TODO tag there; it is not fixed yet.",
      "parentUuid": "91cd9291_cb1920ff",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 173,
        "endChar": 67
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea3bf466_9c87607f",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 173,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2019-10-15T22:40:41Z",
      "side": 1,
      "message": "(reason is that your changes seem to be almost finalized and mine still needs more work)",
      "parentUuid": "c8fb5094_7ffca738",
      "range": {
        "startLine": 162,
        "startChar": 0,
        "endLine": 173,
        "endChar": 67
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "83b65a47_1537c29b",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2019-10-08T19:49:37Z",
      "side": 1,
      "message": "I think you want to call GetCowFileSize (DmSnapCoWSizeCalculator) here instead; this is the total COW space needed to write snapshot:\n\n    [    dm-snapshot      ]\n    [base][    cow        ]\n          [partition][file]",
      "range": {
        "startLine": 186,
        "startChar": 0,
        "endLine": 186,
        "endChar": 52
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f420a133_0997ab59",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1409599
      },
      "writtenOn": "2019-10-14T20:15:27Z",
      "side": 1,
      "message": "Updated by changing the implementation of GetCowSize() and dropping the GetCowFileSize().",
      "parentUuid": "83b65a47_1537c29b",
      "range": {
        "startLine": 186,
        "startChar": 0,
        "endLine": 186,
        "endChar": 52
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8342e534_9feb0cf4",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 186,
      "author": {
        "id": 1409599
      },
      "writtenOn": "2019-10-15T12:25:12Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "f420a133_0997ab59",
      "range": {
        "startLine": 186,
        "startChar": 0,
        "endLine": 186,
        "endChar": 52
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "224c301e_420a63f0",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 197,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2019-10-08T19:49:37Z",
      "side": 1,
      "message": "Need cow_file_size + cow_partition_size \u003d\u003d cow_size.",
      "range": {
        "startLine": 197,
        "startChar": 0,
        "endLine": 197,
        "endChar": 61
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "50fc1b86_1ab6db27",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 197,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2019-10-11T23:06:10Z",
      "side": 1,
      "message": "(From your comment from another CL) BTW, can you make all of cow_* variables 4K aligned?\n\ncow_partition_size needs to be 4K aligned because super partition metadata requires so\ncow_size is also 4K aligned because we operate on 8 sectors per chunk\n\nIn particular, cow_size needs to be rounded *up* and cow_partition_size needs to be rounded *down* (e.g. we can\u0027t use free space in super if there are 3KiB left there).",
      "parentUuid": "224c301e_420a63f0",
      "range": {
        "startLine": 197,
        "startChar": 0,
        "endLine": 197,
        "endChar": 61
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7d0afc4_f48d4327",
        "filename": "fs_mgr/libsnapshot/partition_cow_creator.cpp",
        "patchSetId": 1
      },
      "lineNbr": 197,
      "author": {
        "id": 1409599
      },
      "writtenOn": "2019-10-14T20:15:27Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "224c301e_420a63f0",
      "range": {
        "startLine": 197,
        "startChar": 0,
        "endLine": 197,
        "endChar": 61
      },
      "revId": "6f0dcfd6e7446c46b04c0a98c7514df698044c8b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}