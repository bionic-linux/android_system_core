{
  "comments": [
    {
      "key": {
        "uuid": "2dd155f6_62cc466b",
        "filename": "fs_mgr/libdm/dm_target.cpp",
        "patchSetId": 11
      },
      "lineNbr": 94,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-06-25T20:19:59Z",
      "side": 1,
      "message": "Error?  We\u0027ve been saying callers should abort, not the library itself, right?",
      "range": {
        "startLine": 94,
        "startChar": 12,
        "endLine": 94,
        "endChar": 17
      },
      "revId": "64b7c2205c3786a6619178140570b8f4f9865b52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9335dae9_a956d00a",
        "filename": "fs_mgr/libdm/dm_target.cpp",
        "patchSetId": 11
      },
      "lineNbr": 94,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2018-06-25T20:36:28Z",
      "side": 1,
      "message": "I wanted to prevent the table from loading without having to propagate an error to the caller. I\u0027ll add a \"valid\" method to DmTarget, and have DmTable reject targets with invalid parameters.",
      "parentUuid": "2dd155f6_62cc466b",
      "range": {
        "startLine": 94,
        "startChar": 12,
        "endLine": 94,
        "endChar": 17
      },
      "revId": "64b7c2205c3786a6619178140570b8f4f9865b52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "1ef3cd07_1e465ce3",
        "filename": "fs_mgr/libdm/dm_test.cpp",
        "patchSetId": 11
      },
      "lineNbr": 180,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2018-06-25T20:06:44Z",
      "side": 1,
      "message": "this test will fail on all other devices, may be skip the test for now or report something if its being run on others.\nEventually, this should basically create a filesystem image with verity (or include one as prebuilts in the test suite).\nWrite that image on a a loopback device and test the whole thing that way.",
      "range": {
        "startLine": 180,
        "startChar": 27,
        "endLine": 180,
        "endChar": 34
      },
      "revId": "64b7c2205c3786a6619178140570b8f4f9865b52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b255e630_6e8b64ee",
        "filename": "fs_mgr/libdm/dm_test.cpp",
        "patchSetId": 11
      },
      "lineNbr": 180,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2018-06-25T20:19:50Z",
      "side": 1,
      "message": "This test is as unit-y as possible - it does\u0027nt actually create a verity device. It just tests the parameter string :)\n\nI would like a fully functional test but didn\u0027t make one yet for the reason you mentioned.",
      "parentUuid": "1ef3cd07_1e465ce3",
      "range": {
        "startLine": 180,
        "startChar": 27,
        "endLine": 180,
        "endChar": 34
      },
      "revId": "64b7c2205c3786a6619178140570b8f4f9865b52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0162ce3_5f407215",
        "filename": "fs_mgr/libdm/dm_test.cpp",
        "patchSetId": 11
      },
      "lineNbr": 180,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-06-25T20:19:59Z",
      "side": 1,
      "message": "Looks like this is just setting up the target as if it was Walleye and checking that the expected string matches, so it should still pass on other devices.",
      "parentUuid": "1ef3cd07_1e465ce3",
      "range": {
        "startLine": 180,
        "startChar": 27,
        "endLine": 180,
        "endChar": 34
      },
      "revId": "64b7c2205c3786a6619178140570b8f4f9865b52",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}