//
// Copyright (C) 2024 The Android Open Source Project
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package {
    default_team: "trendy_team_android_kernel",
    default_applicable_licenses: ["Android-Apache-2.0"],
}

rust_library_rlib {
    name: "libprefetch_rs",
    crate_name: "prefetch_rs",
    srcs: ["src/lib.rs"],
    rustlibs: [
        "libandroid_logger",
        "libargh",
        "libchrono",
        "libcrc32fast",
        "libcsv",
        "liblibc",
        "liblog_rust",
        "liblru_cache",
        "libnix",
        "librand",
        "librayon",
        "libregex",
        "libserde_cbor",
        "libserde_json",
        "libserde",
        "libthiserror",
        "libwalkdir",
    ],
    prefer_rlib: true,
    features: [
        "derive",
        "error-context",
        "help",
        "std",
        "usage",
        "use_argh",
    ],
    // product_specific: true,
    // vendor: true,
}

rust_ffi_static {
    name: "libprefetch_c",
    crate_name: "prefetch_c",
    srcs: ["src/lib.rs"],
    rustlibs: [
        "libandroid_logger",
        "libargh",
        "libcrc32fast",
        "liblog_rust",
        "libchrono",
        "libcsv",
        "liblibc",
        "liblru_cache",
        "libnix",
        "librand",
        "libregex",
        "librayon",
        "libserde",
        "libserde_cbor",
        "libserde_json",
        "libthiserror",
        "libwalkdir",
    ],
    prefer_rlib: true,
    features: [
        "derive",
        "error-context",
        "help",
        "std",
        "usage",
        "use_argh",
    ],
    // Define include_dirs so cc_binary knows where the headers are.
    include_dirs: ["."],
}

rust_binary {
    name: "prefetch",
    crate_name: "prefetch",
    srcs: ["src/main.rs"],
    rustlibs: [
        "libprefetch_rs",
        "liblog_rust",
        "libandroid_logger",
    ],
    prefer_rlib: true,
    features: [
        "default",
        "derive",
        "error-context",
        "help",
        "std",
        "usage",
        "use_argh",
    ],
    // product_specific: true,
    // vendor: true,
}
