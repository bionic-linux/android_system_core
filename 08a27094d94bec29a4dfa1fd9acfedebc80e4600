{
  "comments": [
    {
      "key": {
        "uuid": "76fd65bf_e840cbd2",
        "filename": "adb/commandline.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1392,
      "author": {
        "id": 1065256
      },
      "writtenOn": "2015-10-28T00:22:59Z",
      "side": 1,
      "message": "Does it matter that isatty() returns true for NUL on Windows? I couldn\u0027t come up with a failing test case other than \u0027adb shell \u003c nul\u0027 which no one in their right mind runs.\n\nisatty() came to my attention because I realized that for Windows, adb has 3 or 4 ways of checking for a console:\n\n* isatty() in unix_read (which I just recommended a few weeks ago).\n* isatty()+GetConsoleMode() in _get_console_handle()\n* GetFileType()+GetConsoleMode() in stdin_raw_init() (almost the same thing since isatty() is probably implemented by calling GetFileType())\n* enh is about to add GetConsoleScreenBufferInfo() in line_printer.cpp\n\nThis StackOverflow answer (http://stackoverflow.com/a/3650507) sums up the problem: different API specs for isatty() on Windows vs. *nix.\n\nMy thinking is to ignore this issue for now and maybe at some point (if it becomes really necessary) make adb_isatty() for Windows and #define isatty adb_isatty.",
      "range": {
        "startLine": 1392,
        "startChar": 21,
        "endLine": 1392,
        "endChar": 27
      },
      "revId": "08a27094d94bec29a4dfa1fd9acfedebc80e4600",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "964739ec_816efc79",
        "filename": "adb/commandline.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1392,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-10-28T00:48:47Z",
      "side": 1,
      "message": "maybe it\u0027s easier just to move isatty to sysdeps right away, if we\u0027ve already got the best code there?\n\n(amusingly, my main reason for taking ninja\u0027s LinePrinter rather than just writing the ten lines of code myself was that they seemed to have Windows support and i thought \"cool, i\u0027ll get Windows for free without having to think about it\".)",
      "parentUuid": "76fd65bf_e840cbd2",
      "range": {
        "startLine": 1392,
        "startChar": 21,
        "endLine": 1392,
        "endChar": 27
      },
      "revId": "08a27094d94bec29a4dfa1fd9acfedebc80e4600",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "56ab01f0_8c1fe7a4",
        "filename": "adb/commandline.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1392,
      "author": {
        "id": 1078119
      },
      "writtenOn": "2015-10-28T20:29:16Z",
      "side": 1,
      "message": "Yeah the only weird case I could think of is what you mentioned with nul which I didn\u0027t think was worth worrying about.\n\nBut I agree that consolidating to a single function would be best, if it handles nul as well that\u0027s a nice upgrade here. I don\u0027t mind taking a stab at this, it sounds pretty straightforward.",
      "parentUuid": "964739ec_816efc79",
      "range": {
        "startLine": 1392,
        "startChar": 21,
        "endLine": 1392,
        "endChar": 27
      },
      "revId": "08a27094d94bec29a4dfa1fd9acfedebc80e4600",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}