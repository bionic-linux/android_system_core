{
  "comments": [
    {
      "key": {
        "uuid": "665b2640_47aaae29",
        "filename": "init/Android.mk",
        "patchSetId": 7
      },
      "lineNbr": 107,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2016-10-27T20:22:21Z",
      "side": 1,
      "message": "Superfluous change, separate patch IMO.",
      "revId": "202ebc76f25d69699be7b72611f5ced7b69619ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "665b2640_6777f2f7",
        "filename": "init/Android.mk",
        "patchSetId": 7
      },
      "lineNbr": 107,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-10-27T20:29:29Z",
      "side": 1,
      "message": "a separate patch for a one-character change is just a waste of everybody\u0027s time.",
      "parentUuid": "665b2640_47aaae29",
      "revId": "202ebc76f25d69699be7b72611f5ced7b69619ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "665b2640_0743965e",
        "filename": "init/capabilities.cpp",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2016-10-27T21:41:45Z",
      "side": 1,
      "message": "Please note that the kernels could be ahead of the header files, so it\u0027s probably a good idea to determine this value at runtime rather than relying on header files. To determine CAP_LAST_CAP at runtime, you can sit in a loop calling getcap() until it returns EINVAL. See b/26217031.",
      "range": {
        "startLine": 69,
        "startChar": 14,
        "endLine": 69,
        "endChar": 26
      },
      "revId": "202ebc76f25d69699be7b72611f5ced7b69619ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "662326ed_4dce0d50",
        "filename": "init/capabilities.cpp",
        "patchSetId": 7
      },
      "lineNbr": 69,
      "author": {
        "id": 1076138
      },
      "writtenOn": "2016-10-31T15:46:18Z",
      "side": 1,
      "message": "I guess that\u0027s possible given that vendors can use any kernel they want, but it also seems unlikely right? We\u0027re at 4.4 headers right now and nothing is shipping with 4.4 kernels.\n\nMoreover, note that this is failing closed: the capability sets are fully cleared before enabling any capabilities, so if the kernel supports extra capabilities that we don\u0027t know about, we\u0027ll just never set them. Moreover, even if we did know the kernel supported extra caps, with older headers we wouldn\u0027t have a #define for them, so we would not be able to parse them nor set them (except by setting them by number, which is ugly.)\n\nGiven that situation I actually think it\u0027s a better idea to keep this compile-time assert. Note the assert will not fail with newer kernels, only if we ever update the kernel headers and that brings a new cap.",
      "parentUuid": "665b2640_0743965e",
      "range": {
        "startLine": 69,
        "startChar": 14,
        "endLine": 69,
        "endChar": 26
      },
      "revId": "202ebc76f25d69699be7b72611f5ced7b69619ef",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}