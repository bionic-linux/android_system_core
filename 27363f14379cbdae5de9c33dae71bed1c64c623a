{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "3fbd4fc4_5e81784e",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-02-23T23:58:25Z",
      "side": 1,
      "message": "This solution seems kind of unfortunate. It adds a lot of extra stuff to the build files, and it assumes the source structure doesn\u0027t change materially.\n\nWas it considered at all to make the build automatically learn which files timeout, as needed, rather than baking in a hardcoded list?",
      "revId": "27363f14379cbdae5de9c33dae71bed1c64c623a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "df0f1502_7d776703",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-02-24T00:02:43Z",
      "side": 1,
      "message": "yeah, especially because \"clang-tidy is slow on file $f\" is a property of that version of clang-tidy more than anything inherent in the file.\n\neven if we do have a denylist somewhere, i don\u0027t think it should be distributed throughout the tree like this. (and, yes, obviously it would be better to just not have an explicit list at all.)",
      "parentUuid": "3fbd4fc4_5e81784e",
      "revId": "27363f14379cbdae5de9c33dae71bed1c64c623a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "172eabab_84648937",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1052399
      },
      "writtenOn": "2022-02-24T00:59:04Z",
      "side": 1,
      "message": "Although originally this tidy_timeout_srcs was designed to be a solution to avoid flaky warnings in daily clean builds, it also helps developers to clean up one directory without wasting time in other directories. For example, one might want to have higher TIDY_TIMEOUT value to check files in art/runtime, but do not want to spend a lot of time waiting for clang-tidy on other files in system/core.\nIf we put this list globally or generate it automatically, we will need another mechanism to allow long clang-tidy time in art/runtime, but not in other directories.\n\nIt\u0027s true that clang-tidy is getting slower every month, with more and more checks. Most of the timed out cases we found in Android are due to large files, large functions, or excessive amount of warnings of some tidy check. So, the  tidy_timeout_srcs should grow with each clang-tidy release, but structural improvement of the source code can reduce this list. We can have another nightly build with special configuration to \"allow\" tidy_timeout_srcs files, and check if any of them is improved and can finish in time.",
      "parentUuid": "df0f1502_7d776703",
      "revId": "27363f14379cbdae5de9c33dae71bed1c64c623a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9b9c6eda_e8b7e5d5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-02-24T01:00:34Z",
      "side": 1,
      "message": "that seems fine as an _option_ for projects that _want_ clang-tidy ... but this is adding it to all projects [that clang-tidy struggles with], right? that seems like a mistake.",
      "parentUuid": "172eabab_84648937",
      "revId": "27363f14379cbdae5de9c33dae71bed1c64c623a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "25766c57_4ea75796",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1052399
      },
      "writtenOn": "2022-02-24T19:34:04Z",
      "side": 1,
      "message": "Yes, tidy_timeout_srcs is optional and has no impact if TIDY_TIMEOUT is not set.\nIt is like a friendly notice that says: if you want to build this project with TIDY_TIMEOUT, here are the files that you can skip to save time.",
      "parentUuid": "9b9c6eda_e8b7e5d5",
      "revId": "27363f14379cbdae5de9c33dae71bed1c64c623a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "00887abb_17e82fe5",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-02-24T19:35:42Z",
      "side": 1,
      "message": "yeah, but it\u0027s combined with a global postsubmit?\n\ni think the amount of disruption here is past the point where we should have a design doc... (in particular, i\u0027m still confused about what the end state is here.)",
      "parentUuid": "25766c57_4ea75796",
      "revId": "27363f14379cbdae5de9c33dae71bed1c64c623a",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}