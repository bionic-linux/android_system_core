{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9803b045_596d5cad",
        "filename": "init/property_service.cpp",
        "patchSetId": 3
      },
      "lineNbr": 927,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-05-05T23:55:09Z",
      "side": 1,
      "message": "add a comment to highlight that this is for the \u0027legacy\u0027 argument.",
      "range": {
        "startLine": 927,
        "startChar": 57,
        "endLine": 927,
        "endChar": 61
      },
      "revId": "2ffa20da614dfff97bad036fea9215cbd752295d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "e016c93f_cc7148b3",
        "filename": "init/property_service.cpp",
        "patchSetId": 3
      },
      "lineNbr": 927,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2021-05-06T00:25:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9803b045_596d5cad",
      "range": {
        "startLine": 927,
        "startChar": 57,
        "endLine": 927,
        "endChar": 61
      },
      "revId": "2ffa20da614dfff97bad036fea9215cbd752295d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b45b3fad_f0d4b17d",
        "filename": "init/property_service.cpp",
        "patchSetId": 3
      },
      "lineNbr": 946,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-05-05T23:55:09Z",
      "side": 1,
      "message": "add a comment to highlight that this is for the \u0027legacy\u0027 argument.",
      "range": {
        "startLine": 946,
        "startChar": 50,
        "endLine": 946,
        "endChar": 55
      },
      "revId": "2ffa20da614dfff97bad036fea9215cbd752295d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bf58d904_967dc44a",
        "filename": "init/property_service.cpp",
        "patchSetId": 3
      },
      "lineNbr": 946,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2021-05-06T00:25:01Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b45b3fad_f0d4b17d",
      "range": {
        "startLine": 946,
        "startChar": 50,
        "endLine": 946,
        "endChar": 55
      },
      "revId": "2ffa20da614dfff97bad036fea9215cbd752295d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92e79e11_e9dc5a25",
        "filename": "init/property_service.h",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-05-05T23:55:09Z",
      "side": 1,
      "message": "I wish we keep this as a private function. I know that this is public for the unit test, but I think it\u0027s better to have an end-to-end-test instead of the unit test.",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 38
      },
      "revId": "2ffa20da614dfff97bad036fea9215cbd752295d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1e9f0fe8_fb799f47",
        "filename": "init/property_service.h",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2021-05-06T00:25:01Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "92e79e11_e9dc5a25",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 38
      },
      "revId": "2ffa20da614dfff97bad036fea9215cbd752295d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "5f13b645_725d58b3",
        "filename": "init/property_service.h",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2021-05-06T01:27:26Z",
      "side": 1,
      "message": "IMO this is not exactly making it public as it\u0027s still internal to init. I think this kind of thing is fine and it\u0027s nice to have unit tests that are easy to debug and diagnose.",
      "parentUuid": "1e9f0fe8_fb799f47",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 38
      },
      "revId": "2ffa20da614dfff97bad036fea9215cbd752295d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "254868f2_2e4001ac",
        "filename": "init/property_service.h",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-05-05T23:55:09Z",
      "side": 1,
      "message": "I know that this is to mock GetProperty, but it forces the main use cases to supply the functions. This could be completely eliminated if we have the end-to-end test. Or we could at least provide GetProperty as a default value for this parameter.",
      "range": {
        "startLine": 42,
        "startChar": 8,
        "endLine": 42,
        "endChar": 95
      },
      "revId": "2ffa20da614dfff97bad036fea9215cbd752295d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8cd4dccb_d032eab2",
        "filename": "init/property_service.h",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2021-05-06T00:25:01Z",
      "side": 1,
      "message": "Moved to private for now. Let me think about a better way for an end-to-end test",
      "parentUuid": "254868f2_2e4001ac",
      "range": {
        "startLine": 42,
        "startChar": 8,
        "endLine": 42,
        "endChar": 95
      },
      "revId": "2ffa20da614dfff97bad036fea9215cbd752295d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "97e1b3a9_9b079034",
        "filename": "init/property_service.h",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2021-05-06T01:27:26Z",
      "side": 1,
      "message": "Here\u0027s how we mocked GetProperty for liblp:\n\nhttps://source.corp.google.com/android/system/core/fs_mgr/liblp/include/liblp/property_fetcher.h\n\n(Not saying it\u0027s great but it lets non-test code look fairly straightforward)",
      "parentUuid": "8cd4dccb_d032eab2",
      "range": {
        "startLine": 42,
        "startChar": 8,
        "endLine": 42,
        "endChar": 95
      },
      "revId": "2ffa20da614dfff97bad036fea9215cbd752295d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c03f567c_d816299e",
        "filename": "init/property_service.h",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2021-05-06T02:44:08Z",
      "side": 1,
      "message": "Thanks for the link. I guess I will hold it for now, as it requires to change all the calls in init through the singleton class.",
      "parentUuid": "97e1b3a9_9b079034",
      "range": {
        "startLine": 42,
        "startChar": 8,
        "endLine": 42,
        "endChar": 95
      },
      "revId": "2ffa20da614dfff97bad036fea9215cbd752295d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98de625a_75624292",
        "filename": "init/property_service_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-05-05T23:55:09Z",
      "side": 1,
      "message": "I wonder if this unit test adds a value; ConstructBuildFingerprint is very straighforward. Can we have an end-to-end test? For example, a CTS test that reads the values of ro.product.* and ro.build.* properties and checks if they are consistent with the rule described here?",
      "range": {
        "startLine": 97,
        "startChar": 0,
        "endLine": 97,
        "endChar": 53
      },
      "revId": "2ffa20da614dfff97bad036fea9215cbd752295d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7be41ae3_dbc7a87a",
        "filename": "init/property_service_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1088085
      },
      "writtenOn": "2021-05-06T00:19:26Z",
      "side": 1,
      "message": "Hmm, I wonder what\u0027s the good strategy for the e2e test. There are two difficulties to add it as a cts\n1. we don\u0027t actually enforce the fingerprint fields to match the build props\n2. we will end up duplicating the init logic to construct fingerprint in test...\n\nbtw, there is actually already a java test for fingerprint in https://cs.android.com/android/platform/superproject/+/master:cts/tests/tests/os/src/android/os/cts/BuildVersionTest.java",
      "parentUuid": "98de625a_75624292",
      "range": {
        "startLine": 97,
        "startChar": 0,
        "endLine": 97,
        "endChar": 53
      },
      "revId": "2ffa20da614dfff97bad036fea9215cbd752295d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}