{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "9803b045_596d5cad",
        "filename": "init/property_service.cpp",
        "patchSetId": 3
      },
      "lineNbr": 927,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-05-05T23:55:09Z",
      "side": 1,
      "message": "add a comment to highlight that this is for the \u0027legacy\u0027 argument.",
      "range": {
        "startLine": 927,
        "startChar": 57,
        "endLine": 927,
        "endChar": 61
      },
      "revId": "2ffa20da614dfff97bad036fea9215cbd752295d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b45b3fad_f0d4b17d",
        "filename": "init/property_service.cpp",
        "patchSetId": 3
      },
      "lineNbr": 946,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-05-05T23:55:09Z",
      "side": 1,
      "message": "add a comment to highlight that this is for the \u0027legacy\u0027 argument.",
      "range": {
        "startLine": 946,
        "startChar": 50,
        "endLine": 946,
        "endChar": 55
      },
      "revId": "2ffa20da614dfff97bad036fea9215cbd752295d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "92e79e11_e9dc5a25",
        "filename": "init/property_service.h",
        "patchSetId": 3
      },
      "lineNbr": 40,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-05-05T23:55:09Z",
      "side": 1,
      "message": "I wish we keep this as a private function. I know that this is public for the unit test, but I think it\u0027s better to have an end-to-end-test instead of the unit test.",
      "range": {
        "startLine": 40,
        "startChar": 0,
        "endLine": 40,
        "endChar": 38
      },
      "revId": "2ffa20da614dfff97bad036fea9215cbd752295d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "254868f2_2e4001ac",
        "filename": "init/property_service.h",
        "patchSetId": 3
      },
      "lineNbr": 42,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-05-05T23:55:09Z",
      "side": 1,
      "message": "I know that this is to mock GetProperty, but it forces the main use cases to supply the functions. This could be completely eliminated if we have the end-to-end test. Or we could at least provide GetProperty as a default value for this parameter.",
      "range": {
        "startLine": 42,
        "startChar": 8,
        "endLine": 42,
        "endChar": 95
      },
      "revId": "2ffa20da614dfff97bad036fea9215cbd752295d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "98de625a_75624292",
        "filename": "init/property_service_test.cpp",
        "patchSetId": 3
      },
      "lineNbr": 97,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2021-05-05T23:55:09Z",
      "side": 1,
      "message": "I wonder if this unit test adds a value; ConstructBuildFingerprint is very straighforward. Can we have an end-to-end test? For example, a CTS test that reads the values of ro.product.* and ro.build.* properties and checks if they are consistent with the rule described here?",
      "range": {
        "startLine": 97,
        "startChar": 0,
        "endLine": 97,
        "endChar": 53
      },
      "revId": "2ffa20da614dfff97bad036fea9215cbd752295d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}