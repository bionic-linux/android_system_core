{
  "comments": [
    {
      "key": {
        "uuid": "ab04074e_d13624fc",
        "filename": "libcutils/tests/sockets_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-11-04T15:59:08Z",
      "side": 1,
      "message": "this seems like a lot of work to go to just to write a test that will always fail.\n\nwhy not just \n\n  #if defined(__ANDROID__)\n  #endif\n\naround the whole body of this test instead? it\u0027s meaningless on the host anyway.\n\n(if you look at the bionic tests, we sometimes have an explicit log statement in a #else explaining why the test is meaningless in the #else case, but that\u0027s not necessary.)",
      "revId": "9494740d5be33a2306ab66ab321b49a5d1fbaea7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab04074e_3145f065",
        "filename": "libcutils/tests/sockets_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-11-04T15:59:08Z",
      "side": 1,
      "message": "this seems like an awful lot of work to go to just to write a test that will always fail :-)\n\nwhy not just \n\n  #if defined(__ANDROID__)\n  #endif\n\naround the whole body of this test instead? it\u0027s meaningless on the host anyway.\n\n(if you look at the bionic tests, we sometimes have an explicit log statement in a #else explaining why the test is meaningless in the #else case, but that\u0027s not necessary.)",
      "revId": "9494740d5be33a2306ab66ab321b49a5d1fbaea7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab04074e_f1524824",
        "filename": "libcutils/tests/sockets_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-11-04T16:03:41Z",
      "side": 1,
      "message": "Actually, this test _should_ succeed on the host (untested). It is perhaps meaningless on windows host, but not Mac or Linux host. I revel in additional testing/hardening/coverage for libcutils pieces.",
      "parentUuid": "ab04074e_d13624fc",
      "revId": "9494740d5be33a2306ab66ab321b49a5d1fbaea7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab04074e_7191389c",
        "filename": "libcutils/tests/sockets_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-11-04T16:17:31Z",
      "side": 1,
      "message": "what you\u0027ve written will fail on the mac because toggle_O_NONBLOCK always returns failure on the Mac.\n\nyou\u0027ve also broken Linux because you\u0027re setting SOCK_NONBLOCK and then unsetting it on the next line.\n\nand if you are still going to do this, let\u0027s not copy \u0026 paste toggle_O_NONBLOCK...",
      "parentUuid": "ab04074e_f1524824",
      "revId": "9494740d5be33a2306ab66ab321b49a5d1fbaea7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ab04074e_b16720d5",
        "filename": "libcutils/tests/sockets_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 225,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-11-04T17:02:54Z",
      "side": 1,
      "message": "I copy and pasted it because libcutils depends on toggle_O_NONBLOCK and thus must work. Why would it not work (not having a MAC capable of building Android tree to test this out)? Windows host build does not define G_GETFL, so _that_ is the one that will not work.\n\nIF SOCK_NONBLOCK is defined as it is on linux, toggle_O_NONBLOCK will do nothing as it is replaced with \u0027return s;\u0027. Agreed, it would be clearer to make this set_O_NONBLOCK rather than copying an existing functional(?) routine.\n\n(respinning to clarify rather than cut and paste)",
      "parentUuid": "ab04074e_7191389c",
      "revId": "9494740d5be33a2306ab66ab321b49a5d1fbaea7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}