{
  "comments": [
    {
      "key": {
        "uuid": "16651a4c_ef89f5a8",
        "filename": "init/host_init_verifier.cpp",
        "patchSetId": 4
      },
      "lineNbr": 81,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2019-06-21T17:12:59Z",
      "side": 1,
      "message": "Are there ever two interfaces here? This might be a case where we want to care about soong_namespaces. If there are multiple of the same interface, they likely can never be compiled at the same time.",
      "range": {
        "startLine": 81,
        "startChar": 11,
        "endLine": 81,
        "endChar": 32
      },
      "revId": "262b9a614e55432ec3fc3070bc7edb282587ec53",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9402d871_16f896d4",
        "filename": "init/host_init_verifier.cpp",
        "patchSetId": 4
      },
      "lineNbr": 142,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-06-21T00:08:33Z",
      "side": 1,
      "message": "We should start using getopt instead of having more positional arguments.  I was already planning on this for supporting multiple passwd files, so I have the code at https://android-review.googlesource.com/c/platform/system/core/+/986839.",
      "revId": "262b9a614e55432ec3fc3070bc7edb282587ec53",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c65ef7b_149dec0c",
        "filename": "init/service.cpp",
        "patchSetId": 4
      },
      "lineNbr": 427,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-06-21T00:08:33Z",
      "side": 1,
      "message": "I don\u0027t like having this as a part of ServiceList.  It\u0027s weird to have a backwards dependency, and it\u0027s weirder since it\u0027s only used on the host side, but in a file that\u0027s used regardless.\n\nProbably, the right decision here is to split Service into \u0027Service\u0027 and ServiceParser, but that\u0027s out of the scope for you (unless you really want to tackle that problem).",
      "revId": "262b9a614e55432ec3fc3070bc7edb282587ec53",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "482aa1b5_de856f59",
        "filename": "init/service.cpp",
        "patchSetId": 4
      },
      "lineNbr": 427,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2019-06-26T15:44:25Z",
      "side": 1,
      "message": "We would still want this in ServiceParser on device? Potentially, in the future, we could install a known interfaces list on device for additional sanity for incremental builds or similar.",
      "parentUuid": "3c65ef7b_149dec0c",
      "revId": "262b9a614e55432ec3fc3070bc7edb282587ec53",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c26b26e8_57277a7f",
        "filename": "init/service.cpp",
        "patchSetId": 4
      },
      "lineNbr": 427,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-06-26T16:04:18Z",
      "side": 1,
      "message": "It still doesn\u0027t belong in ServiceList.  If it\u0027s only ever going to be used here, it should just be a parameter for ServiceParser\u0027s constructor, after the above refactoring (that I might as well do now, since I\u0027m complaining about this here.)",
      "parentUuid": "482aa1b5_de856f59",
      "revId": "262b9a614e55432ec3fc3070bc7edb282587ec53",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3f2122e8_071891cc",
        "filename": "init/service.cpp",
        "patchSetId": 4
      },
      "lineNbr": 427,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2019-06-26T17:57:57Z",
      "side": 1,
      "message": "It could be used to provide better errors for ctl.* properties, but ack",
      "parentUuid": "c26b26e8_57277a7f",
      "revId": "262b9a614e55432ec3fc3070bc7edb282587ec53",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}