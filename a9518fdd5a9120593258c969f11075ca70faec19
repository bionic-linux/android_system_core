{
  "comments": [
    {
      "key": {
        "uuid": "56c08212_b6810436",
        "filename": "adb/client/adb_install.h",
        "patchSetId": 25
      },
      "lineNbr": 18,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2018-07-11T18:24:05Z",
      "side": 1,
      "message": "#pragma once",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 18,
        "endChar": 21
      },
      "revId": "a9518fdd5a9120593258c969f11075ca70faec19",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dbb6df09_4df7fb3b",
        "filename": "adb/client/adb_install.h",
        "patchSetId": 25
      },
      "lineNbr": 18,
      "author": {
        "id": 1269249
      },
      "writtenOn": "2018-08-02T12:51:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "56c08212_b6810436",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 18,
        "endChar": 21
      },
      "revId": "a9518fdd5a9120593258c969f11075ca70faec19",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24f23e17_d4926d97",
        "filename": "adb/client/commandline.cpp",
        "patchSetId": 25
      },
      "lineNbr": 162,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2018-07-11T18:24:05Z",
      "side": 1,
      "message": "You should use dashes to separate the words in your flags, e.g. --no-fastdeploy, --force-agent, etc.",
      "range": {
        "startLine": 162,
        "startChar": 16,
        "endLine": 162,
        "endChar": 28
      },
      "revId": "a9518fdd5a9120593258c969f11075ca70faec19",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2d12c3fd_c2540d70",
        "filename": "adb/client/commandline.cpp",
        "patchSetId": 25
      },
      "lineNbr": 162,
      "author": {
        "id": 1269249
      },
      "writtenOn": "2018-08-02T12:51:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "24f23e17_d4926d97",
      "range": {
        "startLine": 162,
        "startChar": 16,
        "endLine": 162,
        "endChar": 28
      },
      "revId": "a9518fdd5a9120593258c969f11075ca70faec19",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f4693e60_3f481ff2",
        "filename": "adb/client/fastdeploy.cpp",
        "patchSetId": 25
      },
      "lineNbr": 68,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2018-07-11T18:24:05Z",
      "side": 1,
      "message": "alternatively, `std::string path \u003d adb_path;`",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 68,
        "endChar": 0
      },
      "revId": "a9518fdd5a9120593258c969f11075ca70faec19",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d02bfd9_f4fb7882",
        "filename": "adb/client/fastdeploy.cpp",
        "patchSetId": 25
      },
      "lineNbr": 68,
      "author": {
        "id": 1269249
      },
      "writtenOn": "2018-08-02T12:51:17Z",
      "side": 1,
      "message": "I\u0027m not really clear what you are saying here? If I do the above then I cannot use \u0027path\u0027 as a parameter to dirname without employing something like const_cast\u003cchar*\u003e(path.c_str()). \n\nWhat I have here is more code, but I feel the meaning is more explicit than mutating the contents of an std::string via the c_str() pointer when it\u0027s returned as const.",
      "parentUuid": "f4693e60_3f481ff2",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 68,
        "endChar": 0
      },
      "revId": "a9518fdd5a9120593258c969f11075ca70faec19",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29e28bbb_b4902d99",
        "filename": "adb/client/fastdeploy.cpp",
        "patchSetId": 25
      },
      "lineNbr": 68,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2018-08-02T20:58:14Z",
      "side": 1,
      "message": "As of c++11, std::string::data() returns a non-const char*, so the code below should Just Work",
      "parentUuid": "3d02bfd9_f4fb7882",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 68,
        "endChar": 0
      },
      "revId": "a9518fdd5a9120593258c969f11075ca70faec19",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "73fde0a3_2b096e85",
        "filename": "adb/client/fastdeploy.cpp",
        "patchSetId": 25
      },
      "lineNbr": 68,
      "author": {
        "id": 1269249
      },
      "writtenOn": "2018-08-03T10:25:08Z",
      "side": 1,
      "message": ".data() in this context returns a const char*. According to this:\n\nhttps://en.cppreference.com/w/cpp/string/basic_string/data\n\nThe behavior you describe was added in C++17, so I think this is WAI.\n\nI\u0027ve changed the implementation to use const_cast on the return value of .data(). That makes it as similar as possible to the arrangement you describe above, so it will be easier to get there if/when the code moves to C++17.",
      "parentUuid": "29e28bbb_b4902d99",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 68,
        "endChar": 0
      },
      "revId": "a9518fdd5a9120593258c969f11075ca70faec19",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d296864_b55c2258",
        "filename": "adb/client/fastdeploy.cpp",
        "patchSetId": 25
      },
      "lineNbr": 68,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2018-08-03T18:31:11Z",
      "side": 1,
      "message": "Oops, I misremembered. The canonical idiom for that is \u0026string[0] instead of a const_cast, though.",
      "parentUuid": "73fde0a3_2b096e85",
      "range": {
        "startLine": 65,
        "startChar": 0,
        "endLine": 68,
        "endChar": 0
      },
      "revId": "a9518fdd5a9120593258c969f11075ca70faec19",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e3807364_8d18aa9c",
        "filename": "adb/client/fastdeploy.cpp",
        "patchSetId": 25
      },
      "lineNbr": 279,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2018-07-11T18:24:05Z",
      "side": 1,
      "message": "Why is this specific to windows? Spaces in paths are certainly more common on windows, but you can have them on OS X and linux as well.\n\n(also, you can do R\"(\"foo\" \"bar\" \"baz\")\" instead of escaping every quote, to make it easier to read)",
      "range": {
        "startLine": 275,
        "startChar": 0,
        "endLine": 279,
        "endChar": 6
      },
      "revId": "a9518fdd5a9120593258c969f11075ca70faec19",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d2439a7_8b63ba92",
        "filename": "adb/client/fastdeploy.cpp",
        "patchSetId": 25
      },
      "lineNbr": 279,
      "author": {
        "id": 1269249
      },
      "writtenOn": "2018-08-02T12:51:17Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e3807364_8d18aa9c",
      "range": {
        "startLine": 275,
        "startChar": 0,
        "endLine": 279,
        "endChar": 6
      },
      "revId": "a9518fdd5a9120593258c969f11075ca70faec19",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c9597d85_0f414949",
        "filename": "adb/client/fastdeploy.cpp",
        "patchSetId": 25
      },
      "lineNbr": 283,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2018-07-11T18:24:05Z",
      "side": 1,
      "message": "std::string instead",
      "range": {
        "startLine": 280,
        "startChar": 0,
        "endLine": 283,
        "endChar": 59
      },
      "revId": "a9518fdd5a9120593258c969f11075ca70faec19",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}