{
  "comments": [
    {
      "key": {
        "uuid": "f8ef569c_60eb3bb3",
        "filename": "libusbhost/usbhost.c",
        "patchSetId": 2
      },
      "lineNbr": 479,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2017-12-13T20:09:13Z",
      "side": 1,
      "message": "size_t",
      "range": {
        "startLine": 479,
        "startChar": 0,
        "endLine": 479,
        "endChar": 3
      },
      "revId": "e26accc12a066dc4b9d3ddf864096ab8791e93cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "98fde06c_17083f20",
        "filename": "libusbhost/usbhost.c",
        "patchSetId": 2
      },
      "lineNbr": 479,
      "author": {
        "id": 1247518
      },
      "writtenOn": "2017-12-13T21:26:37Z",
      "side": 1,
      "message": "note a count, it\u0027s a success/fail.",
      "parentUuid": "f8ef569c_60eb3bb3",
      "range": {
        "startLine": 479,
        "startChar": 0,
        "endLine": 479,
        "endChar": 3
      },
      "revId": "e26accc12a066dc4b9d3ddf864096ab8791e93cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f6174793_49ac96cd",
        "filename": "libusbhost/usbhost.c",
        "patchSetId": 2
      },
      "lineNbr": 479,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2017-12-13T21:36:07Z",
      "side": 1,
      "message": "Sorry, didn\u0027t mean to post these comments, I clicked reply just before rushing off to lunch.\n\nWhat I meant to say but didn\u0027t type out was \"why not return an ssize_t here instead of having an out parameter for the length?\" The usual reason to have an interface that looks like this is to allow passing in a buffer and length from the outside instead of calling malloc, but you explicitly prohibit that.",
      "parentUuid": "98fde06c_17083f20",
      "range": {
        "startLine": 479,
        "startChar": 0,
        "endLine": 479,
        "endChar": 3
      },
      "revId": "e26accc12a066dc4b9d3ddf864096ab8791e93cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "63758602_66830c02",
        "filename": "libusbhost/usbhost.c",
        "patchSetId": 2
      },
      "lineNbr": 479,
      "author": {
        "id": 1247518
      },
      "writtenOn": "2017-12-13T21:38:22Z",
      "side": 1,
      "message": "it\u0027s because I need to return both a buffer and length.\nthe USB string may contain a null but not be null terminated, particularly as a UCS-2 string.",
      "parentUuid": "f6174793_49ac96cd",
      "range": {
        "startLine": 479,
        "startChar": 0,
        "endLine": 479,
        "endChar": 3
      },
      "revId": "e26accc12a066dc4b9d3ddf864096ab8791e93cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6c996fa0_ded93de1",
        "filename": "libusbhost/usbhost.c",
        "patchSetId": 2
      },
      "lineNbr": 479,
      "author": {
        "id": 1247518
      },
      "writtenOn": "2017-12-13T21:57:16Z",
      "side": 1,
      "message": "ah, I see what you mean - I could return size via retval and buffer via parameter.  If you have a strong preference I could make the change, I\u0027m ambivalent.",
      "parentUuid": "63758602_66830c02",
      "range": {
        "startLine": 479,
        "startChar": 0,
        "endLine": 479,
        "endChar": 3
      },
      "revId": "e26accc12a066dc4b9d3ddf864096ab8791e93cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4782dcd9_3378b926",
        "filename": "libusbhost/usbhost.c",
        "patchSetId": 2
      },
      "lineNbr": 479,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2017-12-13T22:04:53Z",
      "side": 1,
      "message": "Yeah, I\u0027m not sure how I feel about it either, and I don\u0027t have a strong opinion on this.\n\nMaybe you could just support the \u0027pass in an existing array and length\u0027 use case? I think my mild unease with the current signature is that someone who just reads the function prototype (e.g. via IDE autocompletion) might get baited into using it in that way.\n\n(Also, switch void** to uint16_t**, and emit the buffer length in units of uint16_t?)",
      "parentUuid": "6c996fa0_ded93de1",
      "range": {
        "startLine": 479,
        "startChar": 0,
        "endLine": 479,
        "endChar": 3
      },
      "revId": "e26accc12a066dc4b9d3ddf864096ab8791e93cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38f574de_1afada48",
        "filename": "libusbhost/usbhost.c",
        "patchSetId": 2
      },
      "lineNbr": 479,
      "author": {
        "id": 1247518
      },
      "writtenOn": "2017-12-13T22:09:11Z",
      "side": 1,
      "message": "I prefer not supporting \u0027pass in existing array/length\u0027 to avoid the case where \nUSB returns more than what you provided.  As well, the function that this is\nfixing (usb_device_get_string) returns a malloc\u0027d buffer, so I kept the interface roughly the same.\n\nI return void* because I want it to be clear to the user I\u0027m returning the raw bytes as returned from USB - it\u0027s not a NULL terminated string (though I make sure it\u0027s null terminated to prevent major problems if someone doesn\u0027t realize that) - and be suspicious, it might not be well formed, and it might even have an odd number of bytes.",
      "parentUuid": "4782dcd9_3378b926",
      "range": {
        "startLine": 479,
        "startChar": 0,
        "endLine": 479,
        "endChar": 3
      },
      "revId": "e26accc12a066dc4b9d3ddf864096ab8791e93cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "15c69231_6deecf04",
        "filename": "libusbhost/usbhost.c",
        "patchSetId": 2
      },
      "lineNbr": 480,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2017-12-13T20:09:13Z",
      "side": 1,
      "message": "size_t",
      "range": {
        "startLine": 480,
        "startChar": 31,
        "endLine": 480,
        "endChar": 34
      },
      "revId": "e26accc12a066dc4b9d3ddf864096ab8791e93cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a491f565_74eacd11",
        "filename": "libusbhost/usbhost.c",
        "patchSetId": 2
      },
      "lineNbr": 480,
      "author": {
        "id": 1247518
      },
      "writtenOn": "2017-12-13T21:26:37Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "15c69231_6deecf04",
      "range": {
        "startLine": 480,
        "startChar": 31,
        "endLine": 480,
        "endChar": 34
      },
      "revId": "e26accc12a066dc4b9d3ddf864096ab8791e93cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e855cefa_4fbb5e8e",
        "filename": "libusbhost/usbhost.c",
        "patchSetId": 2
      },
      "lineNbr": 483,
      "author": {
        "id": 1042880
      },
      "writtenOn": "2017-12-13T19:19:25Z",
      "side": 1,
      "message": "Why wouldn\u0027t you put the declaration of \"i\" in the for(). (\"i\" is a terrible variable name btw)",
      "range": {
        "startLine": 483,
        "startChar": 4,
        "endLine": 483,
        "endChar": 9
      },
      "revId": "e26accc12a066dc4b9d3ddf864096ab8791e93cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3d111cf_eb20dab3",
        "filename": "libusbhost/usbhost.c",
        "patchSetId": 2
      },
      "lineNbr": 483,
      "author": {
        "id": 1247518
      },
      "writtenOn": "2017-12-13T21:26:37Z",
      "side": 1,
      "message": "it\u0027s used after the loop.  it\u0027s nice and short and pretty obvious.",
      "parentUuid": "e855cefa_4fbb5e8e",
      "range": {
        "startLine": 483,
        "startChar": 4,
        "endLine": 483,
        "endChar": 9
      },
      "revId": "e26accc12a066dc4b9d3ddf864096ab8791e93cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8fb01318_1927c7c6",
        "filename": "libusbhost/usbhost.c",
        "patchSetId": 2
      },
      "lineNbr": 483,
      "author": {
        "id": 1247518
      },
      "writtenOn": "2017-12-13T21:31:10Z",
      "side": 1,
      "message": "ah, wrong function.  I mostly just didn\u0027t change the existing code.  not sure it\u0027s worth changing.",
      "parentUuid": "e3d111cf_eb20dab3",
      "range": {
        "startLine": 483,
        "startChar": 4,
        "endLine": 483,
        "endChar": 9
      },
      "revId": "e26accc12a066dc4b9d3ddf864096ab8791e93cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e2856fec_d1dc77f6",
        "filename": "libusbhost/usbhost.c",
        "patchSetId": 2
      },
      "lineNbr": 497,
      "author": {
        "id": 1042880
      },
      "writtenOn": "2017-12-13T19:19:25Z",
      "side": 1,
      "message": "Can you comment on the format of this so I know why \"- 2) /2;",
      "range": {
        "startLine": 497,
        "startChar": 34,
        "endLine": 497,
        "endChar": 40
      },
      "revId": "e26accc12a066dc4b9d3ddf864096ab8791e93cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2e302433_1f1950d5",
        "filename": "libusbhost/usbhost.c",
        "patchSetId": 2
      },
      "lineNbr": 497,
      "author": {
        "id": 1247518
      },
      "writtenOn": "2017-12-13T21:26:37Z",
      "side": 1,
      "message": "this wasn\u0027t touched by this change, but the returned language IDs are two bytes wide, starting from offset two of the response.",
      "parentUuid": "e2856fec_d1dc77f6",
      "range": {
        "startLine": 497,
        "startChar": 34,
        "endLine": 497,
        "endChar": 40
      },
      "revId": "e26accc12a066dc4b9d3ddf864096ab8791e93cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7913ae33_2fa0df39",
        "filename": "libusbhost/usbhost.c",
        "patchSetId": 2
      },
      "lineNbr": 512,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2017-12-13T20:09:13Z",
      "side": 1,
      "message": "this cast is misleading, buffer is already a char*",
      "range": {
        "startLine": 512,
        "startChar": 24,
        "endLine": 512,
        "endChar": 31
      },
      "revId": "e26accc12a066dc4b9d3ddf864096ab8791e93cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79576a29_407d1b0a",
        "filename": "libusbhost/usbhost.c",
        "patchSetId": 2
      },
      "lineNbr": 512,
      "author": {
        "id": 1247518
      },
      "writtenOn": "2017-12-13T21:26:37Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "7913ae33_2fa0df39",
      "range": {
        "startLine": 512,
        "startChar": 24,
        "endLine": 512,
        "endChar": 31
      },
      "revId": "e26accc12a066dc4b9d3ddf864096ab8791e93cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "53770562_a506c05a",
        "filename": "libusbhost/usbhost.c",
        "patchSetId": 2
      },
      "lineNbr": 513,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2017-12-13T20:09:13Z",
      "side": 1,
      "message": "Why is this terminating a UCS-2 string with half of a null character?",
      "revId": "e26accc12a066dc4b9d3ddf864096ab8791e93cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7bbec827_4d94b969",
        "filename": "libusbhost/usbhost.c",
        "patchSetId": 2
      },
      "lineNbr": 513,
      "author": {
        "id": 1247518
      },
      "writtenOn": "2017-12-13T21:26:37Z",
      "side": 1,
      "message": "This null termination is after the UCS-2 string, and it\u0027s to prevent anyone reading this as a C-style string from going off into the woods.  Added three more to make sure any returned UCS-2 string is UCS-2 null terminated.",
      "parentUuid": "53770562_a506c05a",
      "revId": "e26accc12a066dc4b9d3ddf864096ab8791e93cc",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}