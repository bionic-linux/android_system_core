{
  "comments": [
    {
      "key": {
        "uuid": "14f3567f_55b57b21",
        "filename": "logd/LogBufferElement.h",
        "patchSetId": 3
      },
      "lineNbr": 53,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2017-08-08T12:26:58Z",
      "side": 1,
      "message": "i guess you could add a DCHECK somewhere in the method, or maybe not. up to you :)",
      "range": {
        "startLine": 53,
        "startChar": 4,
        "endLine": 53,
        "endChar": 35
      },
      "revId": "c6e3b39eb6fe457b64b55a19ea1d8e792c087319",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7924d97c_a3bb10bf",
        "filename": "logd/LogBufferElement.h",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2017-08-08T15:03:08Z",
      "side": 1,
      "message": "This means we loose chatty eliding gain of events and security buffer, which can contribute to a considerable memory growth. auditd (at least during early stages of development) is a large source of logspam in the events buffer.\n\nMaybe consider instead to allocate a uint32_to hold the mMsg Tag word content, and free up what was there before?",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 89,
        "endChar": 9
      },
      "revId": "c6e3b39eb6fe457b64b55a19ea1d8e792c087319",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e821e1d5_cad8b7e3",
        "filename": "logd/LogBufferElement.h",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-08T17:15:51Z",
      "side": 1,
      "message": "If you are worried that there is a bunch of data that will not be freed in the case where there are duplicate messages, then that is true. However, the chance of this affecting PSS is almost nil. You would have to get a message that was 4096 bytes, or you would have to get lucky and wind up with a bunch of these messages in the right way that a bunch of message data winds up in 4096 pages so they can be released. I took some snapshots of the data, and this case was very unlikely. If you have any data that shows this might be an issue, I\u0027d be happy to look at it.",
      "parentUuid": "7924d97c_a3bb10bf",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 89,
        "endChar": 9
      },
      "revId": "c6e3b39eb6fe457b64b55a19ea1d8e792c087319",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a087fa0b_afaa151b",
        "filename": "logd/LogBufferElement.h",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2017-08-08T17:32:09Z",
      "side": 1,
      "message": "Not just duplicate messages, but _every_ per-tag message that lands in chatty eliding. In the worst case can result in 20 fold increase in associated memory usage when the logger is being \u0027abused\u0027. You need a platform that spams-a-lot to see this case.\n\nif (isBinary() \u0026\u0026 (mMSgLen \u003e\u003d sizeof(uint32_t)) {\n    uint32_t* tag \u003d new uint32_t(getTag());\n    delete[] mMsg;\n    mMsg \u003d reinterpret_cast\u003cchar*\u003etag;\n} else if (!isBinary() || (mMSgLen \u003c sizeof(uint32_t)) {\n    delete[] mMSg;\n    mMsg \u003d nullptr;\n}\n\nI can not, of course, be sure that aggressive freeing will result in a lower working set given the fragmentation associated with mMsg allocations. It is merely a case of DYB and hope for the space to be reused.",
      "parentUuid": "e821e1d5_cad8b7e3",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 89,
        "endChar": 9
      },
      "revId": "c6e3b39eb6fe457b64b55a19ea1d8e792c087319",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "99d326e0_e0a560a2",
        "filename": "logd/LogBufferElement.h",
        "patchSetId": 3
      },
      "lineNbr": 89,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2017-08-11T19:49:57Z",
      "side": 1,
      "message": "I did some checking, and most of the tags are zero, so I changed the logic a bit here. I also saw that many binary messages are 13 bytes, so I decided to also do a reallocate in that case so that I\u0027m keeping only as much as necessary.",
      "parentUuid": "a087fa0b_afaa151b",
      "range": {
        "startLine": 84,
        "startChar": 0,
        "endLine": 89,
        "endChar": 9
      },
      "revId": "c6e3b39eb6fe457b64b55a19ea1d8e792c087319",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}