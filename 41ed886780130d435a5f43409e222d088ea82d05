{
  "comments": [
    {
      "key": {
        "uuid": "d0bfc88a_a8782e33",
        "filename": "include/cutils/atomic.h",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 1056155
      },
      "writtenOn": "2014-10-08T08:27:10Z",
      "side": 1,
      "message": "This is not correct.\nThe memory ordering constrains are not only for hardware, but also for the compiler. If you want to play this game, you need to at least surround the atomic operations with proper atomic_signal_fence\u0027s. That will be practically good enough I think (while still formally incorrect, e.g. tsan will bark).",
      "range": {
        "startLine": 75,
        "startChar": 32,
        "endLine": 75,
        "endChar": 52
      },
      "revId": "41ed886780130d435a5f43409e222d088ea82d05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0bfc88a_68a9d621",
        "filename": "include/cutils/atomic.h",
        "patchSetId": 2
      },
      "lineNbr": 101,
      "author": {
        "id": 1056155
      },
      "writtenOn": "2014-10-08T08:27:10Z",
      "side": 1,
      "message": "This is a weird ordering for an atomic_dec. It\u0027s usually used for reference counting, so it should be acq_rel. Or is this codebase consistently use a trailing android_memory_barrier() if the counter goes to zero?",
      "range": {
        "startLine": 101,
        "startChar": 43,
        "endLine": 101,
        "endChar": 65
      },
      "revId": "41ed886780130d435a5f43409e222d088ea82d05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}