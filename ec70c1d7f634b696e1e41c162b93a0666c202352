{
  "comments": [
    {
      "key": {
        "uuid": "d56a3dc4_926143fc",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2019-09-20T14:54:08Z",
      "side": 1,
      "message": "please prepend with \"libprocessgroup: \" because system/core is a huge component and has many sub-components in it.",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 37
      },
      "revId": "ec70c1d7f634b696e1e41c162b93a0666c202352",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68a1f5ee_618a8c19",
        "filename": "/COMMIT_MSG",
        "patchSetId": 4
      },
      "lineNbr": 7,
      "author": {
        "id": 1324603
      },
      "writtenOn": "2019-09-22T09:58:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d56a3dc4_926143fc",
      "range": {
        "startLine": 7,
        "startChar": 0,
        "endLine": 7,
        "endChar": 37
      },
      "revId": "ec70c1d7f634b696e1e41c162b93a0666c202352",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0c5de20f_63f1bd26",
        "filename": "libprocessgroup/task_profiles.cpp",
        "patchSetId": 4
      },
      "lineNbr": 481,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2019-09-20T14:54:08Z",
      "side": 1,
      "message": "If profile definition is invalid I don\u0027t think we should add it into profiles_. IIUC this should be:\n\nif (ret) {\n    auto profile \u003d std::make_unique\u003cTaskProfile\u003e();\n    profile-\u003eAdd(std::make_unique\u003cApplyProfileAction\u003e(profiles));\n    profiles_[aggregateprofile_name] \u003d std::move(profile);\n}",
      "range": {
        "startLine": 477,
        "startChar": 0,
        "endLine": 481,
        "endChar": 0
      },
      "revId": "ec70c1d7f634b696e1e41c162b93a0666c202352",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5805264d_09e9b228",
        "filename": "libprocessgroup/task_profiles.cpp",
        "patchSetId": 4
      },
      "lineNbr": 481,
      "author": {
        "id": 1324603
      },
      "writtenOn": "2019-09-22T09:58:10Z",
      "side": 1,
      "message": "Yes, I was aware of it, just it seems above profile_ will add a profile no matter the parsing result is correct or not, so I followed the behavior. Is it intended? or should we also modify that part, too? Modified my part first.",
      "parentUuid": "0c5de20f_63f1bd26",
      "range": {
        "startLine": 477,
        "startChar": 0,
        "endLine": 481,
        "endChar": 0
      },
      "revId": "ec70c1d7f634b696e1e41c162b93a0666c202352",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dfc67b50_f6435fcf",
        "filename": "libprocessgroup/task_profiles.cpp",
        "patchSetId": 4
      },
      "lineNbr": 481,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2019-09-23T18:24:22Z",
      "side": 1,
      "message": "Yeah, some of those warning we should probably change to errors and not add an invalid profile. One case where we should not fail if there is inconsistency between task_profiles.json available cgroups but task_profiles.json file itself I think should be consistent. I\u0027ll need to think some more about these rules but let\u0027s be more strict with recursion in aggregate profiles.",
      "parentUuid": "5805264d_09e9b228",
      "range": {
        "startLine": 477,
        "startChar": 0,
        "endLine": 481,
        "endChar": 0
      },
      "revId": "ec70c1d7f634b696e1e41c162b93a0666c202352",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b8271fcd_4dd6a06b",
        "filename": "libprocessgroup/task_profiles.cpp",
        "patchSetId": 4
      },
      "lineNbr": 481,
      "author": {
        "id": 1324603
      },
      "writtenOn": "2019-09-24T10:59:40Z",
      "side": 1,
      "message": "Understood. Thanks.",
      "parentUuid": "dfc67b50_f6435fcf",
      "range": {
        "startLine": 477,
        "startChar": 0,
        "endLine": 481,
        "endChar": 0
      },
      "revId": "ec70c1d7f634b696e1e41c162b93a0666c202352",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "76c9d397_7e317db7",
        "filename": "libprocessgroup/task_profiles.h",
        "patchSetId": 4
      },
      "lineNbr": 141,
      "author": {
        "id": 1157738
      },
      "writtenOn": "2019-09-20T14:54:08Z",
      "side": 1,
      "message": "nit: duplicate?",
      "range": {
        "startLine": 141,
        "startChar": 7,
        "endLine": 141,
        "endChar": 22
      },
      "revId": "ec70c1d7f634b696e1e41c162b93a0666c202352",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "7b3b9546_85037ab4",
        "filename": "libprocessgroup/task_profiles.h",
        "patchSetId": 4
      },
      "lineNbr": 141,
      "author": {
        "id": 1324603
      },
      "writtenOn": "2019-09-22T09:58:10Z",
      "side": 1,
      "message": "modified",
      "parentUuid": "76c9d397_7e317db7",
      "range": {
        "startLine": 141,
        "startChar": 7,
        "endLine": 141,
        "endChar": 22
      },
      "revId": "ec70c1d7f634b696e1e41c162b93a0666c202352",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}