{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "dd160253_b06b53f8",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2023-04-25T23:28:50Z",
      "side": 1,
      "message": "I\u0027m not a huge fan of this, since these heuristics are always running into corner cases and needing adjustments.\n\nMaybe it\u0027s better to think in terms of the absolute amount of space we want to leave *free* on /data? And then remount can take whatever\u0027s left.",
      "revId": "a105e851f762fe634752ae29b452dcf918156c5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6562d530_e90e41f1",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1893074
      },
      "writtenOn": "2023-04-26T06:06:34Z",
      "side": 1,
      "message": "I see what you meant about percentage heuristics and agree with that.\nProviding amount of space we want to leave free actually can solve the problem for us.\n\n**Proposal:** We introduce `fs_mgr.overlayfs.free_data_with_scratch_mb` property alongside with existing `fs_mgr.overlayfs.data_scratch_size_mb` so the logic will be\nfollowing:\n\n1. In case `data_scratch_size_mb` is provided and valid, we use this value to calculate data/scratch size\n2. In case `free_data_with_scratch_mb` is provided and valid we use this one\n3. Otherwise we take 50% of free data storage\n\nBy \"valid\" for `data_scratch_size_mb` and `free_data_with_scratch_mb` I meant we have enough free data space to meet the request (currently we\u0027re not checking data_scratch_size_mb on being valid)\n\nWhat do you think about this approach?",
      "parentUuid": "dd160253_b06b53f8",
      "revId": "a105e851f762fe634752ae29b452dcf918156c5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2fe663ed_b0476473",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2023-04-26T10:22:46Z",
      "side": 1,
      "message": "If the problem is just that _free space in userdata is under utilized_\nhow about we just do:\n\n1. If `data_scratch_size_mb` is provided, use it to calculate. Otherwise use the size of `super`.\n2. Clamp size by ensuring userdata is at least say 85% or 90% free after allocating scratch.\n3. Last verify that the size is at least say 256MiB. So we ensure the allocated scratch is not too tiny to be useful.\n\nMy main motivation is to keep the implementation simple, and not introduce more heuristics that only solve some very specific situations (like what `data_scratch_size_mb` is).",
      "parentUuid": "6562d530_e90e41f1",
      "revId": "a105e851f762fe634752ae29b452dcf918156c5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7d9660bf_50dfe0cd",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1893074
      },
      "writtenOn": "2023-04-26T12:00:28Z",
      "side": 1,
      "message": "Let me provide an example to make sure we\u0027re on the same page. The original problem is not enough scratch space allocated for local development cases. Currently, the default flow is used where we allocate 50% of free data for scratch (about 2.7g per CVD by default).\n\nFollowing the logic you proposed (make sure 85-90% of data is available after scratch allocation) we will allocate even less, so probably we need to use a different number (probably 60-40% of available `data` after scratch cut).\n\nAlso, I cannot see the benefits of using `% of available data after scratch cut` (proposed) versus `% of available data` (existing) approach.",
      "parentUuid": "2fe663ed_b0476473",
      "revId": "a105e851f762fe634752ae29b452dcf918156c5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "cc682085_cc3f3009",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 2
      },
      "lineNbr": 0,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2023-04-26T12:04:16Z",
      "side": 1,
      "message": "oh sorry, I meant the opposite. \"ensure 10 or 15% of free space\" (now we retain 50%)",
      "parentUuid": "7d9660bf_50dfe0cd",
      "revId": "a105e851f762fe634752ae29b452dcf918156c5d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}