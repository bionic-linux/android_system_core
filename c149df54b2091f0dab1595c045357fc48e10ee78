{
  "comments": [
    {
      "key": {
        "uuid": "69d0fd0d_ca6b2580",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 9,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-08-07T18:27:26Z",
      "side": 1,
      "message": "I\u0027m still wary about this semantic (got two more point-in-case comments about it below).\n\nI think we\u0027d be better off pushing it upwards, i.e. add the also_use_as_anonymous flag to LibraryNamespaces::Create and do this in the Java code if there\u0027s no better way. Shouldn\u0027t block on that though, but WDYT about opening a ticket to track it?",
      "range": {
        "startLine": 9,
        "startChar": 45,
        "endLine": 9,
        "endChar": 68
      },
      "revId": "c149df54b2091f0dab1595c045357fc48e10ee78",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d3b6896e_d4ea13d9",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 9,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-08-08T10:30:00Z",
      "side": 1,
      "message": "I am rather against to pushing this upwards. I think anonymous namespace is a concept that is private to linker and libnativeloader. Higher-level software should better be ignorant of this. \n\nIf you really want to offload some of the decision to the higher-level components, all they can do is to give some hint (i.e. this is the main classloader), not the explicit command (i.e. make this an anonymous ns)",
      "parentUuid": "69d0fd0d_ca6b2580",
      "range": {
        "startLine": 9,
        "startChar": 45,
        "endLine": 9,
        "endChar": 68
      },
      "revId": "c149df54b2091f0dab1595c045357fc48e10ee78",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "250673cb_499e3565",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 16,
      "author": {
        "id": 1229339
      },
      "writtenOn": "2019-08-02T21:25:50Z",
      "side": 1,
      "message": "If we delete android_init_anonymous_namespace, will there be a problem where native bridges still refer to the old android_init_anonymous_namespace function? (Are they forwarding android_init_anonymous_namespace from the host to the guest?)\n\nIf we couldn\u0027t delete it, we could still replace it with a no-op / abort, maybe.",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 32
      },
      "revId": "c149df54b2091f0dab1595c045357fc48e10ee78",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "708a0772_26df4c96",
        "filename": "/COMMIT_MSG",
        "patchSetId": 12
      },
      "lineNbr": 16,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-08-03T02:30:10Z",
      "side": 1,
      "message": "Deleting android_init_anonymous_namespace might be safe (though still scary to me), because unless NativeBridgeInitAnonymousNamespace is called from elsewhere it won\u0027t be executed. The addition of ANDROID_NAMESPACE_TYPE_ALSO_USED_AS_ANONYMOUS was mostly driven by the fact that adding a new function requires changes in many places.\n\nHowever, right now we need to keep android_init_anonymous_namespace at least for the bionic tests.",
      "parentUuid": "250673cb_499e3565",
      "range": {
        "startLine": 16,
        "startChar": 0,
        "endLine": 16,
        "endChar": 32
      },
      "revId": "c149df54b2091f0dab1595c045357fc48e10ee78",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "674a8e92_f4703c00",
        "filename": "libnativeloader/include/nativeloader/dlext_namespaces.h",
        "patchSetId": 12
      },
      "lineNbr": 34,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-08-07T18:27:26Z",
      "side": 1,
      "message": "Can this be removed? If so, please move down the explanation of what an anonymous namespace is to the enum constant below.",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 34,
        "endChar": 78
      },
      "revId": "c149df54b2091f0dab1595c045357fc48e10ee78",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ded3ad98_797e9685",
        "filename": "libnativeloader/include/nativeloader/dlext_namespaces.h",
        "patchSetId": 12
      },
      "lineNbr": 34,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-08-08T10:30:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "674a8e92_f4703c00",
      "range": {
        "startLine": 33,
        "startChar": 0,
        "endLine": 34,
        "endChar": 78
      },
      "revId": "c149df54b2091f0dab1595c045357fc48e10ee78",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c8ebc18a_1c8b1b58",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 12
      },
      "lineNbr": 162,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-08-07T18:27:26Z",
      "side": 1,
      "message": "Please avoid implicit type conversion from pointer to bool.",
      "range": {
        "startLine": 162,
        "startChar": 2,
        "endLine": 162,
        "endChar": 6
      },
      "revId": "c149df54b2091f0dab1595c045357fc48e10ee78",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "416a7628_491d3e04",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 12
      },
      "lineNbr": 162,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-08-08T10:30:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "c8ebc18a_1c8b1b58",
      "range": {
        "startLine": 162,
        "startChar": 2,
        "endLine": 162,
        "endChar": 6
      },
      "revId": "c149df54b2091f0dab1595c045357fc48e10ee78",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7e295847_ddad8b0b",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 12
      },
      "lineNbr": 164,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-08-07T18:27:26Z",
      "side": 1,
      "message": "Not sure about reintroducing this variable, but if you prefer it I suggest putting this bit in a brace block to limit its scope.",
      "range": {
        "startLine": 164,
        "startChar": 22,
        "endLine": 164,
        "endChar": 27
      },
      "revId": "c149df54b2091f0dab1595c045357fc48e10ee78",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a0d6aa15_d1acf80e",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 12
      },
      "lineNbr": 164,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-08-08T10:30:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "7e295847_ddad8b0b",
      "range": {
        "startLine": 164,
        "startChar": 22,
        "endLine": 164,
        "endChar": 27
      },
      "revId": "c149df54b2091f0dab1595c045357fc48e10ee78",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "607326fa_5523c437",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 12
      },
      "lineNbr": 213,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-08-07T18:27:26Z",
      "side": 1,
      "message": "Even the theoretical risk of a race is an indication that the notion of a \"first\" namespace is flawed, but I suppose that would be a problem in the classloader or the app. (No change required, just saying as another point-in-case.)",
      "range": {
        "startLine": 212,
        "startChar": 72,
        "endLine": 213,
        "endChar": 16
      },
      "revId": "c149df54b2091f0dab1595c045357fc48e10ee78",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aafb8b65_e169c0c5",
        "filename": "libnativeloader/library_namespaces.cpp",
        "patchSetId": 12
      },
      "lineNbr": 213,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-08-08T10:30:00Z",
      "side": 1,
      "message": "Right. But even if this is controlled by !library_path.empty(), there is a theoretical risk of a race. The risk comes from the fact that there can be only one anon namespace in a process, NOT from the way it is chosen.",
      "parentUuid": "607326fa_5523c437",
      "range": {
        "startLine": 212,
        "startChar": 72,
        "endLine": 213,
        "endChar": 16
      },
      "revId": "c149df54b2091f0dab1595c045357fc48e10ee78",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d0df9bd9_18ef126b",
        "filename": "libnativeloader/native_loader_namespace.cpp",
        "patchSetId": 12
      },
      "lineNbr": 99,
      "author": {
        "id": 1373864
      },
      "writtenOn": "2019-08-07T18:27:26Z",
      "side": 1,
      "message": "Nit: \"First\" is thankfully not relevant on this level since it\u0027s explicit through the also_used_as_anonymous flag. Suggest dropping it.",
      "range": {
        "startLine": 99,
        "startChar": 9,
        "endLine": 99,
        "endChar": 14
      },
      "revId": "c149df54b2091f0dab1595c045357fc48e10ee78",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "b30929b4_dd410bfe",
        "filename": "libnativeloader/native_loader_namespace.cpp",
        "patchSetId": 12
      },
      "lineNbr": 99,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-08-08T10:30:00Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "d0df9bd9_18ef126b",
      "range": {
        "startLine": 99,
        "startChar": 9,
        "endLine": 99,
        "endChar": 14
      },
      "revId": "c149df54b2091f0dab1595c045357fc48e10ee78",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}