{
  "comments": [
    {
      "key": {
        "uuid": "055876fc_da9c945d",
        "filename": "init/reboot.cpp",
        "patchSetId": 11
      },
      "lineNbr": 261,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2019-04-24T18:58:43Z",
      "side": 1,
      "message": "do you still nee this then?\n\nwe can set g_remaining_shutdown_time outsides the thread func, right?",
      "range": {
        "startLine": 261,
        "startChar": 51,
        "endLine": 261,
        "endChar": 67
      },
      "revId": "6f2609a9cc86f098f1e1543ad7c0a556544d8f2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3c1161cd_af0a42a7",
        "filename": "init/reboot.cpp",
        "patchSetId": 11
      },
      "lineNbr": 261,
      "author": {
        "id": 1483435
      },
      "writtenOn": "2019-04-24T19:09:18Z",
      "side": 1,
      "message": "Yes, the \"shutdown_timeout\" is for \"ro.build.shutdown_timeout\".\n\nAnd monitor thread timer (30 seconds) is for \"ro.build.shutdown.watchdog.timeout\".\n\nI am okay to put g_remaining_shutdown_time outsides the thread func if you think it is better.\n\nThank you,\nJoseph.",
      "parentUuid": "055876fc_da9c945d",
      "range": {
        "startLine": 261,
        "startChar": 51,
        "endLine": 261,
        "endChar": 67
      },
      "revId": "6f2609a9cc86f098f1e1543ad7c0a556544d8f2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "eaaae029_42aba06d",
        "filename": "init/reboot.cpp",
        "patchSetId": 11
      },
      "lineNbr": 261,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2019-04-24T21:07:17Z",
      "side": 1,
      "message": "yes, as the shutdown_timeout will just be hornored when this func called fist with a non-zero shutdown_timeou.",
      "parentUuid": "3c1161cd_af0a42a7",
      "range": {
        "startLine": 261,
        "startChar": 51,
        "endLine": 261,
        "endChar": 67
      },
      "revId": "6f2609a9cc86f098f1e1543ad7c0a556544d8f2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "186a3fcc_d2624d50",
        "filename": "init/reboot.cpp",
        "patchSetId": 11
      },
      "lineNbr": 261,
      "author": {
        "id": 1483435
      },
      "writtenOn": "2019-04-24T21:53:46Z",
      "side": 1,
      "message": "Yes~ RebootMonitorThread jump reference the shutdown_timeout as a initial timer setup.\n\nAfter that, RebootMonitorThread use g_remaining_shutdown_time only.\n\nSo I think g_remaining_shutdown_time is very important here and maybe it is good to be inside RebootMonitorThread() function right? we can prevent other functions to touch it right?\n\nThank you,\nJoseph.",
      "parentUuid": "eaaae029_42aba06d",
      "range": {
        "startLine": 261,
        "startChar": 51,
        "endLine": 261,
        "endChar": 67
      },
      "revId": "6f2609a9cc86f098f1e1543ad7c0a556544d8f2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "c3bc243f_332602e4",
        "filename": "init/reboot.cpp",
        "patchSetId": 11
      },
      "lineNbr": 261,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2019-04-24T22:01:39Z",
      "side": 1,
      "message": "the function is reused but not the thread, you are creating new threads every time, so maybe you just need wake and pause the thread instead of recreating it everytime, g_remaining_shutdown_time can be just a local in the thread.",
      "parentUuid": "186a3fcc_d2624d50",
      "range": {
        "startLine": 261,
        "startChar": 51,
        "endLine": 261,
        "endChar": 67
      },
      "revId": "6f2609a9cc86f098f1e1543ad7c0a556544d8f2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "38af6f68_02ed485c",
        "filename": "init/reboot.cpp",
        "patchSetId": 11
      },
      "lineNbr": 261,
      "author": {
        "id": 1483435
      },
      "writtenOn": "2019-04-24T22:14:47Z",
      "side": 1,
      "message": "It should be okay to pause the thread and resume it.\n\nBut since sem_timedwait_monotonic_np() use system time, I believe system time will keep moving forward even we pause the thread. right?\n\nsem_timedwait_monotonic_np(reboot_semaphore,\u0026shutdown_timeout_timespec)\n\nSo we still need a local variable to store remaining time when the thread has been stop.\nAnd re-calculate new system timeout value when someone resume the thread right?\n\nI think my problem is how can RebootMonitorThread() to receive thread stop notification ?\n\nBase on that, that is why I am trying to let RebootMonitorThread() exit when someone stop it and re-enable thread again with last remaining_time.\n\nThis will be easy to implement it here.\n\nAs I know, sem_timedwait_monotonic_np() will let thread go to sleep when no one change the reboot_semaphore right?\nSo I think the current timer design here is very similar to pause/start thread right?\nI just try to implement it by an easy way.\n\nThank you,\nJoseph.",
      "parentUuid": "c3bc243f_332602e4",
      "range": {
        "startLine": 261,
        "startChar": 51,
        "endLine": 261,
        "endChar": 67
      },
      "revId": "6f2609a9cc86f098f1e1543ad7c0a556544d8f2b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}