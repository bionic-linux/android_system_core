{
  "comments": [
    {
      "key": {
        "uuid": "d3e677cf_e4556598",
        "filename": "libsysutils/src/SocketListener.cpp",
        "patchSetId": 6
      },
      "lineNbr": 164,
      "author": {
        "id": 1000451
      },
      "writtenOn": "2018-05-24T07:50:18Z",
      "side": 1,
      "message": "I think if (!mListen) this leaves one trailing pollfd struct with .fd \u003d\u003d 0 in the list that gets passed to poll(2) below...maybe?",
      "range": {
        "startLine": 164,
        "startChar": 8,
        "endLine": 164,
        "endChar": 9
      },
      "revId": "55100cfe579161a2b60faf20b49b1dd20d0afc9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "567361c1_22f02d56",
        "filename": "libsysutils/src/SocketListener.cpp",
        "patchSetId": 6
      },
      "lineNbr": 164,
      "author": {
        "id": 1273909
      },
      "writtenOn": "2018-05-24T14:19:46Z",
      "side": 1,
      "message": "Yes, it leaves an empty slot in the backing buffer allocated via fds.reserve(), but fds.size() will be still the correct value to pass to poll() below.\n\nBy the way, push_back() continuously checks if the vector needs to be extended; it might be faster to resize() the vector once and then fill-in the slots via operator[]. I\u0027ll keep this in mind in the upcoming changes.",
      "parentUuid": "d3e677cf_e4556598",
      "range": {
        "startLine": 164,
        "startChar": 8,
        "endLine": 164,
        "endChar": 9
      },
      "revId": "55100cfe579161a2b60faf20b49b1dd20d0afc9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6f31a70f_20986413",
        "filename": "libsysutils/src/SocketListener.cpp",
        "patchSetId": 6
      },
      "lineNbr": 175,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2018-05-24T16:38:59Z",
      "side": 1,
      "message": "given that there\u0027s no timeout, this can\u0027t happen?",
      "range": {
        "startLine": 173,
        "startChar": 9,
        "endLine": 175,
        "endChar": 0
      },
      "revId": "55100cfe579161a2b60faf20b49b1dd20d0afc9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0dfb7f68_154400ee",
        "filename": "libsysutils/src/SocketListener.cpp",
        "patchSetId": 6
      },
      "lineNbr": 175,
      "author": {
        "id": 1273909
      },
      "writtenOn": "2018-05-25T10:12:54Z",
      "side": 1,
      "message": "Right, removed.",
      "parentUuid": "6f31a70f_20986413",
      "range": {
        "startLine": 173,
        "startChar": 9,
        "endLine": 175,
        "endChar": 0
      },
      "revId": "55100cfe579161a2b60faf20b49b1dd20d0afc9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "d8aeb9ab_15471437",
        "filename": "libsysutils/src/SocketListener.cpp",
        "patchSetId": 6
      },
      "lineNbr": 236,
      "author": {
        "id": 1000451
      },
      "writtenOn": "2018-05-24T07:50:18Z",
      "side": 1,
      "message": "This branch won\u0027t ever run?",
      "range": {
        "startLine": 236,
        "startChar": 8,
        "endLine": 236,
        "endChar": 18
      },
      "revId": "55100cfe579161a2b60faf20b49b1dd20d0afc9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6af2827a_c082f4de",
        "filename": "libsysutils/src/SocketListener.cpp",
        "patchSetId": 6
      },
      "lineNbr": 236,
      "author": {
        "id": 1273909
      },
      "writtenOn": "2018-05-25T10:12:54Z",
      "side": 1,
      "message": "Ooouch! That would have been a massive leak of SocketClient objects! ðŸ˜±\n\nFixed, but we must absolutely have some test coverage for this code, and we should have a leak detector at least for classes implementing its own manual refcounting.\n\nThanks for catching this.",
      "parentUuid": "d8aeb9ab_15471437",
      "range": {
        "startLine": 236,
        "startChar": 8,
        "endLine": 236,
        "endChar": 18
      },
      "revId": "55100cfe579161a2b60faf20b49b1dd20d0afc9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ba2c4ef6_ef9c4720",
        "filename": "libsysutils/src/SocketListener.cpp",
        "patchSetId": 6
      },
      "lineNbr": 251,
      "author": {
        "id": 1000451
      },
      "writtenOn": "2018-05-24T07:50:18Z",
      "side": 1,
      "message": "maybe move up one line (see below)",
      "range": {
        "startLine": 251,
        "startChar": 38,
        "endLine": 251,
        "endChar": 39
      },
      "revId": "55100cfe579161a2b60faf20b49b1dd20d0afc9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "528293b3_e9f59fd0",
        "filename": "libsysutils/src/SocketListener.cpp",
        "patchSetId": 6
      },
      "lineNbr": 251,
      "author": {
        "id": 1273909
      },
      "writtenOn": "2018-05-25T10:12:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ba2c4ef6_ef9c4720",
      "range": {
        "startLine": 251,
        "startChar": 38,
        "endLine": 251,
        "endChar": 39
      },
      "revId": "55100cfe579161a2b60faf20b49b1dd20d0afc9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "feb2285e_1d133517",
        "filename": "libsysutils/src/SocketListener.cpp",
        "patchSetId": 6
      },
      "lineNbr": 273,
      "author": {
        "id": 1000451
      },
      "writtenOn": "2018-05-24T07:50:18Z",
      "side": 1,
      "message": "I might put this line above the lock, so that when we want to switch to lock_guard/mutex it looks like:\n\n    std::vector\u003cSocketClient*\u003e clients;\n    {\n        std::lock_guard\u003cstd::mutex\u003e lock(mClientsLock);\n        ...\n    }",
      "range": {
        "startLine": 273,
        "startChar": 38,
        "endLine": 273,
        "endChar": 39
      },
      "revId": "55100cfe579161a2b60faf20b49b1dd20d0afc9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "ff7d374a_fc2e5ea9",
        "filename": "libsysutils/src/SocketListener.cpp",
        "patchSetId": 6
      },
      "lineNbr": 273,
      "author": {
        "id": 1273909
      },
      "writtenOn": "2018-05-25T10:12:54Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "feb2285e_1d133517",
      "range": {
        "startLine": 273,
        "startChar": 38,
        "endLine": 273,
        "endChar": 39
      },
      "revId": "55100cfe579161a2b60faf20b49b1dd20d0afc9e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}