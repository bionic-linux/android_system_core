{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "4552323e_1d915b42",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2021-06-27T02:18:59Z",
      "side": 1,
      "message": "moved the added operator\u003d() to avoid merge conflicts in the internal branch. ",
      "revId": "43e98de0048cf80c3dac58574e852ffdfc6ba73e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "79a40994_3279900e",
        "filename": "libutils/String16_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-28T20:21:55Z",
      "side": 1,
      "message": "could you add a test with StaticString16 as well?",
      "range": {
        "startLine": 68,
        "startChar": 4,
        "endLine": 68,
        "endChar": 12
      },
      "revId": "43e98de0048cf80c3dac58574e852ffdfc6ba73e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "8650688d_542ad563",
        "filename": "libutils/String16_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2021-06-29T00:46:37Z",
      "side": 1,
      "message": "I added a few more checks to the test cases of StaticString16\u0027s move. btw, emptying StaticString after move doesn\u0027t seem right. I changed move ctor/assign accordingly.",
      "parentUuid": "79a40994_3279900e",
      "range": {
        "startLine": 68,
        "startChar": 4,
        "endLine": 68,
        "endChar": 12
      },
      "revId": "43e98de0048cf80c3dac58574e852ffdfc6ba73e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e046e8f1_8d72feec",
        "filename": "libutils/String16_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-29T00:50:00Z",
      "side": 1,
      "message": "StaticString16 should probably be called FlatString16 or NoHeapString16.\n\nIf a StaticString16 is non-const it can still be edited. As long as things work, I think it\u0027s nice if we avoid the extra branch and allow it to continue to be modified. Right?",
      "parentUuid": "8650688d_542ad563",
      "range": {
        "startLine": 68,
        "startChar": 4,
        "endLine": 68,
        "endChar": 12
      },
      "revId": "43e98de0048cf80c3dac58574e852ffdfc6ba73e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ca91a691_817fe953",
        "filename": "libutils/String16_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1415877
      },
      "writtenOn": "2021-06-29T01:24:52Z",
      "side": 1,
      "message": "Oh, \"static\" is that \"static\", ;-)\n\nBut I found that, copy from StaticString16 is specialized and we probably don\u0027t need to provide move from StaticString16 (it falls back to copy from StaticString16). We\u0027ll have the same efficiency for move from copy fallback behavior. (Note that copy from StaticString16 only copies the handle and no \"acquire\", and also note that after std::move() the object is not supposed to be read, so not emptying the static string after move doesn\u0027t violate the contract.)",
      "parentUuid": "e046e8f1_8d72feec",
      "range": {
        "startLine": 68,
        "startChar": 4,
        "endLine": 68,
        "endChar": 12
      },
      "revId": "43e98de0048cf80c3dac58574e852ffdfc6ba73e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "3b994bec_8309e614",
        "filename": "libutils/String16_test.cpp",
        "patchSetId": 4
      },
      "lineNbr": 68,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2021-06-29T17:08:11Z",
      "side": 1,
      "message": "Yeah, I know it doesn\u0027t violate the contract. However, we were adding an extra branch than is necessary in order to satisfy the contract. I think there\u0027s a value in general in code doing the minimum necessary.",
      "parentUuid": "ca91a691_817fe953",
      "range": {
        "startLine": 68,
        "startChar": 4,
        "endLine": 68,
        "endChar": 12
      },
      "revId": "43e98de0048cf80c3dac58574e852ffdfc6ba73e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}