{
  "comments": [
    {
      "key": {
        "uuid": "deae0a5b_bcd0d981",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 3
      },
      "lineNbr": 484,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-06-12T02:58:53Z",
      "side": 1,
      "message": "why two?",
      "revId": "f6200750db574ddf255dfc73b6cd73c14e3c1dca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5db9d496_280a1cf7",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 3
      },
      "lineNbr": 484,
      "author": {
        "id": 1418133
      },
      "writtenOn": "2019-06-12T04:32:46Z",
      "side": 1,
      "message": "- DISABLE_OSTREAM_STRING_POINTER_WARNING_FOR_GMOCK is the case-specific flag you expressed as preferred usage to deter blind copy-paste.\n- DISABLE_OSTREAM_STRING_POINTER_WARNING is the catch-all alternative to -Wno-user-defined-warnings (equivalent to the desired -Wno-user-defined-warnings\u003dostream-string-ptr option).",
      "parentUuid": "deae0a5b_bcd0d981",
      "revId": "f6200750db574ddf255dfc73b6cd73c14e3c1dca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "34552f34_53129635",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 3
      },
      "lineNbr": 484,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2019-06-12T14:28:43Z",
      "side": 1,
      "message": "i don\u0027t think we want the latter until/unless we actually have a use for it.\n\nright now we\u0027ve had a bunch of cases where people have accidentally used operator\u003c\u003c(std::string*) and exactly two that needed to opt out, both for gmock.",
      "parentUuid": "5db9d496_280a1cf7",
      "revId": "f6200750db574ddf255dfc73b6cd73c14e3c1dca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fb78bcc7_6e77a6fb",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 3
      },
      "lineNbr": 484,
      "author": {
        "id": 1418133
      },
      "writtenOn": "2019-06-13T01:42:05Z",
      "side": 1,
      "message": "The latter is exactly what George confirmed was desired (although, in a compiler-centric implementation). Omitting it does not eliminate a catch-all, it elevates -Wno-user-defined-warnings to that status, which everyone has acknowledged is bad form. If you\u0027re still objecting to this, I don\u0027t understand what you stated we\u0027re all in violent agreement on.",
      "parentUuid": "34552f34_53129635",
      "revId": "f6200750db574ddf255dfc73b6cd73c14e3c1dca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "95ba0270_852f035a",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 3
      },
      "lineNbr": 484,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2019-06-13T03:08:19Z",
      "side": 1,
      "message": "We only want the *_FOR_GMOCK ifndef here. We do not want an easier opt-out here that has to be removed later, since there is nobody using -Wno-user-defined-warnings for this. We\u0027re hoping to fix the compiler to support disabling just this user-defined warning in the near term. As is, I also don\u0027t approve of this extra ifndef. We can audit any present/future uses of -Wno-user-defined-warnings without much trouble once the compiler can select which warnings to ignore.",
      "parentUuid": "fb78bcc7_6e77a6fb",
      "revId": "f6200750db574ddf255dfc73b6cd73c14e3c1dca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "61b36132_74f77110",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 3
      },
      "lineNbr": 484,
      "author": {
        "id": 1418133
      },
      "writtenOn": "2019-06-13T03:13:07Z",
      "side": 1,
      "message": "The argument that it\u0027s desirable as a compiler-specific feature, but unacceptable as a compiler agnostics solution utterly confounds me.",
      "parentUuid": "95ba0270_852f035a",
      "revId": "f6200750db574ddf255dfc73b6cd73c14e3c1dca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4e85180a_70737695",
        "filename": "base/include/android-base/logging.h",
        "patchSetId": 3
      },
      "lineNbr": 484,
      "author": {
        "id": 1010056
      },
      "writtenOn": "2019-06-13T03:44:54Z",
      "side": 1,
      "message": "We\u0027re objecting to having 2 defines. We want to clean up and remove the one define when we get finished here. Right now, the only user is gmock, hence our insistence that gmock be mentioned in the naming, because we strongly believe that printing out string pointers like this is not what the user intended in 99+% of cases.\n\nI\u0027m pretty close to believing that gmock should fix their code instead at this point, since other developers might reuse that pattern erroneously. After spending a whole day talking about C/C++ deficiencies, I\u0027m not convinced that keeping mistakes easy to make (especially of the copy/paste variety) is something that I want to promote.",
      "parentUuid": "61b36132_74f77110",
      "revId": "f6200750db574ddf255dfc73b6cd73c14e3c1dca",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}