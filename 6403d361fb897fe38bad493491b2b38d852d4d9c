{
  "comments": [
    {
      "key": {
        "uuid": "67587578_cbcfd11a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2020-07-06T16:44:31Z",
      "side": 1,
      "message": "Looks good to me but one comment inline that will help us remove this fallback logic years from now.",
      "revId": "6403d361fb897fe38bad493491b2b38d852d4d9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ce7f2a7f_3b95688f",
        "filename": "init/property_service.cpp",
        "patchSetId": 4
      },
      "lineNbr": 914,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2020-07-06T16:44:31Z",
      "side": 1,
      "message": "Can we guard this with any check to be able to remove this in the future?  We could check `ro.product.build.version.sdk` and if it\u0027s newer than R then we reject loading the legacy paths?  \n\nIn retrospect, we should have used `ro.odm.build.version.sdk` for the ODM partition instead of coupling it with the vendor partition, though I think that\u0027s new enough to not make a difference.",
      "range": {
        "startLine": 914,
        "startChar": 47,
        "endLine": 914,
        "endChar": 72
      },
      "revId": "6403d361fb897fe38bad493491b2b38d852d4d9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "97a6c735_c7f663c8",
        "filename": "init/property_service.cpp",
        "patchSetId": 4
      },
      "lineNbr": 914,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2020-07-06T23:46:06Z",
      "side": 1,
      "message": "odm is an extension to vendor, so I think it\u0027s okay to use info from vendor as a means to identify if odm is old or new. We don\u0027t expect the case where vendor and odm target different versions.\n\nFor the product partition, `ro.product.build.version.sdk` itself is a property in the prop file. So, it can\u0027t be used to decide which prop file to use. Perhaps we might want to examine the properties just after loading etc/build.prop and then if it has ro.product.build.version.sdk \u003e R we don\u0027t fallback to the legacy path. Is that what you want?",
      "parentUuid": "ce7f2a7f_3b95688f",
      "range": {
        "startLine": 914,
        "startChar": 47,
        "endLine": 914,
        "endChar": 72
      },
      "revId": "6403d361fb897fe38bad493491b2b38d852d4d9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e51ea832_fddcacf4",
        "filename": "init/property_service.cpp",
        "patchSetId": 4
      },
      "lineNbr": 914,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2020-07-07T00:33:03Z",
      "side": 1,
      "message": "\u003e Perhaps we might want to examine the properties just after loading etc/build.prop and then if it has ro.product.build.version.sdk \u003e R we don\u0027t fallback to the legacy path. Is that what you want?\n\nExactly.  We can even LOG(FATAL) there since it should be an impossible scenario and only seen in development.  It will give us the ability to remove this code in a few years once we no longer support product partitions before S.",
      "parentUuid": "97a6c735_c7f663c8",
      "range": {
        "startLine": 914,
        "startChar": 47,
        "endLine": 914,
        "endChar": 72
      },
      "revId": "6403d361fb897fe38bad493491b2b38d852d4d9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "96d368b5_52088c12",
        "filename": "init/property_service.cpp",
        "patchSetId": 4
      },
      "lineNbr": 914,
      "author": {
        "id": 1080813
      },
      "writtenOn": "2020-07-07T02:08:02Z",
      "side": 1,
      "message": "+1, good point about the deprecation plan.",
      "parentUuid": "e51ea832_fddcacf4",
      "range": {
        "startLine": 914,
        "startChar": 47,
        "endLine": 914,
        "endChar": 72
      },
      "revId": "6403d361fb897fe38bad493491b2b38d852d4d9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fc0f74bd_741c6c39",
        "filename": "init/property_service.cpp",
        "patchSetId": 4
      },
      "lineNbr": 914,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2020-07-07T05:25:08Z",
      "side": 1,
      "message": "Done. The fallback routine became a little bit verbose (and has performance penalty), but this should be fine.",
      "parentUuid": "96d368b5_52088c12",
      "range": {
        "startLine": 914,
        "startChar": 47,
        "endLine": 914,
        "endChar": 72
      },
      "revId": "6403d361fb897fe38bad493491b2b38d852d4d9c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}