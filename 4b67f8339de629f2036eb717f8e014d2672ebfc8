{
  "comments": [
    {
      "key": {
        "uuid": "97155885_4590aa49",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 1
      },
      "lineNbr": 296,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-03-06T19:18:40Z",
      "side": 1,
      "message": "Is there any possibility this was done because this structure is really large and having a ZipArchive struct on the stack could smash it? Do you know how big the structure is before and after the change?",
      "range": {
        "startLine": 296,
        "startChar": 2,
        "endLine": 296,
        "endChar": 33
      },
      "revId": "4b67f8339de629f2036eb717f8e014d2672ebfc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "37ccac7c_65e780de",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 1
      },
      "lineNbr": 296,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2015-03-06T19:26:12Z",
      "side": 1,
      "message": "I do not think so... this field always gets initialized if open zip is successful. the size of FileMap is 5 + (2 for windows) pointers and 8 bytes.\n\nThis reduces total memory usage by this structure by 1 pointer.",
      "parentUuid": "97155885_4590aa49",
      "range": {
        "startLine": 296,
        "startChar": 2,
        "endLine": 296,
        "endChar": 33
      },
      "revId": "4b67f8339de629f2036eb717f8e014d2672ebfc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b7f17ca4_8e491bbb",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 1
      },
      "lineNbr": 296,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-03-06T19:57:52Z",
      "side": 1,
      "message": "Then this seems fine by me.",
      "parentUuid": "37ccac7c_65e780de",
      "range": {
        "startLine": 296,
        "startChar": 2,
        "endLine": 296,
        "endChar": 33
      },
      "revId": "4b67f8339de629f2036eb717f8e014d2672ebfc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "57f6809e_abc7a9be",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 1
      },
      "lineNbr": 583,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-03-06T19:18:40Z",
      "side": 1,
      "message": "Change to a const_cast?",
      "range": {
        "startLine": 583,
        "startChar": 32,
        "endLine": 583,
        "endChar": 48
      },
      "revId": "4b67f8339de629f2036eb717f8e014d2672ebfc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97dab833_1da8d38c",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 1
      },
      "lineNbr": 583,
      "author": {
        "id": 1041673
      },
      "writtenOn": "2015-03-06T19:26:12Z",
      "side": 1,
      "message": "doesn\u0027t const_cast remove const?",
      "parentUuid": "57f6809e_abc7a9be",
      "range": {
        "startLine": 583,
        "startChar": 32,
        "endLine": 583,
        "endChar": 48
      },
      "revId": "4b67f8339de629f2036eb717f8e014d2672ebfc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "97155885_858102fc",
        "filename": "libziparchive/zip_archive.cc",
        "patchSetId": 1
      },
      "lineNbr": 583,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2015-03-06T19:57:52Z",
      "side": 1,
      "message": "Oops, you\u0027re correct. Then how about a reinterpret_cast?",
      "parentUuid": "97dab833_1da8d38c",
      "range": {
        "startLine": 583,
        "startChar": 32,
        "endLine": 583,
        "endChar": 48
      },
      "revId": "4b67f8339de629f2036eb717f8e014d2672ebfc8",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}