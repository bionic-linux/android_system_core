{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "008b347d_9ed010f4",
        "filename": "healthd/healthd_mode_charger.cpp",
        "patchSetId": 3
      },
      "lineNbr": 310,
      "author": {
        "id": 1895601
      },
      "writtenOn": "2023-10-16T16:23:30Z",
      "side": 1,
      "message": "@jingpgwan@google.com Can\u0027t we just change this to an OR and drop the rest of this patch?\n\n```\n    if (health_info_.battery_level \u003d\u003d 0 || health_info_.battery_status \u003d\u003d BatteryStatus::UNKNOWN) {\n```",
      "range": {
        "startLine": 310,
        "startChar": 0,
        "endLine": 310,
        "endChar": 99
      },
      "revId": "5fb4aaf940b96cecd3ce094af4599e90490bb60b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b7d6a8a5_d0caf295",
        "filename": "healthd/healthd_mode_charger.cpp",
        "patchSetId": 3
      },
      "lineNbr": 323,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-10-10T18:53:34Z",
      "side": 1,
      "message": "This looks like an inconsistent state. If your battery status is unknown then battery level should also report 0.",
      "range": {
        "startLine": 322,
        "startChar": 7,
        "endLine": 323,
        "endChar": 25
      },
      "revId": "5fb4aaf940b96cecd3ce094af4599e90490bb60b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "392fbb94_de0ac53d",
        "filename": "healthd/healthd_mode_charger.cpp",
        "patchSetId": 3
      },
      "lineNbr": 323,
      "author": {
        "id": 1951090
      },
      "writtenOn": "2023-10-10T18:57:55Z",
      "side": 1,
      "message": "This could be an race condition, I do see sometime battery level is updated before battery status. if the checking happen to be in the between, the problem could happen.",
      "parentUuid": "b7d6a8a5_d0caf295",
      "range": {
        "startLine": 322,
        "startChar": 7,
        "endLine": 323,
        "endChar": 25
      },
      "revId": "5fb4aaf940b96cecd3ce094af4599e90490bb60b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "533ad5da_0d7998f0",
        "filename": "healthd/healthd_mode_charger.cpp",
        "patchSetId": 3
      },
      "lineNbr": 323,
      "author": {
        "id": 1951090
      },
      "writtenOn": "2023-10-12T16:59:58Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "392fbb94_de0ac53d",
      "range": {
        "startLine": 322,
        "startChar": 7,
        "endLine": 323,
        "endChar": 25
      },
      "revId": "5fb4aaf940b96cecd3ce094af4599e90490bb60b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6742c8e9_7a497d15",
        "filename": "healthd/healthd_mode_charger.cpp",
        "patchSetId": 3
      },
      "lineNbr": 323,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-10-17T18:17:36Z",
      "side": 1,
      "message": "The race condition happens in the kernel driver. I think the kernel driver should be fixed instead, not healthd",
      "parentUuid": "533ad5da_0d7998f0",
      "range": {
        "startLine": 322,
        "startChar": 7,
        "endLine": 323,
        "endChar": 25
      },
      "revId": "5fb4aaf940b96cecd3ce094af4599e90490bb60b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "4c07cd6c_e15e4880",
        "filename": "healthd/healthd_mode_charger.cpp",
        "patchSetId": 3
      },
      "lineNbr": 323,
      "author": {
        "id": 1951090
      },
      "writtenOn": "2023-10-17T21:16:25Z",
      "side": 1,
      "message": "This does not look like a problem wrt to kernel driver, should the code here consider this scenario? btw, why we are have this \"AND\" condition here:\n\"(health_info_.battery_level \u003d\u003d 0 \u0026\u0026 health_info_.battery_status \u003d\u003d BatteryStatus::UNKNOWN\"?",
      "parentUuid": "6742c8e9_7a497d15",
      "range": {
        "startLine": 322,
        "startChar": 7,
        "endLine": 323,
        "endChar": 25
      },
      "revId": "5fb4aaf940b96cecd3ce094af4599e90490bb60b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ada38842_45236770",
        "filename": "healthd/healthd_mode_charger.cpp",
        "patchSetId": 3
      },
      "lineNbr": 323,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-10-17T21:20:21Z",
      "side": 1,
      "message": "The oldest history I can trace is that this logic came from:\n\nhttps://android-review.git.corp.google.com/c/platform/system/core/+/923014/6/healthd/healthd_mode_charger.cpp",
      "parentUuid": "4c07cd6c_e15e4880",
      "range": {
        "startLine": 322,
        "startChar": 7,
        "endLine": 323,
        "endChar": 25
      },
      "revId": "5fb4aaf940b96cecd3ce094af4599e90490bb60b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48adae23_4d3bda98",
        "filename": "healthd/healthd_mode_charger.cpp",
        "patchSetId": 3
      },
      "lineNbr": 323,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-10-17T21:28:23Z",
      "side": 1,
      "message": "To me, I think the logic was that (based on what I understand, 4 years later after the original change):\n\n- If level \u003d\u003d 0, and status !\u003d UNKNOWN, then the 0 is meaningful (which means that the battery level is indeed 0%)\n- If level !\u003d 0, and status \u003d\u003d UNKNOWN, healthd does not expect this state. But if it does happen due to some unexpected behavior of the kernel driver, then still use the battery level and consider it a meaningful value.\n- If level \u003d\u003d 0 and status \u003d\u003d UNKNOWN, then treat it as the kernel driver telling userspace that \"the battery level is not ready\". Then, wait for `MAX_BATT_LEVEL_WAIT_TIME`.\n\n(IMHO, L310 should only check if status \u003d\u003d UNKNOWN or not but not check level.)\n\n@apelosi@google.com for additional interpretation here.",
      "parentUuid": "ada38842_45236770",
      "range": {
        "startLine": 322,
        "startChar": 7,
        "endLine": 323,
        "endChar": 25
      },
      "revId": "5fb4aaf940b96cecd3ce094af4599e90490bb60b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d510d7a8_42fd4d93",
        "filename": "healthd/healthd_mode_charger.cpp",
        "patchSetId": 3
      },
      "lineNbr": 323,
      "author": {
        "id": 1895601
      },
      "writtenOn": "2023-10-17T21:34:09Z",
      "side": 1,
      "message": "`(IMHO, L310 should only check if status \u003d\u003d UNKNOWN or not but not check level.)`\n\nI also came to that conclusion, but interested to hear what AleX says.",
      "parentUuid": "48adae23_4d3bda98",
      "range": {
        "startLine": 322,
        "startChar": 7,
        "endLine": 323,
        "endChar": 25
      },
      "revId": "5fb4aaf940b96cecd3ce094af4599e90490bb60b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "af81a7a4_622fc57c",
        "filename": "healthd/healthd_mode_charger.cpp",
        "patchSetId": 3
      },
      "lineNbr": 323,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2023-10-18T19:14:24Z",
      "side": 1,
      "message": "Perhaps the question is how we are going to interpret the inconsistent state where status \u003d\u003d UNKNOWN and level !\u003d 0",
      "parentUuid": "d510d7a8_42fd4d93",
      "range": {
        "startLine": 322,
        "startChar": 7,
        "endLine": 323,
        "endChar": 25
      },
      "revId": "5fb4aaf940b96cecd3ce094af4599e90490bb60b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}