{
  "comments": [
    {
      "key": {
        "uuid": "919c0505_8b014ffd",
        "filename": "/COMMIT_MSG",
        "patchSetId": 26
      },
      "lineNbr": 13,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2019-09-23T16:42:58Z",
      "side": 1,
      "message": "event",
      "range": {
        "startLine": 13,
        "startChar": 20,
        "endLine": 13,
        "endChar": 24
      },
      "revId": "6a07dcf1405b7516489b3089ab1acd1c867d01a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "01994183_0fd6c582",
        "filename": "/COMMIT_MSG",
        "patchSetId": 26
      },
      "lineNbr": 14,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2019-09-23T16:42:58Z",
      "side": 1,
      "message": "Could you explain further?",
      "range": {
        "startLine": 13,
        "startChar": 0,
        "endLine": 14,
        "endChar": 67
      },
      "revId": "6a07dcf1405b7516489b3089ab1acd1c867d01a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a7cc242c_f2022434",
        "filename": "/COMMIT_MSG",
        "patchSetId": 26
      },
      "lineNbr": 17,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2019-09-23T16:42:58Z",
      "side": 1,
      "message": "I believe this work is nicer than old since we could have more fine-grained control based on kernel\u0027s action. However, it seems it define many specific rules so want to review such rules step by step to see we could make them more simple.",
      "revId": "6a07dcf1405b7516489b3089ab1acd1c867d01a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dba689b3_dc30849f",
        "filename": "lmkd/lmkd.c",
        "patchSetId": 26
      },
      "lineNbr": 1928,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2019-09-23T16:42:58Z",
      "side": 1,
      "message": "Could we reverse the order of enum?\nSo that, wmark \u003e WMARK_HIGH means no memory pressure.\nwmark \u003e WMARK_LOW means it\u0027s HIGH_MEMORY pressure.\nIt seems to be more straightforward.",
      "range": {
        "startLine": 1925,
        "startChar": 0,
        "endLine": 1928,
        "endChar": 13
      },
      "revId": "6a07dcf1405b7516489b3089ab1acd1c867d01a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "999c1879_c1a4bfaa",
        "filename": "lmkd/lmkd.c",
        "patchSetId": 26
      },
      "lineNbr": 2021,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2019-09-23T16:42:58Z",
      "side": 1,
      "message": "Just a wish(it doesn\u0027t matter this patch): I also want to remove this meminfo because vmstat already has most data for us. A thing is free pages for swap. I hope we could add free swap into vmstat and then, finally remove meminfo.",
      "range": {
        "startLine": 2021,
        "startChar": 8,
        "endLine": 2021,
        "endChar": 21
      },
      "revId": "6a07dcf1405b7516489b3089ab1acd1c867d01a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "46b3cb50_d49e8aeb",
        "filename": "lmkd/lmkd.c",
        "patchSetId": 26
      },
      "lineNbr": 2076,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2019-09-23T16:42:58Z",
      "side": 1,
      "message": "wmark \u003d\u003d WMARK_MIN looks like more straightforward.\nAnd why do we need cycle_after_kill?\nWant to understand your intention.",
      "range": {
        "startLine": 2076,
        "startChar": 28,
        "endLine": 2076,
        "endChar": 45
      },
      "revId": "6a07dcf1405b7516489b3089ab1acd1c867d01a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aa49adbe_60c51457",
        "filename": "lmkd/lmkd.c",
        "patchSetId": 26
      },
      "lineNbr": 2079,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2019-09-23T16:42:58Z",
      "side": 1,
      "message": "Just out of curiosity: Why does it mean ANR?",
      "range": {
        "startLine": 2079,
        "startChar": 15,
        "endLine": 2079,
        "endChar": 61
      },
      "revId": "6a07dcf1405b7516489b3089ab1acd1c867d01a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "413a856f_186913a4",
        "filename": "lmkd/lmkd.c",
        "patchSetId": 26
      },
      "lineNbr": 2088,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2019-09-23T16:42:58Z",
      "side": 1,
      "message": "Why do you want to decay thrashing_limit?\nOnce we understand the goal, I want to make them automatic tune without user intervention.",
      "range": {
        "startLine": 2088,
        "startChar": 37,
        "endLine": 2088,
        "endChar": 64
      },
      "revId": "6a07dcf1405b7516489b3089ab1acd1c867d01a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3d9a072a_551a48c5",
        "filename": "lmkd/lmkd.c",
        "patchSetId": 26
      },
      "lineNbr": 2101,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2019-09-23T16:42:58Z",
      "side": 1,
      "message": "Too specific rules: Could you order strongest option first? and then enumerate next rules step by step with justification. It would make review simple and code maintainable.",
      "revId": "6a07dcf1405b7516489b3089ab1acd1c867d01a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "aedf0e7f_be25e98b",
        "filename": "lmkd/lmkd.c",
        "patchSetId": 26
      },
      "lineNbr": 2105,
      "author": {
        "id": 1275554
      },
      "writtenOn": "2019-09-23T16:42:58Z",
      "side": 1,
      "message": "How about moving killing into find_and_kill_process inside? and set it only if we send kill signal successfully.",
      "range": {
        "startLine": 2105,
        "startChar": 8,
        "endLine": 2105,
        "endChar": 23
      },
      "revId": "6a07dcf1405b7516489b3089ab1acd1c867d01a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}