{
  "comments": [
    {
      "key": {
        "uuid": "7a0a1741_81016327",
        "filename": "fs_mgr/libdm/dm_target.cpp",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-05-09T15:22:09Z",
      "side": 1,
      "message": "nit: (and out of scope) Android coding standard is include all needed, and do not depend on side effects.\n\n#include \u003cstdint.h\u003e\n#include \u003cstdio.h\u003e\n#include \u003csys/types.h\u003e\n\n#include \u003cstring\u003e\n#include \u003cvector\u003e",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 19,
        "endChar": 33
      },
      "revId": "a24f7303699cd5a26bad6d7763a5734d88c96a5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "811277d5_46492a77",
        "filename": "fs_mgr/libdm/dm_target.cpp",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-05-09T15:22:09Z",
      "side": 1,
      "message": "nit: (and out of scope) pretty heavy weight (3us instead of 10\u0027s of ns) implementation of strncpy?",
      "range": {
        "startLine": 46,
        "startChar": 4,
        "endLine": 46,
        "endChar": 81
      },
      "revId": "a24f7303699cd5a26bad6d7763a5734d88c96a5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5a2701f5_f8610549",
        "filename": "fs_mgr/libdm/include/libdm/dm_table.h",
        "patchSetId": 2
      },
      "lineNbr": 46,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-05-09T15:22:09Z",
      "side": 1,
      "message": "nit: style each method here has a descriptive comment (Emplace is obvious), without a comment it does not inherit anything from the comment above.",
      "range": {
        "startLine": 46,
        "startChar": 4,
        "endLine": 46,
        "endChar": 43
      },
      "revId": "a24f7303699cd5a26bad6d7763a5734d88c96a5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77139835_48343aeb",
        "filename": "fs_mgr/libdm/include/libdm/dm_table.h",
        "patchSetId": 2
      },
      "lineNbr": 56,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-05-09T15:22:09Z",
      "side": 1,
      "message": "nit: total",
      "range": {
        "startLine": 56,
        "startChar": 19,
        "endLine": 56,
        "endChar": 24
      },
      "revId": "a24f7303699cd5a26bad6d7763a5734d88c96a5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "951581f8_fc32bdb7",
        "filename": "fs_mgr/libdm/include/libdm/dm_target.h",
        "patchSetId": 2
      },
      "lineNbr": 246,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-05-09T15:22:09Z",
      "side": 1,
      "message": "Q: I am sure this was covered in previous reviews, just checking, no reason to override/empty the default copy constructors etc? Seems to match the pattern in this file.",
      "range": {
        "startLine": 246,
        "startChar": 4,
        "endLine": 246,
        "endChar": 17
      },
      "revId": "a24f7303699cd5a26bad6d7763a5734d88c96a5b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}