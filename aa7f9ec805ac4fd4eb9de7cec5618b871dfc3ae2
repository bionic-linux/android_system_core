{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "56d565f9_3677efc7",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1249117
      },
      "writtenOn": "2021-01-05T17:30:03Z",
      "side": 1,
      "message": "Hi Elliot, could you take a quick a look at this quick ubsan fix? It\u0027s one of the things that keeps cropping up when trying to build Android with Clang 12.\n\nThanks!\nRichard",
      "revId": "aa7f9ec805ac4fd4eb9de7cec5618b871dfc3ae2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "8cad15da_3c4b4225",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1249117
      },
      "writtenOn": "2021-01-06T14:39:23Z",
      "side": 1,
      "message": "(FYI: Yabin Cui - don\u0027t know if you\u0027ve run into this issue yet.)",
      "revId": "aa7f9ec805ac4fd4eb9de7cec5618b871dfc3ae2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "42bfac52_b797f977",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1056364
      },
      "writtenOn": "2021-01-06T18:12:41Z",
      "side": 1,
      "message": "In bug http://b/171275751, I plan to assign the bug to you soon. Currently we disable the sanitizer check in the compiler update, in https://android-review.googlesource.com/c/platform/build/soong/+/1541244/1/cc/sanitize.go. To check the fix, you can use the soong CL and remove changes in sanitize.go.",
      "parentUuid": "8cad15da_3c4b4225",
      "revId": "aa7f9ec805ac4fd4eb9de7cec5618b871dfc3ae2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "cc361a14_44c2d938",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1130573
      },
      "writtenOn": "2021-01-07T00:53:54Z",
      "side": 1,
      "message": "cjdb@ also reported running into this.",
      "revId": "aa7f9ec805ac4fd4eb9de7cec5618b871dfc3ae2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f99f6002_0fc0cac0",
        "filename": "libutils/Unicode.cpp",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2021-01-06T17:16:38Z",
      "side": 1,
      "message": "why 64 rather than 32?",
      "range": {
        "startLine": 144,
        "startChar": 4,
        "endLine": 144,
        "endChar": 12
      },
      "revId": "aa7f9ec805ac4fd4eb9de7cec5618b871dfc3ae2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "556b5ef8_d4facb03",
        "filename": "libutils/Unicode.cpp",
        "patchSetId": 1
      },
      "lineNbr": 144,
      "author": {
        "id": 1249117
      },
      "writtenOn": "2021-01-07T11:51:45Z",
      "side": 1,
      "message": "So I kind of mis-characterized this in the commit message, there are actually two undefined shifts in this function. The first one is (utf32 \u003c\u003c 6), which can be made defined by explicitly treating it as unsigned and masking the top bits off, and the second one is this line:\n\n   utf32 \u0026\u003d ~(to_ignore_mask \u003c\u003c (6 * (num_to_read - 1)));\n\nThis function (if I understand it right) is trying to extract a UTF32 canonical representation from a UTF8 start character. Every UTF32 code-point can be represented in up to 4 UTF-8 bytes, so to have this defined, to_ignore_mask needs be shift-able by 23 bits. That said, mask does _not_ need to be 64-bit, so I\u0027ll fix that in the next patchset.",
      "parentUuid": "f99f6002_0fc0cac0",
      "range": {
        "startLine": 144,
        "startChar": 4,
        "endLine": 144,
        "endChar": 12
      },
      "revId": "aa7f9ec805ac4fd4eb9de7cec5618b871dfc3ae2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}