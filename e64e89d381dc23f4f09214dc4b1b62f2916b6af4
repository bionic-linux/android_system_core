{
  "comments": [
    {
      "key": {
        "uuid": "e3bdfae6_cbe84c7e",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 2
      },
      "lineNbr": 184,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2015-04-03T23:13:24Z",
      "side": 1,
      "message": "I think this is off by a factor of sizeof(*p)\n\nIn my mind, I think of this as\n\nif ((const char *)p + p-\u003elen \u003e end)\n\u003d if ((const char *)p + sizeof(*p) + remainder \u003e end)\n\u003d if (sizeof(*p) + remainder \u003e end - (const char *)p)\n\nWe can again do the first check, then clamp remainder to end - (const char *)p - sizeof(*p);",
      "revId": "e64e89d381dc23f4f09214dc4b1b62f2916b6af4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63f74ae2_a0aae34c",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 2
      },
      "lineNbr": 184,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-04-03T23:22:24Z",
      "side": 1,
      "message": "Good catch, I split \u0027end; and \u0027e\u0027 to reduce the confusion about \u0027e\u0027 in your previous comments, then I made the blind mistake of replacing e with end trying to get some savings on the casts I had here before.",
      "parentUuid": "e3bdfae6_cbe84c7e",
      "revId": "e64e89d381dc23f4f09214dc4b1b62f2916b6af4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3bdfae6_c6ba834e",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 2
      },
      "lineNbr": 184,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2015-04-03T23:44:42Z",
      "side": 1,
      "message": "Any thought on using just if ((const char *)p + p-\u003elen \u003e end) ?  It\u0027s more intuitive to me and since remainder is calculated from those values it will also be checked for correctness.",
      "parentUuid": "63f74ae2_a0aae34c",
      "revId": "e64e89d381dc23f4f09214dc4b1b62f2916b6af4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e3bdfae6_0b0884e0",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 2
      },
      "lineNbr": 188,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2015-04-03T23:13:24Z",
      "side": 1,
      "message": "I don\u0027t think we need the \u003e check\n\nstrnlen is going to cap len to remainder which already is at most (end - (const char *)p), so this condition cannot be \u003e.\n\nThe \u003d\u003d part of the check is still important in case we don\u0027t hit a \\0 before the end of the string",
      "revId": "e64e89d381dc23f4f09214dc4b1b62f2916b6af4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63f74ae2_40bb2fb2",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 2
      },
      "lineNbr": 188,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-04-03T23:22:24Z",
      "side": 1,
      "message": "Should be e - p. \u0027\u003e\u003d\u0027 costs us nothing, and guarantees reliability when other hands get into here. It is a code robustness issue. Pedantics will lead us to \u003d\u003d and if someone makes a mistake adjusting the code above this in the future, we will live another day.\n\nNB: the mess above is cousin to the type of programming mistake I hope to catch with \u003e\u003d",
      "parentUuid": "e3bdfae6_0b0884e0",
      "revId": "e64e89d381dc23f4f09214dc4b1b62f2916b6af4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63f74ae2_1be36621",
        "filename": "libcutils/fs_config.c",
        "patchSetId": 2
      },
      "lineNbr": 188,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2015-04-03T23:44:42Z",
      "side": 1,
      "message": "Sounds reasonable.",
      "parentUuid": "63f74ae2_40bb2fb2",
      "revId": "e64e89d381dc23f4f09214dc4b1b62f2916b6af4",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}