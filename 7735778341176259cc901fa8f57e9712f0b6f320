{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "8b3b5ffc_ccd59bb9",
        "filename": "libutils/String16_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-10-22T00:35:23Z",
      "side": 1,
      "message": "can you also document these (perhaps once before the utf-16 section and once before the utf-8 section), to explain the behavior for invalid codings?\n\nobviously - this isn\u0027t such a great behavior, but we can\u0027t change it. It might be interesting to see when/how often this is hit in practice.",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 51,
        "endChar": 68
      },
      "revId": "7735778341176259cc901fa8f57e9712f0b6f320",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "48dbdec8_2b30dc05",
        "filename": "libutils/String16_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 51,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-10-22T17:58:25Z",
      "side": 1,
      "message": "this comment was on L51 of String16.h - I\u0027ll investigate and file a bug on gerrit.",
      "parentUuid": "8b3b5ffc_ccd59bb9",
      "range": {
        "startLine": 43,
        "startChar": 0,
        "endLine": 51,
        "endChar": 68
      },
      "revId": "7735778341176259cc901fa8f57e9712f0b6f320",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "9674e886_b70c930d",
        "filename": "libutils/String16_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 218,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-10-22T00:35:23Z",
      "side": 1,
      "message": "nit: could you also add and document this on String8 for symmetry?",
      "range": {
        "startLine": 218,
        "startChar": 5,
        "endLine": 218,
        "endChar": 17
      },
      "revId": "7735778341176259cc901fa8f57e9712f0b6f320",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "380aea6d_0aa8c819",
        "filename": "libutils/String16_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 218,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2020-10-22T15:22:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "9674e886_b70c930d",
      "range": {
        "startLine": 218,
        "startChar": 5,
        "endLine": 218,
        "endChar": 17
      },
      "revId": "7735778341176259cc901fa8f57e9712f0b6f320",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "48a200d8_95f6851c",
        "filename": "libutils/String16_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 229,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2020-10-22T00:35:23Z",
      "side": 1,
      "message": "nit: don\u0027t mix upper and lowercase hex characters",
      "range": {
        "startLine": 229,
        "startChar": 15,
        "endLine": 229,
        "endChar": 17
      },
      "revId": "7735778341176259cc901fa8f57e9712f0b6f320",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "241dfd8c_fc4aff39",
        "filename": "libutils/String16_test.cpp",
        "patchSetId": 1
      },
      "lineNbr": 229,
      "author": {
        "id": 1644679
      },
      "writtenOn": "2020-10-22T15:22:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "48a200d8_95f6851c",
      "range": {
        "startLine": 229,
        "startChar": 15,
        "endLine": 229,
        "endChar": 17
      },
      "revId": "7735778341176259cc901fa8f57e9712f0b6f320",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}