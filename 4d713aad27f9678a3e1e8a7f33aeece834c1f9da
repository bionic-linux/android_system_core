{
  "comments": [
    {
      "key": {
        "uuid": "066eea3f_24a592ef",
        "filename": "init/service.cpp",
        "patchSetId": 8
      },
      "lineNbr": 234,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-10-31T16:10:36Z",
      "side": 1,
      "message": "We only need this if uid_ is set.\n\nAlso, we should clear KEEPCAPS _after_ we set the uid as the assumption in the executables is that this is always clear unless they set it (i.e.: make them work for their crumbs)",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 234,
        "endChar": 5
      },
      "revId": "4d713aad27f9678a3e1e8a7f33aeece834c1f9da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "662326ed_4d860daf",
        "filename": "init/service.cpp",
        "patchSetId": 8
      },
      "lineNbr": 234,
      "author": {
        "id": 1076138
      },
      "writtenOn": "2016-10-31T16:25:29Z",
      "side": 1,
      "message": "I don\u0027t think that\u0027s necessarily true. It\u0027s possible for a process to keep UID\u003d0 but drop caps, and if you drop CAP_SETPCAP and the bounding set, you won\u0027t be able to gain those caps back.\n\nAs for KEEPCAPS, the capabilities(7) man page confirms it\u0027s cleared on execve(2):\nSECBIT_KEEP_CAPS\n\"This flag is always cleared  on  an  execve(2).   (This  flag  provides the same functionality as the older prctl(2) PR_SET_KEEPCAPS operation.)\n\nWe could lock the secure bit if we were being extra paranoid but since we\u0027re dropping the bounding set, there\u0027s no extra caps that can ever be gained.\n\nWe could also set no-new-privs if we wanted to be extra paranoid.",
      "parentUuid": "066eea3f_24a592ef",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 234,
        "endChar": 5
      },
      "revId": "4d713aad27f9678a3e1e8a7f33aeece834c1f9da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "066eea3f_c4df5e4c",
        "filename": "init/service.cpp",
        "patchSetId": 8
      },
      "lineNbr": 234,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-10-31T16:54:21Z",
      "side": 1,
      "message": "You misunderstand. KEEPCAPS _only_ is required so that setuid() does not drop the capability set. You only run setuid if uid_ is not zero. This is all about keeping attack surfaces minimized, do not ask for things you do not need. CAP_SETPCAP remains because you did not do a setuid() ...",
      "parentUuid": "662326ed_4d860daf",
      "range": {
        "startLine": 232,
        "startChar": 0,
        "endLine": 234,
        "endChar": 5
      },
      "revId": "4d713aad27f9678a3e1e8a7f33aeece834c1f9da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "066eea3f_c4d67e50",
        "filename": "init/service.cpp",
        "patchSetId": 8
      },
      "lineNbr": 245,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-10-31T16:10:36Z",
      "side": 1,
      "message": "You will need CAP_SETGID for this, but if we do this, do we want to specifically block CAP_SETGID for the exec? Either we do it, or the executable does it, but not both?\n\nHmm, maybe outside the cope of this change, come to think of it, if supp_gids is empty, maybe we should make sure setgroups empties the supp_gids?",
      "range": {
        "startLine": 245,
        "startChar": 12,
        "endLine": 245,
        "endChar": 64
      },
      "revId": "4d713aad27f9678a3e1e8a7f33aeece834c1f9da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "662326ed_8d676543",
        "filename": "init/service.cpp",
        "patchSetId": 8
      },
      "lineNbr": 245,
      "author": {
        "id": 1076138
      },
      "writtenOn": "2016-10-31T16:25:29Z",
      "side": 1,
      "message": "We don\u0027t. The only thing done above is settings KEEPCAPS. Capabilities are actually dropped below, in the SetCapsForExec() function, so at this point the process can still do whatever it wants.",
      "parentUuid": "066eea3f_c4d67e50",
      "range": {
        "startLine": 245,
        "startChar": 12,
        "endLine": 245,
        "endChar": 64
      },
      "revId": "4d713aad27f9678a3e1e8a7f33aeece834c1f9da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "066eea3f_245af20a",
        "filename": "init/service.cpp",
        "patchSetId": 8
      },
      "lineNbr": 245,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-10-31T16:54:21Z",
      "side": 1,
      "message": "But that is the point, if we restrict/set the groups here, then we may not wish to allow the exec\u0027d process to do so?\n\nI recant in any case, because if we restrict it here, we should still allow the underlying process to restrict it further ... but my worry remains is that it could be allowed to grow the set.",
      "parentUuid": "662326ed_8d676543",
      "range": {
        "startLine": 245,
        "startChar": 12,
        "endLine": 245,
        "endChar": 64
      },
      "revId": "4d713aad27f9678a3e1e8a7f33aeece834c1f9da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "066eea3f_84b3a635",
        "filename": "init/service.cpp",
        "patchSetId": 8
      },
      "lineNbr": 252,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-10-31T16:10:36Z",
      "side": 1,
      "message": "expect we should clear KEEPCAPS here?",
      "range": {
        "startLine": 252,
        "startChar": 8,
        "endLine": 252,
        "endChar": 9
      },
      "revId": "4d713aad27f9678a3e1e8a7f33aeece834c1f9da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "662326ed_ad6a290b",
        "filename": "init/service.cpp",
        "patchSetId": 8
      },
      "lineNbr": 252,
      "author": {
        "id": 1076138
      },
      "writtenOn": "2016-10-31T16:25:29Z",
      "side": 1,
      "message": "Why? The process is dying.",
      "parentUuid": "066eea3f_84b3a635",
      "range": {
        "startLine": 252,
        "startChar": 8,
        "endLine": 252,
        "endChar": 9
      },
      "revId": "4d713aad27f9678a3e1e8a7f33aeece834c1f9da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "066eea3f_6464ead1",
        "filename": "init/service.cpp",
        "patchSetId": 8
      },
      "lineNbr": 252,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-10-31T16:54:21Z",
      "side": 1,
      "message": "I tagged the fall-through, not the failure case.\n\nIf uid_ is set, and we have ran setuid, then KEEPCAPS has done its job and we do not need it anymore. This is based on the new code above which set KEEPCAPS in order for this mechanics to work.",
      "parentUuid": "662326ed_ad6a290b",
      "range": {
        "startLine": 252,
        "startChar": 8,
        "endLine": 252,
        "endChar": 9
      },
      "revId": "4d713aad27f9678a3e1e8a7f33aeece834c1f9da",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}