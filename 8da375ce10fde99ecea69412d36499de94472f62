{
  "comments": [
    {
      "key": {
        "uuid": "f9490475_5f792f88",
        "filename": "libunwindstack/Symbols.cpp",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2020-04-14T09:25:29Z",
      "side": 1,
      "message": "Stable-sort as in we also compare a \u003c b if addrs[a] \u003d\u003d addrs[b]? Otherwise, for a real stable sort, there is https://en.cppreference.com/w/cpp/algorithm/stable_sort.",
      "range": {
        "startLine": 90,
        "startChar": 7,
        "endLine": 90,
        "endChar": 18
      },
      "revId": "8da375ce10fde99ecea69412d36499de94472f62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5a20f14c_8e189041",
        "filename": "libunwindstack/Symbols.cpp",
        "patchSetId": 4
      },
      "lineNbr": 90,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-04-14T09:55:26Z",
      "side": 1,
      "message": "Correct.  Explicit stable-sort allocates extra memory.  This way we get it for free.",
      "parentUuid": "f9490475_5f792f88",
      "range": {
        "startLine": 90,
        "startChar": 7,
        "endLine": 90,
        "endChar": 18
      },
      "revId": "8da375ce10fde99ecea69412d36499de94472f62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5e45b4c7_d4782720",
        "filename": "libunwindstack/Symbols.cpp",
        "patchSetId": 4
      },
      "lineNbr": 92,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2020-04-14T09:25:29Z",
      "side": 1,
      "message": "nit: maybe use std::tie(addrs[a], a) \u003c std::tie(addrs[b], b) instead. Comparisons like that are even an example here https://en.cppreference.com/w/cpp/utility/tuple/tie",
      "range": {
        "startLine": 92,
        "startChar": 13,
        "endLine": 92,
        "endChar": 73
      },
      "revId": "8da375ce10fde99ecea69412d36499de94472f62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a539ecd_d25ffa8f",
        "filename": "libunwindstack/Symbols.cpp",
        "patchSetId": 4
      },
      "lineNbr": 92,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-04-14T09:55:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "5e45b4c7_d4782720",
      "range": {
        "startLine": 92,
        "startChar": 13,
        "endLine": 92,
        "endChar": 73
      },
      "revId": "8da375ce10fde99ecea69412d36499de94472f62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "e1297218_1707c043",
        "filename": "libunwindstack/Symbols.cpp",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2020-04-14T09:25:29Z",
      "side": 1,
      "message": "const",
      "range": {
        "startLine": 127,
        "startChar": 2,
        "endLine": 127,
        "endChar": 10
      },
      "revId": "8da375ce10fde99ecea69412d36499de94472f62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f885a936_1b62308c",
        "filename": "libunwindstack/Symbols.cpp",
        "patchSetId": 4
      },
      "lineNbr": 127,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-04-14T09:55:26Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "e1297218_1707c043",
      "range": {
        "startLine": 127,
        "startChar": 2,
        "endLine": 127,
        "endChar": 10
      },
      "revId": "8da375ce10fde99ecea69412d36499de94472f62",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}