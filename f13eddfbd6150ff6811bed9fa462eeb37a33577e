{
  "comments": [
    {
      "key": {
        "uuid": "0d1cbe62_591c11e8",
        "filename": "fs_mgr/libsnapshot/estimate_cow_from_nonab_ota.cpp",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 1598726
      },
      "writtenOn": "2020-09-04T00:28:31Z",
      "side": 1,
      "message": "Some sort of log entry would be useful here.  As far as I can tell this will just exit(1) without any messages if users point it at an invalid directory, which would leave me guessing.",
      "revId": "f13eddfbd6150ff6811bed9fa462eeb37a33577e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "05dd343f_dbf1bcfc",
        "filename": "fs_mgr/libsnapshot/estimate_cow_from_nonab_ota.cpp",
        "patchSetId": 2
      },
      "lineNbr": 277,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2020-09-04T00:34:48Z",
      "side": 1,
      "message": "I double checked and I think every path through OpenImage will print on error (or log, but logs are redirected to stdout/stderr).",
      "parentUuid": "0d1cbe62_591c11e8",
      "revId": "f13eddfbd6150ff6811bed9fa462eeb37a33577e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2905c84b_9fa7ddb6",
        "filename": "fs_mgr/libsnapshot/estimate_cow_from_nonab_ota.cpp",
        "patchSetId": 2
      },
      "lineNbr": 296,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2020-09-04T01:51:02Z",
      "side": 1,
      "message": "GetBlockMap() can theoretically return empty map on error. It looks like if we don\u0027t handle this error, we may inadvertently consider an operation to be a replace operation.",
      "revId": "f13eddfbd6150ff6811bed9fa462eeb37a33577e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6ab0c157_6384ba6b",
        "filename": "fs_mgr/libsnapshot/estimate_cow_from_nonab_ota.cpp",
        "patchSetId": 2
      },
      "lineNbr": 348,
      "author": {
        "id": 1724998
      },
      "writtenOn": "2020-09-04T01:51:02Z",
      "side": 1,
      "message": "Since we are calculating offsets for every read, both these syscalls can be combined into a single pread syscall by passing offset - I see wrapper ReadFullyAtOffset(...)",
      "revId": "f13eddfbd6150ff6811bed9fa462eeb37a33577e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}