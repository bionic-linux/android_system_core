{
  "comments": [
    {
      "key": {
        "uuid": "50859788_8a9dec89",
        "filename": "libnativebridge/native_bridge.cc",
        "patchSetId": 2
      },
      "lineNbr": 244,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-09-26T05:57:50Z",
      "side": 1,
      "message": "sizeof(cpuinfo_path) here and below",
      "revId": "f577f6841c7769955d3a4bf2e6411d452a49829b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "103ddf9e_0e166b67",
        "filename": "libnativebridge/native_bridge.cc",
        "patchSetId": 2
      },
      "lineNbr": 244,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-09-26T06:01:53Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "50859788_8a9dec89",
      "revId": "f577f6841c7769955d3a4bf2e6411d452a49829b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5053d7fc_0446468a",
        "filename": "libnativebridge/tests/NeedsNativeBridge_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2014-09-26T05:51:02Z",
      "side": 1,
      "message": "I\u0027d also include entries like:\n\n* 64arm\n* 64_x86\n* 64_x86_64\n* \"\" (empty string)\n\nmaybe also check what happens when you call \"NeedsNativeBridge(NULL)\"?",
      "revId": "f577f6841c7769955d3a4bf2e6411d452a49829b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "103ddf9e_8ef89be3",
        "filename": "libnativebridge/tests/NeedsNativeBridge_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2014-09-26T05:52:46Z",
      "side": 1,
      "message": "also, a test for strings longer than 10 characters?\n\n\"arm_64_emulator_for_x86_64\"",
      "parentUuid": "5053d7fc_0446468a",
      "revId": "f577f6841c7769955d3a4bf2e6411d452a49829b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "704e1b58_e63a24b0",
        "filename": "libnativebridge/tests/NeedsNativeBridge_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-09-26T05:57:21Z",
      "side": 1,
      "message": "nullptr is not checked ATM, as we\u0027re expecting a real string (and the frameworks code is honoring that). I\u0027ll make it more defensive.",
      "parentUuid": "5053d7fc_0446468a",
      "revId": "f577f6841c7769955d3a4bf2e6411d452a49829b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "103ddf9e_ce2b839d",
        "filename": "libnativebridge/tests/NeedsNativeBridge_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 21,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-09-26T05:58:42Z",
      "side": 1,
      "message": "I am not sure whether I want this to be consistent with PreInitialize. This was meant as a fast function comparing instruction sets (as the documentation of the interface says), not whether the instruction set itself is valid.",
      "parentUuid": "103ddf9e_8ef89be3",
      "revId": "f577f6841c7769955d3a4bf2e6411d452a49829b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "103ddf9e_aed4775a",
        "filename": "libnativebridge/tests/NeedsNativeBridge_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-09-26T05:47:12Z",
      "side": 1,
      "message": "can\u0027t this just be \n\nGetInstructionSetString(kRuntimeISA)",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 35,
        "endChar": 6
      },
      "revId": "f577f6841c7769955d3a4bf2e6411d452a49829b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5053d7fc_a4465a8b",
        "filename": "libnativebridge/tests/NeedsNativeBridge_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 35,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-09-26T05:49:16Z",
      "side": 1,
      "message": "This is independent of ART, so no.",
      "parentUuid": "103ddf9e_aed4775a",
      "range": {
        "startLine": 23,
        "startChar": 0,
        "endLine": 35,
        "endChar": 6
      },
      "revId": "f577f6841c7769955d3a4bf2e6411d452a49829b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50859788_aa9ab08d",
        "filename": "libnativebridge/tests/NeedsNativeBridge_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-09-26T05:57:50Z",
      "side": 1,
      "message": "isn\u0027t art all 2-space indent?",
      "revId": "f577f6841c7769955d3a4bf2e6411d452a49829b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "704e1b58_864cf855",
        "filename": "libnativebridge/tests/NeedsNativeBridge_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 38,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-09-26T06:01:53Z",
      "side": 1,
      "message": "I followed it in the lib code. All tests outside of ART that I could find used 4-space, no matter what their library code does. So all the tests are 4-space indent here.",
      "parentUuid": "50859788_aa9ab08d",
      "revId": "f577f6841c7769955d3a4bf2e6411d452a49829b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "704e1b58_663634d3",
        "filename": "libnativebridge/tests/PreInitializeNativeBridge_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 1003723
      },
      "writtenOn": "2014-09-26T05:47:12Z",
      "side": 1,
      "message": "check result?",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 28
      },
      "revId": "f577f6841c7769955d3a4bf2e6411d452a49829b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5053d7fc_e4406271",
        "filename": "libnativebridge/tests/PreInitializeNativeBridge_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-09-26T05:49:16Z",
      "side": 1,
      "message": "What would be your suggested reaction? Just a printf, or an EXPECT failure, failing the test?",
      "parentUuid": "704e1b58_663634d3",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 28
      },
      "revId": "f577f6841c7769955d3a4bf2e6411d452a49829b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50859788_ea1cb85a",
        "filename": "libnativebridge/tests/PreInitializeNativeBridge_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-09-26T05:57:50Z",
      "side": 1,
      "message": "in the bionic tests we\u0027d have ASSERT_EQ(0, ...);",
      "parentUuid": "5053d7fc_e4406271",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 28
      },
      "revId": "f577f6841c7769955d3a4bf2e6411d452a49829b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "103ddf9e_8e4a5b6f",
        "filename": "libnativebridge/tests/PreInitializeNativeBridge_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 57,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-09-26T06:01:53Z",
      "side": 1,
      "message": "One of the problems I have overall with the ASSERT: there\u0027s no cleanup here. If we fail to open /proc/cpuinfo, the file will remain. But using EXPECT and running over failures will create other errors.",
      "parentUuid": "50859788_ea1cb85a",
      "range": {
        "startLine": 57,
        "startChar": 0,
        "endLine": 57,
        "endChar": 28
      },
      "revId": "f577f6841c7769955d3a4bf2e6411d452a49829b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "50859788_ca17f435",
        "filename": "libnativebridge/tests/PreInitializeNativeBridge_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2014-09-26T05:57:50Z",
      "side": 1,
      "message": "GTEST_LOG_(INFO)?",
      "revId": "f577f6841c7769955d3a4bf2e6411d452a49829b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5053d7fc_1fe4cf43",
        "filename": "libnativebridge/tests/PreInitializeNativeBridge_test.cpp",
        "patchSetId": 2
      },
      "lineNbr": 60,
      "author": {
        "id": 1041833
      },
      "writtenOn": "2014-09-26T06:01:53Z",
      "side": 1,
      "message": "Thanks for that. I never found the right thing for the gtest.",
      "parentUuid": "50859788_ca17f435",
      "revId": "f577f6841c7769955d3a4bf2e6411d452a49829b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}