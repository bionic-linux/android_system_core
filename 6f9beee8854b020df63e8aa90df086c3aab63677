{
  "comments": [
    {
      "key": {
        "uuid": "60f16423_7d6590d4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 2
      },
      "lineNbr": 14,
      "author": {
        "id": 1432579
      },
      "writtenOn": "2020-01-16T21:39:28Z",
      "side": 1,
      "message": "Still running",
      "range": {
        "startLine": 14,
        "startChar": 6,
        "endLine": 14,
        "endChar": 40
      },
      "revId": "6f9beee8854b020df63e8aa90df086c3aab63677",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "60cacc9b_cb7223fe",
        "filename": "bootstat/bootstat.rc",
        "patchSetId": 2
      },
      "lineNbr": 75,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2020-01-16T22:17:51Z",
      "side": 1,
      "message": "Will this ever trigger before sys.boot_completed\u003d1 happens? If that is the case, then this fragment may prevent bootstat from running. AFAIK zygote starting / stopping may also have a similar issue. By putting the filter on line 65, I am wondering if we now have a case where bootstat does not run at all if either crashes? AFAIK this is not the case, but if it is, then our state machine needs another filter. Given that userspace_reboot_requested clears sys.boot_completed\u003d\"\" we may be in an untenable situation to detect this without coincident adjustments in rootdir/init.rc or burning another variable?",
      "range": {
        "startLine": 73,
        "startChar": 0,
        "endLine": 75,
        "endChar": 31
      },
      "revId": "6f9beee8854b020df63e8aa90df086c3aab63677",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "86fb5ca9_c9ed25f0",
        "filename": "bootstat/bootstat.rc",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2020-01-16T22:17:51Z",
      "side": 1,
      "message": "Hmmmm, a KISS idea: add after this exec_background \u0027setprop sys.logbootcomplete 0\u0027, maybe that will solve the problem of even adding the on userspace-reboot-requested above on line 73 or even the existing rule for zygote on line 70.",
      "range": {
        "startLine": 89,
        "startChar": 4,
        "endLine": 89,
        "endChar": 137
      },
      "revId": "6f9beee8854b020df63e8aa90df086c3aab63677",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e7b702e2_70788f7b",
        "filename": "bootstat/bootstat.rc",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1432579
      },
      "writtenOn": "2020-01-16T23:22:51Z",
      "side": 1,
      "message": "AFAIU with exec_background init will start bootstat, but then carry on processing next action. This means, if we trigger userspace reboot before bootstat finishes we will never have boot statistics collected. What do you think about setting sys.logbootcomplete to 0 inside bootstat.cpp?",
      "parentUuid": "86fb5ca9_c9ed25f0",
      "range": {
        "startLine": 89,
        "startChar": 4,
        "endLine": 89,
        "endChar": 137
      },
      "revId": "6f9beee8854b020df63e8aa90df086c3aab63677",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d42fc246_c38385f2",
        "filename": "bootstat/bootstat.rc",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2020-01-17T00:00:32Z",
      "side": 1,
      "message": "I do not have a problem with sys.logbootcomplete being set to 0 inside bootstat.cpp, but it has to be commanded in an option since we also run bootstat on line 81 (which BTW is our implicit guarantee that zygote must start before sys.boot_completed\u003d1, and thus could stop before sys.boot_completed\u003d1 too answering my worry above).\n\nYou will discover that on zygote-start happens to cause bootstat to run multiple times as well for a different reason through userspace-reboot-requests ... \u003cooops\u003e\n\nbootstat takes ~50ms to complete if memory serves, so the race might not be a worry, not even sure a subsystem restart will even kill a exec_background in the first place.\n\nYes, this is still a bit of a \u0027thinker\u0027 isn\u0027t it. Thinking we need a pair sys.bootstat.boot_complete (renamed) and sys.bootstat.zygote_start, one for each exec_background and flip a coin as to whether it is worth it to set to \u00270\u0027 the associated property in --record_time_since_factory_reset and --set_system_boot_reason respectively or in this initrc directly so that maintenance is clearer (~50ms window of failure may be worth the price so that everyone can see it happening here).",
      "parentUuid": "e7b702e2_70788f7b",
      "range": {
        "startLine": 89,
        "startChar": 4,
        "endLine": 89,
        "endChar": 137
      },
      "revId": "6f9beee8854b020df63e8aa90df086c3aab63677",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a868a886_9674ea56",
        "filename": "bootstat/bootstat.rc",
        "patchSetId": 2
      },
      "lineNbr": 89,
      "author": {
        "id": 1432579
      },
      "writtenOn": "2020-01-17T18:36:08Z",
      "side": 1,
      "message": "Introduced two different properties:\nsys.bootstat.first_zygote_start and sys.bootstat.first_boot_completed.\n\nPTAL, if you agree with the idea, will update all the references to sys.logbootcomplete, to use  sys.bootstat.first_boot_completed instead.",
      "parentUuid": "d42fc246_c38385f2",
      "range": {
        "startLine": 89,
        "startChar": 4,
        "endLine": 89,
        "endChar": 137
      },
      "revId": "6f9beee8854b020df63e8aa90df086c3aab63677",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}