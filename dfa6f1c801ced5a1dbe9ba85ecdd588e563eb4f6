{
  "comments": [
    {
      "key": {
        "uuid": "712670ec_b77f743c",
        "filename": "fs_mgr/libdm/include/libdm/dm.h",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2019-07-29T22:55:08Z",
      "side": 1,
      "message": "nit: std::optional\n\nor let GetDetailedInfo return std::optional\u003cInfo\u003e and drop the valid_ boolean (I like this one better)",
      "range": {
        "startLine": 74,
        "startChar": 8,
        "endLine": 76,
        "endChar": 0
      },
      "revId": "dfa6f1c801ced5a1dbe9ba85ecdd588e563eb4f6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "896050a9_0f9cacfd",
        "filename": "fs_mgr/libdm/include/libdm/dm.h",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-07-29T23:02:45Z",
      "side": 1,
      "message": "Or bool return, Info outparam would work.",
      "parentUuid": "712670ec_b77f743c",
      "range": {
        "startLine": 74,
        "startChar": 8,
        "endLine": 76,
        "endChar": 0
      },
      "revId": "dfa6f1c801ced5a1dbe9ba85ecdd588e563eb4f6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b447a8c4_9b4aacc8",
        "filename": "fs_mgr/libdm/include/libdm/dm.h",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1409599
      },
      "writtenOn": "2019-07-29T23:19:53Z",
      "side": 1,
      "message": "I didn\u0027t know about this std::optional.\nI like it, but it makes me feel old. :P",
      "parentUuid": "896050a9_0f9cacfd",
      "range": {
        "startLine": 74,
        "startChar": 8,
        "endLine": 76,
        "endChar": 0
      },
      "revId": "dfa6f1c801ced5a1dbe9ba85ecdd588e563eb4f6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "414f1414_03327b37",
        "filename": "fs_mgr/libdm/include/libdm/dm.h",
        "patchSetId": 3
      },
      "lineNbr": 76,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2019-07-29T23:23:52Z",
      "side": 1,
      "message": "I personally like std::optional because all \"output\" is in the return type and there won\u0027t be any outparams.\n\nThere are a lot of nice (or not nice) things that we can start using since C++14.",
      "parentUuid": "896050a9_0f9cacfd",
      "range": {
        "startLine": 74,
        "startChar": 8,
        "endLine": 76,
        "endChar": 0
      },
      "revId": "dfa6f1c801ced5a1dbe9ba85ecdd588e563eb4f6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ffa08236_bb630d8b",
        "filename": "fs_mgr/libdm/include/libdm/dm.h",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1121838
      },
      "writtenOn": "2019-07-29T22:55:08Z",
      "side": 1,
      "message": "nit: initialize flags_ to 0 (some functions return indeterminate value now)",
      "range": {
        "startLine": 78,
        "startChar": 30,
        "endLine": 78,
        "endChar": 31
      },
      "revId": "dfa6f1c801ced5a1dbe9ba85ecdd588e563eb4f6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4f04789f_99c60c80",
        "filename": "fs_mgr/libdm/include/libdm/dm.h",
        "patchSetId": 3
      },
      "lineNbr": 78,
      "author": {
        "id": 1409599
      },
      "writtenOn": "2019-07-29T23:19:53Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "ffa08236_bb630d8b",
      "range": {
        "startLine": 78,
        "startChar": 30,
        "endLine": 78,
        "endChar": 31
      },
      "revId": "dfa6f1c801ced5a1dbe9ba85ecdd588e563eb4f6",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}