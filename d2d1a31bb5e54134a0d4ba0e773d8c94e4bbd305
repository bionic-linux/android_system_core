{
  "comments": [
    {
      "key": {
        "uuid": "9d629ef4_936ce2ab",
        "filename": "libsparse/include/sparse/sparse.h",
        "patchSetId": 1
      },
      "lineNbr": 309,
      "author": {
        "id": 1156728
      },
      "writtenOn": "2017-04-20T18:43:28Z",
      "side": 1,
      "message": "fix my format.",
      "revId": "d2d1a31bb5e54134a0d4ba0e773d8c94e4bbd305",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2ed2a8a7_def21d9f",
        "filename": "libsparse/sparse_utils.c",
        "patchSetId": 1
      },
      "lineNbr": 278,
      "author": {
        "id": 1156728
      },
      "writtenOn": "2017-04-20T18:43:28Z",
      "side": 1,
      "message": "Set ret \u003d sparse_file_write(...) and then return it at the bottom of the function, to avoid an extra return.",
      "revId": "d2d1a31bb5e54134a0d4ba0e773d8c94e4bbd305",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "63720878_85db61cc",
        "filename": "libsparse/sparse_utils.c",
        "patchSetId": 1
      },
      "lineNbr": 278,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2017-04-20T22:20:10Z",
      "side": 1,
      "message": "(generally we want to move in the opposite direction: use enough C++ that you don\u0027t need to worry about manual cleanup, and you can just `return` with impunity. so here you\u0027d have a std::unique_ptr for `s` and it would call sparse_file_destroy no matter how you leave the function.)",
      "parentUuid": "2ed2a8a7_def21d9f",
      "revId": "d2d1a31bb5e54134a0d4ba0e773d8c94e4bbd305",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}