{
  "comments": [
    {
      "key": {
        "uuid": "b1e48bf7_74d43206",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1529,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-10-05T21:55:12Z",
      "side": 1,
      "message": "Although I have not experienced problems with this, it too could be spammy and could enjoy a similar improvement mechanism?",
      "range": {
        "startLine": 1529,
        "startChar": 16,
        "endLine": 1529,
        "endChar": 88
      },
      "revId": "49f3964b5ecfb029a09ddf19782cf5bebcc7df37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "2f942466_6dd660e5",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1529,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-10-08T20:30:19Z",
      "side": 1,
      "message": "Dropping c.str() in this CL, moved into an exception case rather than an else.",
      "parentUuid": "b1e48bf7_74d43206",
      "range": {
        "startLine": 1529,
        "startChar": 16,
        "endLine": 1529,
        "endChar": 88
      },
      "revId": "49f3964b5ecfb029a09ddf19782cf5bebcc7df37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "f38ce826_50458cf1",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1545,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-10-05T21:55:12Z",
      "side": 1,
      "message": "I _know_ that the errno could be invalidated by another error in the above loop. In all situations where line 1519 spammed up with noise, the errno was correct. What I need to know is how important is the value of this errno? I opted for KISS b/c this is debugging and the reduction of the resolution of errno is the price to pay for \u0027less log lines\u0027.",
      "range": {
        "startLine": 1545,
        "startChar": 8,
        "endLine": 1545,
        "endChar": 9
      },
      "revId": "49f3964b5ecfb029a09ddf19782cf5bebcc7df37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e4822715_9bbe9b07",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1545,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-10-05T22:04:03Z",
      "side": 1,
      "message": "Not too sure how important it is; probably better to drop the \u0027P\u0027 here since it\u0027s not guaranteed to be right.\n\nHow actually spammy was this?  I approved this and all, but I do question how bad the situation was?  How rare are these errors?  I\u0027m guessing you\u0027re having trouble since this function checks every partition each time you\u0027re querying only a single one in overlayfs?\n\nAlternatively, could this function be split into two, with a separate one that takes a single fstab_rec as an input, since that\u0027s how you\u0027re using it for overlayfs.  Doesn\u0027t make sense to check the verity status of all partitions each time when you\u0027re querying one specific one anyway.  In that case, that function can not log, then the per-line logs of this function are a lot more tolerable.",
      "parentUuid": "f38ce826_50458cf1",
      "range": {
        "startLine": 1545,
        "startChar": 8,
        "endLine": 1545,
        "endChar": 9
      },
      "revId": "49f3964b5ecfb029a09ddf19782cf5bebcc7df37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a4777b00_3a579f52",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1545,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-10-05T22:23:06Z",
      "side": 1,
      "message": "On blueline, it had a triplet times 3 for any system with verity disabled. After change, it reported 3 identical lines (which in the logger reduces to _one_ kind\u0027a since they are adjacent).\n\nWe could leave this bit of logging along, and get a major gain I guess if we could pass into this function the raw mount_point (to match with fstab-\u003erecs[i].mount_point), if nullptr do them all? We do not have a \u0027rec\u0027 to play with for \u0027/\u0027 or \"/system\" (or vroot) in first stage init, so I am getting real nervous about that!\n\nI will consider alternatives.",
      "parentUuid": "e4822715_9bbe9b07",
      "range": {
        "startLine": 1545,
        "startChar": 8,
        "endLine": 1545,
        "endChar": 9
      },
      "revId": "49f3964b5ecfb029a09ddf19782cf5bebcc7df37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "79add7e2_f20a9819",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1545,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2018-10-05T22:28:31Z",
      "side": 1,
      "message": "Are you seeing them in logcat?  Does vold call this too?  Or just init and overlayfs?\n\nIf don\u0027t we have a \u0027rec\u0027 to play with for / or system, then this function won\u0027t have one either, since it\u0027s just iterating over the entries in the default fstab, so it isn\u0027t any worse than the current situation.",
      "parentUuid": "a4777b00_3a579f52",
      "range": {
        "startLine": 1545,
        "startChar": 8,
        "endLine": 1545,
        "endChar": 9
      },
      "revId": "49f3964b5ecfb029a09ddf19782cf5bebcc7df37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "8ae12d1c_8e9688ee",
        "filename": "fs_mgr/fs_mgr.cpp",
        "patchSetId": 1
      },
      "lineNbr": 1545,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2018-10-08T20:30:19Z",
      "side": 1,
      "message": "Seeing them in dmesg (IMHO, more costly there).\n\nMy complaints about logging spam actually are complaints about the cost of the loop though and we have spent more time discussing it than the spam is worth. It did point to areas that need improvement for the overlayfs handling.\n\nI will defer fixing up the logging spam and focus on one of the problems we are experiencing with init first stage overlayfs mount for system on system-as-root; which accounts for one of the three passes over this call.",
      "parentUuid": "79add7e2_f20a9819",
      "range": {
        "startLine": 1545,
        "startChar": 8,
        "endLine": 1545,
        "endChar": 9
      },
      "revId": "49f3964b5ecfb029a09ddf19782cf5bebcc7df37",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}