{
  "comments": [
    {
      "key": {
        "uuid": "c13175c5_074f9107",
        "filename": "fs_mgr/fs_mgr_overlayfs.cpp",
        "patchSetId": 8
      },
      "lineNbr": 521,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-07-10T20:08:17Z",
      "side": 1,
      "message": "nit: drop bool and pass MS_SHARED or MS_PRIVATE here? (Or, rename \"value\" to \"shared\")",
      "revId": "abcfc1799c1f9ba90fbafaa13cbfb5e919243475",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "25b70644_8c17d73b",
        "filename": "fs_mgr/fs_mgr_overlayfs.cpp",
        "patchSetId": 8
      },
      "lineNbr": 541,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-07-10T20:08:17Z",
      "side": 1,
      "message": "No need for the space in \"\u003e \u003e\" here (this was - blessedly - fixed in C++11)",
      "revId": "abcfc1799c1f9ba90fbafaa13cbfb5e919243475",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c67e314a_9e35c0b6",
        "filename": "fs_mgr/fs_mgr_overlayfs.cpp",
        "patchSetId": 8
      },
      "lineNbr": 542,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-07-10T20:08:17Z",
      "side": 1,
      "message": "Ditto here. Though, I think one-off structs provide more clarity than tuples (especially when fields \u003e 2), you might want to consider that instead.",
      "revId": "abcfc1799c1f9ba90fbafaa13cbfb5e919243475",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "877e10ef_3dbbb3bf",
        "filename": "fs_mgr/fs_mgr_overlayfs.cpp",
        "patchSetId": 8
      },
      "lineNbr": 614,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-07-10T20:08:17Z",
      "side": 1,
      "message": "android::base::ErrnoRestorer?",
      "range": {
        "startLine": 614,
        "startChar": 20,
        "endLine": 614,
        "endChar": 21
      },
      "revId": "abcfc1799c1f9ba90fbafaa13cbfb5e919243475",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "29213b26_c8ce07aa",
        "filename": "fs_mgr/fs_mgr_overlayfs.cpp",
        "patchSetId": 8
      },
      "lineNbr": 616,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-07-10T20:08:17Z",
      "side": 1,
      "message": "nit: \u003e\u003e",
      "revId": "abcfc1799c1f9ba90fbafaa13cbfb5e919243475",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "da3dd6d4_66f32a77",
        "filename": "fs_mgr/fs_mgr_overlayfs.cpp",
        "patchSetId": 8
      },
      "lineNbr": 635,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-07-10T20:08:17Z",
      "side": 1,
      "message": "Is |match| needed here?",
      "revId": "abcfc1799c1f9ba90fbafaa13cbfb5e919243475",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "5b1f02ec_3e768eb6",
        "filename": "fs_mgr/fs_mgr_overlayfs.cpp",
        "patchSetId": 8
      },
      "lineNbr": 645,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-07-10T20:08:17Z",
      "side": 1,
      "message": "Is this safe? c_str() guarantees a NUL terminator but I don\u0027t think data() does?",
      "revId": "abcfc1799c1f9ba90fbafaa13cbfb5e919243475",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4a58320b_761ef758",
        "filename": "fs_mgr/fs_mgr_overlayfs.cpp",
        "patchSetId": 8
      },
      "lineNbr": 645,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-07-10T20:21:38Z",
      "side": 1,
      "message": "c_str() and data() are mandated to return the same since C++11.  The only difference is that there is a non-const overload of data() in C++17.",
      "parentUuid": "5b1f02ec_3e768eb6",
      "revId": "abcfc1799c1f9ba90fbafaa13cbfb5e919243475",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}