{
  "comments": [
    {
      "key": {
        "uuid": "27673e34_15ba3cf5",
        "filename": "include/log/log.h",
        "patchSetId": 2
      },
      "lineNbr": 628,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-01-19T23:03:39Z",
      "side": 1,
      "message": "ugh. we have a python script to auto-generate a .java file for each set of log tags (build/tools/java-event-log-tags.py), but nothing for native code?",
      "revId": "70d942c24a7b6268ed9e3a795c35aab454bb170e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "07495aa4_c25bf208",
        "filename": "include/log/log.h",
        "patchSetId": 2
      },
      "lineNbr": 628,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-01-19T23:14:03Z",
      "side": 1,
      "message": "Alas, this header is the wrong place for the list of tags in any case. So far we have been ad-hoc, and in some cases even added them to the associated Android.mk files as a -D define passed in to the compiler.\n\nAs a baby-step, add a build-time tool or script to convert SecurityLog.logtag into a local header?\n\nNB: __android_log_security_bswrite() calls a subroutine which checks __android_log_security() in the cases where the LOG-SECURITY buffer is referenced. For this call, we are not saving enough cycles to warrant the pre-check. One would expect the caller to use __android_log_security() if there is some work to be done (eg: calculate a package SHA) to format the message.",
      "parentUuid": "27673e34_15ba3cf5",
      "revId": "70d942c24a7b6268ed9e3a795c35aab454bb170e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8780ea14_103e0a09",
        "filename": "include/log/log.h",
        "patchSetId": 2
      },
      "lineNbr": 628,
      "author": {
        "id": 1059499
      },
      "writtenOn": "2016-01-20T15:55:20Z",
      "side": 1,
      "message": "No we don\u0027t have a tool for native code :(\n\nSo if I do have such a script to generate header files from tag file, how does it interact with the build system? I\u0027m not sure how we do it cross project cleanly, as the tag file is at frameworks/base/core/java/android/auditing/SecurityLog.logtags (Only exists in internal tree, needs cherry-pick back to AOSP). \n\nIs there an alternative header file where we could put these defines, as a short term solution?",
      "parentUuid": "07495aa4_c25bf208",
      "revId": "70d942c24a7b6268ed9e3a795c35aab454bb170e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27fe5ee6_bc1021a2",
        "filename": "include/log/log.h",
        "patchSetId": 2
      },
      "lineNbr": 628,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2016-01-20T17:13:13Z",
      "side": 1,
      "message": "wingyang@ may get involved given the widespread and growing problem, but you are free to create your own generation tool.\n\nThe tool would probably have a dependency on the generated global event-log-tags file.\n\ncherry-pick into AOSP, all of this should go to AOSP IMHO.\n\nIf you can not wait, then create a _local_ header file.",
      "parentUuid": "8780ea14_103e0a09",
      "revId": "70d942c24a7b6268ed9e3a795c35aab454bb170e",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}