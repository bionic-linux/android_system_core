{
  "comments": [
    {
      "key": {
        "uuid": "2291c6a4_43b9e88d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2020-08-12T17:47:50Z",
      "side": 1,
      "message": "I\u0027m not really fond of this change. It feels like a band-aid to make things kind of work.\n\nI wrote a slightly different unwinder for local unwinds that will reparse the maps when it can\u0027t find a map for a pc. See LocalUnwinder::GetMapInfo. I think it would be better to create an unwinder like this than try and guess why the unwind failed.",
      "revId": "114d165d2ce21bb277fd68f1a425da1b84f021e3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "27d6a967_0710725d",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1065473
      },
      "writtenOn": "2020-08-12T17:55:00Z",
      "side": 1,
      "message": "It seems ok-ish to me.  The error is that there is nothing mapped at the given PC, so the error code seems appropriate to me.",
      "parentUuid": "2291c6a4_43b9e88d",
      "revId": "114d165d2ce21bb277fd68f1a425da1b84f021e3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "92100d61_bd3299aa",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2020-08-12T21:09:43Z",
      "side": 1,
      "message": "One major problem is that the error is meant to be set and then the unwind terminated. This error can be lost if any other error occurs, and if you are missing some maps, you might hit another unwind error, and never know that you hit the first error.",
      "parentUuid": "27d6a967_0710725d",
      "revId": "114d165d2ce21bb277fd68f1a425da1b84f021e3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "7818fa7a_de72fccf",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2020-08-12T21:18:20Z",
      "side": 1,
      "message": "That is a fair point, I also thought about adding a separate boolean to signal a dex unwinding issue. But we could also look at implementing our own unwinder subclass.",
      "parentUuid": "92100d61_bd3299aa",
      "revId": "114d165d2ce21bb277fd68f1a425da1b84f021e3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "fbc77b77_e0e091de",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1019050
      },
      "writtenOn": "2020-08-12T21:28:55Z",
      "side": 1,
      "message": "If you want something quick that\u0027s not too bad, I was thinking about adding a warning variable to the unwinder. Then you could create a bitmap of warnings, and just set a warning which you could use in anyway you like. I believe I could reuse this for other issues where there is no real error, but someone might want to know that something has gone slightly wrong.",
      "parentUuid": "7818fa7a_de72fccf",
      "revId": "114d165d2ce21bb277fd68f1a425da1b84f021e3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0ce5e4ee_d62cd1c4",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 4
      },
      "lineNbr": 0,
      "author": {
        "id": 1268571
      },
      "writtenOn": "2020-08-13T08:42:48Z",
      "side": 1,
      "message": "Done. PTAL.",
      "parentUuid": "fbc77b77_e0e091de",
      "revId": "114d165d2ce21bb277fd68f1a425da1b84f021e3",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}