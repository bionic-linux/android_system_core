{
  "comments": [
    {
      "key": {
        "uuid": "448239a6_076693ea",
        "filename": "libutils/include/utils/String16.h",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2019-08-09T17:26:33Z",
      "side": 1,
      "message": "define the 0x80000000 flag here instead so that it isn\u0027t a magic value and you can use \u0027\u003c\u0027?",
      "range": {
        "startLine": 168,
        "startChar": 31,
        "endLine": 168,
        "endChar": 41
      },
      "revId": "4a3e98aa0fed76227ebcf3019f3e13c3e84401ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3507d935_41ac2281",
        "filename": "libutils/include/utils/String16.h",
        "patchSetId": 4
      },
      "lineNbr": 168,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-08-09T17:50:15Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "448239a6_076693ea",
      "range": {
        "startLine": 168,
        "startChar": 31,
        "endLine": 168,
        "endChar": 41
      },
      "revId": "4a3e98aa0fed76227ebcf3019f3e13c3e84401ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "a4e1f897_c265fddf",
        "filename": "libutils/include/utils/String16.h",
        "patchSetId": 4
      },
      "lineNbr": 218,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2019-08-09T17:26:33Z",
      "side": 1,
      "message": "nit: also comment that this type should never be used in APIs (always use String16)?",
      "range": {
        "startLine": 218,
        "startChar": 6,
        "endLine": 218,
        "endChar": 20
      },
      "revId": "4a3e98aa0fed76227ebcf3019f3e13c3e84401ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "178b72da_da9a00b5",
        "filename": "libutils/include/utils/String16.h",
        "patchSetId": 4
      },
      "lineNbr": 218,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-08-09T17:50:15Z",
      "side": 1,
      "message": "Good point. Done.",
      "parentUuid": "a4e1f897_c265fddf",
      "range": {
        "startLine": 218,
        "startChar": 6,
        "endLine": 218,
        "endChar": 20
      },
      "revId": "4a3e98aa0fed76227ebcf3019f3e13c3e84401ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "539df955_b8816d1d",
        "filename": "libutils/include/utils/String16.h",
        "patchSetId": 4
      },
      "lineNbr": 236,
      "author": {
        "id": 1120458
      },
      "writtenOn": "2019-08-09T17:26:33Z",
      "side": 1,
      "message": "sorry, what is this for? I don\u0027t see where it is defined",
      "range": {
        "startLine": 234,
        "startChar": 0,
        "endLine": 236,
        "endChar": 71
      },
      "revId": "4a3e98aa0fed76227ebcf3019f3e13c3e84401ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "44b2a8da_99954fd3",
        "filename": "libutils/include/utils/String16.h",
        "patchSetId": 4
      },
      "lineNbr": 236,
      "author": {
        "id": 1349653
      },
      "writtenOn": "2019-08-09T17:50:15Z",
      "side": 1,
      "message": "This is to help the compiler deduce the template parameter (the size of the string). It\u0027s new in C++17 (https://en.cppreference.com/w/cpp/language/class_template_argument_deduction). This is why we can have the nice syntax for StaticString16.",
      "parentUuid": "539df955_b8816d1d",
      "range": {
        "startLine": 234,
        "startChar": 0,
        "endLine": 236,
        "endChar": 71
      },
      "revId": "4a3e98aa0fed76227ebcf3019f3e13c3e84401ed",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}