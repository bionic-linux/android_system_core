{
  "comments": [
    {
      "key": {
        "uuid": "2d338121_0d3a3493",
        "filename": "logd/LogStatistics.cpp",
        "patchSetId": 3
      },
      "lineNbr": 387,
      "author": {
        "id": 1038928
      },
      "writtenOn": "2015-05-12T19:42:13Z",
      "side": 1,
      "message": "do these need to be freed? might need a special deallocator for this unique_ptr",
      "range": {
        "startLine": 387,
        "startChar": 30,
        "endLine": 387,
        "endChar": 40
      },
      "revId": "d82cee017152aa472ff7515254afe904d2301d05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad3e91ea_aed7b5c3",
        "filename": "logd/LogStatistics.cpp",
        "patchSetId": 3
      },
      "lineNbr": 387,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-05-12T19:53:00Z",
      "side": 1,
      "message": "Nope, they are *references* and do not need to be freed. sort method returns an unique_ptr for this reason; rather than making up yet another class.",
      "parentUuid": "2d338121_0d3a3493",
      "range": {
        "startLine": 387,
        "startChar": 30,
        "endLine": 387,
        "endChar": 40
      },
      "revId": "d82cee017152aa472ff7515254afe904d2301d05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ad3e91ea_cee5e1d4",
        "filename": "logd/LogStatistics.cpp",
        "patchSetId": 3
      },
      "lineNbr": 409,
      "author": {
        "id": 1038928
      },
      "writtenOn": "2015-05-12T19:42:13Z",
      "side": 1,
      "message": "print this outside the loop",
      "range": {
        "startLine": 396,
        "startChar": 6,
        "endLine": 409,
        "endChar": 13
      },
      "revId": "d82cee017152aa472ff7515254afe904d2301d05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d338121_0d2eb439",
        "filename": "logd/LogStatistics.cpp",
        "patchSetId": 3
      },
      "lineNbr": 409,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-05-12T19:53:00Z",
      "side": 1,
      "message": "We do not print anything if there are no entries. That is not determined until after tidtable.next() filter and the permission checking just above.",
      "parentUuid": "ad3e91ea_cee5e1d4",
      "range": {
        "startLine": 396,
        "startChar": 6,
        "endLine": 409,
        "endChar": 13
      },
      "revId": "d82cee017152aa472ff7515254afe904d2301d05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "cd43c57f_5e198a78",
        "filename": "logd/LogStatistics.cpp",
        "patchSetId": 3
      },
      "lineNbr": 421,
      "author": {
        "id": 1038928
      },
      "writtenOn": "2015-05-12T19:42:13Z",
      "side": 1,
      "message": "} else some generic name?",
      "range": {
        "startLine": 421,
        "startChar": 16,
        "endLine": 421,
        "endChar": 17
      },
      "revId": "d82cee017152aa472ff7515254afe904d2301d05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2d338121_6d55c0a6",
        "filename": "logd/LogStatistics.cpp",
        "patchSetId": 3
      },
      "lineNbr": 421,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2015-05-12T19:53:00Z",
      "side": 1,
      "message": "No additional name detail is better than a name; we still have the TID/UID. We do _not_ want a name if we can not acquire a name from getName(); we are already coming up with a bogus followup name, making up one with uidToName().",
      "parentUuid": "cd43c57f_5e198a78",
      "range": {
        "startLine": 421,
        "startChar": 16,
        "endLine": 421,
        "endChar": 17
      },
      "revId": "d82cee017152aa472ff7515254afe904d2301d05",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}