{
  "comments": [
    {
      "key": {
        "uuid": "5f3eaded_3da80fab",
        "filename": "init/init.cpp",
        "patchSetId": 4
      },
      "lineNbr": 474,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-10-02T16:01:10Z",
      "side": 1,
      "message": "This would not be readily parseable as part of an audit record (not name\u003dvalue format).  Probably don\u0027t even need to test for !data, as that would be a bug in the caller, right?  Or if you want to allow for future selinux_check_access() calls by init that don\u0027t pass this data, then just do nothing in this case; you\u0027ll still get the regular avc message with the base fields (scontext\u003d tcontext\u003d tclass\u003d).",
      "revId": "92c32e2cf961e69d40f547bfd798ec59f899b8f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "953c86f3_0bf50046",
        "filename": "init/init.cpp",
        "patchSetId": 4
      },
      "lineNbr": 474,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2015-10-02T16:04:39Z",
      "side": 1,
      "message": "Yes I was wondering why we even bothered to check for nulls in any of this.\n\nYou weighed in on exactly what I wanted you to. It un-parseable. I think we can just drop the whole NULL data, anyone object? Obviously this will follow suit with the other patches as well.",
      "parentUuid": "5f3eaded_3da80fab",
      "revId": "92c32e2cf961e69d40f547bfd798ec59f899b8f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5526a4f_ada51518",
        "filename": "init/init.cpp",
        "patchSetId": 4
      },
      "lineNbr": 474,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-10-02T16:58:00Z",
      "side": 1,
      "message": "yeah, i almost made the same comment. only thing that held me back is that if anyone _does_ screw this up, it\u0027ll be really hard to debug because the device will reboot if init dies.",
      "parentUuid": "953c86f3_0bf50046",
      "revId": "92c32e2cf961e69d40f547bfd798ec59f899b8f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "953c86f3_0baa20b3",
        "filename": "init/init.cpp",
        "patchSetId": 4
      },
      "lineNbr": 474,
      "author": {
        "id": 1026058
      },
      "writtenOn": "2015-10-02T17:01:18Z",
      "side": 1,
      "message": "Yes, this is what I took issue with in the service_manager patch. My position: we don\u0027t need this check, and I don\u0027t think name\u003dvalue is an absolute requirement, but this should be considered in the context of the whole denial message.  Having \"SELinux : avc:  denied  { perm } for No property audit data scontext\u003d...\" would be quite confusing.",
      "parentUuid": "953c86f3_0bf50046",
      "revId": "92c32e2cf961e69d40f547bfd798ec59f899b8f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "15a33681_2c5e9213",
        "filename": "init/init.cpp",
        "patchSetId": 4
      },
      "lineNbr": 474,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2015-10-02T17:26:57Z",
      "side": 1,
      "message": "Why do we need to add this to the audit record. Couldn\u0027t we just log the error and return 0?",
      "parentUuid": "953c86f3_0baa20b3",
      "revId": "92c32e2cf961e69d40f547bfd798ec59f899b8f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "953c86f3_9eecacc5",
        "filename": "init/init.cpp",
        "patchSetId": 4
      },
      "lineNbr": 474,
      "author": {
        "id": 1026058
      },
      "writtenOn": "2015-10-02T17:34:03Z",
      "side": 1,
      "message": "We don\u0027t, and I think we\u0027re in agreement. As currently written, this would insert \"No property audit data\" into the audit record buffer by virtue of being called in avc_suppl_audit (in avc.c), which I don\u0027t think we should do.",
      "parentUuid": "15a33681_2c5e9213",
      "revId": "92c32e2cf961e69d40f547bfd798ec59f899b8f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "9fb745b5_a7f4eab8",
        "filename": "init/property_service.cpp",
        "patchSetId": 4
      },
      "lineNbr": 109,
      "author": {
        "id": 1010111
      },
      "writtenOn": "2015-10-02T16:24:41Z",
      "side": 1,
      "message": "Should we just pass a pointer to the ucred and potentially include the uid too?",
      "revId": "92c32e2cf961e69d40f547bfd798ec59f899b8f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "354d9aaf_03a16d5f",
        "filename": "init/property_service.cpp",
        "patchSetId": 4
      },
      "lineNbr": 109,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2015-10-02T16:45:22Z",
      "side": 1,
      "message": "I thought about that as well, I would be ok with that. uid could be a very helpful hint as well. At this point should we just dump gid as well?",
      "parentUuid": "9fb745b5_a7f4eab8",
      "revId": "92c32e2cf961e69d40f547bfd798ec59f899b8f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "b5398a03_75dbcab1",
        "filename": "init/property_service.cpp",
        "patchSetId": 4
      },
      "lineNbr": 109,
      "author": {
        "id": 1026058
      },
      "writtenOn": "2015-10-02T17:01:18Z",
      "side": 1,
      "message": "If we think that would provide value...",
      "parentUuid": "354d9aaf_03a16d5f",
      "revId": "92c32e2cf961e69d40f547bfd798ec59f899b8f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "953c86f3_be7530c2",
        "filename": "init/property_service.cpp",
        "patchSetId": 4
      },
      "lineNbr": 109,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2015-10-02T17:29:25Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "b5398a03_75dbcab1",
      "revId": "92c32e2cf961e69d40f547bfd798ec59f899b8f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75439281_c8a04070",
        "filename": "init/property_service.cpp",
        "patchSetId": 4
      },
      "lineNbr": 111,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2015-10-01T23:59:08Z",
      "side": 1,
      "message": "Ill caveat this with I am a C++ idiot, but why are we not using static_cast here?",
      "revId": "92c32e2cf961e69d40f547bfd798ec59f899b8f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "354d9aaf_633dd1a3",
        "filename": "init/property_service.cpp",
        "patchSetId": 4
      },
      "lineNbr": 111,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2015-10-02T16:58:00Z",
      "side": 1,
      "message": "you can. some people prefer reinterpret_cast because it shouts \"danger! crappy type-unsafe C API here!\". others prefer static_cast because it\u0027s the weakest cast that will still work. i\u0027ll +2 either (but tend to use reinterpret_cast personally; i\u0027ve never seen anyone make the mistakes that static_cast would prevent in this specific circumstance).",
      "parentUuid": "75439281_c8a04070",
      "revId": "92c32e2cf961e69d40f547bfd798ec59f899b8f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "75439281_1b0f146a",
        "filename": "init/property_service.cpp",
        "patchSetId": 4
      },
      "lineNbr": 111,
      "author": {
        "id": 1013433
      },
      "writtenOn": "2015-10-02T17:29:25Z",
      "side": 1,
      "message": "I will leave it as you requested. I was just curious.",
      "parentUuid": "354d9aaf_633dd1a3",
      "revId": "92c32e2cf961e69d40f547bfd798ec59f899b8f7",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}