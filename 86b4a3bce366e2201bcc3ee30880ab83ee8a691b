{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "7ca495ae_32afd7ea",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-10-24T16:52:28Z",
      "side": 1,
      "message": "Do these configs only live in signed, readonly partitions?",
      "revId": "86b4a3bce366e2201bcc3ee30880ab83ee8a691b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "674e5d16_dcb6b0be",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-10-25T17:55:56Z",
      "side": 1,
      "message": "In practice, yes, as that\u0027s the sensible thing to do, as we shouldn\u0027t execute unsigned \"code\" as root. but we didn\u0027t ban this from happening. Vendor program linking to this library _can_ read modules.load from any source, even RW partitions, though I can\u0027t think of any reason why they would _want_ to do this other than for development purposes. (not production)",
      "parentUuid": "7ca495ae_32afd7ea",
      "revId": "86b4a3bce366e2201bcc3ee30880ab83ee8a691b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "fba55d97_13aa6865",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-10-25T17:57:34Z",
      "side": 1,
      "message": "should we add a visibility: clause to the .bp instead to prevent that then?",
      "tag": "mailMessageId\u003d\u003cCAJgzZorZvPo8fRo_syZs6NshbAvCJQnDpZXa\u003dxD+B_S3rNyEAA@mail.gmail.com\u003e",
      "revId": "86b4a3bce366e2201bcc3ee30880ab83ee8a691b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "924ca6e2_21b1c15a",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-10-25T18:06:21Z",
      "side": 1,
      "message": "Has this fuzzer found any bugs in libmodprobe yet?",
      "parentUuid": "674e5d16_dcb6b0be",
      "revId": "86b4a3bce366e2201bcc3ee30880ab83ee8a691b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "335d6383_3bb37f07",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2022-10-25T18:16:16Z",
      "side": 1,
      "message": "The reason I bring it up is because we\u0027ve gotten a lot of these fuzzers that target stuff that is not in any way user modifiable. If they find bugs, they tend to be rare, and low priority - not really exploitable unless you\u0027ve managed to write to /system in the face of ro mounts and dm-verity. Meanwhile, the fuzzer itself adds some tech debt because the API surface can change.\n\nSo I\u0027m not against these, but I\u0027d rather not see them added just for the sake of fuzzing. It\u0027d be nice to have a signal of whether there\u0027s good stuff to find.",
      "parentUuid": "924ca6e2_21b1c15a",
      "revId": "86b4a3bce366e2201bcc3ee30880ab83ee8a691b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "1a2c3e07_ea3b4b28",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2022-10-25T18:17:54Z",
      "side": 1,
      "message": "+1 --- we have a bad habit of fuzzing the things that are easy to fuzz, not the things that would be valuable to fuzz...",
      "tag": "mailMessageId\u003d\u003cCAJgzZoq0dBPv1FXUncve5oeAzdeemr\u003dyiUdxbbKTU7W_f40ysA@mail.gmail.com\u003e",
      "revId": "86b4a3bce366e2201bcc3ee30880ab83ee8a691b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "c74752d1_e29e48b2",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2022-10-25T18:33:22Z",
      "side": 1,
      "message": "\u003e Has this fuzzer found any bugs in libmodprobe yet?\n\nNope. I ran it for more than a day and found nothing, so this is for preventing future modifications from introducing bugs.\n\n\u003e things that are easy to fuzz, not the things that would be valuable to fuzz...\n\nyeah this one definitely belongs to this. I just think that these \"parser\" type things are easy to get wrong accidentally, and it\u0027s also pretty easy to fuzz (just let it parse random input), so wrote one together with little effort.",
      "parentUuid": "335d6383_3bb37f07",
      "revId": "86b4a3bce366e2201bcc3ee30880ab83ee8a691b",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}