{
  "comments": [
    {
      "key": {
        "uuid": "2fdd07d5_8255910e",
        "filename": "init/reboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 416,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-12-10T17:06:41Z",
      "side": 1,
      "message": "Instead of adding the timeout, could we call ReapAnyOutstandingChildren(); instead and see if that works?  If processes turn into zombies synchronously with the sysrq trigger in KillAllProcesses() that will be enough and we\u0027ll only need to call UmountPartitions() once.  Even if not, I\u0027d prefer if we did add that call, since it will print a message for each additional process that is killed by KillAllProcesses().\n\nAlso, can we change the timeout used in line 410 to reflect that we\u0027ll spend an extra second here?  In the first loop when we kill processes, we use half of the remaining timeout.  I think it would be a good idea to use half of the remaining timeout for line 410, then use the remaining timeout for this UmountPartitions() call, instead of adding a second to the overall timeout.",
      "revId": "c4f81b1e5b68e764c11eee4f67a4dcd72b94740f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "f21954bf_514e6d3d",
        "filename": "init/reboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 416,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2019-12-10T17:32:12Z",
      "side": 1,
      "message": "KillAllProcesses() will kill shutdown_critical processes we should not rely on it.",
      "parentUuid": "2fdd07d5_8255910e",
      "revId": "c4f81b1e5b68e764c11eee4f67a4dcd72b94740f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "cfba4f6b_04df3477",
        "filename": "init/reboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 416,
      "author": {
        "id": 1108565
      },
      "writtenOn": "2019-12-12T01:06:42Z",
      "side": 1,
      "message": "aren\u0027t we done with everything when this code is being run.\n\nAlso, I like Tom\u0027s idea to call ReapAnyOutstandingChildren(). Since the problem is coming out of orphan processes created by apps that init ends up inheriting and doesn\u0027t know about.",
      "parentUuid": "f21954bf_514e6d3d",
      "revId": "c4f81b1e5b68e764c11eee4f67a4dcd72b94740f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6343537e_244f9dc0",
        "filename": "init/reboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 416,
      "author": {
        "id": 1105075
      },
      "writtenOn": "2019-12-12T01:32:39Z",
      "side": 1,
      "message": "right now we keep those alive.\n\n        } else if (s-\u003eIsShutdownCritical()) {\n            // Start shutdown critical service if not started.\n            if (auto result \u003d s-\u003eStart(); !result) {\n                LOG(ERROR) \u003c\u003c \"Could not start shutdown critical service \u0027\" \u003c\u003c s-\u003ename()\n                           \u003c\u003c \"\u0027: \" \u003c\u003c result.error();\n            }\n        } else {\n            stop_first.push_back(s.get());\n        }\n\n\nhttps://cs.android.com/android/platform/superproject/+/master:system/core/init/reboot.cpp;bpv\u003d1;bpt\u003d1;l\u003d599\n\n#define SVC_SHUTDOWN_CRITICAL 0x800  // This service is critical for shutdown and\n                                     // should not be killed during shutdown\n\nbut, maybe at sometime we should kill all userspace services.",
      "parentUuid": "cfba4f6b_04df3477",
      "revId": "c4f81b1e5b68e764c11eee4f67a4dcd72b94740f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "85f15856_c1e7ed56",
        "filename": "init/reboot.cpp",
        "patchSetId": 2
      },
      "lineNbr": 416,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-12-12T16:37:21Z",
      "side": 1,
      "message": "ActivityManager moves some processes out of the cgroup that init creates for zygote.  If they also move out of the linux process group, then it\u0027s possible that init won\u0027t see them and won\u0027t kill them in the above loop.  This final step will work to kill them, but I\u0027m not sure if we should rely on it.  \n\nOne solution would be that zygote would do a better job at cleaning up its child processes when it gets SIGTERM.  Or alternatively, perhaps we have two sets of cgroups: one that init manages such that it will always kill all of zygote\u0027s children and one that ActivityManager uses for its housekeeping.\n\nAlternatively: I was talking to enh@ about this and we were both questioning why we shutdown services and their process groups in general.  Why don\u0027t we iterate backwards through the pids we find in /proc?  We can check ahead of time which pids correspond to services like ueventd which we don\u0027t want to kill, but everything else should be fair game.  It would simplify this code a lot too.",
      "parentUuid": "6343537e_244f9dc0",
      "revId": "c4f81b1e5b68e764c11eee4f67a4dcd72b94740f",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    }
  ]
}