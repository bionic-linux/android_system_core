{
  "comments": [
    {
      "key": {
        "uuid": "ede0d714_a0df82f4",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2016-12-03T03:00:08Z",
      "side": 1,
      "message": "I\u0027d just delete this. It\u0027s no longer accurate.",
      "revId": "6ef6558768367783696c85cb4e9ac20b6218ced1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ede0d714_7bd26b67",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 12,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-12-03T18:54:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ede0d714_a0df82f4",
      "revId": "6ef6558768367783696c85cb4e9ac20b6218ced1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ede0d714_e0122ad0",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2016-12-03T03:00:08Z",
      "side": 1,
      "message": "Is there value in knowing what time the process started, vs how long it took to start?\n\nI personally wouldn\u0027t find this information useful, especially if the device has a persistent clock which carries over across reboots, or if time is adjusted in the middle of the boot process.",
      "revId": "6ef6558768367783696c85cb4e9ac20b6218ced1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ede0d714_9bccf7c7",
        "filename": "/COMMIT_MSG",
        "patchSetId": 3
      },
      "lineNbr": 23,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-12-03T18:54:03Z",
      "side": 1,
      "message": "it\u0027s not clear what \"how long it took to start\" means. maybe what you\u0027re missing (it\u0027s in the readme) is that \"when it started\" is measured in ns since boot (CLOCK_BOOTTIME), so it _is_ \"how long it took to start\" in the sense of \"how long until init started it\".\n\n(why aren\u0027t i putting the units in the property name, like i always insist on for identifiers in code? because we\u0027re already within one character of the system property name length limit for some of these services :-( )\n\nnot all of these are interesting, of course, but rather than have init keep a list of which ones we care about (across multiple devices), it\u0027s easier to just record them all and let folks like wvw@ decide which ones they want to pull out.",
      "parentUuid": "ede0d714_e0122ad0",
      "revId": "6ef6558768367783696c85cb4e9ac20b6218ced1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ede0d714_d5b12ee1",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 451,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-12-03T02:31:47Z",
      "side": 1,
      "message": "(the first stage can\u0027t set properties, so i have to pass this through to the second stage to set.)",
      "revId": "6ef6558768367783696c85cb4e9ac20b6218ced1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ede0d714_80ac866a",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 451,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2016-12-03T03:00:08Z",
      "side": 1,
      "message": "ya, I was wondering about this... Perhaps add a comment?",
      "parentUuid": "ede0d714_d5b12ee1",
      "revId": "6ef6558768367783696c85cb4e9ac20b6218ced1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ede0d714_fbbd3b0c",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 451,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-12-03T18:54:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ede0d714_80ac866a",
      "revId": "6ef6558768367783696c85cb4e9ac20b6218ced1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ede0d714_607bda2c",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 657,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-12-03T02:36:03Z",
      "side": 1,
      "message": "fkupolov: when you add the coldboot time to tron, note that this property name changed too.",
      "revId": "6ef6558768367783696c85cb4e9ac20b6218ced1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ede0d714_40b69ebc",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 659,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2016-12-03T03:00:08Z",
      "side": 1,
      "message": "You should clear the environment variable after you read it, to avoid polluting the environment space + leak information to child processes.",
      "revId": "6ef6558768367783696c85cb4e9ac20b6218ced1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ede0d714_dbc27f96",
        "filename": "init/init.cpp",
        "patchSetId": 3
      },
      "lineNbr": 659,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-12-03T18:54:03Z",
      "side": 1,
      "message": "we already have a whitelist elsewhere, but done anyway.",
      "parentUuid": "ede0d714_40b69ebc",
      "revId": "6ef6558768367783696c85cb4e9ac20b6218ced1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ede0d714_359bd260",
        "filename": "init/util.cpp",
        "patchSetId": 3
      },
      "lineNbr": 481,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-12-03T02:31:47Z",
      "side": 1,
      "message": "ccross?",
      "revId": "6ef6558768367783696c85cb4e9ac20b6218ced1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ede0d714_807ec61a",
        "filename": "init/util.cpp",
        "patchSetId": 3
      },
      "lineNbr": 481,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2016-12-03T03:00:08Z",
      "side": 1,
      "message": "I like the idea of aborting. It would provide slightly more debugging information in the kernel trace, and would effectively have the same effect as rebooting the device.",
      "parentUuid": "ede0d714_359bd260",
      "revId": "6ef6558768367783696c85cb4e9ac20b6218ced1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ede0d714_604d1ae0",
        "filename": "init/util.cpp",
        "patchSetId": 3
      },
      "lineNbr": 481,
      "author": {
        "id": 1002751
      },
      "writtenOn": "2016-12-03T03:26:15Z",
      "side": 1,
      "message": "aborting would reboot, although probably not taking destination into account.  Seems fine though, it shouldn\u0027t ever happen, and if it does it will show up in the kernel panic dashboards.",
      "parentUuid": "ede0d714_807ec61a",
      "revId": "6ef6558768367783696c85cb4e9ac20b6218ced1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ede0d714_bbc7b3a4",
        "filename": "init/util.cpp",
        "patchSetId": 3
      },
      "lineNbr": 481,
      "author": {
        "id": 1003224
      },
      "writtenOn": "2016-12-03T18:54:03Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "ede0d714_604d1ae0",
      "revId": "6ef6558768367783696c85cb4e9ac20b6218ced1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}