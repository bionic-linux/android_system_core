{
  "comments": [
    {
      "key": {
        "uuid": "aa1773d7_7504bf5d",
        "filename": "init/builtins.cpp",
        "patchSetId": 1
      },
      "lineNbr": 631,
      "author": {
        "id": 1076133
      },
      "writtenOn": "2016-01-07T23:28:17Z",
      "side": 1,
      "message": "Using this flag to detect if |s| is the console service is a bit weird: This flag actually means \"console required\" but seems to only be used by console.\n\nShould we create a new service attribute (unterminable ? ignores_sigterm?) set for services that ignore the SIGTERM signal so that we don\u0027t have to wait for them?",
      "range": {
        "startLine": 631,
        "startChar": 55,
        "endLine": 631,
        "endChar": 66
      },
      "revId": "3ce8d8de3b36ce81930207e115424025c9a71a16",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a52a3ad_b2ac9daa",
        "filename": "init/builtins.cpp",
        "patchSetId": 1
      },
      "lineNbr": 642,
      "author": {
        "id": 1076138
      },
      "writtenOn": "2016-01-07T23:40:01Z",
      "side": 1,
      "message": "Maybe make this a constant? kTerminateServiceDelayMicroSeconds or something.",
      "range": {
        "startLine": 642,
        "startChar": 19,
        "endLine": 642,
        "endChar": 24
      },
      "revId": "3ce8d8de3b36ce81930207e115424025c9a71a16",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a4ddf0f_7317fb31",
        "filename": "init/builtins.cpp",
        "patchSetId": 1
      },
      "lineNbr": 642,
      "author": {
        "id": 1076133
      },
      "writtenOn": "2016-01-08T00:48:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "2a52a3ad_b2ac9daa",
      "range": {
        "startLine": 642,
        "startChar": 19,
        "endLine": 642,
        "endChar": 24
      },
      "revId": "3ce8d8de3b36ce81930207e115424025c9a71a16",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a52a3ad_52fe7984",
        "filename": "init/service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 817,
      "author": {
        "id": 1076138
      },
      "writtenOn": "2016-01-07T23:40:01Z",
      "side": 1,
      "message": "Can this fail?",
      "range": {
        "startLine": 817,
        "startChar": 8,
        "endLine": 817,
        "endChar": 27
      },
      "revId": "3ce8d8de3b36ce81930207e115424025c9a71a16",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ea1debf7_4bfeba84",
        "filename": "init/service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 817,
      "author": {
        "id": 1076133
      },
      "writtenOn": "2016-01-08T00:42:15Z",
      "side": 1,
      "message": "I don\u0027t think it can. This not accessed concurrently and RemoveService can handle |svc| not being in the list of services.",
      "parentUuid": "2a52a3ad_52fe7984",
      "range": {
        "startLine": 817,
        "startChar": 8,
        "endLine": 817,
        "endChar": 27
      },
      "revId": "3ce8d8de3b36ce81930207e115424025c9a71a16",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "0a4ddf0f_38ccf0b8",
        "filename": "init/service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 825,
      "author": {
        "id": 1076138
      },
      "writtenOn": "2016-01-07T23:40:01Z",
      "side": 1,
      "message": "Should this have a way of erroring out in case ReapOneProcess constantly returns true?\n\nI guess you\u0027re calling waitpid with WNOHANG and returning false in that case, you cannot always get and kill a process and never end... unless the system is in the middle of something like a fork bomb? I guess maybe in that case we don\u0027t care what happens.",
      "range": {
        "startLine": 824,
        "startChar": 0,
        "endLine": 825,
        "endChar": 5
      },
      "revId": "3ce8d8de3b36ce81930207e115424025c9a71a16",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "aa1773d7_b5e6d762",
        "filename": "init/service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 825,
      "author": {
        "id": 1076133
      },
      "writtenOn": "2016-01-08T00:42:15Z",
      "side": 1,
      "message": "There might be pathological cases where this will run forever but I don\u0027t think there is a good way to handle it. We could set a limit on the number of process we can Reap in one go (1000?) but I\u0027m not sure what the consequences would be in the rest of the system. In doubt, it might be better to keep this simple.\n\nA service crash loop will not cause this as we will first reap all stopped services before starting them again.",
      "parentUuid": "0a4ddf0f_38ccf0b8",
      "range": {
        "startLine": 824,
        "startChar": 0,
        "endLine": 825,
        "endChar": 5
      },
      "revId": "3ce8d8de3b36ce81930207e115424025c9a71a16",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "2a52a3ad_52b2f94f",
        "filename": "init/service.cpp",
        "patchSetId": 1
      },
      "lineNbr": 825,
      "author": {
        "id": 1003966
      },
      "writtenOn": "2016-01-08T00:49:27Z",
      "side": 1,
      "message": "Hmmm... I wonder if this is going to cause a problem if a third party process tries spinning up lots of processes, and prevents the user from rebooting...",
      "parentUuid": "aa1773d7_b5e6d762",
      "range": {
        "startLine": 824,
        "startChar": 0,
        "endLine": 825,
        "endChar": 5
      },
      "revId": "3ce8d8de3b36ce81930207e115424025c9a71a16",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "4a4357e2_1f1d5ef7",
        "filename": "init/service.h",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 1076138
      },
      "writtenOn": "2016-01-07T23:40:01Z",
      "side": 1,
      "message": "Nit: \"was cleaned up\"",
      "range": {
        "startLine": 184,
        "startChar": 35,
        "endLine": 184,
        "endChar": 42
      },
      "revId": "3ce8d8de3b36ce81930207e115424025c9a71a16",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8a1aaf01_b609017b",
        "filename": "init/service.h",
        "patchSetId": 1
      },
      "lineNbr": 184,
      "author": {
        "id": 1076133
      },
      "writtenOn": "2016-01-08T00:48:11Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "4a4357e2_1f1d5ef7",
      "range": {
        "startLine": 184,
        "startChar": 35,
        "endLine": 184,
        "endChar": 42
      },
      "revId": "3ce8d8de3b36ce81930207e115424025c9a71a16",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}