{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "22c39e77_5c44a9e8",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2024-05-28T14:46:59Z",
      "side": 1,
      "message": "This problem seems similar to aosp/If2ff4852516292ccbc7abdeebe0e9a7c1c7ba606\nThe problem is that that change only affects second-stage-init.\nFirst-stage-init shouldn\u0027t see the problem you described at all because all of first-stage happens in the bootstrap namespace, right? So I guess you are seeing the problem because after initial remount setup you didn\u0027t reboot.\n\nCould you confirm the above?\n\nIf so I think the correct _fix_ is to ensure a reboot after initial remount:\n```\n$ adb remount\n# would print something about new overlayfs is setup\n$ adb reboot\n$ adb remount\n# would print something about _existing_ overlayfs is remounted RW\n$ adb shell cat /proc/self/mountinfo\n# should be in a \"good\" mount state?\n```",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 58
      },
      "revId": "4fc32cd5400536760ee4f8f91a28169cc27612a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "ef605352_120bfa87",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 3312642
      },
      "writtenOn": "2024-05-29T01:47:34Z",
      "side": 1,
      "message": "Yes, I have checked the order of namesapce switch and overlay mounts before and confirmed that this problem won\u0027t happen again after reboot.\n\nOur problem is that after the first remount and reboot, data corruption may occur because /data is not unmounted. I didn\u0027t express it clearly in this commit.",
      "parentUuid": "22c39e77_5c44a9e8",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 58
      },
      "revId": "4fc32cd5400536760ee4f8f91a28169cc27612a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "0691e404_a62fda72",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2024-05-29T16:03:24Z",
      "side": 1,
      "message": "I see. I\u0027ll see what I can do to handle your use case \u003d)\n\nBTW, \n\n\u003e Our problem is that after the first remount and reboot, data corruption may occur because /data is not unmounted.\n\nDoes this mean right before reboot you run a service/process/daemon to unmount /data? Why is the process run in the bootstrap namespace and is it possible to switch to default namespace before unmount?",
      "parentUuid": "ef605352_120bfa87",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 58
      },
      "revId": "4fc32cd5400536760ee4f8f91a28169cc27612a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "2a02967f_d50addf5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 3312642
      },
      "writtenOn": "2024-05-30T02:52:08Z",
      "side": 1,
      "message": "We don\u0027t have an additional service to unmount /data.\n\nAfter mount_all, /data will be mounted in both the bootstrap and default namespaces. When reboot, init will try to unmount /data, which is in the default namespace. If the peer group of \"/\" changes, mount of \"/data\" in the bootstrap namespace won\u0027t be unmounted. Please let me know if I misunderstand this.\n\nI asked in the issue whether we could consider switching init to bootstrap namespace when umounting, but I\u0027m not sure if it\u0027s worth to do it.",
      "parentUuid": "0691e404_a62fda72",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 58
      },
      "revId": "4fc32cd5400536760ee4f8f91a28169cc27612a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "55944afb_7e948b9c",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 1337669
      },
      "writtenOn": "2024-06-03T14:08:32Z",
      "side": 1,
      "message": "Could you verify if I19ca62018149f1fa81186824a9d7f1c32d9d6008 fixes or workarounds your issue?\n\n\u003e Please let me know if I misunderstand this.\n\nI think your understanding is correct.\n\n\u003e I asked in the issue whether we could consider switching init to bootstrap namespace when umounting, but I\u0027m not sure if it\u0027s worth to do it.\n\nI19ca62018149f1fa81186824a9d7f1c32d9d6008 only worksaround the \u0027remount\u0027 case. Should another part of the system temper with the mount namespace, then you would see the same problem showing up again.\nI think letting init umount from both \u0027bootstrap\u0027 and \u0027default\u0027 namespace is the true way to guarantee a clean umount of /data. I still think this is the correct \"fix\" of your problem.",
      "parentUuid": "2a02967f_d50addf5",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 58
      },
      "revId": "4fc32cd5400536760ee4f8f91a28169cc27612a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a8afa0ae_5aa76ca5",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 11,
      "author": {
        "id": 3312642
      },
      "writtenOn": "2024-06-04T02:24:20Z",
      "side": 1,
      "message": "\u003eCould you verify if I19ca62018149f1fa81186824a9d7f1c32d9d6008 fixes or workarounds \u003eyour issue?\n\nThis patch can workaround our issue, thanks.",
      "parentUuid": "55944afb_7e948b9c",
      "range": {
        "startLine": 9,
        "startChar": 0,
        "endLine": 11,
        "endChar": 58
      },
      "revId": "4fc32cd5400536760ee4f8f91a28169cc27612a2",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}