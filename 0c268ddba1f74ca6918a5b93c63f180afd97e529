{
  "comments": [
    {
      "key": {
        "uuid": "AAAA2H////A\u003d",
        "filename": "include/netutils/ifc.h",
        "patchSetId": 3
      },
      "lineNbr": 52,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-07-18T17:23:55Z",
      "side": 1,
      "message": "For IPv4, although the default route cannot be deleted, host routes can be deleted. For IPv6, the code can add IPv6 routes, but there is no way to delete them. Is this what we want to do?",
      "revId": "0c268ddba1f74ca6918a5b93c63f180afd97e529",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA2H////w\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 3
      },
      "lineNbr": 51,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-07-18T17:17:26Z",
      "side": 1,
      "message": "Why is this constant needed? We don\u0027t use any specific metric for IPv4. If you are setting the metric to the minimum to ensure that host routes you create will be preferred above all other routes, then this is not necessary, because host routes have a prefix length of /128 and will already be preferred above other routes with shorter prefix lengths due to longest prefix matching.\n\nIf you do need the constant, then please make the V uppercase. Also, please add a comment saying why \"the lowest possible value\" is not zero.",
      "revId": "0c268ddba1f74ca6918a5b93c63f180afd97e529",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA2H////c\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 3
      },
      "lineNbr": 209,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-07-18T17:17:26Z",
      "side": 1,
      "message": "How about renaming \"addr\" to \"gateway\" so it\u0027s clear what this parameter is?",
      "revId": "0c268ddba1f74ca6918a5b93c63f180afd97e529",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA2H////o\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 3
      },
      "lineNbr": 219,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-07-18T17:17:26Z",
      "side": 1,
      "message": "For this to be a general \"add a route\" function, it will need three parameters in addition to the interface name: the destination address (e.g., 192.0.2.0), the prefix length (e.g., 24), and the gateway address.\n\nHowever, the function as written only takes two parameters and interprets addr as either the destination or the gateway depending on whether the mask is 32 or not. To me, this is confusing; also, it does not allow prefixes with lengths that are not 0 or 32.\n\nI would suggest you take all four parameters, put all of them into the corresponding fields in the struct rtentry, and set rt_flags based on whether prefix_length \u003d\u003d 32. Then just call the ioctl, let the kernel figure out what to do, and return whatever result code comes back. The kernel certainly has more information on the routing table than this code has. Also, I think the resulting code will be simpler.\n\nAltenatively, if we know that we\u0027ll only ever need to add either host routes and default routes, but never other routes, then this code is will work. In that case, please do add a comment to the effect that if prefix_length \u003d\u003d 32, then \"addr\" is the destination, if prefix_length \u003d\u003d 0, then \"addr\" is the gateway, and that other values of prefix_length are unsupported.\n\nSimilar comments apply to the IPv6 function.",
      "revId": "0c268ddba1f74ca6918a5b93c63f180afd97e529",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA0n//+S4\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 3
      },
      "lineNbr": 229,
      "author": {
        "id": 1002609
      },
      "writtenOn": "2010-07-09T21:28:53Z",
      "side": 1,
      "message": "should the genmask value in the gateway case actually reflect the prefix length?",
      "revId": "0c268ddba1f74ca6918a5b93c63f180afd97e529",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA0n//9+s\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 3
      },
      "lineNbr": 229,
      "author": {
        "id": 1003413
      },
      "writtenOn": "2010-07-13T07:12:35Z",
      "side": 1,
      "message": "rt_genmask field seems to be used by rtalloc() family of functions only when RTF_CLONING flag is set. We are not setting this flag. So setting it to 0 should be OK",
      "parentUuid": "AAAA0n//+S4\u003d",
      "revId": "0c268ddba1f74ca6918a5b93c63f180afd97e529",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA03///7s\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 3
      },
      "lineNbr": 229,
      "author": {
        "id": 1002609
      },
      "writtenOn": "2010-07-13T18:39:53Z",
      "side": 1,
      "message": "So you are claiming that the netmask field in the routing table is never used and need not be set?  I find that hard to believe.  Please set it.",
      "parentUuid": "AAAA0n//9+s\u003d",
      "revId": "0c268ddba1f74ca6918a5b93c63f180afd97e529",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA2H////Y\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 3
      },
      "lineNbr": 465,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-07-18T17:17:26Z",
      "side": 1,
      "message": "Can you put this next to the corresponding IPv4 code (ifc_init) so that anyone modifying the file in the future will remember to modify both codepaths at the same time? Ditto with ifc_close6 below.",
      "revId": "0c268ddba1f74ca6918a5b93c63f180afd97e529",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA2H////U\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 3
      },
      "lineNbr": 484,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-07-18T17:17:26Z",
      "side": 1,
      "message": "Can you put this next to ifc_add_route?",
      "revId": "0c268ddba1f74ca6918a5b93c63f180afd97e529",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA2H////k\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 3
      },
      "lineNbr": 513,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-07-18T17:17:26Z",
      "side": 1,
      "message": "Since all ifc_init6() does is call socket(), then errno will already be EAFNOSUPPORT. So you can remove this if you want.",
      "revId": "0c268ddba1f74ca6918a5b93c63f180afd97e529",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA2H////g\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 3
      },
      "lineNbr": 519,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-07-18T17:17:26Z",
      "side": 1,
      "message": "Should you be setting errno to 0 as well?",
      "revId": "0c268ddba1f74ca6918a5b93c63f180afd97e529",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA2H////Q\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 3
      },
      "lineNbr": 535,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-07-18T17:17:26Z",
      "side": 1,
      "message": "Nit: sizeof(hints) is better. Also, since you\u0027ve just memset() hints to zero, there\u0027s no need to set the individual members to 0 below.",
      "revId": "0c268ddba1f74ca6918a5b93c63f180afd97e529",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA2H////E\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 3
      },
      "lineNbr": 536,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-07-18T17:23:55Z",
      "side": 1,
      "message": "You should probably also set hints.ai_flags to AI_NUMERICHOST, in order to avoid doing DNS lookups in case someone passes this function something that is not an IP address.",
      "revId": "0c268ddba1f74ca6918a5b93c63f180afd97e529",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "AAAA2H////M\u003d",
        "filename": "libnetutils/ifc_utils.c",
        "patchSetId": 3
      },
      "lineNbr": 559,
      "author": {
        "id": 1000835
      },
      "writtenOn": "2010-07-18T17:17:26Z",
      "side": 1,
      "message": "Please call freeaddrinfo before returning, or the code will leak memory.",
      "revId": "0c268ddba1f74ca6918a5b93c63f180afd97e529",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}