{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "14e6ff9f_8ad4d50b",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/cow_reader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 689,
      "author": {
        "id": 1964171
      },
      "writtenOn": "2023-11-07T19:01:56Z",
      "side": 1,
      "message": "is there a case where we use v2 writer and the COMPRESSED_DATA.size() \u003d\u003d UNCOMPRESSED_DATA.size() and we can\u0027t read the directly without using a decompressor ?",
      "revId": "1a38d5f350a11b23d7fa3f05525cd31a9f05423d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "6602a2cb_4f4203c0",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/cow_reader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 689,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2023-11-07T19:28:00Z",
      "side": 1,
      "message": "There\u0027s a compatibility issue here which is why we haven\u0027t done this in V2. It\u0027s possible someone has a gz block that is 4096 bytes, so it\u0027s still technically compressed and needs to go through the decompressor.\n\nIn the V3 writer we can make sure the writer never does this.",
      "parentUuid": "14e6ff9f_8ad4d50b",
      "revId": "1a38d5f350a11b23d7fa3f05525cd31a9f05423d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7f00a73b_ab1fdd4b",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/cow_reader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 689,
      "author": {
        "id": 1964171
      },
      "writtenOn": "2023-11-07T22:00:20Z",
      "side": 1,
      "message": "so in the case of v2 -\u003e v3 OTA. if V2 writer writes a gz block of 4096 bytes, how do we determine if  we should use a decompressor or not",
      "parentUuid": "6602a2cb_4f4203c0",
      "revId": "1a38d5f350a11b23d7fa3f05525cd31a9f05423d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "7c4bfedb_05cad3b6",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/cow_reader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 689,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2023-11-08T00:07:18Z",
      "side": 1,
      "message": "Good catch.\n\nWhen Android V attempts to read a v2 COW created on Android U, it will drop the compression field and rely on data length. That won\u0027t work for the edge case of data_length \u003d\u003d compressed_length.\n\nCowReader knows the header version. Can we make the new logic only trigger if major_version \u003d\u003d 3?",
      "parentUuid": "7f00a73b_ab1fdd4b",
      "revId": "1a38d5f350a11b23d7fa3f05525cd31a9f05423d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "b5b0ddeb_561c703f",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/cow_reader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 689,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2023-11-08T00:19:52Z",
      "side": 1,
      "message": "Actually I guess that wouldn\u0027t work. Do we need to re-add a bit somewhere in CowOperationV3 indicating that it\u0027s a compressed v2 op?",
      "parentUuid": "7c4bfedb_05cad3b6",
      "revId": "1a38d5f350a11b23d7fa3f05525cd31a9f05423d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "f831b1be_7c31dc69",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/cow_reader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 689,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-11-08T00:23:03Z",
      "side": 1,
      "message": "I didn\u0027t quite understand what the problem is. The header contains the version number, the V2 writer will write a V2 cow, so guarding this optimization by cow_version\u003d\u003d3 should be enough, what is the edge case that would break?",
      "parentUuid": "b5b0ddeb_561c703f",
      "revId": "1a38d5f350a11b23d7fa3f05525cd31a9f05423d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "d77a1b07_de268aac",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/cow_reader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 689,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2023-11-08T00:38:47Z",
      "side": 1,
      "message": "How does it know whether the v2 op is compressed or not?",
      "parentUuid": "f831b1be_7c31dc69",
      "revId": "1a38d5f350a11b23d7fa3f05525cd31a9f05423d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e396a6e1_9fd2cc34",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/cow_reader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 689,
      "author": {
        "id": 1964171
      },
      "writtenOn": "2023-11-08T00:59:29Z",
      "side": 1,
      "message": "we have the space to add the bit so that would work.  \n\nwhy wouldn\u0027t the guard work? If it\u0027s a v2 op, we always use the decompressor if compression was used ?",
      "parentUuid": "d77a1b07_de268aac",
      "revId": "1a38d5f350a11b23d7fa3f05525cd31a9f05423d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "925208be_349f807c",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/cow_reader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 689,
      "author": {
        "id": 1710792
      },
      "writtenOn": "2023-11-08T01:28:29Z",
      "side": 1,
      "message": "\u003e How does it know whether the v2 op is compressed or not?\n\nSame way current V2 reader determines if v2 op is compressed?",
      "parentUuid": "e396a6e1_9fd2cc34",
      "revId": "1a38d5f350a11b23d7fa3f05525cd31a9f05423d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "23a23012_cf051b85",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/cow_reader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 689,
      "author": {
        "id": 1964171
      },
      "writtenOn": "2023-11-08T05:45:43Z",
      "side": 1,
      "message": "v2 writes all data as compressed even if its greater than uncompressed size. So we can just use a decompressor for all data. In v3, we make this check here to see if we need a decompressor or not",
      "parentUuid": "925208be_349f807c",
      "revId": "1a38d5f350a11b23d7fa3f05525cd31a9f05423d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "4bc0e7b9_b3816520",
        "filename": "fs_mgr/libsnapshot/libsnapshot_cow/cow_reader.cpp",
        "patchSetId": 2
      },
      "lineNbr": 689,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2023-11-08T20:47:11Z",
      "side": 1,
      "message": "Ack, sorry for the tangent, this does work.",
      "parentUuid": "23a23012_cf051b85",
      "revId": "1a38d5f350a11b23d7fa3f05525cd31a9f05423d",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}