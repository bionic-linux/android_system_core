{
  "comments": [
    {
      "key": {
        "uuid": "308e5159_21cd6075",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1079148
      },
      "writtenOn": "2017-05-24T07:32:56Z",
      "side": 1,
      "message": "Maybe intercept requests should take a type as well, with each CrashType having a separate queue? That way we could just hand out a bunch of FDs, fire off requests in sequence, and not have to worry about reassembling things after the fact.",
      "revId": "b339801dcae29290d982f4a5fa97b3360cbf8f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "ec47d7e7_d6263816",
        "filename": "/COMMIT_MSG",
        "patchSetId": 1
      },
      "lineNbr": 23,
      "author": {
        "id": 1014443
      },
      "writtenOn": "2017-05-24T09:25:58Z",
      "side": 1,
      "message": "So, I *want* these traces to be written to a separate files and I *want* tombstoned to be responsible for generating file names.\n\nThe problem really is that callers have no way of figuring out when the trace write *completes* (unless they set up an intercept, but then that means they are responsible for creating and managing output files) - that\u0027s pretty yucky at the moment. Any ideas ? \n\nI\u0027ll try and find you online this evening so we can discuss it further.",
      "parentUuid": "308e5159_21cd6075",
      "revId": "b339801dcae29290d982f4a5fa97b3360cbf8f86",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}