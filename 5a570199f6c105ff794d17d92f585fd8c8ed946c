{
  "comments": [
    {
      "key": {
        "uuid": "f40bda0a_083cc231",
        "filename": "libprocessgroup/cgroup_map.cpp",
        "patchSetId": 4
      },
      "lineNbr": 235,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-03-27T16:29:59Z",
      "side": 1,
      "message": "nit: this really makes the assumption that path is always the same (which it is), so why do we pass in the path, why not enforce this with CGROUPS_RC_DIR \"/\" CGROUPS_RC_FILE here (pseudocode, I know, these constants are not macros, but if they were ... but a similar action can be performed on std::string literals).\n\nFeels like future maintenance will become a problem as a result of this confusing situation.",
      "range": {
        "startLine": 234,
        "startChar": 4,
        "endLine": 235,
        "endChar": 74
      },
      "revId": "5a570199f6c105ff794d17d92f585fd8c8ed946c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "8bf13785_9414204c",
        "filename": "libprocessgroup/cgroup_map.cpp",
        "patchSetId": 4
      },
      "lineNbr": 423,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-03-27T16:29:59Z",
      "side": 1,
      "message": "StringPrintf is _almost_ unnecessary here (Add string literals and std::string cgroups_rc_path \u003d CGROUPS_RC_DIR + \"/\"s + CGROUPS_RC_FILE) or even better yet, cgroups_rc_path could itself be a const defined globally for here and for WriteRcFile and defined in processgroup.h?",
      "range": {
        "startLine": 423,
        "startChar": 0,
        "endLine": 423,
        "endChar": 88
      },
      "revId": "5a570199f6c105ff794d17d92f585fd8c8ed946c",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}