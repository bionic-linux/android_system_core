{
  "comments": [
    {
      "key": {
        "uuid": "09b6ee5d_df54fc3c",
        "filename": "init/Android.mk",
        "patchSetId": 11
      },
      "lineNbr": 78,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-12-06T17:22:30Z",
      "side": 1,
      "message": "We should be able to delete this too.",
      "revId": "1f2a398bb7e52974449561e7ba6f6d6773e9a5be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a17d8463_da335dc3",
        "filename": "init/Android.mk",
        "patchSetId": 11
      },
      "lineNbr": 78,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2019-12-08T12:35:40Z",
      "side": 1,
      "message": "jiyong@ can you please confirm this?",
      "parentUuid": "09b6ee5d_df54fc3c",
      "revId": "1f2a398bb7e52974449561e7ba6f6d6773e9a5be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "9ead74e8_6357c5c9",
        "filename": "init/Android.mk",
        "patchSetId": 11
      },
      "lineNbr": 78,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-12-09T00:37:10Z",
      "side": 1,
      "message": "i don\u0027t get this. even though the mount is happening in the 2nd stage init, the mount point is in the ramdisk which is RO, isn\u0027t it?",
      "parentUuid": "a17d8463_da335dc3",
      "revId": "1f2a398bb7e52974449561e7ba6f6d6773e9a5be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "3fed7a57_64915227",
        "filename": "init/Android.mk",
        "patchSetId": 11
      },
      "lineNbr": 78,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2019-12-09T01:03:47Z",
      "side": 1,
      "message": "I guess ramdisk is only for boot (except when recovery is boot). Mount point for normal situation is in https://source.corp.google.com/android/system/core/rootdir/Android.mk;cl\u003dmaster;l\u003d75",
      "parentUuid": "9ead74e8_6357c5c9",
      "revId": "1f2a398bb7e52974449561e7ba6f6d6773e9a5be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "bffc02a3_c84afb69",
        "filename": "init/Android.mk",
        "patchSetId": 11
      },
      "lineNbr": 78,
      "author": {
        "id": 1132673
      },
      "writtenOn": "2019-12-09T01:15:37Z",
      "side": 1,
      "message": "ah, thanks. then yes, we can delete this.",
      "parentUuid": "3fed7a57_64915227",
      "revId": "1f2a398bb7e52974449561e7ba6f6d6773e9a5be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "77d8fe8b_7d9d4588",
        "filename": "init/Android.mk",
        "patchSetId": 11
      },
      "lineNbr": 78,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-12-09T15:08:22Z",
      "side": 1,
      "message": "Right, this is only the ramdisk for first stage mount.  Either recovery or normal boot end up taking the directories TARGET_ROOT_OUT.  \n\nWe should probably reword the comment above (I\u0027ll push something to do this) to state that you only need to set up the directories mounted by first stage init.",
      "parentUuid": "bffc02a3_c84afb69",
      "revId": "1f2a398bb7e52974449561e7ba6f6d6773e9a5be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "24fe3a7d_b0ea3a35",
        "filename": "init/Android.mk",
        "patchSetId": 11
      },
      "lineNbr": 81,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-12-06T17:22:30Z",
      "side": 1,
      "message": "We shouldn\u0027t need this if we\u0027re doing the mount in 2nd stage init.",
      "revId": "1f2a398bb7e52974449561e7ba6f6d6773e9a5be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e908a392_afe2b294",
        "filename": "init/Android.mk",
        "patchSetId": 11
      },
      "lineNbr": 81,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2019-12-08T12:35:40Z",
      "side": 1,
      "message": "I just realized that linkerconfig will be used from recovery as linker configuration should be generated for recovery environment also (current ld.config.recovery.txt). Should I move linkerconfig mount to first stage then?",
      "parentUuid": "24fe3a7d_b0ea3a35",
      "revId": "1f2a398bb7e52974449561e7ba6f6d6773e9a5be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "a789d89f_a85f4c25",
        "filename": "init/Android.mk",
        "patchSetId": 11
      },
      "lineNbr": 81,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-12-09T15:08:22Z",
      "side": 1,
      "message": "You probably still don\u0027t need it in first stage; how it\u0027s being called now will be fine for recovery and normal boot.\n\nI don\u0027t see it actually being called in recovery yet though.  It would need to be in this file: https://cs.corp.google.com/android/bootable/recovery/etc/init.rc?q\u003df:recovery+init.rc\u0026sq\u003dpackage:%5Eandroid$\u0026dr.\n\nI\u0027m surprised that we need it there though.  Since recovery isn\u0027t the combination of any partitions, I figure that the recovery configuration could be done during the build.",
      "parentUuid": "e908a392_afe2b294",
      "revId": "1f2a398bb7e52974449561e7ba6f6d6773e9a5be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "dd4657f6_ec7024eb",
        "filename": "init/Android.mk",
        "patchSetId": 11
      },
      "lineNbr": 81,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2019-12-10T01:19:36Z",
      "side": 1,
      "message": "You can find the change from https://android-review.googlesource.com/q/topic:%22run_from_recovery%22+(status:open%20OR%20status:merged)\n\nI\u0027d like to put all linker configuration related information to linkerconfig so we can reduce file variation. One of the reason I started linkerconfig work was that there were too many ld.config.txt files. \n\nAs you mentioned linker configuration for recovery is extremely simple. I\u0027d like to take the approach to put the generator execution in recovery init first, and if there are any concerns for the performance then we can move it to build time only for recovery.",
      "parentUuid": "a789d89f_a85f4c25",
      "revId": "1f2a398bb7e52974449561e7ba6f6d6773e9a5be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d7c16774_2384218b",
        "filename": "init/Android.mk",
        "patchSetId": 11
      },
      "lineNbr": 81,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-12-10T17:32:54Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "dd4657f6_ec7024eb",
      "revId": "1f2a398bb7e52974449561e7ba6f6d6773e9a5be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "daef47de_3a7e5519",
        "filename": "init/selinux.cpp",
        "patchSetId": 11
      },
      "lineNbr": 535,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-12-06T17:22:30Z",
      "side": 1,
      "message": "I also question if this is strictly needed anymore.  The directory /linkerconfig should be in system.img, so it will have its SEPolicy built into the image.  \n\nI guess there is still the ramdisk used for recovery, but we don\u0027t use /linkerconfig for recovery, right?  Perhaps we should have some logic that only mounts this and /apex for normal boot?  That might be needed for my above comment regarding removing /linkerconfig as a directory in first stage init.\n\nAn alternative, and much cleaner option if possible: could we call SetupMountNamespaces() later?  What would happen if we called it after the \u0027early-init\u0027 trigger?  To do this, we could add am.QueueBuiltinAction(SetupMountNamespaces, \"SetupMountNamespaces\"); after am.QueueEventTrigger(\"early-init\"); here: https://cs.corp.google.com/android/system/core/init/init.cpp?l\u003d718\n\nIf we can do that option, then the mounting of /apex and /linkerconfig can happen in init.rc in early-init.  Or maybe we need a stage early than early-init, since that\u0027s when linkerconfig and apexd-bootstrap themselves run, but still the same idea.\n\nIt would fix the recovery problem too, since the recovery init.rc would simply not try to mount these directories and not worry that they\u0027re not present.",
      "revId": "1f2a398bb7e52974449561e7ba6f6d6773e9a5be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "0fd24b91_c2358667",
        "filename": "init/selinux.cpp",
        "patchSetId": 11
      },
      "lineNbr": 535,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2019-12-08T12:35:40Z",
      "side": 1,
      "message": "1. I\u0027m not sure if we do not need restorecon set up in case of mounting tmpfs in later phase. Wouldn\u0027t it be changed as tmpfs instead of original from sepolicy?\n\n2. Some of the processes from early-init would also require linker configuration (that is why linkerconfig call is within early-init), so I think linekrconfig directory should be ready before early-init.\n\n3. I just realized that linkerconfig directory is needed from recovery for generating ld.config.recovery.txt. Should I set up linkerconfig directory from first stage init in this case?",
      "parentUuid": "daef47de_3a7e5519",
      "revId": "1f2a398bb7e52974449561e7ba6f6d6773e9a5be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "68b1b2de_19ac927d",
        "filename": "init/selinux.cpp",
        "patchSetId": 11
      },
      "lineNbr": 535,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2019-12-09T10:25:45Z",
      "side": 1,
      "message": "\u003e 3. I just realized that linkerconfig directory is needed from recovery for generating ld.config.recovery.txt. Should I set up linkerconfig directory from first stage init in this case?\n\nJust checked this is not true. Checked with crosshatch that recovery would mount linkerconfig from second stage properly. Also checked that it worked well with ramdisk boot (sdk_gphone_x86_64).\n\nAnyway, still not sure about your comments on recovery. From my experience recovery would have same dirs of root, so mount would succeed. Can you please give me some details on this situation?",
      "parentUuid": "0fd24b91_c2358667",
      "revId": "1f2a398bb7e52974449561e7ba6f6d6773e9a5be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "75028a11_9b6141b9",
        "filename": "init/selinux.cpp",
        "patchSetId": 11
      },
      "lineNbr": 535,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-12-09T15:08:22Z",
      "side": 1,
      "message": "I was assuming that we don\u0027t need to mount linkerconfig in recovery (see my other comment).  \n\nRestorecon on these top level directories should only be needed in recovery, since the recovery ramdisk doesn\u0027t have the needed SELinux labeling (or at least I didn\u0027t the last time that I checked).  But if this is needed in recovery, then it\u0027s fine to leave.  I\u0027d just double check that this is actually needed or not `ls -Zd /linkerconfig` in normal / recovery.\n\n\u003e  Some of the processes from early-init would also require linker configuration (that is why linkerconfig call is within early-init), so I think linekrconfig directory should be ready before early-init.\n\nRight, the only way we\u0027d be able to do this is if we had an additional \u0027pre-init\u0027 phase or something that was even earlier than early-init.  I guess we can wait before we do something that drastic until we have even more commands than these two mounts that happen before early-init.",
      "parentUuid": "68b1b2de_19ac927d",
      "revId": "1f2a398bb7e52974449561e7ba6f6d6773e9a5be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "fdad8bcf_2272d62a",
        "filename": "init/selinux.cpp",
        "patchSetId": 11
      },
      "lineNbr": 535,
      "author": {
        "id": 1413436
      },
      "writtenOn": "2019-12-10T01:19:36Z",
      "side": 1,
      "message": "\u003e I was assuming that we don\u0027t need to mount linkerconfig in recovery (see my other comment).  \n\nI added a comment on the thread.\n\n\n\u003e Restorecon on these top level directories should only be needed in recovery, since the recovery ramdisk doesn\u0027t have the needed SELinux labeling (or at least I didn\u0027t the last time that I checked).  But if this is needed in recovery, then it\u0027s fine to leave.  I\u0027d just double check that this is actually needed or not `ls -Zd /linkerconfig` in normal / recovery.\n\nIn the recovery as I understand all sepolicy goes with rootfs, so we need extra care for sepolicy like in https://source.corp.google.com/android/system/sepolicy/private/init.te;cl\u003dmaster;l\u003d12 (Please correct me if I\u0027m wrong). What I understood from the experience was that if we mount any partition with tmpfs then the sepolicy goes into tmpfs so we need to restore sepolicy for the mounted directories. Let me test this again to check out. \n\n\u003e Right, the only way we\u0027d be able to do this is if we had an additional \u0027pre-init\u0027 phase or something that was even earlier than early-init.  I guess we can wait before we do something that drastic until we have even more commands than these two mounts that happen before early-init.\n\nSure. All commands for /apex and /linkerconfig can be done from init.rc (except mount namespace phase). So we can move it later if refactor is needed.",
      "parentUuid": "75028a11_9b6141b9",
      "revId": "1f2a398bb7e52974449561e7ba6f6d6773e9a5be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "6b70a3a1_adc27f1c",
        "filename": "init/selinux.cpp",
        "patchSetId": 11
      },
      "lineNbr": 535,
      "author": {
        "id": 1064128
      },
      "writtenOn": "2019-12-10T17:32:54Z",
      "side": 1,
      "message": "\u003e In the recovery as I understand all sepolicy goes with rootfs,\n\nRight, that\u0027s what I\u0027m saying.  This is needed if using this directory in recovery, which I didn\u0027t think we were; hence not thinking it was needed.\n\n\u003e Sure. All commands for /apex and /linkerconfig can be done from init.rc\n\nYes, that\u0027s why I figured it may be better to do them from init.rc.  Let\u0027s wait to see if we have to add more commands to this period and refactor if that happens.",
      "parentUuid": "fdad8bcf_2272d62a",
      "revId": "1f2a398bb7e52974449561e7ba6f6d6773e9a5be",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}