{
  "comments": [
    {
      "key": {
        "uuid": "8da512b4_3f0630e6",
        "filename": "fs_mgr/libfiemap_writer/split_fiemap_writer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-03-04T17:40:13Z",
      "side": 1,
      "message": "Do not rely on side-effects of include files.\n\n#include \u003cfcntl.h\u003e for ::open(2)\n#include \u003cstdint.h\u003e for uint64_t\n#include \u003csys/stat.h\u003e for ::open(2)\n#include \u003csys/types.h\u003e for ::open(2)\n#include \u003cunistd.h\u003e for ::unlink(2) and ::access(2)\n\n#include \u003cmemory\u003e for std::unique_ptr\n#include \u003cstring\u003e for std::string\n#include \u003cvector\u003e for std::vector",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 49
      },
      "revId": "62cbbf0ab53a06d4f7e0e692e082cc0733715194",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "47db25e7_9c9ec898",
        "filename": "fs_mgr/libfiemap_writer/split_fiemap_writer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 17,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-03-04T18:14:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "8da512b4_3f0630e6",
      "range": {
        "startLine": 17,
        "startChar": 0,
        "endLine": 17,
        "endChar": 49
      },
      "revId": "62cbbf0ab53a06d4f7e0e692e082cc0733715194",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "1ca5a3bd_4a2f7920",
        "filename": "fs_mgr/libfiemap_writer/split_fiemap_writer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-03-04T18:27:25Z",
      "side": 1,
      "message": "If the file already exists (certainly a surprise), maybe terminate?",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 80,
        "endChar": 84
      },
      "revId": "62cbbf0ab53a06d4f7e0e692e082cc0733715194",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "c18dc08c_3e505f84",
        "filename": "fs_mgr/libfiemap_writer/split_fiemap_writer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 80,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-03-05T23:06:08Z",
      "side": 1,
      "message": "This would be a surprise - I think it\u0027s fine to overwrite though. I\u0027ll fill out some warnings in a follow-up.",
      "parentUuid": "1ca5a3bd_4a2f7920",
      "range": {
        "startLine": 80,
        "startChar": 0,
        "endLine": 80,
        "endChar": 84
      },
      "revId": "62cbbf0ab53a06d4f7e0e692e082cc0733715194",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "d34f9459_f93b45ee",
        "filename": "fs_mgr/libfiemap_writer/split_fiemap_writer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-03-04T18:27:25Z",
      "side": 1,
      "message": "| O_EXCL\n\nIf the file exists, is that a problem?",
      "revId": "62cbbf0ab53a06d4f7e0e692e082cc0733715194",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "e0091b46_7784f140",
        "filename": "fs_mgr/libfiemap_writer/split_fiemap_writer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 94,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-03-05T02:37:47Z",
      "side": 1,
      "message": "Shouldn\u0027t be a problem, I think it\u0027s fine to overwrite whatever is there.",
      "parentUuid": "d34f9459_f93b45ee",
      "revId": "62cbbf0ab53a06d4f7e0e692e082cc0733715194",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "223b2e35_c14f744b",
        "filename": "fs_mgr/libfiemap_writer/split_fiemap_writer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 153,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-03-04T17:40:13Z",
      "side": 1,
      "message": "worry: if the corresponding file_path.%04d entries exist, it would be nice to know as they signal wasted space and may be necessary to triage any bugs that come up.",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 153,
        "endChar": 69
      },
      "revId": "62cbbf0ab53a06d4f7e0e692e082cc0733715194",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "82bcb8dc_29151071",
        "filename": "fs_mgr/libfiemap_writer/split_fiemap_writer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 153,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-03-04T18:14:10Z",
      "side": 1,
      "message": "Are you thinking it should try to detect any lingering split files and delete them, or just warn about them?\n\nAlternately, I was thinking SplitFiemap could detect when no splits are needed (as will be the case 99% of the time), and then act like a normal FiemapWriter (i.e., no list file). Then the presence of a .0001 file would tell you if it was actually split.",
      "parentUuid": "223b2e35_c14f744b",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 153,
        "endChar": 69
      },
      "revId": "62cbbf0ab53a06d4f7e0e692e082cc0733715194",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "5330f511_1a0e0e42",
        "filename": "fs_mgr/libfiemap_writer/split_fiemap_writer.cpp",
        "patchSetId": 2
      },
      "lineNbr": 153,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-03-04T18:27:25Z",
      "side": 1,
      "message": "For today, I would merely warn about them. (if file_path does not exist, skip the iteration below, add a common read dir to mine for the orphaned files). You never know, the file may be an accident from a third party that _may_ be trying an attack?\n\nfile_path.* (as in files that do not even share your track from .0001 to .0500) maybe, no one should be there, maybe that is going too far ...",
      "parentUuid": "82bcb8dc_29151071",
      "range": {
        "startLine": 153,
        "startChar": 0,
        "endLine": 153,
        "endChar": 69
      },
      "revId": "62cbbf0ab53a06d4f7e0e692e082cc0733715194",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "bee2c152_475c48be",
        "filename": "fs_mgr/libfiemap_writer/utility.cpp",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1032276
      },
      "writtenOn": "2019-03-04T17:40:13Z",
      "side": 1,
      "message": "#include \u003cstdint.h\u003e for uint64_t\n#include \u003cunistd.h\u003e required for ::unlink(2) call.",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 20
      },
      "revId": "62cbbf0ab53a06d4f7e0e692e082cc0733715194",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": true
    },
    {
      "key": {
        "uuid": "4018967c_d767fb19",
        "filename": "fs_mgr/libfiemap_writer/utility.cpp",
        "patchSetId": 2
      },
      "lineNbr": 19,
      "author": {
        "id": 1290458
      },
      "writtenOn": "2019-03-04T18:14:10Z",
      "side": 1,
      "message": "Done",
      "parentUuid": "bee2c152_475c48be",
      "range": {
        "startLine": 19,
        "startChar": 0,
        "endLine": 19,
        "endChar": 20
      },
      "revId": "62cbbf0ab53a06d4f7e0e692e082cc0733715194",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889",
      "unresolved": false
    }
  ]
}