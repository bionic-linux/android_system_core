{
  "comments": [
    {
      "unresolved": true,
      "key": {
        "uuid": "07c82f35_fe0ce883",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 1
      },
      "lineNbr": 215,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2021-04-28T18:27:47Z",
      "side": 1,
      "message": "Have you considered the comment above?\n\n   // Do not use android_files to grant Linux capabilities.  Use ambient capabilities in their\n   // associated init.rc file instead.  See https://source.android.com/devices/tech/config/ambient.",
      "range": {
        "startLine": 214,
        "startChar": 0,
        "endLine": 215,
        "endChar": 34
      },
      "revId": "5ee63f071fa8397d58eff386e39dccd6206992e1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "a1cacabb_8a27a228",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 1
      },
      "lineNbr": 215,
      "author": {
        "id": 1368904
      },
      "writtenOn": "2021-05-01T00:18:53Z",
      "side": 1,
      "message": "Yeah, that page says \"When setting capabilities for services not launched by init, continue to configure file system capabilities using fs_config.c\" - and I thought this executable isn\u0027t a service and isn\u0027t being launched by init, which is why I did it here, but I wanted to make sure to ask an expert",
      "parentUuid": "07c82f35_fe0ce883",
      "range": {
        "startLine": 214,
        "startChar": 0,
        "endLine": 215,
        "endChar": 34
      },
      "revId": "5ee63f071fa8397d58eff386e39dccd6206992e1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "163f7146_d1f86363",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 1
      },
      "lineNbr": 215,
      "author": {
        "id": 1137063
      },
      "writtenOn": "2021-05-05T18:43:16Z",
      "side": 1,
      "message": "Ack",
      "parentUuid": "a1cacabb_8a27a228",
      "range": {
        "startLine": 214,
        "startChar": 0,
        "endLine": 215,
        "endChar": 34
      },
      "revId": "5ee63f071fa8397d58eff386e39dccd6206992e1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": true,
      "key": {
        "uuid": "e4042eb2_d7cf6648",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 1
      },
      "lineNbr": 215,
      "author": {
        "id": 1054468
      },
      "writtenOn": "2021-05-05T19:39:45Z",
      "side": 1,
      "message": "+1 on Satya\u0027s point. Init drops the CAP_SYS_ADMIN when starting the keystore service. So keystore cannot pass on the capability to this new process. The only way to do that without giving keystore the DAC CAP_SYS_ADMIN is to use filesystem capabilities. Alternatively we could use the ambient capabilities by granting keystore CAP_SYS_ADMIN and use selinux to prevent it from actually being used.",
      "parentUuid": "a1cacabb_8a27a228",
      "range": {
        "startLine": 214,
        "startChar": 0,
        "endLine": 215,
        "endChar": 34
      },
      "revId": "5ee63f071fa8397d58eff386e39dccd6206992e1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "46af3b4e_6bdb820e",
        "filename": "libcutils/fs_config.cpp",
        "patchSetId": 1
      },
      "lineNbr": 215,
      "author": {
        "id": 1368904
      },
      "writtenOn": "2021-05-05T20:54:47Z",
      "side": 1,
      "message": "Ah ok. I\u0027ll stick with what we have now then, because it doesn\u0027t sound like we think the alternative is better.",
      "parentUuid": "e4042eb2_d7cf6648",
      "range": {
        "startLine": 214,
        "startChar": 0,
        "endLine": 215,
        "endChar": 34
      },
      "revId": "5ee63f071fa8397d58eff386e39dccd6206992e1",
      "serverId": "85c56323-6fa9-3386-8a01-6480fb634889"
    }
  ]
}